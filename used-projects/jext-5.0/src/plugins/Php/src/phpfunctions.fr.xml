<?xml version="1.0" encoding="ISO-8859-1"?>
<functions>
<function>
<extension>apache</extension>
<name>ascii2ebcdic</name>
<proto>int ascii2ebcdic(string ascii_str)</proto>
<desc>Transforme une chaîne ASCII en EBCDIC</desc>
<return>int</return>
<params>
<param>
<paramname>ascii_str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>apache</extension>
<name>ebcdic2ascii</name>
<proto>int ebcdic2ascii(string ebcdic_str)</proto>
<desc>Transforme une chaîne EBCDIC en ASCII</desc>
<return>int</return>
<params>
<param>
<paramname>ebcdic_str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>apache</extension>
<name>apache_lookup_uri</name>
<proto>class apache_lookup_uri(string filename)</proto>
<desc>Effectue une requête partielle pour l'URI spécifiée  et renvoie toutes les informations.</desc>
<return>class</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>apache</extension>
<name>apache_note</name>
<proto>string apache_note(string note_name [, string note_value])</proto>
<desc>Affiche ou affecte le paramètre "apache request notes".</desc>
<return>string</return>
<params>
<param>
<paramname>note_name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>note_value</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>apache</extension>
<name>getallheaders</name>
<proto>array getallheaders()</proto>
<desc>Récupère toutes les en-têtes des requêtes HTTP.</desc>
<return>array</return>
<params>
</params>
</function>
<function>
<extension>apache</extension>
<name>virtual</name>
<proto>int virtual(string filename)</proto>
<desc>Effectue une sous-requête Apache</desc>
<return>int</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>array</name>
<proto>array array( [mixed ...])</proto>
<desc>Crée un tableau</desc>
<return>array</return>
<params>
<param>
<paramname>...</paramname>
<paramtype>mixed</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>array_count_values</name>
<proto>array array_count_values(array input)</proto>
<desc>Compte le nombre de valeurs dans un tableau</desc>
<return>array</return>
<params>
<param>
<paramname>input</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>array_diff</name>
<proto>array array_diff(array array1, array array2 [, array ...])</proto>
<desc>Calcule la différence entre deux tableaux</desc>
<return>array</return>
<params>
<param>
<paramname>array1</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>array2</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>...</paramname>
<paramtype>array</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>array_filter</name>
<proto>array array_filter(array input [, mixed callback])</proto>
<desc>Filtre les éléments d'un tableau</desc>
<return>array</return>
<params>
<param>
<paramname>input</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>callback</paramname>
<paramtype>mixed</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>array_flip</name>
<proto>array array_flip(array trans)</proto>
<desc>Remplace les clés par les valeurs, et les valeurs par les clés</desc>
<return>array</return>
<params>
<param>
<paramname>trans</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>array_intersect</name>
<proto>array array_intersect(array array1, array array2 [, array ...])</proto>
<desc>Calcule l'intersection de tableaux</desc>
<return>array</return>
<params>
<param>
<paramname>array1</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>array2</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>...</paramname>
<paramtype>array</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>array_keys</name>
<proto>array array_keys(array input [, mixed search_value])</proto>
<desc>Retourne toutes les clés d'un tableau</desc>
<return>array</return>
<params>
<param>
<paramname>input</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>search_value</paramname>
<paramtype>mixed</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>array_map</name>
<proto>array array_map(mixed callback, array arr1 [, array ...])</proto>
<desc>Applique sur fonction sur des tableaux</desc>
<return>array</return>
<params>
<param>
<paramname>callback</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>arr1</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>...</paramname>
<paramtype>array</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>array_merge</name>
<proto>array array_merge(array array1, array array2 [, array ...])</proto>
<desc>Rassemble plusieurs tableaux</desc>
<return>array</return>
<params>
<param>
<paramname>array1</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>array2</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>...</paramname>
<paramtype>array</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>array_merge_recursive</name>
<proto>array array_merge_recursive(array array1, array array2 [, array ...])</proto>
<desc>Combine plusieurs tableaux ensembles, récursivement</desc>
<return>array</return>
<params>
<param>
<paramname>array1</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>array2</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>...</paramname>
<paramtype>array</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>array_multisort</name>
<proto>boolean array_multisort(array ar1 [, mixed arg] [, mixed ...] [, array ...])</proto>
<desc>Tri multi-dimensionnel</desc>
<return>boolean</return>
<params>
<param>
<paramname>ar1</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>arg</paramname>
<paramtype>mixed</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>...</paramname>
<paramtype>mixed</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>...</paramname>
<paramtype>array</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>array_pad</name>
<proto>array array_pad(array input, int pad_size, mixed pad_value)</proto>
<desc>Complète un tableau jusqu'à la longueur spécifiée,
    avec une valeur.</desc>
<return>array</return>
<params>
<param>
<paramname>input</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>pad_size</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>pad_value</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>array_pop</name>
<proto>mixed array_pop(array array)</proto>
<desc>Dépile un élément de la fin d'un tableau</desc>
<return>mixed</return>
<params>
<param>
<paramname>array</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>array_push</name>
<proto>int array_push(array array, mixed var [, mixed ...])</proto>
<desc>Empile un ou plusieurs éléments à la fin d'un tableau</desc>
<return>int</return>
<params>
<param>
<paramname>array</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>var</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>...</paramname>
<paramtype>mixed</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>array_reverse</name>
<proto>array array_reverse(array array [, boolean preserve_keys])</proto>
<desc>Renverse l'ordre des éléments d'un tableau</desc>
<return>array</return>
<params>
<param>
<paramname>array</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>preserve_keys</paramname>
<paramtype>boolean</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>array_reduce</name>
<proto>mixed array_reduce(array input, mixed callback [, int initial])</proto>
<desc>Réduit itérativement un tableau</desc>
<return>mixed</return>
<params>
<param>
<paramname>input</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>callback</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>initial</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>array_rand</name>
<proto>mixed array_rand(array input [, int num_req])</proto>
<desc>Prend une ou plusieurs valeurs, au hasard dans un tableau</desc>
<return>mixed</return>
<params>
<param>
<paramname>input</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>num_req</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>array_shift</name>
<proto>mixed array_shift(array array)</proto>
<desc>Dépile un élément au début d'un tableau</desc>
<return>mixed</return>
<params>
<param>
<paramname>array</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>array_slice</name>
<proto>array array_slice(array array, int offset [, int length])</proto>
<desc>Extrait une portion de tableau</desc>
<return>array</return>
<params>
<param>
<paramname>array</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>offset</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>length</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>array_splice</name>
<proto>array array_splice(array input, int offset [, int length] [, array replacement])</proto>
<desc>Efface et remplace une portion de tableau</desc>
<return>array</return>
<params>
<param>
<paramname>input</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>offset</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>length</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>replacement</paramname>
<paramtype>array</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>array_sum</name>
<proto>mixed array_sum(array arr)</proto>
<desc>Calcule la somme des valeurs du tableau</desc>
<return>mixed</return>
<params>
<param>
<paramname>arr</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>array_unique</name>
<proto>array array_unique(array array)</proto>
<desc>Dédoublonne un tableau</desc>
<return>array</return>
<params>
<param>
<paramname>array</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>array_unshift</name>
<proto>int array_unshift(array array, mixed var [, mixed ...])</proto>
<desc>Empile un ou plusieurs éléments au début d'un tableau</desc>
<return>int</return>
<params>
<param>
<paramname>array</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>var</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>...</paramname>
<paramtype>mixed</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>array_values</name>
<proto>array array_values(array input)</proto>
<desc>Retourne les valeurs d'un tableau</desc>
<return>array</return>
<params>
<param>
<paramname>input</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>array_walk</name>
<proto>int array_walk(array arr, string func, mixed userdata)</proto>
<desc>Exécute une fonction sur chacun des membres d'un tableau.</desc>
<return>int</return>
<params>
<param>
<paramname>arr</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>func</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>userdata</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>arsort</name>
<proto>void arsort(array array)</proto>
<desc>Trie un tableau en ordre inverse</desc>
<return>void</return>
<params>
<param>
<paramname>array</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>asort</name>
<proto>void asort(array array)</proto>
<desc>Trie un tableau en ordre</desc>
<return>void</return>
<params>
<param>
<paramname>array</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>compact</name>
<proto>array compact(string|array varname [, mixed ...])</proto>
<desc>Crée un tableau contenant les variables et leur valeur</desc>
<return>array</return>
<params>
<param>
<paramname>varname</paramname>
<paramtype>string|array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>...</paramname>
<paramtype>mixed</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>count</name>
<proto>int count(mixed var)</proto>
<desc>Compte le nombre d'éléments d'un tableau</desc>
<return>int</return>
<params>
<param>
<paramname>var</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>current</name>
<proto>mixed current(array array)</proto>
<desc>Transforme une variable en tableau</desc>
<return>mixed</return>
<params>
<param>
<paramname>array</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>each</name>
<proto>array each(array array)</proto>
<desc>Retourne chaque paire clé/valeur d'un tableau</desc>
<return>array</return>
<params>
<param>
<paramname>array</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>end</name>
<proto>end(array array)</proto>
<desc>Positionne le pointeur de tableau en fin de tableau</desc>
<return>end(</return>
<params>
<param>
<paramname>array</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>extract</name>
<proto>int extract(array var_array [, int extract_type] [, string prefix])</proto>
<desc>Importe les variables dans la table des symboles</desc>
<return>int</return>
<params>
<param>
<paramname>var_array</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>extract_type</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>prefix</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>in_array</name>
<proto>boolean in_array(mixed needle, array haystack [, boolean strict])</proto>
<desc>Indique si une valeur appartient à un tableau</desc>
<return>boolean</return>
<params>
<param>
<paramname>needle</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>haystack</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>boolean strict</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>array_search</name>
<proto>mixed array_search(mixed needle, array haystack, boolean strict)</proto>
<desc>Recherche dans un tableau la clé associée à une valeur</desc>
<return>mixed</return>
<params>
<param>
<paramname>needle</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>haystack</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>strict</paramname>
<paramtype>boolean</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>key</name>
<proto>mixed key(array array)</proto>
<desc>Retourne une clé d'un tableau associatif</desc>
<return>mixed</return>
<params>
<param>
<paramname>array</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>krsort</name>
<proto>int krsort(array array)</proto>
<desc>Trie un tableau en sens inverse et suivant les clés</desc>
<return>int</return>
<params>
<param>
<paramname>array</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>ksort</name>
<proto>int ksort(array array)</proto>
<desc>Trie un tableau suivant les clés</desc>
<return>int</return>
<params>
<param>
<paramname>array</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>list</name>
<proto>void list(void)</proto>
<desc>Transforme une liste de variables en tableau</desc>
<return>void</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>natsort</name>
<proto>void natsort(array array)</proto>
<desc>Tri d'un tableau avec l'algorithme à "ordre naturel"</desc>
<return>void</return>
<params>
<param>
<paramname>array</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>natcasesort</name>
<proto>void natcasesort(array array)</proto>
<desc>Tri d'un tableau avec l'algorithme à "ordre naturel" insensible à la casse</desc>
<return>void</return>
<params>
<param>
<paramname>array</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>next</name>
<proto>mixed next(array array)</proto>
<desc>Avance le pointeur interne d'un tableau</desc>
<return>mixed</return>
<params>
<param>
<paramname>array</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>pos</name>
<proto>mixed pos(array array)</proto>
<desc>Retourne l'élément courant d'un tableau</desc>
<return>mixed</return>
<params>
<param>
<paramname>array</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>prev</name>
<proto>mixed prev(array array)</proto>
<desc>Recule le pointeur courant de tableau</desc>
<return>mixed</return>
<params>
<param>
<paramname>array</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>range</name>
<proto>array range(int low, int high)</proto>
<desc>Crée un tableau contenant un intervalle d'éléments</desc>
<return>array</return>
<params>
<param>
<paramname>low</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>high</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>reset</name>
<proto>mixed reset(array array)</proto>
<desc>Remet le pointeur interne de tableau au début</desc>
<return>mixed</return>
<params>
<param>
<paramname>array</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>rsort</name>
<proto>void rsort(array array)</proto>
<desc>Trie en ordre inverse</desc>
<return>void</return>
<params>
<param>
<paramname>array</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>shuffle</name>
<proto>void shuffle(array array)</proto>
<desc>Mélange les éléments d'un tableau</desc>
<return>void</return>
<params>
<param>
<paramname>array</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>sizeof</name>
<proto>int sizeof(array array)</proto>
<desc>Retourne le nombre d'élément d'un tableau</desc>
<return>int</return>
<params>
<param>
<paramname>array</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>sort</name>
<proto>void sort(array array)</proto>
<desc>Trie le tableau</desc>
<return>void</return>
<params>
<param>
<paramname>array</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>uasort</name>
<proto>void uasort(array array, function cmp_function)</proto>
<desc>Trie d'un tableau en utilisant une fonction de comparaison définie par l'utilisateur.</desc>
<return>void</return>
<params>
<param>
<paramname>array</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>cmp_function</paramname>
<paramtype>function</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>uksort</name>
<proto>void uksort(array array, function cmp_function)</proto>
<desc>Trie un tableau par ses clés en utilisant une fonction de comparaison définie par l'utilisateur</desc>
<return>void</return>
<params>
<param>
<paramname>array</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>cmp_function</paramname>
<paramtype>function</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>array</extension>
<name>usort</name>
<proto>void usort(array array, function cmp_function)</proto>
<desc>Trie un tableau en utilisant une fonction de comparaison définie  par l'utilisateur</desc>
<return>void</return>
<params>
<param>
<paramname>array</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>cmp_function</paramname>
<paramtype>function</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>aspell</extension>
<name>aspell_new</name>
<proto>resource aspell_new(string master, string personal)</proto>
<desc>Charge un nouveau dictionnaire</desc>
<return>resource</return>
<params>
<param>
<paramname>master</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>personal</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>aspell</extension>
<name>aspell_check</name>
<proto>boolean aspell_check(resource dictionary_link, string word)</proto>
<desc>Vérifie un mot</desc>
<return>boolean</return>
<params>
<param>
<paramname>dictionary_link</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>word</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>aspell</extension>
<name>aspell_check_raw</name>
<proto>boolean aspell_check_raw(resource dictionary_link, string word)</proto>
<desc>Vérifie un mot sans en changer la casse et sans essayer de supprimer les espaces aux extrémités.</desc>
<return>boolean</return>
<params>
<param>
<paramname>dictionary_link</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>word</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>aspell</extension>
<name>aspell_suggest</name>
<proto>array aspell_suggest(resource dictionary_link, string word)</proto>
<desc>Suggère l'orthographe d'un mot</desc>
<return>array</return>
<params>
<param>
<paramname>dictionary_link</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>word</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>bc</extension>
<name>bcadd</name>
<proto>string bcadd(string left_operand, string right_operand [, int scale])</proto>
<desc>Additionne deux nombres de grande taille.</desc>
<return>string</return>
<params>
<param>
<paramname>left_operand</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>right_operand</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>scale</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>bc</extension>
<name>bccomp</name>
<proto>int bccomp(string left_operand, string right_operand [, int scale])</proto>
<desc>Compare deux nombres de grande taille.</desc>
<return>int</return>
<params>
<param>
<paramname>left_operand</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>right_operand</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>scale</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>bc</extension>
<name>bcdiv</name>
<proto>string bcdiv(string left_operand, string right_operand [, int scale])</proto>
<desc>Divise deux nombres de grande taille.</desc>
<return>string</return>
<params>
<param>
<paramname>left_operand</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>right_operand</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>scale</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>bc</extension>
<name>bcmod</name>
<proto>string bcmod(string left_operand, string modulus)</proto>
<desc>Retourne le reste d'une division entre nombre de grande taille.</desc>
<return>string</return>
<params>
<param>
<paramname>left_operand</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>modulus</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>bc</extension>
<name>bcmul</name>
<proto>string bcmul(string left_operand, string right_operand [, int scale])</proto>
<desc>Multiplie deux nombres de grande taille.</desc>
<return>string</return>
<params>
<param>
<paramname>left_operand</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>right_operand</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>scale</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>bc</extension>
<name>bcpow</name>
<proto>string bcpow(string x, string y [, int scale])</proto>
<desc>Elève un nombre à la puissance n-ième.</desc>
<return>string</return>
<params>
<param>
<paramname>x</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>scale</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>bc</extension>
<name>bcscale</name>
<proto>string bcscale(int scale)</proto>
<desc>Détermine le nombre de décimales par défaut</desc>
<return>string</return>
<params>
<param>
<paramname>scale</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>bc</extension>
<name>bcsqrt</name>
<proto>string bcsqrt(string operand [, int scale])</proto>
<desc>Renvoie la racine carrée d'un nombre de grande taille.</desc>
<return>string</return>
<params>
<param>
<paramname>operand</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>scale</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>bc</extension>
<name>bcsub</name>
<proto>string bcsub(string left_operand, string right_operand [, int scale])</proto>
<desc>Soustrait un nombre de grande taille à un autre.</desc>
<return>string</return>
<params>
<param>
<paramname>left_operand</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>right_operand</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>scale</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>bzip2</extension>
<name>bzclose</name>
<proto>int bzclose(resource bz)</proto>
<desc>Ferme un fichier bzip2</desc>
<return>int</return>
<params>
<param>
<paramname>bz</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>bzip2</extension>
<name>bzcompress</name>
<proto>string bzcompress(string source [, int blocksize] [, int workfactor])</proto>
<desc>Compresse une chaîne avec bzip2</desc>
<return>string</return>
<params>
<param>
<paramname>source</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>blocksize</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>workfactor</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>bzip2</extension>
<name>bzdecompress</name>
<proto>string bzdecompress(string source [, int small])</proto>
<desc>Décompresse une chaîne bzip2</desc>
<return>string</return>
<params>
<param>
<paramname>source</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>small</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>bzip2</extension>
<name>bzerrno</name>
<proto>int bzerrno(resource bz)</proto>
<desc>Retourne le numéro d'erreur bzip2</desc>
<return>int</return>
<params>
<param>
<paramname>bz</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>bzip2</extension>
<name>bzerror</name>
<proto>array bzerror(int bz)</proto>
<desc>Retourne le numéro et le message d'erreur bzip2 dans un tableau</desc>
<return>array</return>
<params>
<param>
<paramname>bz</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>bzip2</extension>
<name>bzerrstr</name>
<proto>string bzerrstr(resource bz)</proto>
<desc>Retourne le message d'erreur bzip2</desc>
<return>string</return>
<params>
<param>
<paramname>bz</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>bzip2</extension>
<name>bzflush</name>
<proto>int bzflush(resource bz)</proto>
<desc>Force l'écriture de toutes les données compressées</desc>
<return>int</return>
<params>
<param>
<paramname>bz</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>bzip2</extension>
<name>bzopen</name>
<proto>resource bzopen(string filename, string mode)</proto>
<desc>Ouvre un fichier compressé avec bzip2</desc>
<return>resource</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>bzip2</extension>
<name>bzread</name>
<proto>string bzread(resource bz [, int length])</proto>
<desc>Lecture binaire d'un fichier bzip2</desc>
<return>string</return>
<params>
<param>
<paramname>bz</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>length</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>bzip2</extension>
<name>bzwrite</name>
<proto>int bzwrite(resource bz, string data [, int length])</proto>
<desc>Ecriture binaire dans un fichier bzip2</desc>
<return>int</return>
<params>
<param>
<paramname>bz</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>length</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>calendar</extension>
<name>JDToGregorian</name>
<proto>)</proto>
<desc>Convertit le nombre de jours du calendrier Julien en date grégorienne.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>calendar</extension>
<name>GregorianToJD</name>
<proto>)</proto>
<desc>Convertit une date grégorienne en nombre de jours du calendrier julien.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>calendar</extension>
<name>JDToJulian</name>
<proto>)</proto>
<desc>Convertit le nombre de jours du calendrier Julien en date du calendrier Julien.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>calendar</extension>
<name>JulianToJD</name>
<proto>)</proto>
<desc>Convertit le nombre de jour du calendrier Julien en date du calendrier Julien.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>calendar</extension>
<name>JDToJewish</name>
<proto>)</proto>
<desc>Convertit le nombre de jours du calendrier julien en date du calendrier juif.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>calendar</extension>
<name>JewishToJD</name>
<proto>)</proto>
<desc>Convertit une date du calendrier juif en nombre de jours du calendrier julien.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>calendar</extension>
<name>JDToFrench</name>
<proto>)</proto>
<desc>Convertit le nombre de jours du calendrier julien en date du calendrier français républicain</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>calendar</extension>
<name>FrenchToJD</name>
<proto>)</proto>
<desc>Convertit une date du calendrier français républicain en nombre de jours du calendrier julien.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>calendar</extension>
<name>JDMonthName</name>
<proto>)</proto>
<desc>Retourne le nom du mois.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>calendar</extension>
<name>JDDayOfWeek</name>
<proto>)</proto>
<desc>Retourne le numéro du jour de la semaine.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>calendar</extension>
<name>easter_date</name>
<proto>)</proto>
<desc>Retourne un timestamp UNIX pour Pàques, à minuit, pour une année donnée.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>calendar</extension>
<name>easter_days</name>
<proto>)</proto>
<desc>Retourne le nombre de jour entre le 21 Mars et Pàques, pour une année donnée.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>calendar</extension>
<name>unixtojd</name>
<proto>int unixtojd( [int timestamp])</proto>
<desc>Convertit un timestamp UNIX en nombre de jours Julien</desc>
<return>int</return>
<params>
<param>
<paramname>timestamp</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>calendar</extension>
<name>jdtounix</name>
<proto>int jdtounix(int jday)</proto>
<desc>Convertit un nombre de jour Julien en timestamp UNIX</desc>
<return>int</return>
<params>
<param>
<paramname>jday</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>classobj</extension>
<name>call_user_method</name>
<proto>mixed call_user_method (string method_name, object obj [, mixed parameter] [, mixed ...])</proto>
<desc>Appelle une méthode utilisateur d'un objet</desc>
<return>mixed
</return>
<params>
<param>
<paramname></paramname>
<paramtype>string
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>object
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>parameter</paramname>
<paramtype>mixed</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>...</paramname>
<paramtype>mixed</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>classobj</extension>
<name>call_user_method_array</name>
<proto>mixed call_user_method_array (string method_name, object obj [, array paramarr])</proto>
<desc>Appelle une méthode utilisateur avec un tableau de paramètres</desc>
<return>mixed
</return>
<params>
<param>
<paramname></paramname>
<paramtype>string
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>object
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>paramarr</paramname>
<paramtype>array</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>classobj</extension>
<name>class_exists</name>
<proto>boolean class_exists(string class_name)</proto>
<desc>Vérifie qu'une classe a été définie</desc>
<return>boolean</return>
<params>
<param>
<paramname>class_name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>classobj</extension>
<name>get_class</name>
<proto>string get_class(object obj)</proto>
<desc>Retourne la classe d'un objet</desc>
<return>string</return>
<params>
<param>
<paramname>obj</paramname>
<paramtype>object</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>classobj</extension>
<name>get_class_methods</name>
<proto>array get_class_methods(string class_name)</proto>
<desc>Retourne les noms des méthodes d'une classe.</desc>
<return>array</return>
<params>
<param>
<paramname>class_name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>classobj</extension>
<name>get_class_vars</name>
<proto>array get_class_vars(string class_name)</proto>
<desc>Retourne les valeurs par défaut des attributs d'une classe.</desc>
<return>array</return>
<params>
<param>
<paramname>class_name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>classobj</extension>
<name>get_declared_classes</name>
<proto>array get_declared_classes(void)</proto>
<desc>Liste toutes les classes définies</desc>
<return>array</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>classobj</extension>
<name>get_object_vars</name>
<proto>array get_object_vars(object obj)</proto>
<desc>Retourne un tableau associatif des propriétés d'un objet</desc>
<return>array</return>
<params>
<param>
<paramname>obj</paramname>
<paramtype>object</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>classobj</extension>
<name>get_parent_class</name>
<proto>string get_parent_class(object obj)</proto>
<desc>Retourne le nom de la classe d'un objet</desc>
<return>string</return>
<params>
<param>
<paramname>obj</paramname>
<paramtype>object</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>classobj</extension>
<name>is_subclass_of</name>
<proto>boolean is_subclass_of(object obj, string superclass)</proto>
<desc>Détermine si un objet est une sous-classe</desc>
<return>boolean</return>
<params>
<param>
<paramname>obj</paramname>
<paramtype>object</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>superclass</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>classobj</extension>
<name>method_exists</name>
<proto>boolean method_exists(object object, string method_name)</proto>
<desc>Vérifie que la méthode existe pour une classe.</desc>
<return>boolean</return>
<params>
<param>
<paramname>object</paramname>
<paramtype>object</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>method_name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>com</extension>
<name>com_load</name>
<proto>resource com_load(string module_name [, string server_name])</proto>
<desc>Crée une référence sur un composant COM</desc>
<return>resource</return>
<params>
<param>
<paramname>module_name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>server_name</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>com</extension>
<name>com_invoke</name>
<proto>mixed com_invoke(resource com_object, string function_name [, mixed function parameters, ...])</proto>
<desc>Appelle une méthode d'un composant</desc>
<return>mixed</return>
<params>
<param>
<paramname>com_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>function_name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>function parameters</paramname>
<paramtype>mixed</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>com</extension>
<name>com_propget</name>
<proto>mixed com_propget(resource com_object, string property)</proto>
<desc>Lit la valeur d'un propriété d'un composant COM</desc>
<return>mixed</return>
<params>
<param>
<paramname>com_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>property</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>com</extension>
<name>com_get</name>
<proto>mixed com_get(resource com_object, string property)</proto>
<desc>Lit la valeur d'un propriété d'un composant COM</desc>
<return>mixed</return>
<params>
<param>
<paramname>com_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>property</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>com</extension>
<name>com_propput</name>
<proto>void com_propput(resource com_object, string property, mixed value)</proto>
<desc>Modifie une propriété d'un composant COM</desc>
<return>void</return>
<params>
<param>
<paramname>com_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>property</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>value</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>com</extension>
<name>com_propset</name>
<proto>void com_propset(resource com_object, string property, mixed value)</proto>
<desc>Modifie une propriété d'un composant COM</desc>
<return>void</return>
<params>
<param>
<paramname>com_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>property</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>value</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>com</extension>
<name>com_set</name>
<proto>void com_set(resource com_object, string property, mixed value)</proto>
<desc>Modifie une propriété d'un composant COM</desc>
<return>void</return>
<params>
<param>
<paramname>com_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>property</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>value</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_global_set_document_limits</name>
<proto> void cpdf_global_set_document_limits (int maxpages, int maxfonts, int maximages, int maxannotations, int maxobjects)</proto>
<desc>Fixe les limites d'un document PDF.</desc>
<return>
</return>
<params>
<param>
<paramname>maxpages</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>maxfonts</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>maximages</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>maxannotations</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>maxobjects</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_set_creator</name>
<proto>void cpdf_set_creator(string creator)</proto>
<desc>Fixe le créateur d'un document PDF.</desc>
<return>void</return>
<params>
<param>
<paramname>creator</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_set_title</name>
<proto>void cpdf_set_title(string title)</proto>
<desc>Fixe le titre d'un document PDF.</desc>
<return>void</return>
<params>
<param>
<paramname>title</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_set_subject</name>
<proto>void cpdf_set_subject(string subject)</proto>
<desc>Fixe le sujet d'un document PDF.</desc>
<return>void</return>
<params>
<param>
<paramname>subject</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_set_keywords</name>
<proto>void cpdf_set_keywords(string keywords)</proto>
<desc>Fixe les mot clés d'un document PDF.</desc>
<return>void</return>
<params>
<param>
<paramname>keywords</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_open</name>
<proto>resource cpdf_open(int compression, string filename)</proto>
<desc>Ouvre un nouveau document PDF.</desc>
<return>resource</return>
<params>
<param>
<paramname>compression</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_close</name>
<proto>void cpdf_close(resource pdf_document)</proto>
<desc>Ferme un fichier PDF.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_page_init</name>
<proto>void cpdf_page_init(resource pdf_document, int page_number, int orientation, double height, double width [, double unit])</proto>
<desc>Commence une nouvelle page.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>page_number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>orientation</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>height</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>width</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>double unit</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_finalize_page</name>
<proto>void cpdf_finalize_page(resource pdf_document, int page_number)</proto>
<desc>Termine une page.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>page_number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_finalize</name>
<proto>void cpdf_finalize(resource pdf_document)</proto>
<desc>Termine un document.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_output_buffer</name>
<proto>void cpdf_output_buffer(resource pdf_document)</proto>
<desc>Envoie le document PDF dans un buffer mémoire.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_save_to_file</name>
<proto>void cpdf_save_to_file(resource pdf_document, string filename)</proto>
<desc>Ecrit un document PDF dans un fichier.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_set_current_page</name>
<proto>void cpdf_set_current_page(resource pdf_document, int page_number)</proto>
<desc>Fixe la page courante.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>page_number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_begin_text</name>
<proto>void cpdf_begin_text(resource pdf_document)</proto>
<desc>Démarre une section de texte.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_end_text</name>
<proto>void cpdf_end_text(resource pdf_document)</proto>
<desc>Termine une section de texte.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_show</name>
<proto>void cpdf_show(resource pdf_document, string text)</proto>
<desc>Imprime un texte à la position courante.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>text</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_show_xy</name>
<proto>void cpdf_show_xy(resource pdf_document, string text, double x-coor, double y-coor [, int mode])</proto>
<desc>Affiche un texte à une position.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>text</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x-coor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y-coor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int mode</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_text</name>
<proto>void cpdf_text(resource pdf_document, string text, double x-coor, double y-coor [, int mode] [, double orientation] [, int alignmode])</proto>
<desc>Imprime un texte avec des options.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>text</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x-coor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y-coor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int mode</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>double orientation</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int alignmode</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_set_font</name>
<proto>void cpdf_set_font(resource pdf_document, string font name, double size, string encoding)</proto>
<desc>Sélectionne la police courante et sa taille.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>font</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>size</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>encoding</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_set_leading</name>
<proto>void cpdf_set_leading(resource pdf_document, double distance)</proto>
<desc>Fixe la distance entre deux lignes.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>distance</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_set_text_rendering</name>
<proto>void cpdf_set_text_rendering(resource pdf_document, int mode)</proto>
<desc>Détermine le rendu du texte.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_set_horiz_scaling</name>
<proto>void cpdf_set_horiz_scaling(resource pdf_document, double scale)</proto>
<desc>Fixe l'échelle horizontale du texte.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>scale</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_set_text_rise</name>
<proto>void cpdf_set_text_rise(resource pdf_document, double value)</proto>
<desc>Fixe l'élévation du texte.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>value</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_set_text_matrix</name>
<proto>void cpdf_set_text_matrix(resource pdf_document, array matrix)</proto>
<desc>Fixe la matrice du texte.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>matrix</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_set_text_pos</name>
<proto>void cpdf_set_text_pos(resource pdf_document, double x-koor, double y-koor, int mode)</proto>
<desc>Fixe la position du texte.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x-koor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y-koor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_set_char_spacing</name>
<proto>void cpdf_set_text_pos(resource pdf_document, double space)</proto>
<desc>Fixe l'espacement des caractères.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>space</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_set_word_spacing</name>
<proto>void cpdf_set_word_spacing(resource pdf_document, double space)</proto>
<desc>Fixe l'espacement des mots.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>space</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_continue_text</name>
<proto>void cpdf_continue_text(resource pdf_document, string text)</proto>
<desc>Imprime le texte à la ligne suivante.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>text</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_stringwidth</name>
<proto>double cpdf_stringwidth(resource pdf_document, string text)</proto>
<desc>Retourne la taille de la chaîne.</desc>
<return>double</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>text</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_save</name>
<proto>void cpdf_save(resource pdf_document)</proto>
<desc>Sauve l'environnement courant.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_restore</name>
<proto>void cpdf_restore(resource pdf_document)</proto>
<desc>Restaure un environnement.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_translate</name>
<proto>void cpdf_translate(resource pdf_document, double x-koor, double y-koor, int mode)</proto>
<desc>Modifie l'origine du système de coordonées.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x-koor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y-koor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_scale</name>
<proto>void cpdf_scale(resource pdf_document, double x-scale, double y-scale)</proto>
<desc>Modifie l'échelle.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x-scale</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y-scale</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_rotate</name>
<proto>void cpdf_rotate(resource pdf_document, double angle)</proto>
<desc>Effectue une rotation.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>angle</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_setflat</name>
<proto>void cpdf_setflat(resource pdf_document, double value)</proto>
<desc>Fixe la platitude (flatness).</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>value</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_setlinejoin</name>
<proto>void cpdf_setlinejoin(resource pdf_document, long value)</proto>
<desc>Fixe le paramètre linejoin.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>value</paramname>
<paramtype>long</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_setlinecap</name>
<proto>void cpdf_setlinecap(resource pdf_document, int value)</proto>
<desc>Fixe le paramètre linecap.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>value</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_setmiterlimit</name>
<proto>void cpdf_setmiterlimit(resource pdf_document, double value)</proto>
<desc>Fixe le paramètre miter limit.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>value</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_setlinewidth</name>
<proto>void cpdf_setlinewidth(resource pdf_document, double width)</proto>
<desc>Fixe la largeur de ligne.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>width</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_setdash</name>
<proto>void cpdf_setdash(resource pdf_document, double white, double black)</proto>
<desc>Fixe le motif de pointillé.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>white</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>black</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_newpath</name>
<proto>void cpdf_newpath (int pdf_document)</proto>
<desc>Commence un nouveau chemin</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_moveto</name>
<proto>void cpdf_moveto(resource pdf_document, double x-koor, double y-koor, int mode)</proto>
<desc>Fixe le point courant.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x-koor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y-koor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_rmoveto</name>
<proto>void cpdf_rmoveto(resource pdf_document, double x-koor, double y-koor, int mode)</proto>
<desc>Fixe le point courant relativement.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x-koor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y-koor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_curveto</name>
<proto>void cpdf_curveto(resource pdf_document, double x1, double y1, double x2, double y2, double x3, double y3, int mode)</proto>
<desc>Dessine une courbe.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x1</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y1</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x2</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y2</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x3</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y3</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_lineto</name>
<proto>void cpdf_lineto(resource pdf_document, double x-koor, double y-koor, int mode)</proto>
<desc>Dessine une ligne.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x-koor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y-koor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_rlineto</name>
<proto>void cpdf_rlineto(resource pdf_document, double x-koor, double y-koor, int mode)</proto>
<desc>Dessine une ligne, relativement.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x-koor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y-koor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_circle</name>
<proto>void cpdf_circle(resource pdf_document, double x-koor, double y-koor, double radius, int mode)</proto>
<desc>Dessine un cercle.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x-koor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y-koor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>radius</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_arc</name>
<proto>void cpdf_arc(resource pdf_document, double x-koor, double y-koor, double radius, double start, double end, int mode)</proto>
<desc>Dessine un arc de cercle.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x-koor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y-koor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>radius</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>start</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>end</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_rect</name>
<proto>void cpdf_rect(resource pdf_document, double x-koor, double y-koor, double width, double height, int mode)</proto>
<desc>Dessine un rectangle.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x-koor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y-koor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>width</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>height</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_closepath</name>
<proto>void cpdf_closepath(resource pdf_document)</proto>
<desc>Ferme le chemin.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_stroke</name>
<proto>void cpdf_stroke(resource pdf_document)</proto>
<desc>Dessine une ligne le long du chemin.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_closepath_stroke</name>
<proto>void cpdf_closepath_stroke(resource pdf_document)</proto>
<desc>Ferme le fichier et dessine une ligne le long du chemin.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_fill</name>
<proto>void cpdf_fill(resource pdf_document)</proto>
<desc>Remplit le chemin courant.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_fill_stroke</name>
<proto>void cpdf_fill_stroke(resource pdf_document)</proto>
<desc>Remplit le chemin, et dessine le bord.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_closepath_fill_stroke</name>
<proto>void cpdf_closepath_fill_stroke(resource pdf_document)</proto>
<desc>Remplit le chemin, dessine le bord et ferme le chemin.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_clip</name>
<proto>void cpdf_clip(resource pdf_document)</proto>
<desc>Aligne les dessins sur le chemin courant.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_setgray_fill</name>
<proto>void cpdf_setgray_fill(resource pdf_document, double value)</proto>
<desc>Modifie le niveau de gris comme couleur de remplissage.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>value</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_setgray_stroke</name>
<proto>void cpdf_setgray_stroke(resource pdf_document, double gray_value)</proto>
<desc>Choisit un niveau de gris comme couleur de dessin.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>gray_value</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_setgray</name>
<proto>void cpdf_setgray(resource pdf_document, double gray_value)</proto>
<desc>Modifie un niveau de gris comme couleur de dessin et de remplissage.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>gray_value</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_setrgbcolor_fill</name>
<proto>void cpdf_setrgbcolor_fill(resource pdf_document, double red_value, double green_value, double blue_value)</proto>
<desc>Choisit une couleur rgb comme couleur de remplissage.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>red_value</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>green_value</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>blue_value</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_setrgbcolor_stroke</name>
<proto>void cpdf_setrgbcolor_stroke(resource pdf_document, double red_value, double green_value, double blue_value)</proto>
<desc>Choisit une couleur rgb comme couleur de dessin.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>red_value</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>green_value</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>blue_value</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_setrgbcolor</name>
<proto>void cpdf_setrgbcolor(resource pdf_document, double red_value, double green_value, double blue_value)</proto>
<desc>Choisit une couleur rgb comme couleur de dessin et de remplissage.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>red_value</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>green_value</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>blue_value</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_add_outline</name>
<proto>void cpdf_add_outline(resource pdf_document, string text)</proto>
<desc>Ajoute un signet à la page courante.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>text</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_set_page_animation</name>
<proto>void cpdf_set_page_animation(resource pdf_document, int transition, double duration)</proto>
<desc>Fixe l'animation de la transition entre les pages.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>transition</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>duration</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_import_jpeg</name>
<proto>int cpdf_import_jpeg(resource pdf_document, string file name, double x-koor, double y-koor, double angle, double width, double height, double x-scale, double y-scale, int mode)</proto>
<desc>Ouvre une image JPEG.</desc>
<return>int</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>file</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x-koor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y-koor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>angle</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>width</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>height</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x-scale</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y-scale</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_place_inline_image</name>
<proto>void cpdf_place_inline_image(resource pdf_document, int image, double x-koor, double y-koor, double angle, double width, double height, int mode)</proto>
<desc>Place une image dans la page.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>image</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x-koor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y-koor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>angle</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>width</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>height</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cpdf</extension>
<name>cpdf_add_annotation</name>
<proto>void cpdf_add_annotation(resource pdf_document, double llx, double lly, double urx, double ury, string title, string content, int mode)</proto>
<desc>Ajoute une annotation.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>llx</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>lly</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>urx</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>ury</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>title</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>content</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ctype</extension>
<name>ctype_alnum</name>
<proto>bool ctype_alnum(string c)</proto>
<desc>Vérifie qu'un caractère est alpha-numérique</desc>
<return>bool</return>
<params>
<param>
<paramname>c</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ctype</extension>
<name>ctype_alpha</name>
<proto>bool ctype_alpha(string c)</proto>
<desc>Vérifie qu'un caractère est alphabétique</desc>
<return>bool</return>
<params>
<param>
<paramname>c</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ctype</extension>
<name>ctype_cntrl</name>
<proto>bool ctype_cntrl(string c)</proto>
<desc>Vérifie qu'un caractère est un caractère de contrôle</desc>
<return>bool</return>
<params>
<param>
<paramname>c</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ctype</extension>
<name>ctype_digit</name>
<proto>bool ctype_digit(string c)</proto>
<desc>Vérifie qu'un caractère est numérique</desc>
<return>bool</return>
<params>
<param>
<paramname>c</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ctype</extension>
<name>ctype_lower</name>
<proto>bool ctype_lower(string c)</proto>
<desc>Vérifie qu'un caractère est en minuscule</desc>
<return>bool</return>
<params>
<param>
<paramname>c</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ctype</extension>
<name>ctype_graph</name>
<proto>bool ctype_graph(string c)</proto>
<desc>Vérifie qu'un caractère est imprimable (sauf " ", espace)</desc>
<return>bool</return>
<params>
<param>
<paramname>c</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ctype</extension>
<name>ctype_print</name>
<proto>bool ctype_print(string c)</proto>
<desc>Vérifie qu'un caractère est imprimable</desc>
<return>bool</return>
<params>
<param>
<paramname>c</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ctype</extension>
<name>ctype_punct</name>
<proto>bool ctype_punct(string c)</proto>
<desc>Vérifie qu'un caractère est imprimable, sans être ni un espace,
     ni un caractère alpha-numérique</desc>
<return>bool</return>
<params>
<param>
<paramname>c</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ctype</extension>
<name>ctype_space</name>
<proto>bool ctype_space(string c)</proto>
<desc>Vérifie qu'un caractère est caractère blanc (espace, tabulation...)</desc>
<return>bool</return>
<params>
<param>
<paramname>c</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ctype</extension>
<name>ctype_upper</name>
<proto>bool ctype_upper(string c)</proto>
<desc>Vérifie qu'un caractère est en majuscule</desc>
<return>bool</return>
<params>
<param>
<paramname>c</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ctype</extension>
<name>ctype_xdigit</name>
<proto>bool ctype_xdigit(string c)</proto>
<desc>Vérifie qu'un caractère représente un nombre héxadécimal</desc>
<return>bool</return>
<params>
<param>
<paramname>c</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>curl</extension>
<name>curl_init</name>
<proto>resource curl_init ( [string url])</proto>
<desc>Initialise une session CURL</desc>
<return>resource
</return>
<params>
<param>
<paramname>url</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>curl</extension>
<name>curl_setopt</name>
<proto>boolean curl_setopt (resource ch, string option, mixed value)</proto>
<desc>Modifie une option de transfert CURL</desc>
<return>boolean
</return>
<params>
<param>
<paramname></paramname>
<paramtype>resource
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>mixed
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>curl</extension>
<name>curl_exec</name>
<proto>boolean curl_exec (resource ch)</proto>
<desc>Exécute une session CURL</desc>
<return>boolean
</return>
<params>
<param>
<paramname></paramname>
<paramtype>resource
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>curl</extension>
<name>curl_close</name>
<proto>void curl_close (int ch)</proto>
<desc>Ferme une session CURL</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>curl</extension>
<name>curl_version</name>
<proto>string curl_version (void)</proto>
<desc>Retourne la version courante de CURL</desc>
<return>string
</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cybercash</extension>
<name>cybercash_encr</name>
<proto>array cybercash_encr(string wmk, string sk, string inbuff)</proto>
<desc></desc>
<return>array</return>
<params>
<param>
<paramname>wmk</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>sk</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>inbuff</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cybercash</extension>
<name>cybercash_decr</name>
<proto>array cybercash_decr(string wmk, string sk, string inbuff)</proto>
<desc></desc>
<return>array</return>
<params>
<param>
<paramname>wmk</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>sk</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>inbuff</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cybercash</extension>
<name>cybercash_base64_encode</name>
<proto>string cybercash_base64_encode (string inbuff)</proto>
<desc></desc>
<return>string
</return>
<params>
<param>
<paramname>inbuff</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cybercash</extension>
<name>cybercash_base64_decode</name>
<proto>string cybercash_base64_decode (string inbuff)</proto>
<desc></desc>
<return>string
</return>
<params>
<param>
<paramname>inbuff</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cybermut</extension>
<name>cybermut_creerformulairecm</name>
<proto>string cybermut_creerformulairecm(string url_CM, string version, string TPE, string montant, string ref_commande, string texte_libre, string url_retour, string url_retour_ok, string url_retour_err, string langue, string code_societe, string texte_bouton)</proto>
<desc>Génère un formulaire HTML de paiement</desc>
<return>string</return>
<params>
<param>
<paramname>url_CM</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>version</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>TPE</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>montant</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>ref_commande</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>texte_libre</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>url_retour</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>url_retour_ok</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>url_retour_err</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>langue</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>code_societe</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>texte_bouton</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cybermut</extension>
<name>cybermut_testmac</name>
<proto>bool cybermut_testmac(string code_MAC, string version, string TPE, string cdate, string montant, string ref_commande, string texte_libre, string code-retour)</proto>
<desc>Vérifie le message de confirmation</desc>
<return>bool</return>
<params>
<param>
<paramname>code_MAC</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>version</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>TPE</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>cdate</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>montant</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>ref_commande</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>texte_libre</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>code-retour</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>cybermut</extension>
<name>cybermut_creerreponsecm</name>
<proto>string cybermut_creerreponsecm(string phrase)</proto>
<desc>Génère un accusé de réception de confirmation de paiement</desc>
<return>string</return>
<params>
<param>
<paramname>phrase</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>datetime</extension>
<name>checkdate</name>
<proto>int checkdate(int month, int day, int year)</proto>
<desc>Valide une date/heure.</desc>
<return>int</return>
<params>
<param>
<paramname>month</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>day</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>year</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>datetime</extension>
<name>date</name>
<proto>string date(string format [, int timestamp])</proto>
<desc>Formate une date/heure locale</desc>
<return>string</return>
<params>
<param>
<paramname>format</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>timestamp</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>datetime</extension>
<name>getdate</name>
<proto>array getdate( [int timestamp])</proto>
<desc>Retourne la date/heure</desc>
<return>array</return>
<params>
<param>
<paramname>timestamp</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>datetime</extension>
<name>gettimeofday</name>
<proto>array gettimeofday(void)</proto>
<desc>Retourne l'heure actuelle</desc>
<return>array</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>datetime</extension>
<name>gmdate</name>
<proto>string gmdate(string format [, int timestamp])</proto>
<desc>Formate une date/heure GMT/CUT.</desc>
<return>string</return>
<params>
<param>
<paramname>format</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>timestamp</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>datetime</extension>
<name>gmmktime</name>
<proto>int gmmktime(int hour, int minute, int second, int month, int day, int year [, int is_dst])</proto>
<desc>Retourne le timestamp UNIX d'une date GMT.</desc>
<return>int</return>
<params>
<param>
<paramname>hour</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>minute</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>second</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>month</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>day</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>year</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>is_dst</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>datetime</extension>
<name>gmstrftime</name>
<proto>string gmstrftime(string format [, int timestamp])</proto>
<desc>Formate une date/heure GMT/CUT en fonction des paramétrages locaux.</desc>
<return>string</return>
<params>
<param>
<paramname>format</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>timestamp</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>datetime</extension>
<name>localtime</name>
<proto>array localtime( [int timestamp] [, boolean is_associative])</proto>
<desc>Lit l'heure locale</desc>
<return>array</return>
<params>
<param>
<paramname>timestamp</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>is_associative</paramname>
<paramtype>boolean</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>datetime</extension>
<name>microtime</name>
<proto>string microtime(void)</proto>
<desc>Retourne le timestamp UNIX actuel avec microsecondes.</desc>
<return>string</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>datetime</extension>
<name>mktime</name>
<proto>int mktime(int hour, int minute, int second, int month, int day, int year [, int is_dst])</proto>
<desc>Retourne le timestamp UNIX d'une date.</desc>
<return>int</return>
<params>
<param>
<paramname>hour</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>minute</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>second</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>month</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>day</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>year</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>is_dst</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>datetime</extension>
<name>strftime</name>
<proto>string strftime(string format [, int timestamp])</proto>
<desc>Formate une date/heure locale avec les options locales.</desc>
<return>string</return>
<params>
<param>
<paramname>format</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>timestamp</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>datetime</extension>
<name>time</name>
<proto>int time(void)</proto>
<desc>Retourne le timestamp UNIX actuel.</desc>
<return>int</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>datetime</extension>
<name>strtotime</name>
<proto>int strtotime(string time [, int now])</proto>
<desc>Transforme un texte anglais en timestamp</desc>
<return>int</return>
<params>
<param>
<paramname>time</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>now</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>dba</extension>
<name>dba_close</name>
<proto>void dba_close(resource handle)</proto>
<desc>Ferme une base.</desc>
<return>void</return>
<params>
<param>
<paramname>handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dba</extension>
<name>dba_delete</name>
<proto>bool dba_delete(string key, resource handle)</proto>
<desc>Efface une entrée.</desc>
<return>bool</return>
<params>
<param>
<paramname>key</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dba</extension>
<name>dba_exists</name>
<proto>boolean dba_exists(string key, resource handle)</proto>
<desc>Vérifie qu'une clé existe.</desc>
<return>boolean</return>
<params>
<param>
<paramname>key</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dba</extension>
<name>dba_fetch</name>
<proto>string dba_fetch(string key, resource handle)</proto>
<desc>Lit les données liées à une clé.</desc>
<return>string</return>
<params>
<param>
<paramname>key</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dba</extension>
<name>dba_firstkey</name>
<proto>string dba_firstkey(resource handle)</proto>
<desc>Lit la première clé.</desc>
<return>string</return>
<params>
<param>
<paramname>handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dba</extension>
<name>dba_insert</name>
<proto>boolean dba_insert(string key, string value, resource handle)</proto>
<desc>Insère une entrée.</desc>
<return>boolean</return>
<params>
<param>
<paramname>key</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>value</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dba</extension>
<name>dba_nextkey</name>
<proto>string dba_nextkey(resource handle)</proto>
<desc>Lit la clé suivante.</desc>
<return>string</return>
<params>
<param>
<paramname>handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dba</extension>
<name>dba_popen</name>
<proto>int dba_popen(string path, string mode, string handler [, mixed ...])</proto>
<desc>Ouvre une connexion persistante à une base de données.</desc>
<return>int</return>
<params>
<param>
<paramname>path</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>handler</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>mixed ...</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>dba</extension>
<name>dba_open</name>
<proto>int dba_open(string path, string mode, string handler [, mixed ...])</proto>
<desc>Ouvre une base de données.</desc>
<return>int</return>
<params>
<param>
<paramname>path</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>handler</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>mixed ...</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>dba</extension>
<name>dba_optimize</name>
<proto>boolean dba_optimize(resource handle)</proto>
<desc>Optimise une base.</desc>
<return>boolean</return>
<params>
<param>
<paramname>handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dba</extension>
<name>dba_replace</name>
<proto>boolean dba_replace(string key, string value, resource handle)</proto>
<desc>Remplace ou insère une entrée.</desc>
<return>boolean</return>
<params>
<param>
<paramname>key</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>value</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dba</extension>
<name>dba_sync</name>
<proto>boolean dba_sync(resource handle)</proto>
<desc>Synchronise une base de données.</desc>
<return>boolean</return>
<params>
<param>
<paramname>handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbase</extension>
<name>dbase_create</name>
<proto>int dbase_create(string filename, array fields)</proto>
<desc>Crée une base de données dBase.</desc>
<return>int</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>fields</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbase</extension>
<name>dbase_open</name>
<proto>int dbase_open(string filename, int flags)</proto>
<desc>Ouverture d'une base dBase.</desc>
<return>int</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>flags</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbase</extension>
<name>dbase_close</name>
<proto>boolean dbase_close(resource dbase_identifier)</proto>
<desc>Ferme une base dBase.</desc>
<return>boolean</return>
<params>
<param>
<paramname>dbase_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbase</extension>
<name>dbase_pack</name>
<proto>boolean dbase_pack(resource dbase_identifier)</proto>
<desc>Compacte une base dBase.</desc>
<return>boolean</return>
<params>
<param>
<paramname>dbase_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbase</extension>
<name>dbase_add_record</name>
<proto>boolean dbase_add_record(resource dbase_identifier, array record)</proto>
<desc>Ajoute un enregistrement dans une base dBase.</desc>
<return>boolean</return>
<params>
<param>
<paramname>dbase_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>record</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbase</extension>
<name>dbase_replace_record</name>
<proto>boolean dbase_replace_record(resource dbase_identifier, array record, int dbase_record_number)</proto>
<desc>Remplace un enregistrement dans une base dBase.</desc>
<return>boolean</return>
<params>
<param>
<paramname>dbase_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>record</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>dbase_record_number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbase</extension>
<name>dbase_delete_record</name>
<proto>boolean dbase_delete_record(resource dbase_identifier, int record)</proto>
<desc>Efface un enregistrement dans une base dBase.</desc>
<return>boolean</return>
<params>
<param>
<paramname>dbase_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>record</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbase</extension>
<name>dbase_get_record</name>
<proto>array dbase_get_record(resource dbase_identifier, int record)</proto>
<desc>Lit un enregistrement dans une base dBase.</desc>
<return>array</return>
<params>
<param>
<paramname>dbase_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>record</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbase</extension>
<name>dbase_get_record_with_names</name>
<proto>array dbase_get_record_with_names (resource dbase_identifier, int record)</proto>
<desc>Lit un enregistrement dans une base, sous la forme d'un tableau associatif.</desc>
<return>array
</return>
<params>
<param>
<paramname>dbase_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>record</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbase</extension>
<name>dbase_numfields</name>
<proto>int dbase_numfields(resource dbase_identifier)</proto>
<desc>Compte le nombre de champs d'une base dBase.</desc>
<return>int</return>
<params>
<param>
<paramname>dbase_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbase</extension>
<name>dbase_numrecords</name>
<proto>int dbase_numrecords(resource dbase_identifier)</proto>
<desc>Compter le nombre d'enregistrements dans une base dBase.</desc>
<return>int</return>
<params>
<param>
<paramname>dbase_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbm</extension>
<name>dbmopen</name>
<proto>resource dbmopen(string filename, string flags)</proto>
<desc>Ouvre une base de données dbm</desc>
<return>resource</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>flags</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbm</extension>
<name>dbmclose</name>
<proto>boolean dbmclose(resource dbm_identifier)</proto>
<desc>Ferme une base de données dbm.</desc>
<return>boolean</return>
<params>
<param>
<paramname>dbm_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbm</extension>
<name>dbmexists</name>
<proto>boolean dbmexists(resource dbm_identifier, string key)</proto>
<desc>Indique si une valeur existe.</desc>
<return>boolean</return>
<params>
<param>
<paramname>dbm_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>key</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbm</extension>
<name>dbmfetch</name>
<proto>string dbmfetch(resource dbm_identifier, string key)</proto>
<desc>Lit une valeur.</desc>
<return>string</return>
<params>
<param>
<paramname>dbm_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>key</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbm</extension>
<name>dbminsert</name>
<proto>int dbminsert(resource dbm_identifier, string key, string value)</proto>
<desc>Insère une valeur.</desc>
<return>int</return>
<params>
<param>
<paramname>dbm_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>key</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>value</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbm</extension>
<name>dbmreplace</name>
<proto>boolean dbmreplace(resource dbm_identifier, string key, string value)</proto>
<desc>Remplace une valeur.</desc>
<return>boolean</return>
<params>
<param>
<paramname>dbm_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>key</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>value</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbm</extension>
<name>dbmdelete</name>
<proto>boolean dbmdelete(resource dbm_identifier, string key)</proto>
<desc>Efface une valeur.</desc>
<return>boolean</return>
<params>
<param>
<paramname>dbm_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>key</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbm</extension>
<name>dbmfirstkey</name>
<proto>string dbmfirstkey(resource dbm_identifier)</proto>
<desc>Lit la première clé.</desc>
<return>string</return>
<params>
<param>
<paramname>dbm_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbm</extension>
<name>dbmnextkey</name>
<proto>string dbmnextkey(resource dbm_identifier, string key)</proto>
<desc>Lit la clé suivante.</desc>
<return>string</return>
<params>
<param>
<paramname>dbm_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>key</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbm</extension>
<name>dblist</name>
<proto>string dblist(void)</proto>
<desc>Décrit la librairie dbm utilisée.</desc>
<return>string</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_add</name>
<proto>int dbplus_add(resource relation, array tuple)</proto>
<desc>Add a tuple to a relation</desc>
<return>int</return>
<params>
<param>
<paramname>relation</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>tuple</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_aql</name>
<proto>resource dbplus_aql(string query [, string server] [, string dbpath])</proto>
<desc>Perform AQL query</desc>
<return>resource</return>
<params>
<param>
<paramname>query</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>server</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>dbpath</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_chdir</name>
<proto>string dbplus_chdir( [string newdir])</proto>
<desc>Get/Set database virtual current directory</desc>
<return>string</return>
<params>
<param>
<paramname>newdir</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_close</name>
<proto>int dbplus_close(resource relation)</proto>
<desc>Close a relation</desc>
<return>int</return>
<params>
<param>
<paramname>relation</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_curr</name>
<proto>int dbplus_curr(resource relation, array tuple)</proto>
<desc>Get current tuple from relation</desc>
<return>int</return>
<params>
<param>
<paramname>relation</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>tuple</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_errcode</name>
<proto>string dbplus_errcode(int errno)</proto>
<desc>Get error string for given errorcode or last error</desc>
<return>string</return>
<params>
<param>
<paramname>errno</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_errno</name>
<proto>int dbplus_errno()</proto>
<desc>Get error code for last operation</desc>
<return>int</return>
<params>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_find</name>
<proto>int dbplus_find(resource relation, array constraints, mixed tuple)</proto>
<desc>Set a constraint on a relation</desc>
<return>int</return>
<params>
<param>
<paramname>relation</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>constraints</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>tuple</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_first</name>
<proto>int dbplus_first(resource relation, array tuple)</proto>
<desc>Get first tuple from relation</desc>
<return>int</return>
<params>
<param>
<paramname>relation</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>tuple</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_flush</name>
<proto>int dbplus_flush(resource relation)</proto>
<desc>Flush all changes made on a relation</desc>
<return>int</return>
<params>
<param>
<paramname>relation</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_freealllocks</name>
<proto>int dbplus_freealllocks()</proto>
<desc>Free all locks held by this client</desc>
<return>int</return>
<params>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_freelock</name>
<proto>int dbplus_freelock(resource relation, string tname)</proto>
<desc>Release write lock on tuple</desc>
<return>int</return>
<params>
<param>
<paramname>relation</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>tname</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_freerlocks</name>
<proto>int dbplus_freerlocks(resource relation)</proto>
<desc>Free all tuple locks on given relation</desc>
<return>int</return>
<params>
<param>
<paramname>relation</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_getlock</name>
<proto>int dbplus_getlock(resource relation, string tname)</proto>
<desc>Get a write lock on a tuple</desc>
<return>int</return>
<params>
<param>
<paramname>relation</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>tname</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_getunique</name>
<proto>int dbplus_getunique(resource relation, int uniqueid)</proto>
<desc>Get a id number unique to a relation</desc>
<return>int</return>
<params>
<param>
<paramname>relation</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>uniqueid</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_info</name>
<proto>int dbplus_info(resource relation, string key, array)</proto>
<desc>???</desc>
<return>int</return>
<params>
<param>
<paramname>relation</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>key</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_last</name>
<proto>int dbplus_last(resource relation, array tuple)</proto>
<desc>Get last tuple from relation</desc>
<return>int</return>
<params>
<param>
<paramname>relation</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>tuple</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_lockrel</name>
<proto>int dbplus_lockrel(resource relation)</proto>
<desc>Request write lock on relation</desc>
<return>int</return>
<params>
<param>
<paramname>relation</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_next</name>
<proto>int dbplus_next(resource relation, array)</proto>
<desc>Get next tuple from relation</desc>
<return>int</return>
<params>
<param>
<paramname>relation</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_open</name>
<proto>resource dbplus_open(string name)</proto>
<desc>Open relation file</desc>
<return>resource</return>
<params>
<param>
<paramname>name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_prev</name>
<proto>int dbplus_prev(resource relation, array tuple)</proto>
<desc>Get previous tuple from relation</desc>
<return>int</return>
<params>
<param>
<paramname>relation</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>tuple</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_rchperm</name>
<proto>int dbplus_rchperm(resource relation, int mask, string user, string group)</proto>
<desc>Change relation permissions</desc>
<return>int</return>
<params>
<param>
<paramname>relation</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mask</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>user</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>group</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_rcreate</name>
<proto>resource dbplus_rcreate(string name, mixed domlist [, boolean overwrite])</proto>
<desc></desc>
<return>resource</return>
<params>
<param>
<paramname>name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>domlist</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>boolean overwrite</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_rcrtexact</name>
<proto>resource dbplus_rcrtexact(string name, resource relation, boolean overwrite)</proto>
<desc></desc>
<return>resource</return>
<params>
<param>
<paramname>name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>relation</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>overwrite</paramname>
<paramtype>boolean</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_rcrtlike</name>
<proto>resource dbplus_rcrtlike(string name, resource relation, int flag)</proto>
<desc></desc>
<return>resource</return>
<params>
<param>
<paramname>name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>relation</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>flag</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_resolve</name>
<proto>int dbplus_resolve(string relation_name)</proto>
<desc>Resolve host information for relation</desc>
<return>int</return>
<params>
<param>
<paramname>relation_name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_rkeys</name>
<proto>resource dbplus_rkeys(resource relation, mixed domlist)</proto>
<desc>Specify new primary key for a relation</desc>
<return>resource</return>
<params>
<param>
<paramname>relation</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>domlist</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_restorepos</name>
<proto>int dbplus_restorepos(resource relation, array tuple)</proto>
<desc>???</desc>
<return>int</return>
<params>
<param>
<paramname>relation</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>tuple</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_ropen</name>
<proto>resource dbplus_ropen(string name)</proto>
<desc>Open relation file local</desc>
<return>resource</return>
<params>
<param>
<paramname>name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_rquery</name>
<proto>int dbplus_rquery(string query, string dbpath)</proto>
<desc>Perform local (raw) AQL query</desc>
<return>int</return>
<params>
<param>
<paramname>query</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>dbpath</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_rrename</name>
<proto>int dbplus_rrename(resource relation, string name)</proto>
<desc>Rename a relation</desc>
<return>int</return>
<params>
<param>
<paramname>relation</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_rsecindex</name>
<proto>resource dbplus_rsecindex(resource relation, mixed domlist, int type)</proto>
<desc>Create a new secondary index for a relation</desc>
<return>resource</return>
<params>
<param>
<paramname>relation</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>domlist</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>type</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_runlink</name>
<proto>int dbplus_runlink(resource relation)</proto>
<desc>Remove relation from filesystem</desc>
<return>int</return>
<params>
<param>
<paramname>relation</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_rzap</name>
<proto>int dbplus_rzap(resource relation)</proto>
<desc>Remove all tuples from relation</desc>
<return>int</return>
<params>
<param>
<paramname>relation</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_savepos</name>
<proto>int dbplus_savepos(resource relation)</proto>
<desc>???</desc>
<return>int</return>
<params>
<param>
<paramname>relation</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_setindex</name>
<proto>int dbplus_setindex(resource relation, string idx_name)</proto>
<desc>???</desc>
<return>int</return>
<params>
<param>
<paramname>relation</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>idx_name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_setindexbynumber</name>
<proto>int dbplus_setindexbynumber (resource relation, int idx_number)</proto>
<desc>???</desc>
<return>int</return>
<params>
<param>
<paramname>relation</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>idx_number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_sql</name>
<proto>resource dbplus_sql(string query, string server, string dbpath)</proto>
<desc>Perform SQL query</desc>
<return>resource</return>
<params>
<param>
<paramname>query</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>server</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>dbpath</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_tcl</name>
<proto>int dbplus_tcl(int sid, string script)</proto>
<desc>Execute TCL code on server side</desc>
<return>int</return>
<params>
<param>
<paramname>sid</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>script</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_tremove</name>
<proto>int dbplus_tremove(resource relation, array tuple [, array current])</proto>
<desc>Remove tuple and return new current tuple</desc>
<return>int</return>
<params>
<param>
<paramname>relation</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>tuple</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>current</paramname>
<paramtype>array</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_undo</name>
<proto>int dbplus_undo(resource relation)</proto>
<desc>???</desc>
<return>int</return>
<params>
<param>
<paramname>relation</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_undoprepare</name>
<proto>int dbplus_undoprepare(resource relation)</proto>
<desc>???</desc>
<return>int</return>
<params>
<param>
<paramname>relation</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_unlockrel</name>
<proto>int dbplus_unlockrel(resource relation)</proto>
<desc>Give up write lock on relation</desc>
<return>int</return>
<params>
<param>
<paramname>relation</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_unselect</name>
<proto>int dbplus_unselect(resource relation)</proto>
<desc>Remove a constraint from relation</desc>
<return>int</return>
<params>
<param>
<paramname>relation</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_update</name>
<proto>int dbplus_update(resource relation, array old, array new)</proto>
<desc>Update specified tuple in relation</desc>
<return>int</return>
<params>
<param>
<paramname>relation</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>old</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>new</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_xlockrel</name>
<proto>int dbplus_xlockrel(resource relation)</proto>
<desc>Request exclusive lock on relation</desc>
<return>int</return>
<params>
<param>
<paramname>relation</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbplus</extension>
<name>dbplus_xunlockrel</name>
<proto>int dbplus_xunlockrel(resource relation)</proto>
<desc>Free exclusive lock on relation</desc>
<return>int</return>
<params>
<param>
<paramname>relation</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbx</extension>
<name>dbx_close</name>
<proto>boolean dbx_close(resource link_identifier)</proto>
<desc>Ferme une connexion à une base</desc>
<return>boolean</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbx</extension>
<name>dbx_connect</name>
<proto>resource dbx_connect(string module, string host, string database, string username, string password [, int persistent])</proto>
<desc>Ouvre une connexion à une base de données</desc>
<return>resource</return>
<params>
<param>
<paramname>module</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>host</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>database</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>username</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>password</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>persistent</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbx</extension>
<name>dbx_error</name>
<proto>string dbx_error(resource link_identifier)</proto>
<desc>Rapporte le message d'erreur du dernier appel de fonction</desc>
<return>string</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbx</extension>
<name>dbx_query</name>
<proto>resource dbx_query(resource link_identifier, string sql_statement [, long flags])</proto>
<desc>Envoie une requête et lit tous les résultats</desc>
<return>resource</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>sql_statement</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>flags</paramname>
<paramtype>long</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbx</extension>
<name>dbx_sort</name>
<proto>boolean dbx_sort(dbx_result_object result, string user_compare_function)</proto>
<desc>Tri un résultat avec une fonction utilisateur</desc>
<return>boolean</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>dbx_result_object</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>
</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbx</extension>
<name>dbx_cmp_asc</name>
<proto>int dbx_cmp_asc(array row_a, array row_b, string columnname_or_index)</proto>
<desc>Compare deux lignes pour tri croissant</desc>
<return>int</return>
<params>
<param>
<paramname>row_a</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>row_b</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>columnname_or_index</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dbx</extension>
<name>dbx_cmp_desc</name>
<proto>int dbx_cmp_desc(array row_a, array row_b, string columnname_or_index)</proto>
<desc>Compare deux lignes pour tri décroissant</desc>
<return>int</return>
<params>
<param>
<paramname>row_a</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>row_b</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>
</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dir</extension>
<name>chroot</name>
<proto>int chroot(string directory)</proto>
<desc>Change la racine</desc>
<return>int</return>
<params>
<param>
<paramname>directory</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dir</extension>
<name>chdir</name>
<proto>int chdir(string directory)</proto>
<desc>Change de dossier</desc>
<return>int</return>
<params>
<param>
<paramname>directory</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dir</extension>
<name>dir</name>
<proto>new dir(string directory)</proto>
<desc>Classe dossier</desc>
<return>new</return>
<params>
<param>
<paramname>directory</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dir</extension>
<name>closedir</name>
<proto>void closedir(resource dir_handle)</proto>
<desc>Ferme le pointeur sur le dossier.</desc>
<return>void</return>
<params>
<param>
<paramname>dir_handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dir</extension>
<name>getcwd</name>
<proto>string getcwd(void)</proto>
<desc>Retourne le dossier de travail</desc>
<return>string</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dir</extension>
<name>opendir</name>
<proto>int opendir(string path)</proto>
<desc>Ouvre un dossier, et récupère un pointeur dessus.</desc>
<return>int</return>
<params>
<param>
<paramname>path</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dir</extension>
<name>readdir</name>
<proto>string readdir(resource dir_handle)</proto>
<desc>Lit une entrée du dossier.</desc>
<return>string</return>
<params>
<param>
<paramname>dir_handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>dir</extension>
<name>rewinddir</name>
<proto>void rewinddir(resource dir_handle)</proto>
<desc>Retourne à la première entrée du dossier.</desc>
<return>void</return>
<params>
<param>
<paramname>dir_handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>domxml</extension>
<name>xmldoc</name>
<proto>object xmldoc(string str)</proto>
<desc>Crée un objet DOM pour un document XML.</desc>
<return>object</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>domxml</extension>
<name>xmldocfile</name>
<proto>object xmldocfile(string filename)</proto>
<desc>Crée un objet DOM à partir d'un fichier XML</desc>
<return>object</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>domxml</extension>
<name>xmltree</name>
<proto>object xmltree(string str)</proto>
<desc>Crée un arbre d'objet PHP, à partir d'un document XML.</desc>
<return>object</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>domxml</extension>
<name>domxml_root</name>
<proto>object domxml_root(object doc)</proto>
<desc>Retourne l'élément racine</desc>
<return>object</return>
<params>
<param>
<paramname>doc</paramname>
<paramtype>object</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>domxml</extension>
<name>domxml_add_root</name>
<proto>resource domxml_add_root(resource doc, string name)</proto>
<desc>Ajoute une autre racine</desc>
<return>resource</return>
<params>
<param>
<paramname>doc</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>domxml</extension>
<name>domxml_dumpmem</name>
<proto>string domxml_dumpmem(resource doc)</proto>
<desc>Ecrit le document XML interne dans une chaîne</desc>
<return>string</return>
<params>
<param>
<paramname>doc</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>domxml</extension>
<name>domxml_attributes</name>
<proto>array domxml_attributes(resource node)</proto>
<desc>Retourne les attributs d'un noeud</desc>
<return>array</return>
<params>
<param>
<paramname>node</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>domxml</extension>
<name>domxml_get_attribute</name>
<proto>object domxml_get_attribute(resource node, string name)</proto>
<desc>Retourne un attribut d'un noeud</desc>
<return>object</return>
<params>
<param>
<paramname>node</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>domxml</extension>
<name>domxml_set_attribute</name>
<proto>object domxml_set_attribute(resource node, string name, string value)</proto>
<desc>Modifie un attribut</desc>
<return>object</return>
<params>
<param>
<paramname>node</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>value</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>domxml</extension>
<name>domxml_children</name>
<proto>array domxml_children(object doc|node)</proto>
<desc>Retourne les fils d'un noeud</desc>
<return>array</return>
<params>
<param>
<paramname>doc|node</paramname>
<paramtype>object</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>domxml</extension>
<name>domxml_new_child</name>
<proto>resource domxml_new_child(string name, string content)</proto>
<desc>Ajoute un nouveau fils</desc>
<return>resource</return>
<params>
<param>
<paramname>name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>content</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>domxml</extension>
<name>domxml_new_xmldoc</name>
<proto>object domxml_new_xmldoc(string version)</proto>
<desc>Crée un document XML vide</desc>
<return>object</return>
<params>
<param>
<paramname>version</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>domxml</extension>
<name>xpath_new_context</name>
<proto>object xpath_new_context(object dom_document)</proto>
<desc>Crée un nouveau contexte xpath</desc>
<return>object</return>
<params>
<param>
<paramname>dom_document</paramname>
<paramtype>object</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>domxml</extension>
<name>xpath_eval</name>
<proto>array xpath_eval(object xpath_context)</proto>
<desc>Evalue une expression xpath</desc>
<return>array</return>
<params>
<param>
<paramname>xpath_context</paramname>
<paramtype>object</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>errorfunc</extension>
<name>error_log</name>
<proto>int error_log(string message, int message_type [, string destination] [, string extra_headers])</proto>
<desc>Envoie un message d'erreur quelque part</desc>
<return>int</return>
<params>
<param>
<paramname>message</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>message_type</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>destination</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>extra_headers</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>errorfunc</extension>
<name>error_reporting</name>
<proto>int error_reporting( [int level])</proto>
<desc>Fixe le niveau de rapport d'erreurs PHP</desc>
<return>int</return>
<params>
<param>
<paramname>level</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>errorfunc</extension>
<name>restore_error_handler</name>
<proto>void restore_error_handler(void)</proto>
<desc>Réactive l'ancienne fonction de gestion des erreurs</desc>
<return>void</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>errorfunc</extension>
<name>set_error_handler</name>
<proto>string set_error_handler(string error_handler)</proto>
<desc>Choisi une fonction utilisateur comme gestionnaire d'erreurs</desc>
<return>string</return>
<params>
<param>
<paramname>error_handler</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>errorfunc</extension>
<name>trigger_error</name>
<proto>void trigger_error(string error_msg [, int error_type])</proto>
<desc>Déclenche une erreur utilisateur</desc>
<return>void</return>
<params>
<param>
<paramname>error_msg</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>error_type</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>errorfunc</extension>
<name>user_error</name>
<proto>void user_error(string error_msg [, int error_type])</proto>
<desc>Génére un message d'erreur utilisateur</desc>
<return>void</return>
<params>
<param>
<paramname>error_msg</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>error_type</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>exec</extension>
<name>escapeshellarg</name>
<proto>string escapeshellarg(string arg)</proto>
<desc>Echappe une chaîne de caractères pour qu'elle soit
    utilisée en ligne de commande.</desc>
<return>string</return>
<params>
<param>
<paramname>arg</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>exec</extension>
<name>escapeshellcmd</name>
<proto>string escapeshellcmd(string command)</proto>
<desc>Echappe les méta-caractères Shell.</desc>
<return>string</return>
<params>
<param>
<paramname>command</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>exec</extension>
<name>exec</name>
<proto>string exec(string command [, string array] [, int return_var])</proto>
<desc>Exécute un programme externe.</desc>
<return>string</return>
<params>
<param>
<paramname>command</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>array</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>return_var</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>exec</extension>
<name>passthru</name>
<proto>void passthru(string command [, int return_var])</proto>
<desc>Exécute un programme externe et affiche le résultat brut.</desc>
<return>void</return>
<params>
<param>
<paramname>command</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>return_var</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>exec</extension>
<name>system</name>
<proto>string system(string command [, int return_var])</proto>
<desc>Exécute un programme externe et affiche le résultat.</desc>
<return>string</return>
<params>
<param>
<paramname>command</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>return_var</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>fbsql</extension>
<name>fbsql_affected_rows</name>
<proto>int fbsql_affected_rows( [resource link_identifier])</proto>
<desc>Lit le nombre de ligne affectées par la dernière requête</desc>
<return>int</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>fbsql</extension>
<name>fbsql_autocommit</name>
<proto>boolean fbsql_autocommit(resource link_identifier [, boolean OnOff])</proto>
<desc>Active ou désactive la validation automatique.</desc>
<return>boolean</return>
<params>
<param>
<paramname></paramname>
<paramtype>resource
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>OnOff</paramname>
<paramtype>boolean</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>fbsql</extension>
<name>fbsql_change_user</name>
<proto>resource fbsql_change_user(string user, string password [, string database] [, resource link_identifier])</proto>
<desc>Change le nom d'utilisateur de la session active</desc>
<return>resource</return>
<params>
<param>
<paramname>user</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>password</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>database</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>fbsql</extension>
<name>fbsql_close</name>
<proto>boolean fbsql_close( [resource link_identifier])</proto>
<desc>Ferme la connexion FrontBase</desc>
<return>boolean</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>fbsql</extension>
<name>fbsql_connect</name>
<proto>resource fbsql_connect( [string hostname] [, string username] [, string password])</proto>
<desc>Ouvre une connexion à un serveur FrontBase</desc>
<return>resource</return>
<params>
<param>
<paramname>hostname</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>username</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>password</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>fbsql</extension>
<name>fbsql_create_db</name>
<proto>boolean fbsql_create_db(string database_name [, resource link_identifier])</proto>
<desc>Crée une base de données</desc>
<return>boolean</return>
<params>
<param>
<paramname>database_name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>fbsql</extension>
<name>fbsql_data_seek</name>
<proto>int fbsql_data_seek(int result_identifier, int row_number)</proto>
<desc>Déplace le pointeur interne de résultat</desc>
<return>int</return>
<params>
<param>
<paramname>result_identifier</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>row_number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>fbsql</extension>
<name>fbsql_db_query</name>
<proto>resource fbsql_db_query(string database, string query [, resource link_identifier])</proto>
<desc>Envoie une requête à la base FrontBase</desc>
<return>resource</return>
<params>
<param>
<paramname>database</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>query</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>fbsql</extension>
<name>fbsql_drop_db</name>
<proto>boolean fbsql_drop_db(string database_name [, resource link_identifier])</proto>
<desc>Supprime une base de données FrontBase</desc>
<return>boolean</return>
<params>
<param>
<paramname>database_name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>fbsql</extension>
<name>fbsql_errno</name>
<proto>int fbsql_errno( [resource link_identifier])</proto>
<desc>Retourne le code d'erreur FrontBase</desc>
<return>int</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>fbsql</extension>
<name>fbsql_error</name>
<proto>string fbsql_error( [resource link_identifier])</proto>
<desc>Retourne le message d'erreur FrontBase</desc>
<return>string</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>fbsql</extension>
<name>fbsql_fetch_array</name>
<proto>array fbsql_fetch_array(resource result [, int result_type])</proto>
<desc>Lit toute une ligne de résultat dans un tableau.</desc>
<return>array</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>result_type</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>fbsql</extension>
<name>fbsql_fetch_assoc</name>
<proto>array fbsql_fetch_assoc(resource result)</proto>
<desc>Lit toute une ligne de résultat dans un tableau associatif</desc>
<return>array</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>fbsql</extension>
<name>fbsql_fetch_field</name>
<proto>object fbsql_fetch_field(resource result [, int field_offset])</proto>
<desc>Lit des informations sur une colonne dans un résultat, et retourne un objet</desc>
<return>object</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field_offset</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>fbsql</extension>
<name>fbsql_fetch_lengths</name>
<proto>array fbsql_fetch_lengths( [resource result])</proto>
<desc>Lit la taille de chaque colonne d'un résultat</desc>
<return>array</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>fbsql</extension>
<name>fbsql_fetch_object</name>
<proto>object fbsql_fetch_object(resource result [, int result_type])</proto>
<desc>Lit une ligne de résultat sous forme d'objet</desc>
<return>object</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>result_type</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>fbsql</extension>
<name>fbsql_fetch_row</name>
<proto>array fbsql_fetch_row(resource result)</proto>
<desc>Lit une ligne de résultat sous forme de tableau numérique</desc>
<return>array</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>fbsql</extension>
<name>fbsql_field_flags</name>
<proto>string fbsql_field_flags(resource result, int field_offset)</proto>
<desc>Lit les options associé à une colonne de résultat</desc>
<return>string</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field_offset</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>fbsql</extension>
<name>fbsql_field_name</name>
<proto>string fbsql_field_name(int result, int field_index)</proto>
<desc>Lit le nom d'un champs</desc>
<return>string</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field_index</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>fbsql</extension>
<name>fbsql_field_len</name>
<proto>int fbsql_field_len(resource result, int field_offset)</proto>
<desc>Retourne la taille d'un champs</desc>
<return>int</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field_offset</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>fbsql</extension>
<name>fbsql_field_seek</name>
<proto>boolean fbsql_field_seek(int result, int field_offset)</proto>
<desc>Déplace le pointeur de résultat</desc>
<return>boolean</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field_offset</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>fbsql</extension>
<name>fbsql_field_table</name>
<proto>string fbsql_field_table(resource result, int field_offset)</proto>
<desc>Lit le nom de la table d'origine d'un champs</desc>
<return>string</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field_offset</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>fbsql</extension>
<name>fbsql_field_type</name>
<proto>string fbsql_field_type(resource result, int field_offset)</proto>
<desc>Lit le type d'une colonne</desc>
<return>string</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field_offset</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>fbsql</extension>
<name>fbsql_free_result</name>
<proto>bool fbsql_free_result(resource result)</proto>
<desc>Libère le résultat de la mémoire</desc>
<return>bool</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>fbsql</extension>
<name>fbsql_insert_id</name>
<proto>int fbsql_insert_id( [resource link_identifier])</proto>
<desc>Lit le dernier identifiant généré par une requête INSERT</desc>
<return>int</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>fbsql</extension>
<name>fbsql_list_dbs</name>
<proto>resource fbsql_list_dbs( [resource link_identifier])</proto>
<desc>Liste les bases de données</desc>
<return>resource</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>fbsql</extension>
<name>fbsql_list_fields</name>
<proto>resource fbsql_list_fields(string database_name, string table_name [, resource link_identifier])</proto>
<desc>Liste les champs d'un résultat FrontBase</desc>
<return>resource</return>
<params>
<param>
<paramname>database_name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>table_name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>fbsql</extension>
<name>fbsql_list_tables</name>
<proto>resource fbsql_list_tables(string database [, resource link_identifier])</proto>
<desc>Liste les tables dans une base de données FrontBase</desc>
<return>resource</return>
<params>
<param>
<paramname>database</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>fbsql</extension>
<name>fbsql_next_result</name>
<proto>bool fbsql_next_result(resource result_id)</proto>
<desc>Déplace le pointeur interne vers le résultat suivant</desc>
<return>bool</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>fbsql</extension>
<name>fbsql_num_fields</name>
<proto>int fbsql_num_fields(resource result)</proto>
<desc>Lit le nombre de champs dans un résultat</desc>
<return>int</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>fbsql</extension>
<name>fbsql_num_rows</name>
<proto>int fbsql_num_rows(resource result)</proto>
<desc>Lit le nombre de lignes dans un résultat</desc>
<return>int</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>fbsql</extension>
<name>fbsql_pconnect</name>
<proto>resource fbsql_pconnect( [string hostname] [, string username] [, string password])</proto>
<desc>Ouvre une connexion persistante à un serveur FrontBase</desc>
<return>resource</return>
<params>
<param>
<paramname>hostname</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>username</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>password</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>fbsql</extension>
<name>fbsql_query</name>
<proto>resource fbsql_query(string query [, resource link_identifier])</proto>
<desc>Exécute une requête sur un serveur FrontBase</desc>
<return>resource</return>
<params>
<param>
<paramname>query</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>fbsql</extension>
<name>fbsql_result</name>
<proto>mixed fbsql_result(resource result, int row [, mixed field])</proto>
<desc>Lit des données dans un résultat</desc>
<return>mixed</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>row</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field</paramname>
<paramtype>mixed</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>fbsql</extension>
<name>fbsql_select_db</name>
<proto>resource fbsql_select_db(string database_name [, resource link_identifier])</proto>
<desc>Sélectionne une base de données FrontBase</desc>
<return>resource</return>
<params>
<param>
<paramname>database_name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>fbsql</extension>
<name>fbsql_tablename</name>
<proto>string fbsql_tablename(resource result, int i)</proto>
<desc>Lit le nom de la table d'un champs</desc>
<return>string</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>i</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>fbsql</extension>
<name>fbsql_warnings</name>
<proto>boolean fbsql_warnings( [boolean OnOff])</proto>
<desc>Active ou désactive les alertes FrontBase</desc>
<return>boolean</return>
<params>
<param>
<paramname>OnOff</paramname>
<paramtype>boolean</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>fdf</extension>
<name>fdf_open</name>
<proto>resource fdf_open(string filename)</proto>
<desc>Ouvre un document FDF.</desc>
<return>resource</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>fdf</extension>
<name>fdf_close</name>
<proto>boolean fdf_close(resource fdf_document)</proto>
<desc>Ferme un document FDF.</desc>
<return>boolean</return>
<params>
<param>
<paramname>fdf_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>fdf</extension>
<name>fdf_create</name>
<proto>int fdf_create(void)</proto>
<desc>Crée un nouveau document FDF.</desc>
<return>int</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>fdf</extension>
<name>fdf_save</name>
<proto>int fdf_save(string filename)</proto>
<desc>Sauver un document FDF.</desc>
<return>int</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>fdf</extension>
<name>fdf_get_value</name>
<proto>string fdf_get_value(int fdf_document, string fieldname)</proto>
<desc>Mot la valeur d'un champs.</desc>
<return>string</return>
<params>
<param>
<paramname>fdf_document</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>fieldname</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>fdf</extension>
<name>fdf_set_value</name>
<proto>boolean fdf_set_value(int fdf_document, string fieldname, string value, int isName)</proto>
<desc>Fixe la valeur d'un champs.</desc>
<return>boolean</return>
<params>
<param>
<paramname>fdf_document</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>fieldname</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>value</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>isName</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>fdf</extension>
<name>fdf_next_field_name</name>
<proto>string fdf_next_field_name(int fdf_document, string fieldname)</proto>
<desc>Lit le nom du champs suivant.</desc>
<return>string</return>
<params>
<param>
<paramname>fdf_document</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>fieldname</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>fdf</extension>
<name>fdf_set_ap</name>
<proto>boolean fdf_set_ap(int fdf_document, string field_name, int face, string filename, int page_number)</proto>
<desc>Fixe l'apparence d'un champs.</desc>
<return>boolean</return>
<params>
<param>
<paramname>fdf_document</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field_name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>face</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>page_number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>fdf</extension>
<name>fdf_set_status</name>
<proto>boolean fdf_set_status(int fdf_document, string status)</proto>
<desc>Fixe la valeur de la clé /STATUS.</desc>
<return>boolean</return>
<params>
<param>
<paramname>fdf_document</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>status</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>fdf</extension>
<name>fdf_get_status</name>
<proto>string fdf_get_status(int fdf_document)</proto>
<desc>Lit la valeur de la clé /STATUS.</desc>
<return>string</return>
<params>
<param>
<paramname>fdf_document</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>fdf</extension>
<name>fdf_set_file</name>
<proto>boolean fdf_set_file(int fdf_document, string filename)</proto>
<desc>Fixe la valeur de la clé /F.</desc>
<return>boolean</return>
<params>
<param>
<paramname>fdf_document</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>fdf</extension>
<name>fdf_get_file</name>
<proto>string fdf_get_file(int fdf_document)</proto>
<desc>Lit la valeur de la clé /F.</desc>
<return>string</return>
<params>
<param>
<paramname>fdf_document</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>fdf</extension>
<name>fdf_set_flags</name>
<proto>boolean fdf_set_flags(int fdf_document, string fieldname, int whichFlags, int newFlags)</proto>
<desc>Modifie une option d'un champs</desc>
<return>boolean</return>
<params>
<param>
<paramname>fdf_document</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>fieldname</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>whichFlags</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>newFlags</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>fdf</extension>
<name>fdf_set_opt</name>
<proto>boolean fdf_set_opt(int fdf_document, string fieldname, int element, string str1, string str2)</proto>
<desc>Modifie une option d'un champs</desc>
<return>boolean</return>
<params>
<param>
<paramname>fdf_document</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>fieldname</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>element</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>str1</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>str2</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>fdf</extension>
<name>fdf_set_submit_form_action</name>
<proto>boolean fdf_set_submit_form_action(int fdf_document, string fieldname, int trigger, string script, int flags)</proto>
<desc>Modifie l'action javascript d'un champs</desc>
<return>boolean</return>
<params>
<param>
<paramname>fdf_document</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>fieldname</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>trigger</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>script</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>flags</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>fdf</extension>
<name>fdf_set_javascript_action</name>
<proto>boolean fdf_set_javascript_action(int fdf_document, string fieldname, int trigger, string script)</proto>
<desc>Modifie l'action javascript d'un champs</desc>
<return>boolean</return>
<params>
<param>
<paramname>fdf_document</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>fieldname</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>trigger</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>script</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>fdf</extension>
<name>fdf_set_encoding</name>
<proto>bool fdf_set_encoding(int fdf_document, string encoding)</proto>
<desc>Modifie l'encodage des caractères</desc>
<return>bool</return>
<params>
<param>
<paramname>fdf_document</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>encoding</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filepro</extension>
<name>filepro</name>
<proto>bool filepro(string directory)</proto>
<desc>Lit et vérifie un fichier.</desc>
<return>bool</return>
<params>
<param>
<paramname>directory</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filepro</extension>
<name>filepro_fieldname</name>
<proto>string filepro_fieldname(int field_number)</proto>
<desc>Retourne le nom d'un champs.</desc>
<return>string</return>
<params>
<param>
<paramname>field_number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filepro</extension>
<name>filepro_fieldtype</name>
<proto>string filepro_fieldtype(int field_number)</proto>
<desc>Retourne le type d'un champs.</desc>
<return>string</return>
<params>
<param>
<paramname>field_number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filepro</extension>
<name>filepro_fieldwidth</name>
<proto>int filepro_fieldwidth(int field_number)</proto>
<desc>Retourne la taille d'un champs.</desc>
<return>int</return>
<params>
<param>
<paramname>field_number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filepro</extension>
<name>filepro_retrieve</name>
<proto>string filepro_retrieve(int row_number, int field_number)</proto>
<desc>Retourne la valeur d'un champs.</desc>
<return>string</return>
<params>
<param>
<paramname>row_number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field_number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filepro</extension>
<name>filepro_fieldcount</name>
<proto>int filepro_fieldcount(void)</proto>
<desc>Retourne le nombre de champs dans une base filePro.</desc>
<return>int</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filepro</extension>
<name>filepro_rowcount</name>
<proto>int filepro_rowcount(void)</proto>
<desc>Retourne le nombre de champs dans une base filePro.</desc>
<return>int</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>basename</name>
<proto>string basename(string path)</proto>
<desc>Sépare le nom du fichier et le nom du dossier.</desc>
<return>string</return>
<params>
<param>
<paramname>path</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>chgrp</name>
<proto>int chgrp(string filename, mixed group)</proto>
<desc>Change le groupe possesseur du fichier.</desc>
<return>int</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>group</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>chmod</name>
<proto>int chmod(string filename, int mode)</proto>
<desc>Change le mode du fichier.</desc>
<return>int</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>chown</name>
<proto>int chown(string filename, mixed user)</proto>
<desc>Change le groupe propriétaire du fichier.</desc>
<return>int</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>user</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>clearstatcache</name>
<proto>void clearstatcache(void)</proto>
<desc>Efface le cache de stat</desc>
<return>void</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>copy</name>
<proto>int copy(string source, string dest)</proto>
<desc>Copie un fichier.</desc>
<return>int</return>
<params>
<param>
<paramname>source</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>dest</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>delete</name>
<proto>void delete(string file)</proto>
<desc>Effacer</desc>
<return>void</return>
<params>
<param>
<paramname>file</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>dirname</name>
<proto>string dirname(string path)</proto>
<desc>Renvoie le nom du dossier.</desc>
<return>string</return>
<params>
<param>
<paramname>path</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>diskfreespace</name>
<proto>float diskfreespace(string directory)</proto>
<desc>Renvoie l'espace disque disponible dans le répertoire.</desc>
<return>float</return>
<params>
<param>
<paramname>directory</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>disk_total_space</name>
<proto>float disk_total_space(string directory)</proto>
<desc>Retourne la taille d'un dossier</desc>
<return>float</return>
<params>
<param>
<paramname>directory</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>fclose</name>
<proto>bool fclose(resource fp)</proto>
<desc>Ferme un fichier.</desc>
<return>bool</return>
<params>
<param>
<paramname>fp</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>feof</name>
<proto>int feof(resource fp)</proto>
<desc>Teste la fin du fichier.</desc>
<return>int</return>
<params>
<param>
<paramname>fp</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>fflush</name>
<proto>int fflush(resource fp)</proto>
<desc>Envoi tout le contenu généré dans un fichier</desc>
<return>int</return>
<params>
<param>
<paramname>fp</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>fgetc</name>
<proto>string fgetc(resource fp)</proto>
<desc>Renvoie le caractère que pointe le pointeur du fichier.</desc>
<return>string</return>
<params>
<param>
<paramname>fp</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>fgetcsv</name>
<proto>array fgetcsv(resource fp, int length [, string delimiter])</proto>
<desc>Renvoie la ligne courante et cherche les champs CSV</desc>
<return>array</return>
<params>
<param>
<paramname>fp</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>length</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>delimiter</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>fgets</name>
<proto>string fgets(int fp, int length)</proto>
<desc>Renvoie la ligne courante sur laquelle se trouve le pointeur du fichier.</desc>
<return>string</return>
<params>
<param>
<paramname>fp</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>length</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>fgetss</name>
<proto>string fgetss(int fp, int length [, string allowable_tags])</proto>
<desc>Renvoie la ligne courante sur laquelle se trouve le pointeur du fichier et
    élimine les balises HTML</desc>
<return>string</return>
<params>
<param>
<paramname>fp</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>length</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>allowable_tags</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>file</name>
<proto>array file(string filename [, int use_include_path])</proto>
<desc>Lit le fichier et renvoie le résultat dans un tableau.</desc>
<return>array</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>use_include_path</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>file_exists</name>
<proto>int file_exists(string filename)</proto>
<desc>Vérifie si un fichier existe.</desc>
<return>int</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>fileatime</name>
<proto>int fileatime(string filename)</proto>
<desc>Renvoie la date à laquelle le fichier a été
    accédé pour la dernière fois.</desc>
<return>int</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>filectime</name>
<proto>int filectime(string filename)</proto>
<desc>Renvoie l'heure à laquelle l'inode a été
    accédé pour la dernière fois.</desc>
<return>int</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>filegroup</name>
<proto>int filegroup(string filename)</proto>
<desc>Lire le nom du groupe</desc>
<return>int</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>fileinode</name>
<proto>int fileinode(string filename)</proto>
<desc>Renvoie le numéro d'inode du fichier.</desc>
<return>int</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>filemtime</name>
<proto>int filemtime(string filename)</proto>
<desc>Renvoie la date de dernière modification du fichier.</desc>
<return>int</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>fileowner</name>
<proto>int fileowner(string filename)</proto>
<desc>Renvoie le nom du propriétaire du fichier.</desc>
<return>int</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>fileperms</name>
<proto>int fileperms(string filename)</proto>
<desc>Renvoie les permissions affectées au fichier.</desc>
<return>int</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>filesize</name>
<proto>int filesize(string filename)</proto>
<desc>Renvoie la taille du fichier.</desc>
<return>int</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>filetype</name>
<proto>string filetype(string filename)</proto>
<desc>Retourne le type de fichier</desc>
<return>string</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>flock</name>
<proto>boolean flock(int fp, int operation)</proto>
<desc>Verrouille le fichier.</desc>
<return>boolean</return>
<params>
<param>
<paramname>fp</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>operation</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>fopen</name>
<proto>int fopen(string filename, string mode [, int use_include_path])</proto>
<desc>Ouverture d'un fichier ou d'une URL.</desc>
<return>int</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>use_include_path</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>fpassthru</name>
<proto>int fpassthru(int fp)</proto>
<desc>Affiche la partie du fichier située après le pointeur du fichier.</desc>
<return>int</return>
<params>
<param>
<paramname>fp</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>fputs</name>
<proto>int fputs(int fp, string str [, int length])</proto>
<desc>Ecrit dans un fichier.</desc>
<return>int</return>
<params>
<param>
<paramname>fp</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>length</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>fread</name>
<proto>string fread(int fp, int length)</proto>
<desc>Lecture du fichier en mode binaire.</desc>
<return>string</return>
<params>
<param>
<paramname>fp</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>length</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>fscanf</name>
<proto>mixed fscanf(int handle, string format [, string var1])</proto>
<desc>Analyse un fichier en fonction d'un format</desc>
<return>mixed</return>
<params>
<param>
<paramname>handle</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>format</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>var1</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>fseek</name>
<proto>int fseek(int fp, int offset)</proto>
<desc>Modifie le pointeur de fichier.</desc>
<return>int</return>
<params>
<param>
<paramname>fp</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>offset</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>fstat</name>
<proto>array fstat(int fp)</proto>
<desc>Lit les informations sur un fichier à partir d'un pointeur de fichier</desc>
<return>array</return>
<params>
<param>
<paramname>fp</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>ftell</name>
<proto>int ftell(int fp)</proto>
<desc>Renvoie la position du pointeur du fichier.</desc>
<return>int</return>
<params>
<param>
<paramname>fp</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>ftruncate</name>
<proto>int ftruncate(int fp, int size)</proto>
<desc>Tronque un fichier.</desc>
<return>int</return>
<params>
<param>
<paramname>fp</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>size</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>fwrite</name>
<proto>int fwrite(int fp, string string [, int length])</proto>
<desc>Ecriture du fichier en mode binaire.</desc>
<return>int</return>
<params>
<param>
<paramname>fp</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>string</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>length</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>set_file_buffer</name>
<proto>int set_file_buffer(int fp, int buffer)</proto>
<desc>Fixe la bufferisation de fichier</desc>
<return>int</return>
<params>
<param>
<paramname>fp</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>buffer</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>is_dir</name>
<proto>boolean is_dir(string filename)</proto>
<desc>Indique si le nom de fichier est un dossier.</desc>
<return>boolean</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>is_executable</name>
<proto>boolean is_executable(string filename)</proto>
<desc>Indique si le fichier est exécutable.</desc>
<return>boolean</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>is_file</name>
<proto>boolean is_file(string filename)</proto>
<desc>Indique si le fichier est un véritable fichier.</desc>
<return>boolean</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>is_link</name>
<proto>boolean is_link(string filename)</proto>
<desc>Indique si le fichier est un lien symbolique.</desc>
<return>boolean</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>is_readable</name>
<proto>boolean is_readable(string filename)</proto>
<desc>Indique un fichier est autorisé en lecture</desc>
<return>boolean</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>is_writable</name>
<proto>boolean is_writable(string filename)</proto>
<desc>Indique si un fichier est autorisé en écriture.</desc>
<return>boolean</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>is_writeable</name>
<proto>boolean is_writeable(string filename)</proto>
<desc>Indique si un fichier est autorisé en écriture.</desc>
<return>boolean</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>is_uploaded_file</name>
<proto>boolean is_uploaded_file(string filename)</proto>
<desc>Indique si le fichier a été téléchargé
    par HTTP POST</desc>
<return>boolean</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>link</name>
<proto>int link(string target, string link)</proto>
<desc>Crée un lien.</desc>
<return>int</return>
<params>
<param>
<paramname>target</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>link</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>linkinfo</name>
<proto>int linkinfo(string path)</proto>
<desc>Renvoie les informations à propos d'un lien.</desc>
<return>int</return>
<params>
<param>
<paramname>path</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>mkdir</name>
<proto>int mkdir(string pathname, int mode)</proto>
<desc>Crée un dossier.</desc>
<return>int</return>
<params>
<param>
<paramname>pathname</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>move_uploaded_file</name>
<proto>boolean move_uploaded_file(string filename, string destination)</proto>
<desc>Déplace un fichier téléchargé.</desc>
<return>boolean</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>destination</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>pathinfo</name>
<proto>array pathinfo(string path)</proto>
<desc>Retourne des informations sur un chemin système</desc>
<return>array</return>
<params>
<param>
<paramname>path</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>pclose</name>
<proto>int pclose(int fp)</proto>
<desc>Ferme un processus de pointeur de fichier.</desc>
<return>int</return>
<params>
<param>
<paramname>fp</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>popen</name>
<proto>int popen(string commet, string mode)</proto>
<desc>Crée un processus de pointeur de fichier.</desc>
<return>int</return>
<params>
<param>
<paramname>commet</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>readfile</name>
<proto>int readfile(string filename [, int use_include_path])</proto>
<desc>Affiche un fichier.</desc>
<return>int</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>use_include_path</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>readlink</name>
<proto>string readlink(string path)</proto>
<desc>Renvoie le nom du fichier vers lequel pointe un lien symbolique.</desc>
<return>string</return>
<params>
<param>
<paramname>path</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>rename</name>
<proto>int rename(string oldname, string newname)</proto>
<desc>Renomme un fichier.</desc>
<return>int</return>
<params>
<param>
<paramname>oldname</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>newname</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>rewind</name>
<proto>int rewind(int fp)</proto>
<desc>Replace le pointeur de fichier au début.</desc>
<return>int</return>
<params>
<param>
<paramname>fp</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>rmdir</name>
<proto>int rmdir(string dirname)</proto>
<desc>Efface un dossier.</desc>
<return>int</return>
<params>
<param>
<paramname>dirname</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>stat</name>
<proto>array stat(string filename)</proto>
<desc>Renvoie les informations à propos d'un fichier.</desc>
<return>array</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>lstat</name>
<proto>array lstat(string filename)</proto>
<desc>Renvoie les informations à propos d'un fichier ou d'un lien symbolique.</desc>
<return>array</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>realpath</name>
<proto>string realpath(string path)</proto>
<desc>Retourne le chemin canonique absolu.</desc>
<return>string</return>
<params>
<param>
<paramname>path</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>symlink</name>
<proto>int symlink(string target, string link)</proto>
<desc>Crée un lien symbolique.</desc>
<return>int</return>
<params>
<param>
<paramname>target</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>link</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>tempnam</name>
<proto>string tempnam(string dir, string prefix)</proto>
<desc>Crée un fichier avec un nom unique.</desc>
<return>string</return>
<params>
<param>
<paramname>dir</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>prefix</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>tmpfile</name>
<proto>int tmpfile(void)</proto>
<desc>Crée un fichier temporaire</desc>
<return>int</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>touch</name>
<proto>int touch(string filename, int time)</proto>
<desc>Affecte une nouvelle date de modification à un fichier.</desc>
<return>int</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>time</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>umask</name>
<proto>int umask(int mask)</proto>
<desc>Change le "umask" courant.</desc>
<return>int</return>
<params>
<param>
<paramname>mask</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>filesystem</extension>
<name>unlink</name>
<proto>int unlink(string filename)</proto>
<desc>Efface un fichier.</desc>
<return>int</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ftp</extension>
<name>ftp_connect</name>
<proto>resource ftp_connect(string host [, int port])</proto>
<desc>Ouvre une connexion FTP</desc>
<return>resource</return>
<params>
<param>
<paramname>host</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int port</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ftp</extension>
<name>ftp_login</name>
<proto>bool ftp_login(resource ftp_stream, string username, string password)</proto>
<desc>Authentification d'une connexion FTP</desc>
<return>bool</return>
<params>
<param>
<paramname>ftp_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>username</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>password</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ftp</extension>
<name>ftp_pwd</name>
<proto>string ftp_pwd(resource ftp_stream)</proto>
<desc>Retourne le nom du dossier courant.</desc>
<return>string</return>
<params>
<param>
<paramname>ftp_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ftp</extension>
<name>ftp_cdup</name>
<proto>bool ftp_cdup(resource ftp_stream)</proto>
<desc>Change de dossier, et passe au dossier parent.</desc>
<return>bool</return>
<params>
<param>
<paramname>ftp_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ftp</extension>
<name>ftp_chdir</name>
<proto>bool ftp_chdir(resource ftp_stream, string directory)</proto>
<desc>Change le dossier courant.</desc>
<return>bool</return>
<params>
<param>
<paramname>ftp_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>directory</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ftp</extension>
<name>ftp_mkdir</name>
<proto>string ftp_mkdir(resource ftp_stream, string directory)</proto>
<desc>Crée un dossier.</desc>
<return>string</return>
<params>
<param>
<paramname>ftp_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>directory</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ftp</extension>
<name>ftp_rmdir</name>
<proto>bool ftp_rmdir(resource ftp_stream, string directory)</proto>
<desc>Efface un dossier.</desc>
<return>bool</return>
<params>
<param>
<paramname>ftp_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>directory</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ftp</extension>
<name>ftp_nlist</name>
<proto>array ftp_nlist(resource ftp_stream, string directory)</proto>
<desc>Retourne la liste des fichiers dans un dossier.</desc>
<return>array</return>
<params>
<param>
<paramname>ftp_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>directory</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ftp</extension>
<name>ftp_rawlist</name>
<proto>array ftp_rawlist(resource ftp_stream, string directory)</proto>
<desc>Fait une liste détaillée de fichiers dans un dossier.</desc>
<return>array</return>
<params>
<param>
<paramname>ftp_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>directory</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ftp</extension>
<name>ftp_systype</name>
<proto>string ftp_systype(resource ftp_stream)</proto>
<desc>Retourne un identifiant de type de serveur FTP.</desc>
<return>string</return>
<params>
<param>
<paramname>ftp_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ftp</extension>
<name>ftp_pasv</name>
<proto>bool ftp_pasv(resource ftp_stream, int pasv)</proto>
<desc>Active ou désactive le mode passif.</desc>
<return>bool</return>
<params>
<param>
<paramname>ftp_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>pasv</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ftp</extension>
<name>ftp_get</name>
<proto>bool ftp_get(resource ftp_stream, string local_file, string remote_file, int mode)</proto>
<desc>Télécharge un fichier depuis un serveur FTP.</desc>
<return>bool</return>
<params>
<param>
<paramname>ftp_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>local_file</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>remote_file</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ftp</extension>
<name>ftp_fget</name>
<proto>bool ftp_fget(resource ftp_stream, int fp, string remote_file, int mode)</proto>
<desc>Télécharge un fichier depuis un serveur FTP et le sauve
    dans un fichier déjà ouvert.</desc>
<return>bool</return>
<params>
<param>
<paramname>ftp_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>fp</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>remote_file</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ftp</extension>
<name>ftp_put</name>
<proto>bool ftp_put(resource ftp_stream, string remote_file, string local_file, int mode)</proto>
<desc>Charge un fichier sur un serveur FTP.</desc>
<return>bool</return>
<params>
<param>
<paramname>ftp_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>remote_file</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>local_file</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ftp</extension>
<name>ftp_fput</name>
<proto>bool ftp_fput(resource ftp_stream, string remote_file, int fp, int mode)</proto>
<desc>Charge un fichier ouvert sur un serveur FTP.</desc>
<return>bool</return>
<params>
<param>
<paramname>ftp_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>remote_file</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>fp</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ftp</extension>
<name>ftp_size</name>
<proto>int ftp_size(resource ftp_stream, string remote_file)</proto>
<desc>Retourne la taille d'un fichier.</desc>
<return>int</return>
<params>
<param>
<paramname>ftp_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>remote_file</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ftp</extension>
<name>ftp_mdtm</name>
<proto>int ftp_mdtm(resource ftp_stream, string remote_file)</proto>
<desc>Retourne la date de dernière modification d'un fichier sur
    un serveur FTP.</desc>
<return>int</return>
<params>
<param>
<paramname>ftp_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>remote_file</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ftp</extension>
<name>ftp_rename</name>
<proto>bool ftp_rename(resource ftp_stream, string from, string to)</proto>
<desc>Renomme un fichier sur un serveur FTP.</desc>
<return>bool</return>
<params>
<param>
<paramname>ftp_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>from</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>to</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ftp</extension>
<name>ftp_delete</name>
<proto>bool ftp_delete(resource ftp_stream, string path)</proto>
<desc>Efface un fichier sur un serveur FTP.</desc>
<return>bool</return>
<params>
<param>
<paramname>ftp_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>path</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ftp</extension>
<name>ftp_site</name>
<proto>bool ftp_site(resource ftp_stream, string cmd)</proto>
<desc>Envoie la commande SITE au serveur.</desc>
<return>bool</return>
<params>
<param>
<paramname>ftp_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>cmd</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ftp</extension>
<name>ftp_quit</name>
<proto>bool ftp_quit(resource ftp_stream)</proto>
<desc>Ferme une connexion FTP.</desc>
<return>bool</return>
<params>
<param>
<paramname>ftp_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>funchand</extension>
<name>call_user_func_array</name>
<proto>mixed call_user_func_array (string function_name [, array paramarr])</proto>
<desc>Appelle une fonction utilisateur avec les paramètres rassemblés en tableau</desc>
<return>mixed
</return>
<params>
<param>
<paramname></paramname>
<paramtype>string
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>paramarr</paramname>
<paramtype>array</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>funchand</extension>
<name>call_user_func</name>
<proto>mixed call_user_func (string function_name [, mixed parameter] [, mixed ...])</proto>
<desc>Appelle une fonction utilisateur</desc>
<return>mixed
</return>
<params>
<param>
<paramname></paramname>
<paramtype>string
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>parameter</paramname>
<paramtype>mixed</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>...</paramname>
<paramtype>mixed</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>funchand</extension>
<name>create_function</name>
<proto>string create_function(string args, string code)</proto>
<desc>Crée une fonction anonyme (style lambda)</desc>
<return>string</return>
<params>
<param>
<paramname>args</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>code</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>funchand</extension>
<name>func_get_arg</name>
<proto>mixed func_get_arg(int arg_num)</proto>
<desc>Retourne un élément de la liste des arguments</desc>
<return>mixed</return>
<params>
<param>
<paramname>arg_num</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>funchand</extension>
<name>func_get_args</name>
<proto>array func_get_args(void)</proto>
<desc>Retourne les arguments d'une fonction sous forme de tableau</desc>
<return>array</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>funchand</extension>
<name>func_num_args</name>
<proto>int func_num_args(void)</proto>
<desc>Retourne le nombre d'arguments passé à la fonction</desc>
<return>int</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>funchand</extension>
<name>function_exists</name>
<proto>boolean function_exists(string function_name)</proto>
<desc>Indique si une fonction est définie.</desc>
<return>boolean</return>
<params>
<param>
<paramname>function_name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>funchand</extension>
<name>get_defined_functions</name>
<proto>array get_defined_functions(void)</proto>
<desc>Liste toutes les fonctions définies</desc>
<return>array</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>funchand</extension>
<name>register_shutdown_function</name>
<proto>int register_shutdown_function (string func)</proto>
<desc>Enregistre une fonction pour exécution à l'extinction</desc>
<return>int
</return>
<params>
<param>
<paramname>func</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>funchand</extension>
<name>register_tick_function</name>
<proto>void register_tick_function (string func [, mixed arg])</proto>
<desc>Enregistre une fonction exécutée à chaque tick</desc>
<return>void
</return>
<params>
<param>
<paramname>func</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>mixed arg</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>funchand</extension>
<name>unregister_tick_function</name>
<proto>void unregister_tick_function (string func [, mixed arg])</proto>
<desc>Annule la fonction exécutée à chaque tick</desc>
<return>void
</return>
<params>
<param>
<paramname>func</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>mixed arg</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>gettext</extension>
<name>bindtextdomain</name>
<proto>string bindtextdomain(string domain, string directory)</proto>
<desc>Fixe le chemin d'un domaine.</desc>
<return>string</return>
<params>
<param>
<paramname>domain</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>directory</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>gettext</extension>
<name>dcgettext</name>
<proto>string dcgettext(string domain, string message, int category)</proto>
<desc>Remplace le domaine lors d'une recherche.</desc>
<return>string</return>
<params>
<param>
<paramname>domain</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>message</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>category</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>gettext</extension>
<name>dgettext</name>
<proto>string dgettext(string domain, string message)</proto>
<desc>Remplace le domaine courant.</desc>
<return>string</return>
<params>
<param>
<paramname>domain</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>message</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>gettext</extension>
<name>gettext</name>
<proto>)</proto>
<desc>Recherche un message dans le domaine courant.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>gettext</extension>
<name>textdomain</name>
<proto>string textdomain(string text_domain)</proto>
<desc>Fixe le domaine par défaut.</desc>
<return>string</return>
<params>
<param>
<paramname>text_domain</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>gmp</extension>
<name>gmp_init</name>
<proto>resource gmp_init(mixed number)</proto>
<desc>Crée un nombre GMP</desc>
<return>resource</return>
<params>
<param>
<paramname>number</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>gmp</extension>
<name>gmp_intval</name>
<proto>int gmp_intval(resource gmpnumber)</proto>
<desc>Convertit un nombre GMP en entier.</desc>
<return>int</return>
<params>
<param>
<paramname>gmpnumber</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>gmp</extension>
<name>gmp_strval</name>
<proto>string gmp_strval(resource gmpnumber [, int base])</proto>
<desc>Convertit un nombre GMP en chaîne</desc>
<return>string</return>
<params>
<param>
<paramname>gmpnumber</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>base</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>gmp</extension>
<name>gmp_add</name>
<proto>resource gmp_add(resource a, resource b)</proto>
<desc>Addition de 2 nombres GMP</desc>
<return>resource</return>
<params>
<param>
<paramname>a</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>b</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>gmp</extension>
<name>gmp_sub</name>
<proto>resource gmp_sub(resource a, resource b)</proto>
<desc>Soustraction de 2 nombres GMP</desc>
<return>resource</return>
<params>
<param>
<paramname>a</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>b</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>gmp</extension>
<name>gmp_mul</name>
<proto>resource gmp_mul(resource a, resource b)</proto>
<desc>Multiplication de 2 nombres GMP</desc>
<return>resource</return>
<params>
<param>
<paramname>a</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>b</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>gmp</extension>
<name>gmp_div_q</name>
<proto>resource gmp_div_q(resource a, resource b [, int round])</proto>
<desc>Divisions de 2 nombres GMP</desc>
<return>resource</return>
<params>
<param>
<paramname>a</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>b</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>round</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>gmp</extension>
<name>gmp_div_r</name>
<proto>resource gmp_div_r(resource n, resource d [, int round])</proto>
<desc>Reste de la division de deux nombres GMP</desc>
<return>resource</return>
<params>
<param>
<paramname>n</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>d</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>round</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>gmp</extension>
<name>gmp_div_qr</name>
<proto>array gmp_div_qr(resource n, resource d [, int round])</proto>
<desc>Divise deux nombres GMP</desc>
<return>array</return>
<params>
<param>
<paramname>n</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>d</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>round</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>gmp</extension>
<name>gmp_div</name>
<proto>resource gmp_div(resource a, resource b)</proto>
<desc>Divise deux nombres GMP</desc>
<return>resource</return>
<params>
<param>
<paramname>a</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>b</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>gmp</extension>
<name>gmp_mod</name>
<proto>resource gmp_mod(resource n, resource d)</proto>
<desc>Modulo GMP</desc>
<return>resource</return>
<params>
<param>
<paramname>n</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>d</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>gmp</extension>
<name>gmp_divexact</name>
<proto>resource gmp_divexact(resource n, resource d)</proto>
<desc>Division exacte de nombres GMP</desc>
<return>resource</return>
<params>
<param>
<paramname>n</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>d</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>gmp</extension>
<name>gmp_cmp</name>
<proto>int gmp_cmp(resource a, resource b)</proto>
<desc>Compare des nombres GMP</desc>
<return>int</return>
<params>
<param>
<paramname>a</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>b</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>gmp</extension>
<name>gmp_neg</name>
<proto>resource gmp_neg(resource a)</proto>
<desc>Opposé de nombre GMP</desc>
<return>resource</return>
<params>
<param>
<paramname>a</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>gmp</extension>
<name>gmp_abs</name>
<proto>resource gmp_abs(resource a)</proto>
<desc>Valeur absolue GMP</desc>
<return>resource</return>
<params>
<param>
<paramname>a</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>gmp</extension>
<name>gmp_sign</name>
<proto>int gmp_sign(resource a)</proto>
<desc>Signe du nombre GMP</desc>
<return>int</return>
<params>
<param>
<paramname>a</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>gmp</extension>
<name>gmp_fact</name>
<proto>resource gmp_fact(int a)</proto>
<desc>Factorielle GMP</desc>
<return>resource</return>
<params>
<param>
<paramname>a</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>gmp</extension>
<name>gmp_sqrt</name>
<proto>resource gmp_sqrt(resource a)</proto>
<desc>Racine carrée GMP</desc>
<return>resource</return>
<params>
<param>
<paramname>a</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>gmp</extension>
<name>gmp_sqrtrm</name>
<proto>array gmp_sqrtrm(resource a)</proto>
<desc>Racine carrée avec reste GMP</desc>
<return>array</return>
<params>
<param>
<paramname>a</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>gmp</extension>
<name>gmp_perfect_square</name>
<proto>bool gmp_perfect_square(resource a)</proto>
<desc>Carré parfait GMP</desc>
<return>bool</return>
<params>
<param>
<paramname>a</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>gmp</extension>
<name>gmp_pow</name>
<proto>resource gmp_pow(resource base, int exp)</proto>
<desc>Puissance</desc>
<return>resource</return>
<params>
<param>
<paramname>base</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>exp</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>gmp</extension>
<name>gmp_powm</name>
<proto>resource gmp_powm(resource base, resource exp, resource mod)</proto>
<desc>Puissance et modulo</desc>
<return>resource</return>
<params>
<param>
<paramname>base</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>exp</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mod</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>gmp</extension>
<name>gmp_prob_prime</name>
<proto>int gmp_prob_prime(resource a [, int reps])</proto>
<desc>Nombre GMP probablement premier</desc>
<return>int</return>
<params>
<param>
<paramname>a</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int reps</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>gmp</extension>
<name>gmp_gcd</name>
<proto>resource gmp_gcd(resource a, resource b)</proto>
<desc>PGCD</desc>
<return>resource</return>
<params>
<param>
<paramname>a</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>b</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>gmp</extension>
<name>gmp_gcdext</name>
<proto>array gmp_gcdext(resource a, resource b)</proto>
<desc>PGCD étendu</desc>
<return>array</return>
<params>
<param>
<paramname>a</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>b</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>gmp</extension>
<name>gmp_invert</name>
<proto>resource gmp_invert(resource a, resource b)</proto>
<desc>Inverse modulo</desc>
<return>resource</return>
<params>
<param>
<paramname>a</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>b</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>gmp</extension>
<name>gmp_legendre</name>
<proto>int gmp_legendre(resource a, resource p)</proto>
<desc>Symbole de Legendre</desc>
<return>int</return>
<params>
<param>
<paramname>a</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>p</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>gmp</extension>
<name>gmp_jacobi</name>
<proto>int gmp_jacobi(resource a, resource p)</proto>
<desc>Symbole de Jacobi</desc>
<return>int</return>
<params>
<param>
<paramname>a</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>p</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>gmp</extension>
<name>gmp_random</name>
<proto>resource gmp_random(int limiter)</proto>
<desc>Nombre GMP aléatoire</desc>
<return>resource</return>
<params>
<param>
<paramname>limiter</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>gmp</extension>
<name>gmp_and</name>
<proto>resource gmp_and(resource a, resource b)</proto>
<desc>ET logique</desc>
<return>resource</return>
<params>
<param>
<paramname>a</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>b</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>gmp</extension>
<name>gmp_or</name>
<proto>resource gmp_or(resource a, resource b)</proto>
<desc>OU logique</desc>
<return>resource</return>
<params>
<param>
<paramname>a</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>b</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>gmp</extension>
<name>gmp_xor</name>
<proto>resource gmp_xor(resource a, resource b)</proto>
<desc>OU exclusif logique</desc>
<return>resource</return>
<params>
<param>
<paramname>a</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>b</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>gmp</extension>
<name>gmp_setbit</name>
<proto>resource gmp_setbit(resource &amp;a, int index [, bool set_clear])</proto>
<desc>Modifie un bit</desc>
<return>resource</return>
<params>
<param>
<paramname>&amp;a</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>index</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>bool set_clear</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>gmp</extension>
<name>gmp_clrbit</name>
<proto>resource gmp_clrbit(resource &amp;a, int index)</proto>
<desc>Annule un bit</desc>
<return>resource</return>
<params>
<param>
<paramname>&amp;a</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>index</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>gmp</extension>
<name>gmp_scan0</name>
<proto>int gmp_scan0(resource a, int start)</proto>
<desc>Recherche 0</desc>
<return>int</return>
<params>
<param>
<paramname>a</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>start</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>gmp</extension>
<name>gmp_scan1</name>
<proto>int gmp_scan1(resource a, int start)</proto>
<desc>Recherche 1</desc>
<return>int</return>
<params>
<param>
<paramname>a</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>start</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>gmp</extension>
<name>gmp_popcount</name>
<proto>int gmp_popcount(resource a)</proto>
<desc>Compte de population</desc>
<return>int</return>
<params>
<param>
<paramname>a</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>gmp</extension>
<name>gmp_hamdist</name>
<proto>int gmp_hamdist(resource a, resource b)</proto>
<desc>Distance de Hamming</desc>
<return>int</return>
<params>
<param>
<paramname>a</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>b</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>http</extension>
<name>header</name>
<proto>int header(string string)</proto>
<desc>Envoie une en-tête HTTP.</desc>
<return>int</return>
<params>
<param>
<paramname>string</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>http</extension>
<name>headers_sent</name>
<proto>boolean headers_sent(void)</proto>
<desc>Indique si les entêtes HTTP ont déjà été
      envoyés</desc>
<return>boolean</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>http</extension>
<name>setcookie</name>
<proto>int setcookie(string name [, string value] [, int expire] [, string path] [, string domain] [, int secure])</proto>
<desc>Envoie un cookie</desc>
<return>int</return>
<params>
<param>
<paramname>name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>value</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>expire</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>path</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>domain</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>secure</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_Array2Objrec</name>
<proto>string hw_array2objrec(array object_array)</proto>
<desc>Convertit un tableau en un objet.</desc>
<return>string</return>
<params>
<param>
<paramname>object_array</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_Children</name>
<proto>array hw_children(resource connection, resource objectID)</proto>
<desc>Liste des object ids des objets fils.</desc>
<return>array</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>objectID</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_ChildrenObj</name>
<proto>array hw_childrenobj(resource connection, resource objectID)</proto>
<desc>Liste des object records des objets fils.</desc>
<return>array</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>objectID</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_Close</name>
<proto>int hw_close(resource connection)</proto>
<desc>Ferme la connexion Hyperwave.</desc>
<return>int</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_Connect</name>
<proto>resource hw_connect(string host, int port, string username, string password)</proto>
<desc>Ouvre une connexion Hyperwave.</desc>
<return>resource</return>
<params>
<param>
<paramname>host</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>port</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>username</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>password</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_Cp</name>
<proto>resource hw_cp(resource connection, array object_id_array, int destination_id)</proto>
<desc>Copie des objets.</desc>
<return>resource</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>object_id_array</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>destination_id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_Deleteobject</name>
<proto>int hw_deleteobject(resource connection, int object_to_delete)</proto>
<desc>Efface des objets.</desc>
<return>int</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>object_to_delete</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_DocByAnchor</name>
<proto>resource hw_docbyanchor(resource connection, int anchorID)</proto>
<desc>Identifiant d'objet de l'objet dans l'ancrage.</desc>
<return>resource</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>anchorID</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_DocByAnchorObj</name>
<proto>string hw_docbyanchorobj(resource connection, int anchorID)</proto>
<desc>Attributs de l'objet dans l'ancrage.</desc>
<return>string</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>anchorID</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_DocumentAttributes</name>
<proto>string hw_documentattributes(int hw_document)</proto>
<desc>Object record de hw_document.</desc>
<return>string</return>
<params>
<param>
<paramname>hw_document</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_DocumentBodyTag</name>
<proto>string hw_documentbodytag(int hw_document)</proto>
<desc>Balise de corps d'un document.</desc>
<return>string</return>
<params>
<param>
<paramname>hw_document</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_DocumentContent</name>
<proto>string hw_documentcontent(int hw_document)</proto>
<desc>Contenu d'un document.</desc>
<return>string</return>
<params>
<param>
<paramname>hw_document</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_DocumentSetContent</name>
<proto>string hw_documentsetcontent(int hw_document, string content)</proto>
<desc>Modifie/remplace le contenu d'un document.</desc>
<return>string</return>
<params>
<param>
<paramname>hw_document</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>content</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_DocumentSize</name>
<proto>int hw_documentsize(int hw_document)</proto>
<desc>Taille d'un document.</desc>
<return>int</return>
<params>
<param>
<paramname>hw_document</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_ErrorMsg</name>
<proto>string hw_errormsg(resource connection)</proto>
<desc>Retourne un message d'erreur.</desc>
<return>string</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_EditText</name>
<proto>int hw_edittext(resource connection, int hw_document)</proto>
<desc>Retourne un document texte.</desc>
<return>int</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>hw_document</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_Error</name>
<proto>int hw_error(resource connection)</proto>
<desc>Retourne le code d'erreur.</desc>
<return>int</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_Free_Document</name>
<proto>int hw_free_document(resource hw_document)</proto>
<desc>Détruit un document.</desc>
<return>int</return>
<params>
<param>
<paramname>hw_document</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_GetParents</name>
<proto>array hw_getparents(resource connection, resource objectID)</proto>
<desc>Identifiant d'objet des parents.</desc>
<return>array</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>objectID</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_GetParentsObj</name>
<proto>array hw_getparentsobj(resource connection, resource objectID)</proto>
<desc>Attributs des parents.</desc>
<return>array</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>objectID</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_GetChildColl</name>
<proto>array hw_getchildcoll(resource connection, resource objectID)</proto>
<desc>Identifiant d'objet des groupes fils.</desc>
<return>array</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>objectID</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_GetChildCollObj</name>
<proto>array hw_getchildcollobj(resource connection, resource objectID)</proto>
<desc>object records d'un groupe d'enfants.</desc>
<return>array</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>objectID</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_GetRemote</name>
<proto>resource hw_getremote(resource connection, resource objectID)</proto>
<desc>Retourne un document distant.</desc>
<return>resource</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>objectID</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_GetRemoteChildren</name>
<proto>resource hw_getremotechildren(resource connection, string object record)</proto>
<desc>Retourne les fils d'un document distant.</desc>
<return>resource</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>object</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_GetSrcByDestObj</name>
<proto>array hw_getsrcbydestobj(resource connection, resource objectID)</proto>
<desc>Retourne les ancrages qui pointent sur un objet.</desc>
<return>array</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>objectID</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_GetObject</name>
<proto>array hw_getobject(resource connection, [int|array] objectID, string query)</proto>
<desc>Attributs d'un objet.</desc>
<return>array</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>objectID</paramname>
<paramtype>[int|array]</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>query</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_GetAndLock</name>
<proto>string hw_getandlock(resource connection, resource objectID)</proto>
<desc>Retourne les attributs, et verrouille l'objet.</desc>
<return>string</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>objectID</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_GetText</name>
<proto>int hw_gettext(resource connection, resource objectID [, mixed rootID/prefix])</proto>
<desc>Retourne un document texte.</desc>
<return>int</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>objectID</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>rootID prefix</paramname>
<paramtype>mixed</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_GetObjectByQuery</name>
<proto>array hw_getobjectbyquery(resource connection, string query, int max_hits)</proto>
<desc>Recherche un objet.</desc>
<return>array</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>query</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>max_hits</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_GetObjectByQueryObj</name>
<proto>array hw_getobjectbyqueryobj(resource connection, string query, int max_hits)</proto>
<desc>Recherche un objet.</desc>
<return>array</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>query</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>max_hits</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_GetObjectByQueryColl</name>
<proto>array hw_getobjectbyquerycoll(resource connection, resource objectID, string query, int max_hits)</proto>
<desc>Recherche un objet dans un groupe.</desc>
<return>array</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>objectID</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>query</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>max_hits</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_GetObjectByQueryCollObj</name>
<proto>array hw_getobjectbyquerycollobj(resource connection, resource objectID, string query, int max_hits)</proto>
<desc>Recherche un objet dans un groupe.</desc>
<return>array</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>objectID</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>query</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>max_hits</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_GetChildDocColl</name>
<proto>array hw_getchilddoccoll(resource connection, resource objectID)</proto>
<desc>ids des documents fils d'un groupe.</desc>
<return>array</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>objectID</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_GetChildDocCollObj</name>
<proto>array hw_getchilddoccollobj(resource connection, resource objectID)</proto>
<desc>Attributs des documents fils d'un groupe.</desc>
<return>array</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>objectID</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_GetAnchors</name>
<proto>array hw_getanchors(resource connection, resource objectID)</proto>
<desc>Identifiants des ancrages d'un document.</desc>
<return>array</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>objectID</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_GetAnchorsObj</name>
<proto>array hw_getanchorsobj(resource connection, resource objectID)</proto>
<desc>Attributs des ancrages d'un document.</desc>
<return>array</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>objectID</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_Mv</name>
<proto>int hw_mv(resource connection, array object id array, int source id, int destination id)</proto>
<desc>Déplace un objet.</desc>
<return>int</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>object</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>source</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>destination</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_Identify</name>
<proto>int hw_identify(string username, string password)</proto>
<desc>Identifie un utilisateur.</desc>
<return>int</return>
<params>
<param>
<paramname>username</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>password</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_InCollections</name>
<proto>array hw_incollections(resource connection, array object_id_array, array collection_id_array, int return_collections)</proto>
<desc>Vérifie qu'un identifiant d'objet est dans un groupe.</desc>
<return>array</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>object_id_array</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>collection_id_array</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>return_collections</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_Info</name>
<proto>string hw_info(resource connection)</proto>
<desc>Informations à propos d'une connexion.</desc>
<return>string</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_InsColl</name>
<proto>int hw_inscoll(resource connection, resource objectID, array object_array)</proto>
<desc>Insère un groupe.</desc>
<return>int</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>objectID</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>object_array</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_InsDoc</name>
<proto>int hw_insdoc(resource connection, int parentID, string object_record, string text)</proto>
<desc>Insère un document.</desc>
<return>int</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>parentID</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>object_record</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>text</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_InsertDocument</name>
<proto>int hw_insertdocument(resource connection, int parent_id, int hw_document)</proto>
<desc>Insère un document dans un groupe.</desc>
<return>int</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>parent_id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>hw_document</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_InsertObject</name>
<proto>int hw_insertobject(resource connection, string object rec, string parameter)</proto>
<desc>Insère un object record.</desc>
<return>int</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>object</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>parameter</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_mapid</name>
<proto>int hw_mapid(resource connection, int server id, int object id)</proto>
<desc>Représente un id globale en un id virtuel local.</desc>
<return>int</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>server</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>object</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_Modifyobject</name>
<proto>int hw_modifyobject(resource connection, int object_to_change, array remove, array add, int mode)</proto>
<desc>Modifie les attributs d'objet record.</desc>
<return>int</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>object_to_change</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>remove</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>add</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_New_Document</name>
<proto>int hw_new_document(string object_record, string document_data, int document_size)</proto>
<desc>Crée un nouveau document.</desc>
<return>int</return>
<params>
<param>
<paramname>object_record</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>document_data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>document_size</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_Objrec2Array</name>
<proto>array hw_objrec2array(string object_record)</proto>
<desc>Convertit les attributs d'un objet en tableau.</desc>
<return>array</return>
<params>
<param>
<paramname>object_record</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_OutputDocument</name>
<proto>int hw_outputdocument(int hw_document)</proto>
<desc>Affiche hw_document.</desc>
<return>int</return>
<params>
<param>
<paramname>hw_document</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_pConnect</name>
<proto>int hw_pconnect(string host, int port, string username, string password)</proto>
<desc>Crée une connexion persistante.</desc>
<return>int</return>
<params>
<param>
<paramname>host</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>port</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>username</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>password</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_PipeDocument</name>
<proto>int hw_pipedocument(resource connection, resource objectID)</proto>
<desc>Retourne un document.</desc>
<return>int</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>objectID</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_Root</name>
<proto>int hw_root(void)</proto>
<desc>Object id de la racine.</desc>
<return>int</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_Unlock</name>
<proto>int hw_unlock(resource connection, resource objectID)</proto>
<desc>Déverrouille un objet.</desc>
<return>int</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>objectID</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_Who</name>
<proto>int hw_who(resource connection)</proto>
<desc>Liste des utilisateurs actuellement identifiés.</desc>
<return>int</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>hw</extension>
<name>hw_Username</name>
<proto>string hw_getusername(resource connection)</proto>
<desc>Nom de l'utilisateur actuellement identifié.</desc>
<return>string</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ibase</extension>
<name>ibase_connect</name>
<proto>resource ibase_connect(string database [, string username] [, string password] [, string charset] [, int buffers] [, int dialect] [, string role])</proto>
<desc>Ouvre une connexion à une base de données Interbase.</desc>
<return>resource</return>
<params>
<param>
<paramname>database</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>username</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>password</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>charset</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>buffers</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>dialect</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>role</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ibase</extension>
<name>ibase_pconnect</name>
<proto>resource ibase_pconnect(string database [, string username] [, string password] [, string charset] [, int buffers] [, int dialect] [, string role])</proto>
<desc>Ouvre une connexion persistante à une base de données Interbase.</desc>
<return>resource</return>
<params>
<param>
<paramname>database</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>username</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>password</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>charset</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>buffers</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>dialect</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>role</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ibase</extension>
<name>ibase_close</name>
<proto>int ibase_close( [resource connection_id])</proto>
<desc>Ferme une connexion à une base de données Interbase.</desc>
<return>int</return>
<params>
<param>
<paramname>connection_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ibase</extension>
<name>ibase_query</name>
<proto>resource ibase_query( [resource link_identifier], string query [, int bind_args])</proto>
<desc>Exécute une requête sur une base Interbase</desc>
<return>resource</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>bind_args</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ibase</extension>
<name>ibase_fetch_row</name>
<proto>array ibase_fetch_row(resource result_identifier)</proto>
<desc>Lit une ligne dans une base Interbase</desc>
<return>array</return>
<params>
<param>
<paramname></paramname>
<paramtype>resource
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ibase</extension>
<name>ibase_fetch_object</name>
<proto>object ibase_fetch_object(resource result_id)</proto>
<desc>Lit une ligne dans une base Interbase dans un objet.</desc>
<return>object</return>
<params>
<param>
<paramname></paramname>
<paramtype>resource
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ibase</extension>
<name>ibase_field_info</name>
<proto>array ibase_field_info(resource result, int field_number)</proto>
<desc>Lit les informations sur un champs</desc>
<return>array</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field_number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ibase</extension>
<name>ibase_free_result</name>
<proto>int ibase_free_result(resource result_identifier)</proto>
<desc>Libère un résultat.</desc>
<return>int</return>
<params>
<param>
<paramname></paramname>
<paramtype>resource
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ibase</extension>
<name>ibase_prepare</name>
<proto>int ibase_prepare( [resource link_identifier], string query)</proto>
<desc>Prépare une requête pour lier les paramètres et
    l'éxécuter ultérieurement.</desc>
<return>int</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>query</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ibase</extension>
<name>ibase_execute</name>
<proto>resource ibase_execute(int query [, int bind_args])</proto>
<desc>Exécute une requête préparée.</desc>
<return>resource</return>
<params>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>bind_args</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ibase</extension>
<name>ibase_trans</name>
<proto>resource ibase_trans( [int trans_args] [, resource link_identifier])</proto>
<desc>Prépare une transaction</desc>
<return>resource</return>
<params>
<param>
<paramname>trans_args</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ibase</extension>
<name>ibase_commit</name>
<proto>int ibase_commit( [resource link_identifier], resource trans_number)</proto>
<desc>Valide une transaction</desc>
<return>int</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>trans_number</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ibase</extension>
<name>ibase_rollback</name>
<proto>int ibase_rollback( [resource link_identifier], resource trans_number)</proto>
<desc>Annule une transaction</desc>
<return>int</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>trans_number</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ibase</extension>
<name>ibase_free_query</name>
<proto>int ibase_free_query(resource query)</proto>
<desc>Libère la mémoire réservée par une requête
    préparée.</desc>
<return>int</return>
<params>
<param>
<paramname>query</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ibase</extension>
<name>ibase_timefmt</name>
<proto>int ibase_timefmt(string format [, int columntype])</proto>
<desc>Fixe le format de date pour les prochaines requêtes.</desc>
<return>int</return>
<params>
<param>
<paramname></paramname>
<paramtype>string
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>columntype</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ibase</extension>
<name>ibase_num_fields</name>
<proto>int ibase_num_fields(resource result_id)</proto>
<desc>Retourne le nombre de colonnes dans un résultat.</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ibase</extension>
<name>ibase_errmsg</name>
<proto>string ibase_errmsg(void)</proto>
<desc>Retourne un message d'erreur</desc>
<return>string</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>icap</extension>
<name>icap_open</name>
<proto>resource icap_open(string calendar, string username, string password, string options)</proto>
<desc>Ouvre une connexion ICAP.</desc>
<return>resource</return>
<params>
<param>
<paramname>calendar</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>username</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>password</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>options</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>icap</extension>
<name>icap_close</name>
<proto>int icap_close(resource icap_stream [, int flags])</proto>
<desc>Ferme le flot ICAP.</desc>
<return>int</return>
<params>
<param>
<paramname>icap_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>flags</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>icap</extension>
<name>icap_fetch_event</name>
<proto>int icap_fetch_event(resource stream_id, int event_id [, int options])</proto>
<desc>Recherche un événement dans le calendrier.</desc>
<return>int</return>
<params>
<param>
<paramname>stream_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>event_id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>options</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>icap</extension>
<name>icap_list_events</name>
<proto>array icap_list_events(resource stream_id, int begin_date [, int end_date])</proto>
<desc>Retourne une liste d'événement entre deux dates.</desc>
<return>array</return>
<params>
<param>
<paramname>stream_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>begin_date</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>end_date</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>icap</extension>
<name>icap_store_event</name>
<proto>string icap_store_event(resource stream_id, object event)</proto>
<desc>Enregistre un événement dans un agenda ICAP.</desc>
<return>string</return>
<params>
<param>
<paramname>stream_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>event</paramname>
<paramtype>object</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>icap</extension>
<name>icap_delete_event</name>
<proto>string icap_delete_event(resource stream_id, int uid)</proto>
<desc>Efface un événement dans un agenda ICAP.</desc>
<return>string</return>
<params>
<param>
<paramname>stream_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>uid</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>icap</extension>
<name>icap_snooze</name>
<proto>string icap_snooze(resource stream_id, int uid)</proto>
<desc>Eteind l'alarme d'un événement.</desc>
<return>string</return>
<params>
<param>
<paramname>stream_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>uid</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>icap</extension>
<name>icap_list_alarms</name>
<proto>int icap_list_alarms(resource stream_id, array date, array time)</proto>
<desc>Retourne une liste d'événements qui ont une alarme
      prévue à une date.</desc>
<return>int</return>
<params>
<param>
<paramname>stream_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>date</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>time</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>iconv</extension>
<name>iconv</name>
<proto>string iconv(string in_charset, string out_charset, string str)</proto>
<desc>Convertit une chaîne dans un jeu de caractères</desc>
<return>string</return>
<params>
<param>
<paramname>in_charset</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>out_charset</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>iconv</extension>
<name>iconv_get_encoding</name>
<proto>array iconv_get_encoding( [string type])</proto>
<desc>Lit le jeu de caractères courant</desc>
<return>array</return>
<params>
<param>
<paramname>type</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>iconv</extension>
<name>iconv_set_encoding</name>
<proto>array iconv_set_encoding(string type, string charset)</proto>
<desc>Modifie le jeu courant de caractères courant</desc>
<return>array</return>
<params>
<param>
<paramname>type</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>charset</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>iconv</extension>
<name>ob_iconv_handler</name>
<proto>array ob_iconv_handler(string contents, int status)</proto>
<desc>Gestionnaire de sortie pour maitriser le jeu de caractères de sortie</desc>
<return>array</return>
<params>
<param>
<paramname></paramname>
<paramtype>string
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ifx</extension>
<name>ifx_connect</name>
<proto>int ifx_connect( [string database] [, string userid] [, string password])</proto>
<desc>Ouvre une connexion à un serveur Informix.</desc>
<return>int</return>
<params>
<param>
<paramname></paramname>
<paramtype>string database</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string userid</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string password</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ifx</extension>
<name>ifx_pconnect</name>
<proto>int ifx_pconnect( [string database] [, string userid] [, string password])</proto>
<desc>Ouvre une connexion persistante à un serveur Informix.</desc>
<return>int</return>
<params>
<param>
<paramname>database</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>userid</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>password</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ifx</extension>
<name>ifx_close</name>
<proto>int ifx_close( [int link_identifier])</proto>
<desc>Ferme une connexion à un serveur Informix.</desc>
<return>int</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ifx</extension>
<name>ifx_query</name>
<proto>int ifx_query(string query [, int link_identifier] [, int cursor_type] [, mixed blobidarray])</proto>
<desc>Envoie une requête Informix.</desc>
<return>int</return>
<params>
<param>
<paramname>query</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>link_identifier</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>cursor_type</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>blobidarray</paramname>
<paramtype>mixed</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ifx</extension>
<name>ifx_prepare</name>
<proto>int ifx_prepare(string query, int conn_id [, int cursor_def], mixed blobidarray)</proto>
<desc>Prépare une requête SQL pour l'exécution.</desc>
<return>int</return>
<params>
<param>
<paramname>query</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>conn_id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>cursor_def</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>blobidarray</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ifx</extension>
<name>ifx_do</name>
<proto>int ifx_do(int result_id)</proto>
<desc>Exécute une requête SQL déjà préparée.</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ifx</extension>
<name>ifx_error</name>
<proto>string ifx_error(void)</proto>
<desc>Retourne le code d'erreur de la dernière requête Informix.</desc>
<return>string</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ifx</extension>
<name>ifx_errormsg</name>
<proto>string ifx_errormsg( [int errorcode])</proto>
<desc>Retourne le message d'erreur de la dernière requête Informix.</desc>
<return>string</return>
<params>
<param>
<paramname>errorcode</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ifx</extension>
<name>ifx_affected_rows</name>
<proto>int ifx_affected_rows(int result_id)</proto>
<desc>Retourne le nombre de lignes affectées par une requête.</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ifx</extension>
<name>ifx_getsqlca</name>
<proto>array ifx_getsqlca(int result_id)</proto>
<desc>Retourne le contenu de la variable sqlca.sqlerrd[0..5] après une requête.</desc>
<return>array</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ifx</extension>
<name>ifx_fetch_row</name>
<proto>array ifx_fetch_row(int result_id [, mixed position])</proto>
<desc>Retourne une ligne sous la forme d'un tableau énuméré.</desc>
<return>array</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>position</paramname>
<paramtype>mixed</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ifx</extension>
<name>ifx_htmltbl_result</name>
<proto>int ifx_htmltbl_result(int result_id [, string html_table_options])</proto>
<desc>Lit toutes les lignes d'un tableau, et la met sous la forme d'un tableau HTML.</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>html_table_options</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ifx</extension>
<name>ifx_fieldtypes</name>
<proto>array ifx_fieldtypes(int result_id)</proto>
<desc>Liste les champs Informix SQL.</desc>
<return>array</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ifx</extension>
<name>ifx_fieldproperties</name>
<proto>array ifx_fieldproperties(int result_id)</proto>
<desc>Liste les propriétés des champs SQL.</desc>
<return>array</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ifx</extension>
<name>ifx_num_fields</name>
<proto>int ifx_num_fields(int result_id)</proto>
<desc>Retourne le nombre de colonnes dans une requête.</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ifx</extension>
<name>ifx_num_rows</name>
<proto>int ifx_num_rows(int result_id)</proto>
<desc>Compte le nombre de ligne déjà lues dans un résultat.</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ifx</extension>
<name>ifx_free_result</name>
<proto>int ifx_free_result(int result_id)</proto>
<desc>Libère les ressources prises par un résultat.</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ifx</extension>
<name>ifx_create_char</name>
<proto>int ifx_create_char(string param)</proto>
<desc>Crée un objet char.</desc>
<return>int</return>
<params>
<param>
<paramname>param</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ifx</extension>
<name>ifx_free_char</name>
<proto>int ifx_free_char(int bid)</proto>
<desc>Supprime un objet char.</desc>
<return>int</return>
<params>
<param>
<paramname>bid</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ifx</extension>
<name>ifx_update_char</name>
<proto>int ifx_update_char(int bid, string content)</proto>
<desc>Modifie le contenu d'un objet char.</desc>
<return>int</return>
<params>
<param>
<paramname>bid</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>content</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ifx</extension>
<name>ifx_get_char</name>
<proto>int ifx_get_char(int bid)</proto>
<desc>Retourne le contenu d'un objet char.</desc>
<return>int</return>
<params>
<param>
<paramname>bid</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ifx</extension>
<name>ifx_create_blob</name>
<proto>int ifx_create_blob(int type, int mode, string param)</proto>
<desc>Crée un objet BLOB.</desc>
<return>int</return>
<params>
<param>
<paramname>type</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>param</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ifx</extension>
<name>ifx_copy_blob</name>
<proto>int ifx_copy_blob(int bid)</proto>
<desc>Duplique un objet BLOB.</desc>
<return>int</return>
<params>
<param>
<paramname>bid</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ifx</extension>
<name>ifx_free_blob</name>
<proto>int ifx_free_blob(int bid)</proto>
<desc>Supprime un objet BLOB.</desc>
<return>int</return>
<params>
<param>
<paramname>bid</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ifx</extension>
<name>ifx_get_blob</name>
<proto>int ifx_get_blob(int bid)</proto>
<desc>Retourne le contenu d'un objet BLOB.</desc>
<return>int</return>
<params>
<param>
<paramname>bid</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ifx</extension>
<name>ifx_update_blob</name>
<proto>boolean ifx_update_blob(int bid, string content)</proto>
<desc>Modifie le contenu d'un objet BLOB.</desc>
<return>boolean</return>
<params>
<param>
<paramname>bid</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>content</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ifx</extension>
<name>ifx_blobinfile_mode</name>
<proto>void ifx_blobinfile_mode(int mode)</proto>
<desc>Choisit le mode par défaut des objets BLOB pour toutes les
    requêtes SELECT.</desc>
<return>void</return>
<params>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ifx</extension>
<name>ifx_textasvarchar</name>
<proto>void ifx_textasvarchar(int mode)</proto>
<desc>Choisit le mode par défaut des objets text.</desc>
<return>void</return>
<params>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ifx</extension>
<name>ifx_byteasvarchar</name>
<proto>void ifx_byteasvarchar(int mode)</proto>
<desc>Choisit le mode par défaut des objets BYTE.</desc>
<return>void</return>
<params>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ifx</extension>
<name>ifx_nullformat</name>
<proto>void ifx_nullformat(int mode)</proto>
<desc>Modifie le mode par défaut de lecture des valeurs.</desc>
<return>void</return>
<params>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ifx</extension>
<name>ifxus_create_slob</name>
<proto>int ifxus_create_slob(int mode)</proto>
<desc>Crée un objet SLOB et l'ouvre.</desc>
<return>int</return>
<params>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ifx</extension>
<name>ifx_free_slob</name>
<proto>int ifxus_free_slob(int bid)</proto>
<desc>Supprime un objet SLOB.</desc>
<return>int</return>
<params>
<param>
<paramname>bid</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ifx</extension>
<name>ifxus_close_slob</name>
<proto>int ifxus_close_slob(int bid)</proto>
<desc>Ferme un objet SLOB.</desc>
<return>int</return>
<params>
<param>
<paramname>bid</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ifx</extension>
<name>ifxus_open_slob</name>
<proto>int ifxus_open_slob(long bid, int mode)</proto>
<desc>Ouvre un objet SLOB.</desc>
<return>int</return>
<params>
<param>
<paramname>bid</paramname>
<paramtype>long</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ifx</extension>
<name>ifxus_tell_slob</name>
<proto>int ifxus_tell_slob(long bid)</proto>
<desc>Retourne le fichier courant, ou la position courante.</desc>
<return>int</return>
<params>
<param>
<paramname>bid</paramname>
<paramtype>long</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ifx</extension>
<name>ifxus_seek_slob</name>
<proto>int ifxus_seek_slob(long bid, int mode, long offset)</proto>
<desc>Fixe le fichier courant, ou la position courante.</desc>
<return>int</return>
<params>
<param>
<paramname>bid</paramname>
<paramtype>long</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>offset</paramname>
<paramtype>long</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ifx</extension>
<name>ifxus_read_slob</name>
<proto>int ifxus_read_slob(long bid, long nbytes)</proto>
<desc>Lit n bytes d'un objet SLOB.</desc>
<return>int</return>
<params>
<param>
<paramname>bid</paramname>
<paramtype>long</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>nbytes</paramname>
<paramtype>long</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ifx</extension>
<name>ifxus_write_slob</name>
<proto>int ifxus_write_slob(long bid, string content)</proto>
<desc>Ecrit une chaîne dans un objet SLOB.</desc>
<return>int</return>
<params>
<param>
<paramname>bid</paramname>
<paramtype>long</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>content</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>getimagesize</name>
<proto>array getimagesize(string filename [, array imageinfo])</proto>
<desc>Retourne la taille d'une image GIF, JPG ou PNG.</desc>
<return>array</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>array imageinfo</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageAlphaBlending</name>
<proto>int imagealphablending(resource im, boolean blendmode)</proto>
<desc>Modifie le mode de blending d'une image</desc>
<return>int</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>blendmode</paramname>
<paramtype>boolean</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageArc</name>
<proto>int imagearc(resource im, int cx, int cy, int w, int h, int s, int e, int col)</proto>
<desc>Dessine une ellipse partielle.</desc>
<return>int</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>cx</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>cy</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>w</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>h</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>s</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>e</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>col</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>imagefilledarc</name>
<proto>int imagefilledarc(int im, int cx, int cy, int w, int h, int s, int e, int col, int style)</proto>
<desc>Dessine une ellipse partielle et la remplit</desc>
<return>int</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>cx</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>cy</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>w</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>h</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>s</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>e</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>col</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>style</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageEllipse</name>
<proto>int imageellipse(resource im, int cx, int cy, int w, int h, int col)</proto>
<desc>Dessine une ellipse</desc>
<return>int</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>cx</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>cy</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>w</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>h</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>col</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageFilledEllipse</name>
<proto>int imagefilledellipse(resource im, int cx, int cy, int w, int h, int col)</proto>
<desc>Dessine une ellipse pleine</desc>
<return>int</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>cx</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>cy</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>w</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>h</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>col</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageChar</name>
<proto>int imagechar(resource im, resource font, int x, int y, string c, int col)</proto>
<desc>Dessine un caractère horizontalement.</desc>
<return>int</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>font</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>c</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>col</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageCharUp</name>
<proto>int imagecharup(resource im, resource font, int x, int y, string c, int col)</proto>
<desc>Dessine un caractère verticalement.</desc>
<return>int</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>font</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>c</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>col</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageColorAllocate</name>
<proto>int imagecolorallocate(resource im, int red, int green, int blue)</proto>
<desc>Alloue une couleur pour une image.</desc>
<return>int</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>red</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>green</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>blue</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageColorDeAllocate</name>
<proto>int imagecolordeallocate (resource im, int index)</proto>
<desc>Désalloue une couleur pour une image</desc>
<return>int
</return>
<params>
<param>
<paramname></paramname>
<paramtype>resource
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageColorAt</name>
<proto>int imagecolorat(resource im, int x, int y)</proto>
<desc>Retourne l'index de la couleur d'un pixel donné.</desc>
<return>int</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageColorClosestAlpha</name>
<proto>int imagecolorclosestalpha(resource im, int red, int green, int blue, int alpha)</proto>
<desc>Retourne la couleur la plus proche, en tenant compte du canal alpha</desc>
<return>int</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>red</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>green</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>blue</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>alpha</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageColorClosest</name>
<proto>int imagecolorclosest(resource im, int red, int green, int blue)</proto>
<desc>Retourne l'index de la couleur la plus proche d'une couleur donnée.</desc>
<return>int</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>red</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>green</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>blue</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageColorExact</name>
<proto>int imagecolorexact(resource im, int red, int green, int blue)</proto>
<desc>Retourne l'index de la couleur donnée.</desc>
<return>int</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>red</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>green</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>blue</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageColorExactAlpha</name>
<proto>int imagecolorexactalpha(resource im, int red, int green, int blue, int alpha)</proto>
<desc>Retourne l'index d'une couleur avec son canal alpha</desc>
<return>int</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>red</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>green</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>blue</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>alpha</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageColorResolve</name>
<proto>int imagecolorresolve(resource im, int red, int green, int blue)</proto>
<desc>Retourne l'index de la couleur donnée, ou la plus proche possible.</desc>
<return>int</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>red</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>green</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>blue</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageColorResolveAlpha</name>
<proto>int imagecolorresolvealpha(resource im, int red, int green, int blue, int alpha)</proto>
<desc>Retourne un index de couleur ou son alternative la plus proche, y compris le canal alpha</desc>
<return>int</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>red</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>green</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>blue</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>alpha</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageGammaCorrect</name>
<proto>int imagegammacorrect(resource im, double inputgamma, double outputgamma)</proto>
<desc>Applique une correction gamma à l'image</desc>
<return>int</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>double
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>double
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageColorSet</name>
<proto>boolean imagecolorset(resource im, int index, int red, int green, int blue)</proto>
<desc>Change la couleur dans une palette à l'index donné.</desc>
<return>boolean</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>index</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>red</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>green</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>blue</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageColorsForIndex</name>
<proto>array imagecolorsforindex(resource im, int index)</proto>
<desc>Retourne la couleur associée à un index.</desc>
<return>array</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>index</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageColorsTotal</name>
<proto>int imagecolorstotal(resource im)</proto>
<desc>Calcule le nombre de couleurs d'une palette.</desc>
<return>int</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageColorTransparent</name>
<proto>int imagecolortransparent(resource im [, int col])</proto>
<desc>Définit la couleur transparente.</desc>
<return>int</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int col</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageCopy</name>
<proto>int imagecopy (resource dst_im, resource src_im, int dst_x, int dst_y, int src_x, int src_y, int src_w, int src_h)</proto>
<desc>Copie une partie d'une image</desc>
<return>int
</return>
<params>
<param>
<paramname></paramname>
<paramtype>resource
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>resource
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageCopyMerge</name>
<proto>int imagecopymerge(resource dst_im, resource src_im, int dst_x, int dst_y, int src_x, int src_y, int src_w, int src_h, int pct)</proto>
<desc>Copie et fusionne une partie d'une image</desc>
<return>int</return>
<params>
<param>
<paramname>dst_im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>src_im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>dst_x</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>dst_y</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>src_x</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>src_y</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>src_w</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>src_h</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>pct</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageCopyMergeGray</name>
<proto>int imagecopymergegray (resource dst_im, resource src_im, int dst_x, int dst_y, int src_x, int src_y, int src_w, int src_h, int pct)</proto>
<desc>Copie et fusionne une partie d'une image en niveaux de gris</desc>
<return>int</return>
<params>
<param>
<paramname>dst_im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>src_im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>dst_x</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>dst_y</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>src_x</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>src_y</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>src_w</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>src_h</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>pct</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageCopyResized</name>
<proto>int imagecopyresized(resource dst_im, resource src_im, int dstX, int dstY, int srcX, int srcY, int dstW, int dstH, int srcW, int srcH)</proto>
<desc>Copie et redimensionne une partie d'une image.</desc>
<return>int</return>
<params>
<param>
<paramname>dst_im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>src_im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>dstX</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>dstY</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>srcX</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>srcY</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>dstW</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>dstH</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>srcW</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>srcH</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageCopyResampled</name>
<proto>int imagecopyresampled(resource dst_im, resource src_im, int dstX, int dstY, int srcX, int srcY, int dstW, int dstH, int srcW, int srcH)</proto>
<desc>Copie, redimensionne, rééchantillonne une image</desc>
<return>int</return>
<params>
<param>
<paramname>dst_im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>src_im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>dstX</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>dstY</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>srcX</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>srcY</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>dstW</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>dstH</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>srcW</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>srcH</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageCreate</name>
<proto>resource imagecreate(int x_size, int y_size)</proto>
<desc>Crée une nouvelle image à palette.</desc>
<return>resource</return>
<params>
<param>
<paramname>x_size</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y_size</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>imagecreatefromgif</name>
<proto>resource imagecreatefromgif(string filename)</proto>
<desc>Crée une nouvelle image à partir d'un fichier ou d'une URL.</desc>
<return>resource</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageCreateTrueColor</name>
<proto>resource imagecreatetruecolor(int x_size, int y_size)</proto>
<desc>Crée une nouvelle image en vraies couleurs</desc>
<return>resource</return>
<params>
<param>
<paramname>x_size</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y_size</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageTrueColorToPalette</name>
<proto>void imagetruecolortopalette(resource im, boolean dither, int ncolors)</proto>
<desc>Convertit une image en vraies couleurs en image à palette</desc>
<return>void</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>dither</paramname>
<paramtype>boolean</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>ncolors</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageCreateFromJPEG</name>
<proto>resource imagecreatefromjpeg(string filename)</proto>
<desc>Crée une nouvelle image JPEG
    à partir d'un fichier ou d'une URL</desc>
<return>resource</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageCreateFromPNG</name>
<proto>resource imagecreatefrompng(string filename)</proto>
<desc>Crée une nouvelle image PNG à partir d'un fichier ou d'une URL</desc>
<return>resource</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageCreateFromWBMP</name>
<proto>resource imagecreatefromwbmp(string filename)</proto>
<desc>Crée une image depuis un fichier WBMP</desc>
<return>resource</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageCreateFromString</name>
<proto>resource imagecreatefromstring(string string)</proto>
<desc>Crée une image à partir d'une chaîne</desc>
<return>resource</return>
<params>
<param>
<paramname>string</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageDashedLine</name>
<proto>int imagedashedline(resource im, int x1, int y1, int x2, int y2, int col)</proto>
<desc>Dessine une ligne pointillée.</desc>
<return>int</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x1</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y1</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x2</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y2</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>col</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageDestroy</name>
<proto>int imagedestroy(resource im)</proto>
<desc>détruit une image.</desc>
<return>int</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageFill</name>
<proto>int imagefill(resource im, int x, int y, int col)</proto>
<desc>Remplit.</desc>
<return>int</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>col</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageFilledPolygon</name>
<proto>int imagefilledpolygon(resource im, array points, int num_points, int col)</proto>
<desc>Dessine un polygone rempli.</desc>
<return>int</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>points</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>num_points</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>col</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageFilledRectangle</name>
<proto>int imagefilledrectangle(resource im, int x1, int y1, int x2, int y2, int col)</proto>
<desc>Dessine un rectangle rempli.</desc>
<return>int</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x1</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y1</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x2</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y2</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>col</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageFillToBorder</name>
<proto>int imagefilltoborder(resource im, int x, int y, int border, int col)</proto>
<desc>Remplit avec une région avec une couleur spécifique.</desc>
<return>int</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>border</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>col</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageFontHeight</name>
<proto>int imagefontheight(resource font)</proto>
<desc>Retourne la hauteur de la police.</desc>
<return>int</return>
<params>
<param>
<paramname>font</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageFontWidth</name>
<proto>int imagefontwidth(resource font)</proto>
<desc>Retourne la largeur de la police.</desc>
<return>int</return>
<params>
<param>
<paramname>font</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageGif</name>
<proto>int imagegif(resource im, string filename)</proto>
<desc>Envoie une image GIF vers un navigateur ou un fichier.</desc>
<return>int</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImagePNG</name>
<proto>int imagepng(resource im [, string filename])</proto>
<desc>Envoie une image PNG vers un navigateur ou un fichier.</desc>
<return>int</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string filename</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageJPEG</name>
<proto>int imagejpeg(resource im [, string filename] [, int quality])</proto>
<desc>Envoie une image JPEG vers un navigateur ou un fichier.</desc>
<return>int</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>quality</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageWBMP</name>
<proto>int imagewbmp(resource im [, string filename])</proto>
<desc>Affiche une image WBMP</desc>
<return>int</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageInterlace</name>
<proto>int imageinterlace(resource im [, int interlace])</proto>
<desc>Active ou désactive l'entrelacement.</desc>
<return>int</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int interlace</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageLine</name>
<proto>int imageline(resource im, int x1, int y1, int x2, int y2, int col)</proto>
<desc>Dessine une ligne.</desc>
<return>int</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x1</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y1</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x2</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y2</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>col</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageLoadFont</name>
<proto>resource imageloadfont(string file)</proto>
<desc>Charge une nouvelle police.</desc>
<return>resource</return>
<params>
<param>
<paramname>file</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImagePolygon</name>
<proto>int imagepolygon(resource im, array points, int num_points, int col)</proto>
<desc>Dessine un polygone.</desc>
<return>int</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>points</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>num_points</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>col</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImagePSBBox</name>
<proto>array imagepsbbox(string text, resource font, int size, int space, int width, float angle)</proto>
<desc>Retourne le rectangle entourant un texte et dessiné avec une police PostScript Type1.</desc>
<return>array</return>
<params>
<param>
<paramname>text</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>font</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>size</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>space</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>width</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>angle</paramname>
<paramtype>float</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>imagepscopyfont</name>
<proto>int imagepscopyfont(int fontindex)</proto>
<desc>Fait une copie d'une police chargée pour modification ultérieure.</desc>
<return>int</return>
<params>
<param>
<paramname>fontindex</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImagePSEncodeFont</name>
<proto>int imagepsencodefont(resource font, string encodingfile)</proto>
<desc>Change le codage vectoriel d'un caractère dans une police.</desc>
<return>int</return>
<params>
<param>
<paramname>font</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>encodingfile</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImagePSFreeFont</name>
<proto>void imagepsfreefont(resource font)</proto>
<desc>Libère la mémoire occupée par une police PostScript Type 1.</desc>
<return>void</return>
<params>
<param>
<paramname>font</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImagePSLoadFont</name>
<proto>resource imagepsloadfont(string filename)</proto>
<desc>Charge une police PostScript Type 1 depuis un fichier.</desc>
<return>resource</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImagePsExtendFont</name>
<proto>boolean imagepsextendfont(resource font, double extend)</proto>
<desc>Etend ou condense une police de caractères</desc>
<return>boolean</return>
<params>
<param>
<paramname>font</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>extend</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImagePsSlantFont</name>
<proto>boolean imagepsslantfont(resource font, double slant)</proto>
<desc>Incline une police de caractères</desc>
<return>boolean</return>
<params>
<param>
<paramname>font</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>slant</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImagePSText</name>
<proto>array imagepstext(resource im, string text, resource font, int size, int foreground, int background, int x, int y [, int space] [, int tightness] [, float angle] [, int antialias_steps])</proto>
<desc>Dessine un texte sur une image avec une police PostScript Type1.</desc>
<return>array</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>text</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>font</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>size</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>foreground</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>background</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>space</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>tightness</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>angle</paramname>
<paramtype>float</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>antialias_steps</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageRectangle</name>
<proto>int imagerectangle(resource im, int x1, int y1, int x2, int y2, int col)</proto>
<desc>Dessine un rectangle.</desc>
<return>int</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x1</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y1</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x2</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y2</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>col</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageSetPixel</name>
<proto>int imagesetpixel(resource im, int x, int y, int col)</proto>
<desc>Dessine un pixel.</desc>
<return>int</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>col</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>imagesetbrush</name>
<proto>int imagesetbrush(resource im, resource brush)</proto>
<desc>Modifie la brosse pour le dessin des lignes</desc>
<return>int</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>brush</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageSetTile</name>
<proto>int imagesettile(resource im, resource tile)</proto>
<desc>Modifie l'image utilisée pour le carrelage</desc>
<return>int</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>tile</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageSetThickness</name>
<proto>void imagesetthickness(resource im, int thickness)</proto>
<desc>Modifie l'épaisseur d'un trait</desc>
<return>void</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>thickness</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageString</name>
<proto>int imagestring(resource im, int font, int x, int y, string s, int col)</proto>
<desc>Dessine une chaîne horizontale.</desc>
<return>int</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>font</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>s</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>col</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageStringUp</name>
<proto>int imagestringup(resource im, int font, int x, int y, string s, int col)</proto>
<desc>Dessine une chaîne verticale.</desc>
<return>int</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>font</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>s</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>col</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageSX</name>
<proto>int imagesx(resource im)</proto>
<desc>Retourne la largeur d'une image.</desc>
<return>int</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageSY</name>
<proto>int imagesy(resource im)</proto>
<desc>Retourne la hauteur de l'image.</desc>
<return>int</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageTTFBBox</name>
<proto>array imagettfbbox(int size, int angle, string fontfile, string text)</proto>
<desc>Retourne le rectangle entourant un texte et dessiné avec une police TrueType.</desc>
<return>array</return>
<params>
<param>
<paramname>size</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>angle</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>fontfile</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>text</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageTTFText</name>
<proto>array imagettftext(resource im, int size, int angle, int x, int y, int col, string fontfile, string text)</proto>
<desc>Dessine un texte avec une police TrueType.</desc>
<return>array</return>
<params>
<param>
<paramname>im</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>size</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>angle</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>col</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>fontfile</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>text</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>ImageTypes</name>
<proto>int imagetypes(void)</proto>
<desc>Retourne les types d'images supportés par la version courante de PHP</desc>
<return>int</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>image</extension>
<name>read_exif_data</name>
<proto>array read_exif_data(string filename)</proto>
<desc>Lit les en-têtes EXIF d'une image JPEG</desc>
<return>array</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_8bit</name>
<proto>string imap_8bit(string string)</proto>
<desc>Convertit une chaîne à 8 bits en une chaîne à guillemets.</desc>
<return>string</return>
<params>
<param>
<paramname>string</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_alerts</name>
<proto>array imap_alerts(void)</proto>
<desc>Retourne toutes les alertes</desc>
<return>array</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_append</name>
<proto>int imap_append(resource imap_stream, string mbox, string message, stringflags)</proto>
<desc>Ajoute une chaîne dans une boîte aux lettres.</desc>
<return>int</return>
<params>
<param>
<paramname>imap_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mbox</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>message</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>stringflags</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_base64</name>
<proto>string imap_base64(string text)</proto>
<desc>Décode un texte encodé en BASE64.</desc>
<return>string</return>
<params>
<param>
<paramname>text</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_binary</name>
<proto>string imap_binary(string string)</proto>
<desc>Convertit une chaîne à 8 bits en une chaîne à base64.</desc>
<return>string</return>
<params>
<param>
<paramname>string</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_body</name>
<proto>string imap_body(resource imap_stream, int msg_number, int flags)</proto>
<desc>Lit le corps d'un message.</desc>
<return>string</return>
<params>
<param>
<paramname>imap_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>msg_number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>flags</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_check</name>
<proto>object imap_check(resource imap_stream)</proto>
<desc>Vérifie le courrier de la boîte aux lettres courante.</desc>
<return>object</return>
<params>
<param>
<paramname>imap_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_clearflag_full</name>
<proto>string imap_clearflag_full (resource stream, string sequence, string flag, string options)</proto>
<desc>Supprime un flag sur un message.</desc>
<return>string
</return>
<params>
<param>
<paramname>stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>sequence</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>flag</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>options</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_close</name>
<proto>int imap_close(resource imap_stream, int flags)</proto>
<desc>Termine un flot IMAP.</desc>
<return>int</return>
<params>
<param>
<paramname>imap_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>flags</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_createmailbox</name>
<proto>int imap_createmailbox(resource imap_stream, string mbox)</proto>
<desc>Crée une nouvelle boîte aux lettres.</desc>
<return>int</return>
<params>
<param>
<paramname>imap_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mbox</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_delete</name>
<proto>int imap_delete(resource imap_stream, int msg_number [, int flags])</proto>
<desc>Marque le fichier pour l'effacement, dans la boîte aux lettres courante.</desc>
<return>int</return>
<params>
<param>
<paramname>imap_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>msg_number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>flags</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_deletemailbox</name>
<proto>int imap_deletemailbox(resource imap_stream, string mbox)</proto>
<desc>Efface une boîte aux lettres.</desc>
<return>int</return>
<params>
<param>
<paramname>imap_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mbox</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_errors</name>
<proto>array imap_errors(void)</proto>
<desc>Retourne toutes les erreurs</desc>
<return>array</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_expunge</name>
<proto>int imap_expunge(resource imap_stream)</proto>
<desc>Efface tous les messages marqués pour l'effacement.</desc>
<return>int</return>
<params>
<param>
<paramname>imap_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_fetch_overview</name>
<proto>array imap_fetch_overview(resource imap_stream, string sequence [, int flags])</proto>
<desc>Lit un sommaire des en-têtes de messages</desc>
<return>array</return>
<params>
<param>
<paramname>imap_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>sequence</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int flags</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_fetchbody</name>
<proto>string imap_fetchbody(resource imap_stream, int msg_number, string part_number [, flags flags])</proto>
<desc>Retourne une section extraite du corps d'un message.</desc>
<return>string</return>
<params>
<param>
<paramname>imap_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>msg_number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>part_number</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>flags</paramname>
<paramtype>flags</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_fetchheader</name>
<proto>string imap_fetchheader(resource imap_stream, int msgno, int flags)</proto>
<desc>Retourne l'en-tête d'un message.</desc>
<return>string</return>
<params>
<param>
<paramname>imap_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>msgno</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>flags</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_fetchstructure</name>
<proto>object imap_fetchstructure (resource imap_stream, int msg_number [, int flags])</proto>
<desc>Lit la structure d'un message.</desc>
<return>object
</return>
<params>
<param>
<paramname>imap_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>msg_number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>flags</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_get_quota</name>
<proto>array imap_get_quota(resource imap_stream, string quota_root)</proto>
<desc>Lit les quotas des boîtes aux lettres</desc>
<return>array</return>
<params>
<param>
<paramname>imap_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>quota_root</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_getmailboxes</name>
<proto>array imap_getmailboxes(resource imap_stream, string ref, string pat)</proto>
<desc>Liste les boîtes aux lettres, et retourne le détail pour chacune.</desc>
<return>array</return>
<params>
<param>
<paramname>imap_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>ref</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>pat</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_getsubscribed</name>
<proto>array imap_getsubscribed(resource imap_stream, string ref, string pattern)</proto>
<desc>Liste toutes les boîtes aux lettres souscrites.</desc>
<return>array</return>
<params>
<param>
<paramname>imap_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>ref</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>pattern</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_header</name>
<proto>object imap_header(resource imap_stream, int msg_number [, int fromlength] [, int subjectlength] [, string defaulthost])</proto>
<desc>Lit l'en-tête d'un message.</desc>
<return>object</return>
<params>
<param>
<paramname>imap_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>msg_number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>fromlength</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>subjectlength</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>defaulthost</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_headerinfo</name>
<proto>object imap_headerinfo(resource imap_stream, int msg_number [, int fromlength] [, int subjectlength] [, string defaulthost])</proto>
<desc>Lit l'en-tête  du message</desc>
<return>object</return>
<params>
<param>
<paramname>imap_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>msg_number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>fromlength</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>subjectlength</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>defaulthost</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_headers</name>
<proto>array imap_headers(resource imap_stream)</proto>
<desc>Retourne les en-têtes de tous les messages d'une boîte aux lettres.</desc>
<return>array</return>
<params>
<param>
<paramname>imap_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_last_error</name>
<proto>string imap_last_error(void)</proto>
<desc>Retourne la dernière erreur (si elle existe) qui est survenu lors de la dernière requête.</desc>
<return>string</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_listmailbox</name>
<proto>array imap_listmailbox(resource imap_stream, string ref, string pat)</proto>
<desc>Liste les boîtes aux lettres.</desc>
<return>array</return>
<params>
<param>
<paramname>imap_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>ref</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>pat</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_listsubscribed</name>
<proto>array imap_listsubscribed(resource imap_stream, string ref, string pattern)</proto>
<desc>Liste les boîtes aux lettres souscrites.</desc>
<return>array</return>
<params>
<param>
<paramname>imap_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>ref</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>pattern</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_mail</name>
<proto>string imap_mail(string to, string subject, string message [, string additional_headers] [, string cc] [, string bcc] [, string rpath])</proto>
<desc>Envoie un message mail</desc>
<return>string</return>
<params>
<param>
<paramname>to</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>subject</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>message</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>additional_headers</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>cc</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>bcc</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>rpath</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_mail_compose</name>
<proto>string imap_mail_compose(array envelope, array body)</proto>
<desc>Crée un message MIME</desc>
<return>string</return>
<params>
<param>
<paramname>envelope</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>body</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_mail_copy</name>
<proto>int imap_mail_copy(resource imap_stream, string msglist, string mbox, int flags)</proto>
<desc>Copie les messages spécifiés dans une boîte aux lettres.</desc>
<return>int</return>
<params>
<param>
<paramname>imap_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>msglist</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mbox</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>flags</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_mail_move</name>
<proto>int imap_mail_move(resource imap_stream, string msglist, string mbox [, int flags])</proto>
<desc>Déplace les messages spécifiés dans une boîte aux lettres.</desc>
<return>int</return>
<params>
<param>
<paramname>imap_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>msglist</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mbox</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>flags</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_mailboxmsginfo</name>
<proto>object imap_mailboxmsginfo(resource imap_stream)</proto>
<desc>Lit les informations à propos de la boîte aux lettres courante.</desc>
<return>object</return>
<params>
<param>
<paramname>imap_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_mime_header_decode</name>
<proto>array imap_mime_header_decode(string text)</proto>
<desc>Décode les éléments MIME d'une en-tête</desc>
<return>array</return>
<params>
<param>
<paramname>text</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_msgno</name>
<proto>int imap_msgno(resource imap_stream, int uid)</proto>
<desc>Retourne le numéro de séquence de message pour un UID donné.</desc>
<return>int</return>
<params>
<param>
<paramname>imap_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>uid</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_num_msg</name>
<proto>int imap_num_msg(resource imap_stream)</proto>
<desc>Retourne le nombre de message dans la boîte aux lettres courante.</desc>
<return>int</return>
<params>
<param>
<paramname>imap_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_num_recent</name>
<proto>int imap_num_recent(resource imap_stream)</proto>
<desc>Retourne le nombre de messages récents dans la boîte aux lettres courante.</desc>
<return>int</return>
<params>
<param>
<paramname>imap_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_open</name>
<proto>int imap_open(string mailbox, string username, string password [, int flags])</proto>
<desc>Ouvre un flot IMAP vers une boîte aux lettres.</desc>
<return>int</return>
<params>
<param>
<paramname>mailbox</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>username</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>password</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>flags</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_ping</name>
<proto>int imap_ping(resource imap_stream)</proto>
<desc>Vérifie que le flot IMAP est toujours actif.</desc>
<return>int</return>
<params>
<param>
<paramname>imap_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_qprint</name>
<proto>string imap_qprint(string string)</proto>
<desc>Convertit une chaîne à guillemets en une chaîne à 8 bits.</desc>
<return>string</return>
<params>
<param>
<paramname>string</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_renamemailbox</name>
<proto>int imap_renamemailbox(resource imap_stream, string old_mbox, string new_mbox)</proto>
<desc>Renomme une boîte aux lettres.</desc>
<return>int</return>
<params>
<param>
<paramname>imap_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>old_mbox</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>new_mbox</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_reopen</name>
<proto>int imap_reopen(resource imap_stream, string mailbox [, string flags])</proto>
<desc>Ouvre un flot IMAP vers une nouvelle boîte aux lettres.</desc>
<return>int</return>
<params>
<param>
<paramname>imap_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mailbox</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>flags</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_rfc822_parse_adrlist</name>
<proto>string imap_rfc822_parse_adrlist (string address, string default_host)</proto>
<desc>Analyse une chaîne d'adresse.</desc>
<return>string
</return>
<params>
<param>
<paramname>address</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>default_host</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_rfc822_parse_headers</name>
<proto>object imap_rfc822_parse_headers(string headers [, string defaulthost])</proto>
<desc>Analyse une en-tête mail</desc>
<return>object</return>
<params>
<param>
<paramname>headers</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>defaulthost</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_rfc822_write_address</name>
<proto>string imap_rfc822_write_address (string mailbox, string host, string personal)</proto>
<desc>Retourne une adresse email proprement formatée</desc>
<return>string
</return>
<params>
<param>
<paramname>mailbox</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>host</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>personal</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_scanmailbox</name>
<proto>array imap_scanmailbox(resource imap_stream, string string)</proto>
<desc>Lit la liste des boîtes aux lettres, et y recherche une chaîne.</desc>
<return>array</return>
<params>
<param>
<paramname>imap_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>string</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_search</name>
<proto>array imap_search(resource imap_stream, string criteria, int flags)</proto>
<desc>Retourne un tableau de message après recherche.</desc>
<return>array</return>
<params>
<param>
<paramname>imap_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>criteria</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>flags</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_set_quota</name>
<proto>int imap_set_quota(resource imap_stream, string quota_root, int quota_limit)</proto>
<desc>Modifie le quota d'une boîte aux lettres</desc>
<return>int</return>
<params>
<param>
<paramname>imap_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>quota_root</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>quota_limit</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_setflag_full</name>
<proto>string imap_setflag_full(int stream, string sequence, string flag, string options)</proto>
<desc>Positionne un flag sur un message.</desc>
<return>string</return>
<params>
<param>
<paramname>stream</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>sequence</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>flag</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>options</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_sort</name>
<proto>string imap_sort(int stream, int criteria, int reverse, int options)</proto>
<desc>Trie des messages.</desc>
<return>string</return>
<params>
<param>
<paramname>stream</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>criteria</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>reverse</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>options</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_status</name>
<proto>object imap_status(resource imap_stream, string mailbox, int options)</proto>
<desc>Retourne les informations de statut sur une boîte aux lettres autres que la boîte courante.</desc>
<return>object</return>
<params>
<param>
<paramname>imap_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mailbox</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>options</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_subscribe</name>
<proto>int imap_subscribe(resource imap_stream, string mbox)</proto>
<desc>Souscrit à une boîte aux lettres.</desc>
<return>int</return>
<params>
<param>
<paramname>imap_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mbox</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_uid</name>
<proto>int imap_uid(resource imap_stream, int msgno)</proto>
<desc>Retourne l'UID d'un message.</desc>
<return>int</return>
<params>
<param>
<paramname>imap_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>msgno</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_undelete</name>
<proto>int imap_undelete(resource imap_stream, int msg_number)</proto>
<desc>Enlève la marque d'effacement d'un message.</desc>
<return>int</return>
<params>
<param>
<paramname>imap_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>msg_number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_unsubscribe</name>
<proto>int imap_unsubscribe(resource imap_stream, string mbox)</proto>
<desc>Termine la souscription à une boîte aux lettres.</desc>
<return>int</return>
<params>
<param>
<paramname>imap_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mbox</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_utf7_decode</name>
<proto>string imap_utf7_decode(string text)</proto>
<desc>Décode une chaîne modifiée UTF-7.</desc>
<return>string</return>
<params>
<param>
<paramname>text</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_utf7_encode</name>
<proto>string imap_utf7_encode(string data)</proto>
<desc>Convertit des données 8bit en texte UTF-7.</desc>
<return>string</return>
<params>
<param>
<paramname>data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>imap</extension>
<name>imap_utf8</name>
<proto>string imap_utf8(string text)</proto>
<desc>Convertit du texte en UTF8</desc>
<return>string</return>
<params>
<param>
<paramname>text</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>info</extension>
<name>assert</name>
<proto>int assert(string|boolean assertion)</proto>
<desc>Vérifie si une assertion est fausse</desc>
<return>int</return>
<params>
<param>
<paramname>assertion</paramname>
<paramtype>string|boolean</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>info</extension>
<name>assert-options</name>
<proto>mixed assert_options(int what [, mixed value])</proto>
<desc>Fixe et lit différentes options d'assertions</desc>
<return>mixed</return>
<params>
<param>
<paramname>what</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>value</paramname>
<paramtype>mixed</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>info</extension>
<name>extension_loaded</name>
<proto>boolean extension_loaded(string name)</proto>
<desc>Détermine si une extension est chargée ou non.</desc>
<return>boolean</return>
<params>
<param>
<paramname>name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>info</extension>
<name>dl</name>
<proto>int dl(string library)</proto>
<desc>Charge une extension PHP à la volée</desc>
<return>int</return>
<params>
<param>
<paramname>library</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>info</extension>
<name>getenv</name>
<proto>string getenv(string varname)</proto>
<desc>Retourne la valeur de la variable d'environnement.</desc>
<return>string</return>
<params>
<param>
<paramname>varname</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>info</extension>
<name>get_cfg_var</name>
<proto>string get_cfg_var(string varname)</proto>
<desc>Retourne la valeur d'une option de PHP</desc>
<return>string</return>
<params>
<param>
<paramname>varname</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>info</extension>
<name>get_current_user</name>
<proto>string get_current_user(void)</proto>
<desc>Retourne le nom du possesseur du script courant.</desc>
<return>string</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>info</extension>
<name>get_magic_quotes_gpc</name>
<proto>long get_magic_quotes_gpc(void)</proto>
<desc>Retourne la configuration actuelle de l'option magic_quotes_gpc.</desc>
<return>long</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>info</extension>
<name>get_magic_quotes_runtime</name>
<proto>long get_magic_quotes_runtime(void)</proto>
<desc>Retourne la configuration actuelle de l'option magic_quotes_runtime.</desc>
<return>long</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>info</extension>
<name>getlastmod</name>
<proto>int getlastmod(void)</proto>
<desc>Retourne la date de dernière modification de la page.</desc>
<return>int</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>info</extension>
<name>getmyinode</name>
<proto>int getmyinode(void)</proto>
<desc>Retourne l'inode du script.</desc>
<return>int</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>info</extension>
<name>getmypid</name>
<proto>int getmypid(void)</proto>
<desc>Retourne le numéro de processus courant.</desc>
<return>int</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>info</extension>
<name>getmyuid</name>
<proto>int getmyuid(void)</proto>
<desc>Retourne l'UID du propriétaire du script actuel.</desc>
<return>int</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>info</extension>
<name>getrusage</name>
<proto>array getrusage( [int who])</proto>
<desc>Retourne le niveau d'utilisation des ressources.</desc>
<return>array</return>
<params>
<param>
<paramname>who</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>info</extension>
<name>ini_alter</name>
<proto>string ini_alter(string varname, string newvalue)</proto>
<desc>Change la valeur d'une option de configuration</desc>
<return>string</return>
<params>
<param>
<paramname>varname</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>newvalue</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>info</extension>
<name>ini_get</name>
<proto>string ini_get(string varname)</proto>
<desc>Lit la valeur d'une option de configuration.</desc>
<return>string</return>
<params>
<param>
<paramname>varname</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>info</extension>
<name>ini_restore</name>
<proto>string ini_restore(string varname)</proto>
<desc>Restaure la valeur de l'option de configuration</desc>
<return>string</return>
<params>
<param>
<paramname>varname</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>info</extension>
<name>ini_set</name>
<proto>string ini_set(string varname, string newvalue)</proto>
<desc>Change la valeur d'une option de configuration</desc>
<return>string</return>
<params>
<param>
<paramname>varname</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>newvalue</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>info</extension>
<name>phpcredits</name>
<proto>void phpcredits(int flag)</proto>
<desc>Imprime les crédits de PHP.</desc>
<return>void</return>
<params>
<param>
<paramname>flag</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>info</extension>
<name>phpinfo</name>
<proto>int phpinfo( [int what])</proto>
<desc>Affiche de nombreuses informations sur le PHP.</desc>
<return>int</return>
<params>
<param>
<paramname></paramname>
<paramtype>int what</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>info</extension>
<name>phpversion</name>
<proto>string phpversion(void)</proto>
<desc>Retourne le numéro de la version courante de PHP.</desc>
<return>string</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>info</extension>
<name>php_logo_guid</name>
<proto>string php_logo_guid(void)</proto>
<desc>Retourne le logo</desc>
<return>string</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>info</extension>
<name>php_sapi_name</name>
<proto>string php_sapi_name(void)</proto>
<desc>Retourne le type d'interface utilisé entre le serveur web et PHP</desc>
<return>string</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>info</extension>
<name>php_uname</name>
<proto>string php_uname(void)</proto>
<desc>Retourne les informations sur le système d'exploitation</desc>
<return>string</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>info</extension>
<name>putenv</name>
<proto>void putenv(string setting)</proto>
<desc>Fixe la valeur d'une variable d'environnement.</desc>
<return>void</return>
<params>
<param>
<paramname>setting</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>info</extension>
<name>set_magic_quotes_runtime</name>
<proto>long set_magic_quotes_runtime(int new_setting)</proto>
<desc>Active/désactive l'option magic_quotes_runtime.</desc>
<return>long</return>
<params>
<param>
<paramname>new_setting</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>info</extension>
<name>set_time_limit</name>
<proto>void set_time_limit(int seconds)</proto>
<desc>Fixe le temps maximum d'exécution d'un script.</desc>
<return>void</return>
<params>
<param>
<paramname>seconds</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>info</extension>
<name>zend_logo_guid</name>
<proto>string zend_logo_guid(void)</proto>
<desc>Retourne le logo de Zend</desc>
<return>string</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>info</extension>
<name>get_defined_constants</name>
<proto>array get_defined_constants()</proto>
<desc>Retourne la liste des constantes et leur valeur</desc>
<return>array</return>
<params>
</params>
</function>
<function>
<extension>info</extension>
<name>get_loaded_extensions</name>
<proto>array get_loaded_extensions(void)</proto>
<desc>Retourne la liste de tous les modules compilés et chargés</desc>
<return>array</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>info</extension>
<name>get_extension_funcs</name>
<proto>array get_extension_funcs(string module_name)</proto>
<desc>Liste les fonctions d'une extension</desc>
<return>array</return>
<params>
<param>
<paramname>module_name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>info</extension>
<name>get_required_files</name>
<proto>array get_required_files(void)</proto>
<desc>Retourne un tableau avec les noms des fichiers qui sont requis et inclus dans un script</desc>
<return>array</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>info</extension>
<name>get_included_files</name>
<proto>array get_included_files(void)</proto>
<desc>Retourne un tableau avec les noms des fichiers qui sont inclus
    dans un script</desc>
<return>array</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>info</extension>
<name>zend_version</name>
<proto>string zend_version(void)</proto>
<desc>Lit la version courante du moteur Zend.</desc>
<return>string</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ingres_ii</extension>
<name>ingres_connect</name>
<proto>resource ingres_connect( [string database] [, string username] [, string password])</proto>
<desc>Ouvre une connexion à un serveur Ingres.</desc>
<return>resource</return>
<params>
<param>
<paramname>database</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>username</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>password</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ingres_ii</extension>
<name>ingres_pconnect</name>
<proto>resource ingres_pconnect( [string database] [, string username] [, string password])</proto>
<desc>Ouvre une connexion persistante à un serveur Ingres.</desc>
<return>resource</return>
<params>
<param>
<paramname>database</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>username</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>password</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ingres_ii</extension>
<name>ingres_close</name>
<proto>boolean ingres_close( [resource link])</proto>
<desc>Ferme une connexion à un serveur Ingres.</desc>
<return>boolean</return>
<params>
<param>
<paramname>link</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ingres_ii</extension>
<name>ingres_query</name>
<proto>boolean ingres_query(string query [, resource link])</proto>
<desc>Envoie une requête SQL à un serveur Ingres II.</desc>
<return>boolean</return>
<params>
<param>
<paramname></paramname>
<paramtype>string
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>link</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ingres_ii</extension>
<name>ingres_num_rows</name>
<proto>intingres_num_rows( [resource link])</proto>
<desc>Retourne le nombre de lignes affectées ou retournées par la dernière requête.</desc>
<return>intingres_num_rows(</return>
<params>
<param>
<paramname>link</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ingres_ii</extension>
<name>ingres_num_fields</name>
<proto>intingres_num_fields( [resource link])</proto>
<desc>Retourne le nombre de champs renvoyés par la dernière requête.</desc>
<return>intingres_num_fields(</return>
<params>
<param>
<paramname>link</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ingres_ii</extension>
<name>ingres_field_name</name>
<proto>stringingres_field_name(int index [, resource link])</proto>
<desc>Retourne le nom d'un champ dans le résultat d'une requête.</desc>
<return>stringingres_field_name(</return>
<params>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>link</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ingres_ii</extension>
<name>ingres_field_type</name>
<proto>stringingres_field_type(int index [, resource link])</proto>
<desc>Retourne le type d'un champ dans le résultat d'une requête.</desc>
<return>stringingres_field_type(</return>
<params>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>link</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ingres_ii</extension>
<name>ingres_field_nullable</name>
<proto>boolean ingres_field_nullable(int index [, resource link])</proto>
<desc>Teste si un champ est annulable.</desc>
<return>boolean</return>
<params>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>link</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ingres_ii</extension>
<name>ingres_field_length</name>
<proto>intingres_field_length(int index [, resource link])</proto>
<desc>Retourne la taille d'un champ.</desc>
<return>intingres_field_length(</return>
<params>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>link</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ingres_ii</extension>
<name>ingres_field_precision</name>
<proto>intingres_field_precision(int index [, resource link])</proto>
<desc>Retourne la précision d'un champ.</desc>
<return>intingres_field_precision(</return>
<params>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>link</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ingres_ii</extension>
<name>ingres_field_scale</name>
<proto>intingres_field_scale(int index [, resource link])</proto>
<desc>Retourne l'échelle d'un champ.</desc>
<return>intingres_field_scale(</return>
<params>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>link</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ingres_ii</extension>
<name>ingres_fetch_array</name>
<proto>arrayingres_fetch_array( [int result_type] [, resource link])</proto>
<desc>Récupère une ligne de résultat dans un tableau.</desc>
<return>arrayingres_fetch_array(</return>
<params>
<param>
<paramname>result_type</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>link</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ingres_ii</extension>
<name>ingres_fetch_row</name>
<proto>arrayingres_fetch_row( [resource link])</proto>
<desc>Récupère une ligne de résultat dans un tableau énuméré.</desc>
<return>arrayingres_fetch_row(</return>
<params>
<param>
<paramname>link</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ingres_ii</extension>
<name>ingres_fetch_object</name>
<proto>objectingres_fetch_object( [int result_type] [, resource link])</proto>
<desc>Récupère une ligne de résultat dans un objet.</desc>
<return>objectingres_fetch_object(</return>
<params>
<param>
<paramname>result_type</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>link</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ingres_ii</extension>
<name>ingres_rollback</name>
<proto>boolean ingres_rollback( [resource link])</proto>
<desc>Annule une transaction.</desc>
<return>boolean</return>
<params>
<param>
<paramname>link</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ingres_ii</extension>
<name>ingres_commit</name>
<proto>boolean ingres_commit( [resource link])</proto>
<desc>Valide une transaction.</desc>
<return>boolean</return>
<params>
<param>
<paramname>link</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ingres_ii</extension>
<name>ingres_autocommit</name>
<proto>boolean ingres_autocommit( [resource link])</proto>
<desc>Active ou désactive le mode autocommit.</desc>
<return>boolean</return>
<params>
<param>
<paramname>link</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ircg</extension>
<name>ircg_pconnect</name>
<proto>resource ircg_pconnect(string username [, string server_ip] [, int server_port] [, string msg_format] [, array ctcp_messages] [, array user_settings])</proto>
<desc>Connecte à un serveur IRC</desc>
<return>resource</return>
<params>
<param>
<paramname>username</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string server_ip</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>server_port</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string msg_format</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>ctcp_messages</paramname>
<paramtype>array</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>user_settings</paramname>
<paramtype>array</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ircg</extension>
<name>ircg_set_current</name>
<proto>boolean ircg_set_current(resource connection)</proto>
<desc>Prépare la connexion courante pour l'affichage</desc>
<return>boolean</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ircg</extension>
<name>ircg_join</name>
<proto>boolean ircg_join(resource connection, string channel)</proto>
<desc>Rejoint un canal IRC</desc>
<return>boolean</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ircg</extension>
<name>ircg_part</name>
<proto>boolean ircg_part(resource connection, string channel)</proto>
<desc>Quitte le canal</desc>
<return>boolean</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ircg</extension>
<name>ircg_msg</name>
<proto>boolean ircg_msg(resource connection, string recipient, string message [, boolean suppress])</proto>
<desc>Envoie un message à un canal ou un utilisateur</desc>
<return>boolean</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>suppress</paramname>
<paramtype>boolean</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ircg</extension>
<name>ircg_notice</name>
<proto>boolean ircg_notice(resource connection, string, string message)</proto>
<desc>Envoie une note (notice) à un utilisateur</desc>
<return>boolean</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ircg</extension>
<name>ircg_nick</name>
<proto>boolean ircg_nick(resource connection, string nick)</proto>
<desc>Change de nom sur le serveur</desc>
<return>boolean</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ircg</extension>
<name>ircg_topic</name>
<proto>boolean ircg_topic(resource connection, string channel, string new_topic)</proto>
<desc>Modifie le sujet (topic) d'un canal</desc>
<return>boolean</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ircg</extension>
<name>ircg_channel_mode</name>
<proto>boolean ircg_channel_mode(resource connection, string channel, string mode_spec, string nick)</proto>
<desc>Modifie les flags du canal</desc>
<return>boolean</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ircg</extension>
<name>ircg_html_encode</name>
<proto>boolean ircg_html_encode(string html_string)</proto>
<desc>Prépare l'affichage pour le HTML</desc>
<return>boolean</return>
<params>
<param>
<paramname></paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ircg</extension>
<name>ircg_whois</name>
<proto>boolean ircg_whois(resource connection, string nick)</proto>
<desc>Requiert les informations sur un utilisateur</desc>
<return>boolean</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ircg</extension>
<name>ircg_kick</name>
<proto>boolean ircg_kick(resource connection, string channel, string nick, string reason)</proto>
<desc>Expulse un utilisateur d'un canal</desc>
<return>boolean</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>channel</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>nick</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>reason</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ircg</extension>
<name>ircg_ignore_add</name>
<proto>boolean ircg_ignore_add(resource connection, string nick)</proto>
<desc>Ajoute un utilisateur sur la liste des utilisateurs indésirables</desc>
<return>boolean</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>nick</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ircg</extension>
<name>ircg_ignore_del</name>
<proto>boolean ircg_ignore_del(resource connection, string nick)</proto>
<desc>Supprime un utilisateur de la liste des utilisateurs indésirables</desc>
<return>boolean</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>nick</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ircg</extension>
<name>ircg_disconnect</name>
<proto>boolean ircg_disconnect(resource connection, string reason)</proto>
<desc>Ferme la connexion avec un serveur</desc>
<return>boolean</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>reason</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ircg</extension>
<name>ircg_is_conn_alive</name>
<proto>boolean ircg_is_conn_alive(resource connection)</proto>
<desc>Vérifie l'état de la connexion</desc>
<return>boolean</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ircg</extension>
<name>ircg_lookup_format_messages</name>
<proto>boolean ircg_lookup_format_messages(string name)</proto>
<desc>Sélectionne un format d'affichage pour les messages IRC</desc>
<return>boolean</return>
<params>
<param>
<paramname>name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ircg</extension>
<name>ircg_register_format_messages</name>
<proto>boolean ircg_register_format_messages(string name, array messages)</proto>
<desc>Enregistre un nouveau format d'affichage des messages IRC</desc>
<return>boolean</return>
<params>
<param>
<paramname>name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>java</extension>
<name>java_last_exception_clear</name>
<proto>void java_last_exception_clear()</proto>
<desc>Efface la dernière exception Java</desc>
<return>void</return>
<params>
</params>
</function>
<function>
<extension>java</extension>
<name>java_last_exception_get</name>
<proto>exception java_last_exception_get()</proto>
<desc>Lit la dernière exception Java</desc>
<return>exception</return>
<params>
</params>
</function>
<function>
<extension>ldap</extension>
<name>ldap_add</name>
<proto>int ldap_add(resource link_identifier, string dn, array entry)</proto>
<desc>Ajoute une entrée à un dossier LDAP.</desc>
<return>int</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>dn</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>entry</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ldap</extension>
<name>ldap_bind</name>
<proto>int ldap_bind(resource link_identifier [, string bind_rdn] [, string bind_password])</proto>
<desc>Se lie à un serveur LDAP.</desc>
<return>int</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string bind_rdn</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string bind_password</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ldap</extension>
<name>ldap_close</name>
<proto>int ldap_close(resource link_identifier)</proto>
<desc>Déconnecte d'un serveur LDAP.</desc>
<return>int</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ldap</extension>
<name>ldap_compare</name>
<proto>int ldap_compare(resource link_identifier, string dn, string attribute, string value)</proto>
<desc>Compare les valeurs des attributs trouvés dans un ND</desc>
<return>int</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>dn</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>attribute</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>value</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ldap</extension>
<name>ldap_connect</name>
<proto>resource ldap_connect( [string hostname] [, int port])</proto>
<desc>Se connecte à un serveur LDAP.</desc>
<return>resource</return>
<params>
<param>
<paramname></paramname>
<paramtype>string hostname</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int port</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ldap</extension>
<name>ldap_count_entries</name>
<proto>int ldap_count_entries(resource link_identifier, resource result_identifier)</proto>
<desc>Compte le nombre d'entrées d'une recherche.</desc>
<return>int</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>result_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ldap</extension>
<name>ldap_delete</name>
<proto>int ldap_delete(resource link_identifier, string dn)</proto>
<desc>Efface une entrée dans un dossier.</desc>
<return>int</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>dn</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ldap</extension>
<name>ldap_dn2ufn</name>
<proto>string ldap_dn2ufn(string dn)</proto>
<desc>Convertit un ND dans un format plus accessible.</desc>
<return>string</return>
<params>
<param>
<paramname>dn</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ldap</extension>
<name>ldap_err2str</name>
<proto>string ldap_err2str(int errno)</proto>
<desc>Convertit un numéro d'erreur LDAP en message d'erreur.</desc>
<return>string</return>
<params>
<param>
<paramname>errno</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ldap</extension>
<name>ldap_errno</name>
<proto>int ldap_errno(resource link_id)</proto>
<desc>Retourne le numéro d'erreur LDAP de la dernière commande exécutée.</desc>
<return>int</return>
<params>
<param>
<paramname>link_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ldap</extension>
<name>ldap_error</name>
<proto>string ldap_error(resource link_id)</proto>
<desc>Retourne le message LDAP de la dernière commande LDAP.</desc>
<return>string</return>
<params>
<param>
<paramname>link_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ldap</extension>
<name>ldap_explode_dn</name>
<proto>array ldap_explode_dn(string dn, int with_attrib)</proto>
<desc>Scinde un ND en plusieurs composants.</desc>
<return>array</return>
<params>
<param>
<paramname>dn</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>with_attrib</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ldap</extension>
<name>ldap_first_attribute</name>
<proto>string ldap_first_attribute(resource link_identifier, resource result_entry_identifier, int ber_identifier)</proto>
<desc>Retourne le premier attribut.</desc>
<return>string</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>result_entry_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>ber_identifier</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ldap</extension>
<name>ldap_first_entry</name>
<proto>int ldap_first_entry(resource link_identifier, resource result_identifier)</proto>
<desc>Retourne l'identifiant du premier attribut.</desc>
<return>int</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>result_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ldap</extension>
<name>ldap_free_result</name>
<proto>int ldap_free_result(resource result_identifier)</proto>
<desc>Libère la mémoire prise par un résultat.</desc>
<return>int</return>
<params>
<param>
<paramname>result_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ldap</extension>
<name>ldap_get_attributes</name>
<proto>array ldap_get_attributes(resource link_identifier, resource result_entry_identifier)</proto>
<desc>Retourne les attributs d'une entrée d'un résultat.</desc>
<return>array</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>resource
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ldap</extension>
<name>ldap_get_dn</name>
<proto>string ldap_get_dn(resource link_identifier, resource result_entry_identifier)</proto>
<desc>Retourne un ND d'une entrée d'un résultat.</desc>
<return>string</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>result_entry_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ldap</extension>
<name>ldap_get_entries</name>
<proto>array ldap_get_entries(resource link_identifier, resource result_identifier)</proto>
<desc>Retourne toutes les entrées.</desc>
<return>array</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>result_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ldap</extension>
<name>ldap_get_option</name>
<proto>boolean ldap_get_option(resource link_identifier, int option, mixed retval)</proto>
<desc>Lit la valeur courante d'une option</desc>
<return>boolean</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>option</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>retval</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ldap</extension>
<name>ldap_get_values</name>
<proto>array ldap_get_values(resource link_identifier, resource result_entry_identifier, string attribute)</proto>
<desc>Retourne toutes les entrées d'un résultat.</desc>
<return>array</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>result_entry_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>attribute</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ldap</extension>
<name>ldap_get_values_len</name>
<proto>array ldap_get_values_len(resource link_identifier, resource result_entry_identifier, string attribute)</proto>
<desc>Retourne toutes les valeurs binaires à partir d'un identifiant de résultat.</desc>
<return>array</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>result_entry_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>attribute</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ldap</extension>
<name>ldap_list</name>
<proto>boolean ldap_list(resource link_identifier, string base_dn, string filter [, array attributes] [, int attrsonly] [, int sizelimit] [, int timelimit] [, int deref])</proto>
<desc>Recherche dans un seul niveau.</desc>
<return>boolean</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>base_dn</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>filter</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>attributes</paramname>
<paramtype>array</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>attrsonly</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>sizelimit</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>timelimit</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>deref</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ldap</extension>
<name>ldap_modify</name>
<proto>int ldap_modify(resource link_identifier, string dn, array entry)</proto>
<desc>Modifie une entrée LDAP.</desc>
<return>int</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>dn</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>entry</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ldap</extension>
<name>ldap_mod_add</name>
<proto>resource ldap_mod_add(int link_identifier, string dn, array entry)</proto>
<desc>Ajoute un attribut</desc>
<return>resource</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>dn</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>entry</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ldap</extension>
<name>ldap_mod_del</name>
<proto>int ldap_mod_del(resource link_identifier, string dn, array entry)</proto>
<desc>Efface un attribut</desc>
<return>int</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>dn</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>entry</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ldap</extension>
<name>ldap_mod_replace</name>
<proto>int ldap_mod_replace(resource link_identifier, string dn, array entry)</proto>
<desc>Remplace un attribut</desc>
<return>int</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>dn</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>entry</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ldap</extension>
<name>ldap_next_attribute</name>
<proto>string ldap_next_attribute(resource link_identifier, resource result_entry_identifier, int ber_identifier)</proto>
<desc>Lit l'attribut suivant.</desc>
<return>string</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>result_entry_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>ber_identifier</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ldap</extension>
<name>ldap_next_entry</name>
<proto>int ldap_next_entry(resource link_identifier, resource result_entry_identifier)</proto>
<desc>Lit l'attribut suivant.</desc>
<return>int</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>result_entry_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ldap</extension>
<name>ldap_read</name>
<proto>resource ldap_read(resource link_identifier, string base_dn, string filter [, array attributes] [, int attrsonly] [, int sizelimit] [, int timelimit] [, int deref])</proto>
<desc>Lit une entrée.</desc>
<return>resource</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>base_dn</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>filter</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>attributes</paramname>
<paramtype>array</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>attrsonly</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>sizelimit</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>timelimit</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>deref</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ldap</extension>
<name>ldap_rename</name>
<proto>boolean ldap_rename(int link_identifier, string dn, string newrdn, string newparent, boolean deleteoldrdn)</proto>
<desc>Modifie le nom d'une entrée</desc>
<return>boolean</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>dn</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>newrdn</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>newparent</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>deleteoldrdn</paramname>
<paramtype>boolean</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ldap</extension>
<name>ldap_search</name>
<proto>resource ldap_search(resource link_identifier, string base_dn, string filter [, array attributes] [, int attrsonly] [, int sizelimit] [, int timelimit] [, int deref])</proto>
<desc>Recherche dans tout l'arbre LDAP.</desc>
<return>resource</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>base_dn</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>filter</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>attributes</paramname>
<paramtype>array</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>attrsonly</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>sizelimit</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>timelimit</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>deref</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ldap</extension>
<name>ldap_set_option</name>
<proto>boolean ldap_set_option(resource link_identifier, int option, mixed newval)</proto>
<desc>Modifie une option LDAP</desc>
<return>boolean</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>option</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>newval</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ldap</extension>
<name>ldap_unbind</name>
<proto>int ldap_unbind(resource link_identifier)</proto>
<desc>Termine la liaison avec un serveur LDAP.</desc>
<return>int</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mail</extension>
<name>mail</name>
<proto>boolean mail(string to, string subject, string message [, string additional_headers] [, string additional_parameters])</proto>
<desc>Envoi de mail</desc>
<return>boolean</return>
<params>
<param>
<paramname>to</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>subject</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>message</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>additional_headers</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>additional_parameters</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mail</extension>
<name>ezmlm_hash</name>
<proto>int ezmlm_hash(string addr)</proto>
<desc>Calcule la valeur de hash demandée par EZMLM</desc>
<return>int</return>
<params>
<param>
<paramname>addr</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>math</extension>
<name>Abs</name>
<proto>mixed abs(mixed number)</proto>
<desc>Valeur absolue</desc>
<return>mixed</return>
<params>
<param>
<paramname>number</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>math</extension>
<name>Acos</name>
<proto>float acos(float arg)</proto>
<desc>arc cosinus</desc>
<return>float</return>
<params>
<param>
<paramname>arg</paramname>
<paramtype>float</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>math</extension>
<name>Asin</name>
<proto>float asin(float arg)</proto>
<desc>arc sinus</desc>
<return>float</return>
<params>
<param>
<paramname>arg</paramname>
<paramtype>float</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>math</extension>
<name>Atan</name>
<proto>float atan(float arg)</proto>
<desc>arc tangent</desc>
<return>float</return>
<params>
<param>
<paramname>arg</paramname>
<paramtype>float</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>math</extension>
<name>Atan2</name>
<proto>float atan2(float y, float x)</proto>
<desc>arc tangent de deux variables</desc>
<return>float</return>
<params>
<param>
<paramname>y</paramname>
<paramtype>float</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x</paramname>
<paramtype>float</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>math</extension>
<name>base_convert</name>
<proto>string base_convert(string number, int frombase, int tobase)</proto>
<desc>Convertit un nombre entre des bases arbitraires.</desc>
<return>string</return>
<params>
<param>
<paramname>number</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>frombase</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>tobase</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>math</extension>
<name>BinDec</name>
<proto>int bindec(string binary_string)</proto>
<desc>Convertit de binaire en décimal</desc>
<return>int</return>
<params>
<param>
<paramname>binary_string</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>math</extension>
<name>Ceil</name>
<proto>float ceil(float number)</proto>
<desc>Arrondit au nombre supérieur</desc>
<return>float</return>
<params>
<param>
<paramname>number</paramname>
<paramtype>float</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>math</extension>
<name>Cos</name>
<proto>float cos(float arg)</proto>
<desc>cosinus</desc>
<return>float</return>
<params>
<param>
<paramname>arg</paramname>
<paramtype>float</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>math</extension>
<name>DecBin</name>
<proto>string decbin(int number)</proto>
<desc>Convertit de décimal en binaire</desc>
<return>string</return>
<params>
<param>
<paramname>number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>math</extension>
<name>DecHex</name>
<proto>string dechex(int number)</proto>
<desc>Convertit de décimal en hexadécimal</desc>
<return>string</return>
<params>
<param>
<paramname>number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>math</extension>
<name>DecOct</name>
<proto>string decoct(int number)</proto>
<desc>Convertit de décimal en octal</desc>
<return>string</return>
<params>
<param>
<paramname>number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>math</extension>
<name>deg2rad</name>
<proto>double deg2rad(double number)</proto>
<desc>Convertit un nombre de degrés en radians</desc>
<return>double</return>
<params>
<param>
<paramname>number</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>math</extension>
<name>Exp</name>
<proto>float exp(float arg)</proto>
<desc>exponentielle</desc>
<return>float</return>
<params>
<param>
<paramname>arg</paramname>
<paramtype>float</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>math</extension>
<name>Floor</name>
<proto>floats floor(float number)</proto>
<desc>Arrondi à l'entier inférieur</desc>
<return>floats</return>
<params>
<param>
<paramname>number</paramname>
<paramtype>float</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>math</extension>
<name>getrandmax</name>
<proto>int getrandmax(void)</proto>
<desc>Plus grande valeur aléatoire possible.</desc>
<return>int</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>math</extension>
<name>hexdec</name>
<proto>int hexdec(string hex_string)</proto>
<desc>Convertit de hexadécimal en décimal</desc>
<return>int</return>
<params>
<param>
<paramname>hex_string</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>math</extension>
<name>lcg_value</name>
<proto>double lcg_value(void)</proto>
<desc>Générateur de congruence combinée linéaire</desc>
<return>double</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>math</extension>
<name>Log</name>
<proto>float log(float arg)</proto>
<desc>Logarithme naturel (népérien)</desc>
<return>float</return>
<params>
<param>
<paramname>arg</paramname>
<paramtype>float</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>math</extension>
<name>Log10</name>
<proto>float log10(float arg)</proto>
<desc>logarithme en base 10.</desc>
<return>float</return>
<params>
<param>
<paramname>arg</paramname>
<paramtype>float</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>math</extension>
<name>max</name>
<proto>mixed max(mixed arg1, mixed arg2, mixed argn)</proto>
<desc>La plus grande valeur.</desc>
<return>mixed</return>
<params>
<param>
<paramname>arg1</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>arg2</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>argn</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>math</extension>
<name>min</name>
<proto>mixed min(mixed arg1, mixed arg2, mixed argn)</proto>
<desc>La plus petite valeur.</desc>
<return>mixed</return>
<params>
<param>
<paramname>arg1</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>arg2</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>argn</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>math</extension>
<name>mt_rand</name>
<proto>int mt_rand( [int min] [, int max])</proto>
<desc>Génère une meilleure valeur aléatoire.</desc>
<return>int</return>
<params>
<param>
<paramname>min</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>max</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>math</extension>
<name>mt_srand</name>
<proto>void mt_srand(int seed)</proto>
<desc>Initialise une meilleure valeur aléatoire</desc>
<return>void</return>
<params>
<param>
<paramname>seed</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>math</extension>
<name>mt_getrandmax</name>
<proto>int mt_getrandmax(void)</proto>
<desc>La plus grand valeur aléatoire possible.</desc>
<return>int</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>math</extension>
<name>number_format</name>
<proto>string number_format(float number [, int decimals] [, string dec_point] [, string thousands_sep])</proto>
<desc>Formate un nombre pour l'affichage.</desc>
<return>string</return>
<params>
<param>
<paramname>number</paramname>
<paramtype>float</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int decimals</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string dec_point</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string thousands_sep</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>math</extension>
<name>OctDec</name>
<proto>int octdec(string octal_string)</proto>
<desc>Convertit d'octal en décimal.</desc>
<return>int</return>
<params>
<param>
<paramname>octal_string</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>math</extension>
<name>pi</name>
<proto>double pi(void)</proto>
<desc>Retourne la valeur de pi</desc>
<return>double</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>math</extension>
<name>pow</name>
<proto>number pow(number base, number exp)</proto>
<desc>Puissance</desc>
<return>number</return>
<params>
<param>
<paramname>base</paramname>
<paramtype>number</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>exp</paramname>
<paramtype>number</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>math</extension>
<name>rad2deg</name>
<proto>double rad2deg(double number)</proto>
<desc>Convertit de radians en degrés</desc>
<return>double</return>
<params>
<param>
<paramname>number</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>math</extension>
<name>rand</name>
<proto>int rand( [int min] [, int max])</proto>
<desc>Génère une valeur aléatoire.</desc>
<return>int</return>
<params>
<param>
<paramname>min</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>max</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>math</extension>
<name>round</name>
<proto>double round(double val [, int precision])</proto>
<desc>Arrondi.</desc>
<return>double</return>
<params>
<param>
<paramname>val</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>precision</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>math</extension>
<name>Sin</name>
<proto>float sin(float arg)</proto>
<desc>Sinus</desc>
<return>float</return>
<params>
<param>
<paramname>arg</paramname>
<paramtype>float</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>math</extension>
<name>Sqrt</name>
<proto>float sqrt(float arg)</proto>
<desc>Racine carrée.</desc>
<return>float</return>
<params>
<param>
<paramname>arg</paramname>
<paramtype>float</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>math</extension>
<name>srand</name>
<proto>void srand(int seed)</proto>
<desc>Initialise le générateur de nombres aléatoires</desc>
<return>void</return>
<params>
<param>
<paramname>seed</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>math</extension>
<name>Tan</name>
<proto>float tan(float arg)</proto>
<desc>Tangente</desc>
<return>float</return>
<params>
<param>
<paramname>arg</paramname>
<paramtype>float</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mbstring</extension>
<name>mb_internal_encoding</name>
<proto>string mb_internal_encoding( [string encoding])</proto>
<desc>Lit/modifie l'encodage interne</desc>
<return>string
</return>
<params>
<param>
<paramname>encoding</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mbstring</extension>
<name>mb_http_input</name>
<proto>string mb_http_input( [string type])</proto>
<desc>Détecte le type d'encodage d'un caractère HTTP</desc>
<return>string</return>
<params>
<param>
<paramname>type</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mbstring</extension>
<name>mb_http_output</name>
<proto>string mb_http_output( [string encoding])</proto>
<desc>Lit/modifie l'encodage d'affichage</desc>
<return>string</return>
<params>
<param>
<paramname>encoding</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mbstring</extension>
<name>mb_detect_order</name>
<proto>array mb_detect_order( [mixed encoding-list])</proto>
<desc>Lit/modifie l'ordre de détection des encodages</desc>
<return>array</return>
<params>
<param>
<paramname>encoding list</paramname>
<paramtype>mixed</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mbstring</extension>
<name>mb_substitute_character</name>
<proto>mixed mb_substitute_character( [mixed substrchar])</proto>
<desc>Lit/modifie les caractères de substitution</desc>
<return>mixed</return>
<params>
<param>
<paramname>substrchar</paramname>
<paramtype>mixed</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mbstring</extension>
<name>mb_output_handler</name>
<proto>string mb_output_handler(string contents, int status)</proto>
<desc>Fonction de traitement des affichages web</desc>
<return>string</return>
<params>
<param>
<paramname>contents</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>status</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mbstring</extension>
<name>mb_preferred_mime_name</name>
<proto>string mb_preferred_mime_name(string encoding)</proto>
<desc>Détecte l'encodage MIME</desc>
<return>string</return>
<params>
<param>
<paramname>encoding</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mbstring</extension>
<name>mb_strlen</name>
<proto>string mb_strlen(string str [, string encoding])</proto>
<desc>Retourne la taille d'une chaîne</desc>
<return>string</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>encoding</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mbstring</extension>
<name>mb_strpos</name>
<proto>string mb_strpos(string haystack, string needle [, int offset] [, string encoding])</proto>
<desc>Repère la première occurence d'un caractère dans une chaîne</desc>
<return>string</return>
<params>
<param>
<paramname>haystack</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>needle</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>offset</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>encoding</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mbstring</extension>
<name>mb_strrpos</name>
<proto>string mb_strrpos(string haystack, string needle [, string encoding])</proto>
<desc>Repère la dernière occurence d'un caractère dans une chaîne</desc>
<return>string</return>
<params>
<param>
<paramname>haystack</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>needle</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>encoding</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mbstring</extension>
<name>mb_substr</name>
<proto>string mb_substr(string str, int start [, int length] [, string encoding])</proto>
<desc>Lit une sous-chaîne</desc>
<return>string</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>start</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>length</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>encoding</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mbstring</extension>
<name>mb_strcut</name>
<proto>string mb_strcut(string str, int start [, int length] [, string encoding])</proto>
<desc>Coupe une partie de chaîne</desc>
<return>string</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>start</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>length</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>encoding</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mbstring</extension>
<name>mb_strwidth</name>
<proto>int mb_strwidth(string str [, string encoding])</proto>
<desc>Retourne la largeur d'une chaîne</desc>
<return>int</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>encoding</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mbstring</extension>
<name>mb_strimwidth</name>
<proto>string mb_strimwidth(string str, int start, int width, string trimmarker [, string encoding])</proto>
<desc>Tronque une chaîne</desc>
<return>string</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>start</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>width</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>trimmarker</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>encoding</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mbstring</extension>
<name>mb_convert_encoding</name>
<proto>string mb_convert_encoding(string str, string to-encoding [, mixed from-encoding])</proto>
<desc>Conversion d'encodage</desc>
<return>string</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>to-encoding</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>from encoding</paramname>
<paramtype>mixed</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mbstring</extension>
<name>mb_detect_encoding</name>
<proto>string mb_detect_encoding(string str [, mixed encoding-list])</proto>
<desc>Détecte un encodage</desc>
<return>string</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>encoding list</paramname>
<paramtype>mixed</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mbstring</extension>
<name>mb_convert_kana</name>
<proto>string mb_convert_kana(string str, string option [, mixed encoding])</proto>
<desc>Convertit entre les différents "kana"</desc>
<return>string</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>option</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>encoding</paramname>
<paramtype>mixed</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mbstring</extension>
<name>mb_encode_mimeheader</name>
<proto>string mb_encode_mimeheader(string str [, string charset] [, string transfer-encoding] [, string linefeed])</proto>
<desc>Encode une chaîne pour une en-tête MIME</desc>
<return>string</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>charset</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>transfer encoding</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>linefeed</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mbstring</extension>
<name>mb_decode_mimeheader</name>
<proto>string mb_decode_mimeheader(string str)</proto>
<desc>Décode une en-tête MIME</desc>
<return>string</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mbstring</extension>
<name>mb_convert_variables</name>
<proto>string mb_convert_variables(string to-encoding, mixed from-encoding, mixed vars)</proto>
<desc>Convertit l'encodage de variables</desc>
<return>string</return>
<params>
<param>
<paramname>to-encoding</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>from-encoding</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>vars</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mbstring</extension>
<name>mb_encode_numericentity</name>
<proto>string mb_encode_numericentity(string str, array convmap [, string encoding])</proto>
<desc>Encode des entités HTML</desc>
<return>string</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>convmap</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>encoding</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mbstring</extension>
<name>mb_decode_numericentity</name>
<proto>string mb_decode_numericentity(string str, array convmap [, string encoding])</proto>
<desc>Décode les entités HTML en caractères</desc>
<return>string</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>convmap</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>encoding</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mbstring</extension>
<name>mb_send_mail</name>
<proto>boolean mb_send_mail(string to, string subject, string message [, string additional_headers] [, string additional_parameter])</proto>
<desc>Envoie un mail encodé ISO-2022-JP (mail japonais)</desc>
<return>boolean</return>
<params>
<param>
<paramname>to</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>subject</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>message</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>additional_headers</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>additional_parameter</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcal</extension>
<name>mcal_open</name>
<proto>resource mcal_open(string calendar, string username, string password, int options)</proto>
<desc>Ouvre une connexion MCAL.</desc>
<return>resource</return>
<params>
<param>
<paramname>calendar</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>username</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>password</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>options</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcal</extension>
<name>mcal_popen</name>
<proto>resource mcal_popen(string calendar, string username, string password, int options)</proto>
<desc>Ouvre une connexion persistante MCAL.</desc>
<return>resource</return>
<params>
<param>
<paramname>calendar</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>username</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>password</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>options</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcal</extension>
<name>mcal_reopen</name>
<proto>resource mcal_reopen(string calendar, int options)</proto>
<desc>Réouvre une connexion MCAL</desc>
<return>resource</return>
<params>
<param>
<paramname>calendar</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>options</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcal</extension>
<name>mcal_close</name>
<proto>int mcal_close(resource mcal_stream, int flags)</proto>
<desc>Ferme une connexion MCAL.</desc>
<return>int</return>
<params>
<param>
<paramname>mcal_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>flags</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcal</extension>
<name>mcal_create_calendar</name>
<proto>string mcal_create_calendar(resource mcal_stream, string calendar)</proto>
<desc>Crée un nouveau calendrier</desc>
<return>string</return>
<params>
<param>
<paramname>mcal_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>calendar</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcal</extension>
<name>mcal_rename_calendar</name>
<proto>string mcal_rename_calendar(resource mcal_stream, string old_name, string new_name)</proto>
<desc>Renomme un calendrier</desc>
<return>string</return>
<params>
<param>
<paramname>mcal_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>old_name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>new_name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcal</extension>
<name>mcal_delete_calendar</name>
<proto>string mcal_delete_calendar(resource mcal_stream, string calendar)</proto>
<desc>Efface un calendrier</desc>
<return>string</return>
<params>
<param>
<paramname>mcal_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>calendar</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcal</extension>
<name>mcal_fetch_event</name>
<proto>object mcal_fetch_event(resource mcal_stream, int event_id [, int options])</proto>
<desc>Recherche un événement dans le calendrier.</desc>
<return>object</return>
<params>
<param>
<paramname>mcal_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>event_id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int options</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcal</extension>
<name>mcal_list_events</name>
<proto>array mcal_list_events(resource mcal_stream, objectbegin_date [, object end_date])</proto>
<desc>Retourne une liste d'événement entre deux dates.</desc>
<return>array</return>
<params>
<param>
<paramname>mcal_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>objectbegin_date</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>end_date</paramname>
<paramtype>object</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcal</extension>
<name>mcal_append_event</name>
<proto>int mcal_append_event(resource mcal_stream)</proto>
<desc>Enregistre un nouvel événement dans un calendrier MCAL.</desc>
<return>int</return>
<params>
<param>
<paramname>mcal_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcal</extension>
<name>mcal_store_event</name>
<proto>int mcal_store_event(resource mcal_stream)</proto>
<desc>Modifie un événement dans un calendrier MCAL.</desc>
<return>int</return>
<params>
<param>
<paramname>mcal_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcal</extension>
<name>mcal_delete_event</name>
<proto>int mcal_delete_event(resource mcal_stream [, int event_id])</proto>
<desc>Efface un événement dans un  calendrier MCAL.</desc>
<return>int</return>
<params>
<param>
<paramname>mcal_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int event_id</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcal</extension>
<name>mcal_snooze</name>
<proto>int mcal_snooze(int id)</proto>
<desc>Eteint l'alarme d'un événement.</desc>
<return>int</return>
<params>
<param>
<paramname>id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcal</extension>
<name>mcal_list_alarms</name>
<proto>array mcal_list_alarms(resource mcal_stream [, int begin_year] [, int begin_month] [, int begin_day] [, int end_year] [, int end_month] [, int end_day])</proto>
<desc>Retourne une liste d'événements qui ont une alarme
      prévue à une date.</desc>
<return>array</return>
<params>
<param>
<paramname>mcal_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>begin_year</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>begin_month</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>begin_day</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>end_year</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>end_month</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>end_day</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcal</extension>
<name>mcal_event_init</name>
<proto>int mcal_event_init(resource mcal_stream)</proto>
<desc>Initialise la structure globale d'un flot.</desc>
<return>int</return>
<params>
<param>
<paramname>mcal_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcal</extension>
<name>mcal_event_set_category</name>
<proto>int mcal_event_set_category(resource mcal_stream, string category)</proto>
<desc>Fixe la catégorie de la structure globale.</desc>
<return>int</return>
<params>
<param>
<paramname>mcal_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>category</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcal</extension>
<name>mcal_event_set_title</name>
<proto>int mcal_event_set_title(resource mcal_stream, string title)</proto>
<desc>Fixe le titre de la structure globale.</desc>
<return>int</return>
<params>
<param>
<paramname>mcal_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>title</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcal</extension>
<name>mcal_event_set_description</name>
<proto>int mcal_event_set_description (resource mcal_stream, string description)</proto>
<desc>Fixe la description de la structure globale.</desc>
<return>int
</return>
<params>
<param>
<paramname>mcal_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>description</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcal</extension>
<name>mcal_event_set_start</name>
<proto>int mcal_event_set_start(resource mcal_stream, int year, int month [, int day] [, int hour] [, int min] [, int sec])</proto>
<desc>Fixe les dates de début et de fin de la structure globale.</desc>
<return>int</return>
<params>
<param>
<paramname>mcal_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>year</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>month</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>day</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>hour</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>min</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>sec</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcal</extension>
<name>mcal_event_set_end</name>
<proto>int mcal_event_set_end(resource mcal_stream, int year, int month [, int day] [, int hour] [, int min] [, int sec])</proto>
<desc>Fixe la date de fin de la structure globale.</desc>
<return>int</return>
<params>
<param>
<paramname>mcal_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>year</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>month</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>day</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>hour</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>min</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>sec</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcal</extension>
<name>mcal_event_set_alarm</name>
<proto>int mcal_event_set_alarm(resource mcal_stream, int alarm)</proto>
<desc>Fixe l'alarme de la structure globale.</desc>
<return>int</return>
<params>
<param>
<paramname>mcal_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>alarm</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcal</extension>
<name>mcal_event_set_class</name>
<proto>int mcal_event_set_class(resource mcal_stream, int class)</proto>
<desc>Fixe la classe de la structure globale.</desc>
<return>int</return>
<params>
<param>
<paramname>mcal_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>class</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcal</extension>
<name>mcal_is_leap_year</name>
<proto>int mcal_is_leap_year(int year)</proto>
<desc>Vérifie que l'année est bissextile.</desc>
<return>int</return>
<params>
<param>
<paramname>year</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcal</extension>
<name>mcal_days_in_month</name>
<proto>int mcal_days_in_month(int month, int leap_year)</proto>
<desc>Retourne le nombre de jour d'un mois.</desc>
<return>int</return>
<params>
<param>
<paramname>month</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>leap_year</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcal</extension>
<name>mcal_date_valid</name>
<proto>int mcal_date_valid(int year, int month, int day)</proto>
<desc>Valide une date.</desc>
<return>int</return>
<params>
<param>
<paramname>year</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>month</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>day</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcal</extension>
<name>mcal_time_valid</name>
<proto>int mcal_time_valid(int hour, int minutes, int seconds)</proto>
<desc>Valide une heure.</desc>
<return>int</return>
<params>
<param>
<paramname>hour</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>minutes</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>seconds</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcal</extension>
<name>mcal_day_of_week</name>
<proto>int mcal_day_of_week(int year, int month, int day)</proto>
<desc>Le jour de la semaine.</desc>
<return>int</return>
<params>
<param>
<paramname>year</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>month</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>day</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcal</extension>
<name>mcal_day_of_year</name>
<proto>int mcal_day_of_year(int year, int month, int day)</proto>
<desc>Le jour de l'année.</desc>
<return>int</return>
<params>
<param>
<paramname>year</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>month</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>day</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcal</extension>
<name>mcal_date_compare</name>
<proto>int mcal_date_compare(int a_year, int a_month, int a_day, int b_year, int b_month, int b_day)</proto>
<desc>Compare deux dates.</desc>
<return>int</return>
<params>
<param>
<paramname>a_year</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>a_month</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>a_day</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>b_year</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>b_month</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>b_day</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcal</extension>
<name>mcal_next_recurrence</name>
<proto>int mcal_next_recurrence(resource mcal_stream, int weekstart, array next)</proto>
<desc>Retourne la prochaine occurrence d'un événement.</desc>
<return>int</return>
<params>
<param>
<paramname>mcal_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>weekstart</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>next</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcal</extension>
<name>mcal_event_set_recur_none</name>
<proto>int mcal_event_set_recur_none (resource mcal_stream)</proto>
<desc>Supprime la récurrence de la structure globale.</desc>
<return>int
</return>
<params>
<param>
<paramname>mcal_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcal</extension>
<name>mcal_event_set_recur_daily</name>
<proto>int mcal_event_set_recur_daily (resource mcal_stream, int year, int month, int day, int interval)</proto>
<desc>Fixe la récurrence quotidienne.</desc>
<return>int
</return>
<params>
<param>
<paramname>mcal_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>year</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>month</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>day</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>interval</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcal</extension>
<name>mcal_event_set_recur_weekly</name>
<proto>int mcal_event_set_recur_weekly (resource mcal_stream, int year, int month, int day, int interval, int weekdays)</proto>
<desc>Fixe la récurrence hebdomadaire.</desc>
<return>int
</return>
<params>
<param>
<paramname>mcal_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>year</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>month</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>day</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>interval</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>weekdays</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcal</extension>
<name>mcal_event_set_recur_monthly_mday</name>
<proto>int mcal_event_set_recur_monthly_mday (resource mcal_stream, int year, int month, int day, int interval)</proto>
<desc>Fixe la récurrence.</desc>
<return>int
</return>
<params>
<param>
<paramname>mcal_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>year</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>month</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>day</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>interval</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcal</extension>
<name>mcal_event_set_recur_monthly_wday</name>
<proto>int mcal_event_set_recur_monthly_wday (resource mcal_stream, int year, int month, int day, int interval)</proto>
<desc>Fixe la récurrence mensuelle.</desc>
<return>int
</return>
<params>
<param>
<paramname>mcal_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>year</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>month</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>day</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>interval</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcal</extension>
<name>mcal_event_set_recur_yearly</name>
<proto>int mcal_event_set_recur_yearly (resource mcal_stream, int year, int month, int day, int interval)</proto>
<desc>Fixe la récurrence annuelle.</desc>
<return>int
</return>
<params>
<param>
<paramname>mcal_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>year</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>month</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>day</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>interval</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcal</extension>
<name>mcal_fetch_current_stream_event</name>
<proto>object mcal_fetch_current_stream_event (resource mcal_stream)</proto>
<desc>Retourne un objet contenant la structure de date pour le flot courant.</desc>
<return>object
</return>
<params>
<param>
<paramname>mcal_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcal</extension>
<name>mcal_event_add_attribute</name>
<proto>void mcal_event_add_attribute (resource mcal_stream, string attribute, string value)</proto>
<desc>Ajoute un attribut et une valeur à la structure globale</desc>
<return>void
</return>
<params>
<param>
<paramname>mcal_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>attribute</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>value</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcal</extension>
<name>mcal_expunge</name>
<proto>int mcal_expunge (resource mcal_stream)</proto>
<desc>Supprime tous les événements marqués pour l'effacement</desc>
<return>int
</return>
<params>
<param>
<paramname>mcal_stream</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcrypt</extension>
<name>mcrypt_get_cipher_name</name>
<proto>string mcrypt_get_cipher_name int cipher string mcrypt_get_cipher_name(int cipher, string cipher)</proto>
<desc>Lit le nom du chiffrement utilisé.</desc>
<return>string</return>
<params>
<param>
<paramname>cipher</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>cipher</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcrypt</extension>
<name>mcrypt_get_block_size</name>
<proto>int mcrypt_get_block_size int cipher int mcrypt_get_block_size(int cipher, string cipher, string module)</proto>
<desc>Retourne la taille de bloc d'un chiffrement.</desc>
<return>int</return>
<params>
<param>
<paramname>cipher</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>cipher</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>module</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcrypt</extension>
<name>mcrypt_get_key_size</name>
<proto>int mcrypt_get_key_size int cipher int mcrypt_get_key_size(int cipher, string cipher, string module)</proto>
<desc>Retourne la taille de la clé d'un chiffrement.</desc>
<return>int</return>
<params>
<param>
<paramname>cipher</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>cipher</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>module</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcrypt</extension>
<name>mcrypt_create_iv</name>
<proto>string mcrypt_create_iv(int size, int source)</proto>
<desc>Crée un vecteur d'initialisation à partir d'une source aléatoire.</desc>
<return>string
</return>
<params>
<param>
<paramname>size</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>source</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcrypt</extension>
<name>mcrypt_cbc</name>
<proto>string mcrypt_cbc int cipher string key string data int mode string iv string mcrypt_cbc(int cipher, string key, string data, int mode [, string iv], string cipher, string key, string data, int mode [, string iv])</proto>
<desc>Encrypte/décrypte des données en mode CBC</desc>
<return>string</return>
<params>
<param>
<paramname>cipher</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>key</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>iv</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>cipher</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>key</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>iv</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcrypt</extension>
<name>mcrypt_cfb</name>
<proto>string mcrypt_cfb int cipher string key string data int mode string iv string mcrypt_cfb(int cipher, string key, string data, int mode, string iv, string cipher, string key, string data, int mode [, string iv])</proto>
<desc>Encrypte/décrypte des données en mode CFB</desc>
<return>string</return>
<params>
<param>
<paramname>cipher</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>key</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>iv</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>cipher</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>key</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>iv</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcrypt</extension>
<name>mcrypt_ecb</name>
<proto>string mcrypt_ecb int cipher string key string data int mode string mcrypt_ecb(int cipher, string key, string data, int mode, string cipher, string key, string data, int mode [, string iv])</proto>
<desc>Encrypte/décrypte des données en mode ECB</desc>
<return>string</return>
<params>
<param>
<paramname>cipher</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>key</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>cipher</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>key</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>iv</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcrypt</extension>
<name>mcrypt_ofb</name>
<proto>string mcrypt_ofb int cipher string key string data int mode string iv string mcrypt_ofb(int cipher, string key, string data, int mode, string iv, string cipher, string key, string data, int mode [, string iv])</proto>
<desc>Encrypte/décrypte des données en mode OFB</desc>
<return>string</return>
<params>
<param>
<paramname>cipher</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>key</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>iv</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>cipher</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>key</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>iv</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcrypt</extension>
<name>mcrypt_list_algorithms</name>
<proto>array mcrypt_list_algorithms( [string lib_dir])</proto>
<desc>Liste tous les algorithmes de chiffrement supportés</desc>
<return>array</return>
<params>
<param>
<paramname>lib_dir</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcrypt</extension>
<name>mcrypt_list_modes</name>
<proto>array mcrypt_list_modes( [string lib_dir])</proto>
<desc>Liste tous les modes de chiffrement supportés</desc>
<return>array</return>
<params>
<param>
<paramname>lib_dir</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcrypt</extension>
<name>mcrypt_get_iv_size</name>
<proto>int mcrypt_get_iv_size string cipher string mode int mcrypt_get_iv_size(string cipher, string mode, resource td)</proto>
<desc>Retourne la taille du VI utilisé par un couple chiffrement/mode</desc>
<return>int</return>
<params>
<param>
<paramname>cipher</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>td</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcrypt</extension>
<name>mcrypt_encrypt</name>
<proto>string mcrypt_encrypt(string cipher, string key, string data, string mode [, string iv])</proto>
<desc>Encrypte un texte</desc>
<return>string</return>
<params>
<param>
<paramname>cipher</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>key</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>iv</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcrypt</extension>
<name>mcrypt_decrypt</name>
<proto>string mcrypt_decrypt(string cipher, string key, string data, string mode [, string iv])</proto>
<desc>Décrypte un texte</desc>
<return>string</return>
<params>
<param>
<paramname>cipher</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>key</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>iv</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcrypt</extension>
<name>mcrypt_module_open</name>
<proto>resource mcrypt_module_open(string algorithm, string algorithm_directory, string mode, string mode_directory)</proto>
<desc>Ouvre le module de l'algorithme et le mode à utiliser</desc>
<return>resource</return>
<params>
<param>
<paramname>algorithm</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>algorithm_directory</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode_directory</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcrypt</extension>
<name>mcrypt_generic_init</name>
<proto>int mcrypt_generic_init(resource td, string key, string iv)</proto>
<desc>Initialise tous les buffers nécessaires</desc>
<return>int</return>
<params>
<param>
<paramname>td</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>key</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>iv</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcrypt</extension>
<name>mcrypt_generic</name>
<proto>string mcrypt_generic(resource td, string data)</proto>
<desc>Encrypte</desc>
<return>string</return>
<params>
<param>
<paramname>td</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcrypt</extension>
<name>mdecrypt_generic</name>
<proto>string mdecrypt_generic(resource td, string data)</proto>
<desc>Décrypte</desc>
<return>string</return>
<params>
<param>
<paramname>td</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcrypt</extension>
<name>mcrypt_generic_end</name>
<proto>bool mcrypt_generic_end(resource td)</proto>
<desc>Termine un cryptage</desc>
<return>bool</return>
<params>
<param>
<paramname>td</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcrypt</extension>
<name>mcrypt_enc_self_test</name>
<proto>int mcrypt_enc_self_test(resource td)</proto>
<desc>Test  un module ouvert</desc>
<return>int</return>
<params>
<param>
<paramname>td</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcrypt</extension>
<name>mcrypt_enc_is_block_algorithm_mode</name>
<proto>int mcrypt_enc_is_block_algorithm_mode(resource td)</proto>
<desc>Teste le cryptage par bloc d'un mode</desc>
<return>int</return>
<params>
<param>
<paramname>td</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcrypt</extension>
<name>mcrypt_enc_is_block_algorithm</name>
<proto>int mcrypt_enc_is_block_algorithm(resource td)</proto>
<desc>Test le cryptage par bloc d'un algorithme</desc>
<return>int</return>
<params>
<param>
<paramname>td</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcrypt</extension>
<name>mcrypt_enc_is_block_mode</name>
<proto>int mcrypt_enc_is_block_mode(resource td)</proto>
<desc>Teste si le mode retourne les données par bloc</desc>
<return>int</return>
<params>
<param>
<paramname>td</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcrypt</extension>
<name>mcrypt_enc_get_block_size</name>
<proto>int mcrypt_enc_get_block_size(resource td)</proto>
<desc>Retourne la taille de bloc d'un algorithme</desc>
<return>int</return>
<params>
<param>
<paramname>td</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcrypt</extension>
<name>mcrypt_enc_get_key_size</name>
<proto>int mcrypt_enc_get_key_size(resource td)</proto>
<desc>Retourne la taille maximale de la clé pour un mode</desc>
<return>int</return>
<params>
<param>
<paramname>td</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcrypt</extension>
<name>mcrypt_enc_get_supported_key_sizes</name>
<proto>array mcrypt_enc_get_supported_key_sizes(resource td)</proto>
<desc>Retourne un tableau contenant les tailles de clés acceptées par un algorithme</desc>
<return>array</return>
<params>
<param>
<paramname>td</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcrypt</extension>
<name>mcrypt_enc_get_iv_size</name>
<proto>int mcrypt_enc_get_iv_size(resource td)</proto>
<desc>Retourne la taille du VI d'un algorithme</desc>
<return>int</return>
<params>
<param>
<paramname>td</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcrypt</extension>
<name>mcrypt_enc_get_algorithms_name</name>
<proto>string mcrypt_enc_get_algorithms_name(resource td)</proto>
<desc>Retourne le nom de l'algorithme</desc>
<return>string</return>
<params>
<param>
<paramname>td</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcrypt</extension>
<name>mcrypt_enc_get_modes_name</name>
<proto>string mcrypt_enc_get_modes_name(resource td)</proto>
<desc>Retourne le nom du mode</desc>
<return>string</return>
<params>
<param>
<paramname>td</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcrypt</extension>
<name>mcrypt_module_self_test</name>
<proto>bool mcrypt_module_self_test(string algorithm [, string lib_dir])</proto>
<desc>Teste un mode</desc>
<return>bool</return>
<params>
<param>
<paramname>algorithm</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string lib_dir</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcrypt</extension>
<name>mcrypt_module_is_block_algorithm_mode</name>
<proto>bool mcrypt_module_is_block_algorithm_mode(string mode [, string lib_dir])</proto>
<desc>Indique si un mode fonctionne par bloc</desc>
<return>bool</return>
<params>
<param>
<paramname>mode</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string lib_dir</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcrypt</extension>
<name>mcrypt_module_is_block_algorithm</name>
<proto>bool mcrypt_module_is_block_algorithm(string algorithm [, string lib_dir])</proto>
<desc>Indique si un algorithme fonctionne par bloc</desc>
<return>bool</return>
<params>
<param>
<paramname>algorithm</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string lib_dir</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcrypt</extension>
<name>mcrypt_module_is_block_mode</name>
<proto>bool mcrypt_module_is_block_mode(string mode [, string lib_dir])</proto>
<desc>Indique si un mode travaille par blocs</desc>
<return>bool</return>
<params>
<param>
<paramname>mode</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string lib_dir</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcrypt</extension>
<name>mcrypt_module_get_algo_block_size</name>
<proto>int mcrypt_module_get_algo_block_size(string algorithm [, string lib_dir])</proto>
<desc>Retourne la taille de bloc d'un algorithme</desc>
<return>int</return>
<params>
<param>
<paramname>algorithm</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string lib_dir</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcrypt</extension>
<name>mcrypt_module_get_algo_key_size</name>
<proto>int mcrypt_module_get_algo_key_size(string algorithm [, string lib_dir])</proto>
<desc>Retourne la taille maximale de clé</desc>
<return>int</return>
<params>
<param>
<paramname>algorithm</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string lib_dir</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mcrypt</extension>
<name>mcrypt_module_get_algo_supported_key_sizes</name>
<proto>array mcrypt_module_enc_get_algo_supported_key_sizes(string algorithm [, string lib_dir])</proto>
<desc>Indique les tailles de clé supportées par un algorithme</desc>
<return>array</return>
<params>
<param>
<paramname>algorithm</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string lib_dir</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mhash</extension>
<name>mhash_get_hash_name</name>
<proto>string mhash_get_hash_name(int hash)</proto>
<desc>Retourne le nom du hash.</desc>
<return>string</return>
<params>
<param>
<paramname>hash</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mhash</extension>
<name>mhash_get_block_size</name>
<proto>int mhash_get_block_size(int hash)</proto>
<desc>Retourne la taille de bloc du hash.</desc>
<return>int</return>
<params>
<param>
<paramname>hash</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mhash</extension>
<name>mhash_count</name>
<proto>int mhash_count(void)</proto>
<desc>retourne l'identifiant maximal de hash.</desc>
<return>int</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mhash</extension>
<name>mhash</name>
<proto>string mhash(int hash, string data)</proto>
<desc>Calcule un hash.</desc>
<return>string</return>
<params>
<param>
<paramname>hash</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mhash</extension>
<name>mhash_keygen_s2k</name>
<proto>string mhash_keygen_s2k(int hash, string password, string salt, int bytes)</proto>
<desc>Génère une clé</desc>
<return>string</return>
<params>
<param>
<paramname>hash</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>password</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>salt</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>bytes</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFMovie</name>
<proto>new swfmovie(void)</proto>
<desc>Crée un objet 'animation'.</desc>
<return>new</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFMovie->output</name>
<proto>void swfmovie->output(void)</proto>
<desc>Envoie votre animation au navigateur.</desc>
<return>void</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFMovie->save</name>
<proto>void swfmovie->save(string filename)</proto>
<desc>Sauve dans un fichier.</desc>
<return>void</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFMovie->add</name>
<proto>void swfmovie->add(ressource instance)</proto>
<desc>Ajoute un objet dans une animation.</desc>
<return>void</return>
<params>
<param>
<paramname>instance</paramname>
<paramtype>ressource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFMovie->remove</name>
<proto>void swfmovie->remove(ressource instance)</proto>
<desc>Supprime un objet d'une animation.</desc>
<return>void</return>
<params>
<param>
<paramname>instance</paramname>
<paramtype>ressource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFMovie->setbackground</name>
<proto>void swfmovie->setbackground(int red, int green, int blue)</proto>
<desc>Modifie la couleur de fond.</desc>
<return>void</return>
<params>
<param>
<paramname>red</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>green</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>blue</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFMovie->setrate</name>
<proto>void swfmovie->setrate(int rate)</proto>
<desc>Modifie la vitesse de l'animation.</desc>
<return>void</return>
<params>
<param>
<paramname>rate</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFMovie->setdimension</name>
<proto>void swfmovie->setdimension(int width, int height)</proto>
<desc>Modifie les dimensions de l'animation.</desc>
<return>void</return>
<params>
<param>
<paramname>width</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>height</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFMovie->setframes</name>
<proto>void swfmovie->setframes(string numberofframes)</proto>
<desc>Modifie le nombre total d'images dans l'animation.</desc>
<return>void</return>
<params>
<param>
<paramname>numberofframes</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFMovie->nextframe</name>
<proto>void swfmovie->nextframe(void)</proto>
<desc>Passe à l'image suivante.</desc>
<return>void</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFMovie->streammp3</name>
<proto>void swfmovie->streammp3(string mp3FileName)</proto>
<desc>Envoie un fichier MP3 en streaming.</desc>
<return>void</return>
<params>
<param>
<paramname>mp3FileName</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFDisplayItem</name>
<proto>new swfdisplayitem(void)</proto>
<desc>Crée un nouvel objet d'affichage displayitem.</desc>
<return>new</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFDisplayItem->moveTo</name>
<proto>void swfdisplayitem->moveto(int x, int y)</proto>
<desc>Déplace un objet en coordonnées globales.</desc>
<return>void</return>
<params>
<param>
<paramname>x</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFDisplayItem->move</name>
<proto>void swfdisplayitem->move(int dx, int dy)</proto>
<desc>Déplace un objet en coordonnées relatives.</desc>
<return>void</return>
<params>
<param>
<paramname>dx</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>dy</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFDisplayItem->scaleTo</name>
<proto>void swfdisplayitem->scaleto(int x, int y)</proto>
<desc>Etire un objet en coordonnées globales.</desc>
<return>void</return>
<params>
<param>
<paramname>x</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFDisplayItem->scale</name>
<proto>void swfdisplayitem->scale(int dx, int dy)</proto>
<desc>Etire un objet relativement.</desc>
<return>void</return>
<params>
<param>
<paramname>dx</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>dy</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFDisplayItem->rotateTo</name>
<proto>void swfdisplayitem->rotateto(double degrees)</proto>
<desc>Tourne un objet en angle absolu.</desc>
<return>void</return>
<params>
<param>
<paramname>degrees</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFDisplayItem->Rotate</name>
<proto>void swfdisplayitem->rotate(double ddegrees)</proto>
<desc>Fait tourner une forme relativement.</desc>
<return>void</return>
<params>
<param>
<paramname>ddegrees</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFDisplayItem->skewXTo</name>
<proto>void swfdisplayitem->skewxto(double degrees)</proto>
<desc>Incline suivant les X.</desc>
<return>void</return>
<params>
<param>
<paramname>degrees</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFDisplayItem->skewX</name>
<proto>void swfdisplayitem->skewx(double ddegrees)</proto>
<desc>Incline suivant les X relativement.</desc>
<return>void</return>
<params>
<param>
<paramname>ddegrees</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFDisplayItem->skewYTo</name>
<proto>void swfdisplayitem->skewyto(double degrees)</proto>
<desc>Incline suivant les Y.</desc>
<return>void</return>
<params>
<param>
<paramname>degrees</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFDisplayItem->skewY</name>
<proto>void swfdisplayitem->skewy(double ddegrees)</proto>
<desc>Incline suivant les Y relativement.</desc>
<return>void</return>
<params>
<param>
<paramname>ddegrees</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFDisplayItem->setDepth</name>
<proto>void swfdisplayitem->setdepth(double depth)</proto>
<desc>Modifie la place en profondeur (z-order)</desc>
<return>void</return>
<params>
<param>
<paramname>depth</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFDisplayItem->remove</name>
<proto>void swfdisplayitem->remove(void)</proto>
<desc>Supprime un objet d'une animation</desc>
<return>void</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFDisplayItem->setName</name>
<proto>void swfdisplayitem->setname(string name)</proto>
<desc>Nomme un objet</desc>
<return>void</return>
<params>
<param>
<paramname>name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFDisplayItem->setRatio</name>
<proto>void swfdisplayitem->setratio(double ratio)</proto>
<desc>Modifie le ratio de l'objet.</desc>
<return>void</return>
<params>
<param>
<paramname>ratio</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFDisplayItem->addColor</name>
<proto>void swfdisplayitem->addcolor( [int red] [, int green] [, int blue] [, int a])</proto>
<desc>Ajoute une couleur à une transoformation.</desc>
<return>void</return>
<params>
<param>
<paramname></paramname>
<paramtype>int red</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int green</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int blue</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int a</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFDisplayItem->multColor</name>
<proto>void swfdisplayitem->multcolor( [int red] [, int green] [, int blue] [, int a])</proto>
<desc>Multiplie la couleur de transformation.</desc>
<return>void</return>
<params>
<param>
<paramname></paramname>
<paramtype>int red</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int green</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int blue</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int a</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFShape</name>
<proto>new swfshape(void)</proto>
<desc>Crée une nouvelle forme.</desc>
<return>new</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFShape->setLine</name>
<proto>void swfshape->setline(int width [, int red] [, int green] [, int blue] [, int a])</proto>
<desc>Modifie le style de ligne de la forme.</desc>
<return>void</return>
<params>
<param>
<paramname>width</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int red</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int green</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int blue</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int a</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFShape->addFill</name>
<proto>void swfshape->addfill int red int green int blue int a void swfshape->addfill SWFbitmap bitmap int flags void swfshape->addfill(int red, int green, int blue [, int a], SWFbitmap bitmap [, int flags], SWFGradient gradient [, int flags])</proto>
<desc>Ajoute un remplissage plein à la forme.</desc>
<return>void</return>
<params>
<param>
<paramname>red</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>green</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>blue</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int a</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>bitmap</paramname>
<paramtype>SWFbitmap</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int flags</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>gradient</paramname>
<paramtype>SWFGradient</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int flags</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFShape->setLeftFill</name>
<proto>void swfshape->setleftfill swfgradient fill void swfshape->setleftfill(swfgradient fill, int red, int green, int blue [, int a])</proto>
<desc>Modifie la couleur de rastérisation de gauche.</desc>
<return>void</return>
<params>
<param>
<paramname>fill</paramname>
<paramtype>swfgradient</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>red</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>green</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>blue</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int a</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFShape->setRightFill</name>
<proto>void swfshape->setrightfill swfgradient fill void swfshape->setrightfill(swfgradient fill, int red, int green, int blue [, int a])</proto>
<desc>Modifie la couleur de rastériation de droite.</desc>
<return>void</return>
<params>
<param>
<paramname>fill</paramname>
<paramtype>swfgradient</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>red</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>green</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>blue</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int a</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFShape->movePenTo</name>
<proto>void swfshape->movepento(int x, int y)</proto>
<desc>Déplace le stylo.</desc>
<return>void</return>
<params>
<param>
<paramname>x</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFShape->movePen</name>
<proto>void swfshape->movepen(int dx, int dy)</proto>
<desc>Déplace le stylo relativement.</desc>
<return>void</return>
<params>
<param>
<paramname>dx</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>dy</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFShape->drawLineTo</name>
<proto>void swfshape->drawlineto(int x, int y)</proto>
<desc>Dessine une ligne.</desc>
<return>void</return>
<params>
<param>
<paramname>x</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFShape->drawLine</name>
<proto>void swfshape->drawline(int dx, int dy)</proto>
<desc>Dessine une ligne relativement.</desc>
<return>void</return>
<params>
<param>
<paramname>dx</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>dy</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFShape->drawCurveTo</name>
<proto>void swfshape->drawcurveto(int controlx, int controly, int anchorx, int anchory)</proto>
<desc>Dessine une courbe.</desc>
<return>void</return>
<params>
<param>
<paramname>controlx</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>controly</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>anchorx</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>anchory</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFShape->drawCurve</name>
<proto>void swfshape->drawcurve(int controldx, int controldy, int anchordx, int anchordy)</proto>
<desc>Dessine une courbe relativement.</desc>
<return>void</return>
<params>
<param>
<paramname>controldx</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>controldy</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>anchordx</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>anchordy</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFGradient</name>
<proto>new swfgradient(void)</proto>
<desc>Crée un objet gradient</desc>
<return>new</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFGradient->addEntry</name>
<proto>void swfgradient->addentry(double ratio, int red, int green, int blue [, int a])</proto>
<desc>Ajoute une couleur à la liste du gradient.</desc>
<return>void</return>
<params>
<param>
<paramname>ratio</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>red</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>green</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>blue</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int a</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFBitmap</name>
<proto>new swfbitmap(string filename [, int alphafilename])</proto>
<desc>Crée un objet bitmap</desc>
<return>new</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int alphafilename</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFBitmap->getWidth</name>
<proto>int swfbitmap->getwidth(void)</proto>
<desc>Retourne la largeur d'une bitmap.</desc>
<return>int</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFBitmap->getHeight</name>
<proto>int swfbitmap->getheight(void)</proto>
<desc>Retourne la hauteur d'une bitmap.</desc>
<return>int</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFFill</name>
<proto>)</proto>
<desc>Crée un objet de remplissage</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFFill->moveTo</name>
<proto>void swffill->moveto(int x, int y)</proto>
<desc>Déplace l'origine de l'objet SWFFill</desc>
<return>void</return>
<params>
<param>
<paramname>x</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFFill->scaleTo</name>
<proto>void swffill->scaleto(int x, int y)</proto>
<desc>Modifie l'échelle de la forme</desc>
<return>void</return>
<params>
<param>
<paramname>x</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFFill->rotateTo</name>
<proto>void swffill->rotateto(double degrees)</proto>
<desc>Tourne la forme</desc>
<return>void</return>
<params>
<param>
<paramname>degrees</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFFill->skewXTo</name>
<proto>void swffill->skewxto(double x)</proto>
<desc>Incline (abscisses)</desc>
<return>void</return>
<params>
<param>
<paramname>x</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFFill->skewYTo</name>
<proto>void swffill->skewyto(double y)</proto>
<desc>Incline (ordonnées)</desc>
<return>void</return>
<params>
<param>
<paramname>y</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFMorph</name>
<proto>new swfmorph(void)</proto>
<desc>Crée un morphing.</desc>
<return>new</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFMorph->getshape1</name>
<proto>mixed swfmorph->getshape1(void)</proto>
<desc>Sélectionne la forme de départ</desc>
<return>mixed</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFMorph->getshape2</name>
<proto>mixed swfmorph->getshape2(void)</proto>
<desc>Sélectionne la forme de fin</desc>
<return>mixed</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFText</name>
<proto>new swftext(void)</proto>
<desc>Crée un nouvel objet texte.</desc>
<return>new</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFText->setFont</name>
<proto>void swftext->setfont(string font)</proto>
<desc>Sélectionne la police courante</desc>
<return>void</return>
<params>
<param>
<paramname>font</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFText->setHeight</name>
<proto>void swftext->setheight(int height)</proto>
<desc>Modifie la hauteur de la police courante</desc>
<return>void</return>
<params>
<param>
<paramname>height</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFText->setSpacing</name>
<proto>void swftext->setspacing(double spacing)</proto>
<desc>Modifie l'espacement de police</desc>
<return>void</return>
<params>
<param>
<paramname>spacing</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFText->setColor</name>
<proto>void swftext->setcolor(int red, int green, int blue [, int a])</proto>
<desc>Modifie la couleur de la police</desc>
<return>void</return>
<params>
<param>
<paramname>red</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>green</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>blue</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int a</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFText->moveTo</name>
<proto>void swftext->moveto(int x, int y)</proto>
<desc>Déplace le stylo de texte</desc>
<return>void</return>
<params>
<param>
<paramname>x</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFText->addString</name>
<proto>void swftext->addstring(string string)</proto>
<desc>Ajoute du texte</desc>
<return>void</return>
<params>
<param>
<paramname>string</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFText->getWidth</name>
<proto>void swftext->addstring(string string)</proto>
<desc>Calcule la longueur d'une chaîne</desc>
<return>void</return>
<params>
<param>
<paramname>string</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFFont</name>
<proto>new swffont(string filename)</proto>
<desc>Charge une police</desc>
<return>new</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>swffont->getwidth</name>
<proto>int swffont->getwidth(string string)</proto>
<desc>Retourne la taille de la chaîne</desc>
<return>int</return>
<params>
<param>
<paramname>string</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFTextField</name>
<proto>new swftextfield( [int flags])</proto>
<desc>Crée un nouveau champs texte</desc>
<return>new</return>
<params>
<param>
<paramname></paramname>
<paramtype>int flags</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFTextField->setFont</name>
<proto>void swftextfield->setfont(string font)</proto>
<desc>Modifie la police du champs</desc>
<return>void</return>
<params>
<param>
<paramname>font</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFTextField->setbounds</name>
<proto>void swftextfield->setbounds(int width, int height)</proto>
<desc>Sélectionne la largeur et hauteur du champs</desc>
<return>void</return>
<params>
<param>
<paramname>width</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>height</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFTextField->align</name>
<proto>void swftextfield->align(int alignement)</proto>
<desc>Modifie l'alignement du texte</desc>
<return>void</return>
<params>
<param>
<paramname>alignement</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFTextField->setHeight</name>
<proto>void swftextfield->setheight(int height)</proto>
<desc>Modifie la hauteur de la police du champs texte.</desc>
<return>void</return>
<params>
<param>
<paramname>height</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFTextField->setLeftMargin</name>
<proto>void swftextfield->setleftmargin(int width)</proto>
<desc>Modifie la marge de gauche.</desc>
<return>void</return>
<params>
<param>
<paramname>width</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFTextField->setrightMargin</name>
<proto>void swftextfield->setrightmargin(int width)</proto>
<desc>Modifie la marge de droite.</desc>
<return>void</return>
<params>
<param>
<paramname>width</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFTextField->setMargins</name>
<proto>void swftextfield->setmargins(int left, int right)</proto>
<desc>Modifie les marges du champs texte.</desc>
<return>void</return>
<params>
<param>
<paramname>left</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>right</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFTextField->setindentation</name>
<proto>void swftextfield->setindentation(int width)</proto>
<desc>Modifie l'indentation de la première ligne.</desc>
<return>void</return>
<params>
<param>
<paramname>width</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFTextField->setLineSpacing</name>
<proto>void swftextfield->setlinespacing(int height)</proto>
<desc>Modifie l'espacement de lignes.</desc>
<return>void</return>
<params>
<param>
<paramname>height</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFTextField->setcolor</name>
<proto>void swftextfield->setcolor(int red, int green, int blue [, int a])</proto>
<desc>Modifie la couleur du champs texte</desc>
<return>void</return>
<params>
<param>
<paramname>red</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>green</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>blue</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int a</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFTextField->setname</name>
<proto>void swftextfield->setname(string name)</proto>
<desc>Nomme le champs texte</desc>
<return>void</return>
<params>
<param>
<paramname>name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFTextField->addstring</name>
<proto>void swftextfield->addstring(string string)</proto>
<desc>Ajoute au texte</desc>
<return>void</return>
<params>
<param>
<paramname>string</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFSprite</name>
<proto>new swfsprite(void)</proto>
<desc>Crée un sprite</desc>
<return>new</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFSprite->add</name>
<proto>mixed swfsprite->add(ressource object)</proto>
<desc>Ajoute un objet à un sprite</desc>
<return>mixed</return>
<params>
<param>
<paramname>object</paramname>
<paramtype>ressource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFSprite->remove</name>
<proto>void swfsprite->remove(ressource object)</proto>
<desc>Supprime un objet dans un sprite</desc>
<return>void</return>
<params>
<param>
<paramname>object</paramname>
<paramtype>ressource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFSprite->setframes</name>
<proto>void swfsprite->setframes(int numberofframes)</proto>
<desc>Fixe le nombre maximum d'image dans le sprite.</desc>
<return>void</return>
<params>
<param>
<paramname>numberofframes</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFSprite->nextframe</name>
<proto>void swfsprite->nextframe(void)</proto>
<desc>Va à la prochaine image du sprite.</desc>
<return>void</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFbutton</name>
<proto>new swfbutton(void)</proto>
<desc>Crée un nouveau bouton.</desc>
<return>new</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFbutton->addShape</name>
<proto>void swfbutton->addshape(ressource shape, int flags)</proto>
<desc>Ajoute une forme à un bouton</desc>
<return>void</return>
<params>
<param>
<paramname>shape</paramname>
<paramtype>ressource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>flags</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFbutton->setUp</name>
<proto>void swfbutton->setup(ressource shape)</proto>
<desc>Alias de SWFbutton->addShape(shape, SWFBUTTON_UP)</desc>
<return>void</return>
<params>
<param>
<paramname>shape</paramname>
<paramtype>ressource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFbutton->setOver</name>
<proto>void swfbutton->setover(ressource shape)</proto>
<desc>Alias de addShape(shape, SWFBUTTON_OVER)</desc>
<return>void</return>
<params>
<param>
<paramname>shape</paramname>
<paramtype>ressource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFbutton->setDown</name>
<proto>void swfbutton->setdown(ressource shape)</proto>
<desc>Alias de addShape(shape, SWFBUTTON_DOWN)</desc>
<return>void</return>
<params>
<param>
<paramname>shape</paramname>
<paramtype>ressource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFbutton->setHit</name>
<proto>void swfbutton->sethit(ressource shape)</proto>
<desc>Alias de addShape(shape, SWFBUTTON_HIT)</desc>
<return>void</return>
<params>
<param>
<paramname>shape</paramname>
<paramtype>ressource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFbutton->addAction</name>
<proto>void swfbutton->addaction(ressource action, int flags)</proto>
<desc>Ajoute une action au bouton</desc>
<return>void</return>
<params>
<param>
<paramname>action</paramname>
<paramtype>ressource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>flags</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFbutton->setAction</name>
<proto>void swfbutton->setaction(ressource action)</proto>
<desc>Assigne l'action du bouton</desc>
<return>void</return>
<params>
<param>
<paramname>action</paramname>
<paramtype>ressource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ming</extension>
<name>SWFAction</name>
<proto>new swfaction(string script)</proto>
<desc>Crée une nouvelle action.</desc>
<return>new</return>
<params>
<param>
<paramname>script</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>misc</extension>
<name>connection_aborted</name>
<proto>int connection_aborted(void)</proto>
<desc>Indique si le client a abandonné la connexion.</desc>
<return>int</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>misc</extension>
<name>connection_status</name>
<proto>int connection_status(void)</proto>
<desc>Retourne les bits de status de la connexion.</desc>
<return>int</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>misc</extension>
<name>connection_timeout</name>
<proto>bool connection_timeout(void)</proto>
<desc>Indique si le script a expiré.</desc>
<return>bool</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>misc</extension>
<name>define</name>
<proto>int define(string name, mixed value [, int case_insensitive])</proto>
<desc>Définit une constante.</desc>
<return>int</return>
<params>
<param>
<paramname>name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>value</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>case_insensitive</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>misc</extension>
<name>constant</name>
<proto>mixed constant(string name)</proto>
<desc>Retourne la valeur d'une constante</desc>
<return>mixed</return>
<params>
<param>
<paramname>name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>misc</extension>
<name>defined</name>
<proto>int defined(string name)</proto>
<desc>Vérifie qu'une constante existe.</desc>
<return>int</return>
<params>
<param>
<paramname>name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>misc</extension>
<name>die</name>
<proto>void die(string message)</proto>
<desc>Affiche un message et termine le script courant</desc>
<return>void</return>
<params>
<param>
<paramname>message</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>misc</extension>
<name>eval</name>
<proto>void eval(string code_str)</proto>
<desc>Evalue une chaîne comme un script PHP.</desc>
<return>void</return>
<params>
<param>
<paramname>code_str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>misc</extension>
<name>exit</name>
<proto>void exit(mixed status)</proto>
<desc>Termine le script courant.</desc>
<return>void</return>
<params>
<param>
<paramname>status</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>misc</extension>
<name>get_browser</name>
<proto>object get_browser( [string user_agent])</proto>
<desc>Indique de quoi est capable le navigateur client.</desc>
<return>object</return>
<params>
<param>
<paramname>user_agent</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>misc</extension>
<name>highlight_file</name>
<proto>boolean highlight_file(string filename)</proto>
<desc>Colorisation de la syntaxe d'un fichier</desc>
<return>boolean</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>misc</extension>
<name>highlight_string</name>
<proto>void highlight_string(string str)</proto>
<desc>Colorisation d'une chaîne</desc>
<return>void</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>misc</extension>
<name>ignore_user_abort</name>
<proto>int ignore_user_abort( [int setting])</proto>
<desc>Active l'option décidant si, lors de la déconnexion du client, le script doit poursuivre son exécution ou non.</desc>
<return>int</return>
<params>
<param>
<paramname>setting</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>misc</extension>
<name>iptcparse</name>
<proto>array iptcparse(string iptcblock)</proto>
<desc>Analyse un bloc binaire IPTC et recherche les balises simples.</desc>
<return>array</return>
<params>
<param>
<paramname>iptcblock</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>misc</extension>
<name>leak</name>
<proto>void leak(int bytes)</proto>
<desc>Fuite de mémoire.</desc>
<return>void</return>
<params>
<param>
<paramname>bytes</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>misc</extension>
<name>pack</name>
<proto>string pack(string format [, mixed args])</proto>
<desc>Compacte des données dans une chaîne binaire.</desc>
<return>string</return>
<params>
<param>
<paramname>format</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>args</paramname>
<paramtype>mixed</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>misc</extension>
<name>show_source</name>
<proto>void show_source(string filename)</proto>
<desc>Colorisation de la syntaxe d'un fichier</desc>
<return>void</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>misc</extension>
<name>sleep</name>
<proto>void sleep(int seconds)</proto>
<desc>Retarde l'exécution.</desc>
<return>void</return>
<params>
<param>
<paramname>seconds</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>misc</extension>
<name>uniqid</name>
<proto>int uniqid(string prefix [, boolean lcg])</proto>
<desc>Génère un identifiant unique.</desc>
<return>int</return>
<params>
<param>
<paramname>prefix</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>lcg</paramname>
<paramtype>boolean</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>misc</extension>
<name>unpack</name>
<proto>array unpack(string format, string data)</proto>
<desc>Déconditionne des données depuis une chaîne binaire.</desc>
<return>array</return>
<params>
<param>
<paramname>format</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>misc</extension>
<name>usleep</name>
<proto>void usleep(int micro_seconds)</proto>
<desc>Retarde l'exécution en micro-secondes</desc>
<return>void</return>
<params>
<param>
<paramname>micro_seconds</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mnogosearch</extension>
<name>udm_add_search_limit</name>
<proto>int udm_add_search_limit(int agent, int var, string val)</proto>
<desc>Ajoute différentes limitations de recherche</desc>
<return>int</return>
<params>
<param>
<paramname>agent</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>var</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>val</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mnogosearch</extension>
<name>udm_cat_path</name>
<proto>array udm_cat_path(int agent, string category)</proto>
<desc>Lit le chemin de la catégorie courante.</desc>
<return>array</return>
<params>
<param>
<paramname>agent</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>category</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mnogosearch</extension>
<name>udm_cat_list</name>
<proto>array udm_cat_list(int agent, string category)</proto>
<desc>Liste toutes les catégories soeurs d'une catégorie.</desc>
<return>array</return>
<params>
<param>
<paramname>agent</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>category</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mnogosearch</extension>
<name>Udm_Alloc_Agent</name>
<proto>int udm_alloc_agent(string dbaddr [, string dbmode])</proto>
<desc>Alloue une session mnoGoSearch</desc>
<return>int</return>
<params>
<param>
<paramname>dbaddr</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>dbmode</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mnogosearch</extension>
<name>udm_api_version</name>
<proto>int udm_api_version()</proto>
<desc>Lit la version des API mnoGoSearch.</desc>
<return>int</return>
<params>
</params>
</function>
<function>
<extension>mnogosearch</extension>
<name>udm_clear_search_limits</name>
<proto>int udm_clear_search_limits(int agent)</proto>
<desc>Annule toutes les limitations de recherche</desc>
<return>int</return>
<params>
<param>
<paramname>agent</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mnogosearch</extension>
<name>Udm_Errno</name>
<proto>int udm_errno(int agent)</proto>
<desc>Numéro d'erreur mnoGoSearch</desc>
<return>int</return>
<params>
<param>
<paramname>agent</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mnogosearch</extension>
<name>Udm_Error</name>
<proto>string udm_error(int agent)</proto>
<desc>Message d'erreur mnoGoSearch</desc>
<return>string</return>
<params>
<param>
<paramname>agent</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mnogosearch</extension>
<name>Udm_Find</name>
<proto>int udm_find(int agent, string query)</proto>
<desc>Effectue une recherche</desc>
<return>int</return>
<params>
<param>
<paramname>agent</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>query</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mnogosearch</extension>
<name>Udm_Free_Agent</name>
<proto>int udm_free_agent(int agent)</proto>
<desc>Détruit une session mnoGoSearch</desc>
<return>int</return>
<params>
<param>
<paramname>agent</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mnogosearch</extension>
<name>udm_free_ispell_data</name>
<proto>int udm_free_ispell_data(int agent)</proto>
<desc>Libère la mémoire allouée pour ispell</desc>
<return>int</return>
<params>
<param>
<paramname>agent</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mnogosearch</extension>
<name>Udm_Free_Res</name>
<proto>int udm_free_res(int res)</proto>
<desc>Libère un résultat mnoGoSearch</desc>
<return>int</return>
<params>
<param>
<paramname>res</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mnogosearch</extension>
<name>udm_get_doc_count</name>
<proto>int udm_get_doc_count(int agent)</proto>
<desc>Lit le nombre total de documents dans les bases.</desc>
<return>int</return>
<params>
<param>
<paramname>agent</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mnogosearch</extension>
<name>Udm_Get_Res_Field</name>
<proto>int udm_get_res_field(int res, int row, int field)</proto>
<desc>Lit un champs de résultat mnoGoSearch</desc>
<return>int</return>
<params>
<param>
<paramname>res</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>row</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mnogosearch</extension>
<name>Udm_Get_Res_Param</name>
<proto>int udm_get_res_param(int res, int param)</proto>
<desc>Lit les paramètres de résultats mnoGoSearch</desc>
<return>int</return>
<params>
<param>
<paramname>res</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>param</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mnogosearch</extension>
<name>udm_load_ispell_data</name>
<proto>int udm_load_ispell_data(int agent, int var, string val1, string val2, int flag)</proto>
<desc>Charge les données ispell</desc>
<return>int</return>
<params>
<param>
<paramname>agent</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>var</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>val1</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>val2</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>flag</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mnogosearch</extension>
<name>udm_set_agent_param</name>
<proto>int udm_set_agent_param(int agent, int var, string val)</proto>
<desc>Modifie les paramètres de l'agent mnoGoSearch</desc>
<return>int</return>
<params>
<param>
<paramname>agent</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>var</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>val</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql</name>
<proto>resource msql(string database, string query, resource link_identifier)</proto>
<desc>Exécute une requête mSQL.</desc>
<return>resource</return>
<params>
<param>
<paramname>database</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>query</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql_affected_rows</name>
<proto>int msql_affected_rows(resource query_identifier)</proto>
<desc>Retourne le nombre de ligne affectées.</desc>
<return>int</return>
<params>
<param>
<paramname>query_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql_close</name>
<proto>int msql_close(resource link_identifier)</proto>
<desc>Ferme une connexion mSQL.</desc>
<return>int</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql_connect</name>
<proto>resource msql_connect( [string hostname] [, string hostname:port] [, string username] [, string password])</proto>
<desc>Ouvre une connexion mSQL.</desc>
<return>resource</return>
<params>
<param>
<paramname>hostname</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>hostname port</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>username</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>password</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql_create_db</name>
<proto>int msql_create_db(string database name [, resource link_identifier])</proto>
<desc>Crée une base de données mSQL.</desc>
<return>int</return>
<params>
<param>
<paramname>database</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql_createdb</name>
<proto>int msql_createdb(string database name [, resource link_identifier])</proto>
<desc>Crée une base de données mSQL.</desc>
<return>int</return>
<params>
<param>
<paramname>database</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql_data_seek</name>
<proto>int (resource query_identifier, int row_number)</proto>
<desc>Déplace le pointeur interne.</desc>
<return>int</return>
<params>
<param>
<paramname>query_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>row_number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql_dbname</name>
<proto>string msql_dbname(resource query_identifier, int i)</proto>
<desc>Lit le nom de la base de données courante.</desc>
<return>string</return>
<params>
<param>
<paramname>query_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>i</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql_drop_db</name>
<proto>int msql_drop_db(string database_name, int link_identifier)</proto>
<desc>Efface une base de données mSQL.</desc>
<return>int</return>
<params>
<param>
<paramname>database_name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>link_identifier</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql_dropdb</name>
<proto>)</proto>
<desc>Efface une base de données mSQL.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql_error</name>
<proto>string msql_error(void)</proto>
<desc>Retourne le message d'erreur</desc>
<return>string</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql_fetch_array</name>
<proto>int msql_fetch_array(resource query_identifier [, int result_type])</proto>
<desc>Lit une ligne sous la forme d'un tableau.</desc>
<return>int</return>
<params>
<param>
<paramname>query_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>result_type</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql_fetch_field</name>
<proto>object msql_fetch_field(resource query_identifier, int field_offset)</proto>
<desc>Lit la valeur d'un champs.</desc>
<return>object</return>
<params>
<param>
<paramname>query_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field_offset</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql_fetch_object</name>
<proto>int msql_fetch_object(resource query_identifier [, int result_type])</proto>
<desc>Lit une ligne sous la forme d'un objet.</desc>
<return>int</return>
<params>
<param>
<paramname>query_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>result_type</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql_fetch_row</name>
<proto>array msql_fetch_row(int query_identifier)</proto>
<desc>Retourne une ligne sous la forme d'un objet.</desc>
<return>array</return>
<params>
<param>
<paramname>query_identifier</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql_fieldname</name>
<proto>string msql_fieldname(resource query_identifier, int field)</proto>
<desc>Lit le nom d'un champs.</desc>
<return>string</return>
<params>
<param>
<paramname>query_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql_field_seek</name>
<proto>int msql_field_seek(resource query_identifier, int field_offset)</proto>
<desc>Fixe d'offset d'un champs.</desc>
<return>int</return>
<params>
<param>
<paramname>query_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field_offset</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql_fieldtable</name>
<proto>int msql_fieldtable(resource query_identifier, int field)</proto>
<desc>Retourne le nom d'une table à partir d'un nom de champs.</desc>
<return>int</return>
<params>
<param>
<paramname>query_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql_fieldtype</name>
<proto>string msql_fieldtype(resource query_identifier, int i)</proto>
<desc>Retourne le type de champs.</desc>
<return>string</return>
<params>
<param>
<paramname>query_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>i</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql_fieldflags</name>
<proto>string msql_fieldflags(resource query_identifier, int i)</proto>
<desc>Retourne le flag d'un champs.</desc>
<return>string</return>
<params>
<param>
<paramname>query_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>i</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql_fieldlen</name>
<proto>int msql_fieldlen(resource query_identifier, int i)</proto>
<desc>Retourne la longueur d'un champs.</desc>
<return>int</return>
<params>
<param>
<paramname>query_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>i</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql_free_result</name>
<proto>int msql_free_result(resource query_identifier)</proto>
<desc>Libère le résultat de la mémoire.</desc>
<return>int</return>
<params>
<param>
<paramname>query_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql_freeresult</name>
<proto>)</proto>
<desc>Libère le résultat de la mémoire.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql_list_fields</name>
<proto>int msql_list_fields(string database, string tablename)</proto>
<desc>Liste les champs d'une table.</desc>
<return>int</return>
<params>
<param>
<paramname>database</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>tablename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql_listfields</name>
<proto>)</proto>
<desc>Liste les champs d'une table.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql_list_dbs</name>
<proto>int msql_list_dbs(void)</proto>
<desc>Liste les bases de données mSQL sur un serveur.</desc>
<return>int</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql_listdbs</name>
<proto>)</proto>
<desc>Liste les bases de données mSQL sur un serveur.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql_list_tables</name>
<proto>int msql_list_tables(string database)</proto>
<desc>Liste les tables mSQL sur une base de données</desc>
<return>int</return>
<params>
<param>
<paramname>database</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql_listtables</name>
<proto>)</proto>
<desc>Liste les tables mSQL sur une base de données.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql_num_fields</name>
<proto>int msql_num_fields(resource query_identifier)</proto>
<desc>Retourne le nombre de champs dans un résultat.</desc>
<return>int</return>
<params>
<param>
<paramname>query_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql_num_rows</name>
<proto>int msql_num_rows(resource query_identifier)</proto>
<desc>Retourne le nombre de lignes dans un résultat.</desc>
<return>int</return>
<params>
<param>
<paramname>query_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql_numfields</name>
<proto>int msql_numfields(resource query_identifier)</proto>
<desc>Retourne le nombre de champs dans un résultat.</desc>
<return>int</return>
<params>
<param>
<paramname>query_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql_numrows</name>
<proto>int msql_numrows(void)</proto>
<desc>Retourne le nombre de lignes dans un résultat.</desc>
<return>int</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql_pconnect</name>
<proto>int msql_pconnect( [string hostname] [, string hostname:port] [, string username] [, string password])</proto>
<desc>Ouvre une connexion persistante à un serveur mSQL.</desc>
<return>int</return>
<params>
<param>
<paramname>hostname</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>hostname port</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>username</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>password</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql_query</name>
<proto>resource msql_query(string query, int link_identifier)</proto>
<desc>Envoie une requête mSQL</desc>
<return>resource</return>
<params>
<param>
<paramname>query</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>link_identifier</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql_regcase</name>
<proto>)</proto>
<desc>Prépare une chaîne pour une recherche par expression régulière insensible à la casse.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql_result</name>
<proto>int msql_result(resource query_identifier, int i, mixed field)</proto>
<desc>Retourne les données de résultat.</desc>
<return>int</return>
<params>
<param>
<paramname>query_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>i</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql_select_db</name>
<proto>)</proto>
<desc>Sélectionne une base de données mSQL.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql_selectdb</name>
<proto>)</proto>
<desc>Sélectionne une base de données mSQL.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>msql</extension>
<name>msql_tablename</name>
<proto>string msql_tablename(int query_identifier, int field)</proto>
<desc>Retourne le nom d'une table à partir d'un nom de champs.</desc>
<return>string</return>
<params>
<param>
<paramname>query_identifier</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mssql</extension>
<name>mssql_close</name>
<proto>bool mssql_close( [resource link_identifier])</proto>
<desc>Ferme une connexion MS SQL Server.</desc>
<return>bool</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mssql</extension>
<name>mssql_connect</name>
<proto>resource mssql_connect( [string servername] [, string username] [, string password])</proto>
<desc>Ouvre une connexion à un serveur MS SQL server.</desc>
<return>resource</return>
<params>
<param>
<paramname>servername</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>username</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>password</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mssql</extension>
<name>mssql_data_seek</name>
<proto>int mssql_data_seek(resource result_identifier, int row_number)</proto>
<desc>Déplace le pointeur interne de ligne.</desc>
<return>int</return>
<params>
<param>
<paramname>result_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>row_number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mssql</extension>
<name>mssql_fetch_array</name>
<proto>int mssql_fetch_array(resource result)</proto>
<desc>Lit une ligne dans un tableau.</desc>
<return>int</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mssql</extension>
<name>mssql_fetch_field</name>
<proto>object mssql_fetch_field(resource result [, int field_offset])</proto>
<desc>Lit les inforamtions sur le champs.</desc>
<return>object</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field_offset</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mssql</extension>
<name>mssql_fetch_object</name>
<proto>)</proto>
<desc>Retourne une ligne sous la forme d'un objet.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>mssql</extension>
<name>mssql_fetch_row</name>
<proto>)</proto>
<desc>Lit une ligne comme un tableau.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>mssql</extension>
<name>mssql_field_length</name>
<proto>int mssql_field_length(resource result [, int offset])</proto>
<desc>Lit la longueur d'un champs.</desc>
<return>int</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>offset</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mssql</extension>
<name>mssql_field_name</name>
<proto>int mssql_field_name(resource result [, int offset])</proto>
<desc>Lit le nom d'un champs.</desc>
<return>int</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>offset</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mssql</extension>
<name>mssql_field_seek</name>
<proto>int mssql_field_seek(resource result, int field_offset)</proto>
<desc>Fixe l'offset du pointeur de champs.</desc>
<return>int</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field_offset</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mssql</extension>
<name>mssql_field_type</name>
<proto>string mssql_field_type(resource result [, int offset])</proto>
<desc>Lit le nom d'un champs.</desc>
<return>string</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>offset</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mssql</extension>
<name>mssql_free_result</name>
<proto>int mssql_free_result(resource result)</proto>
<desc>Libère la mémoire.</desc>
<return>int</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mssql</extension>
<name>mssql_get_last_message</name>
<proto>string mssql_get_last_message (void)</proto>
<desc>Retourne le dernier message d'erreur du serveur ( min_message_severity?).</desc>
<return>string
</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mssql</extension>
<name>mssql_min_error_severity</name>
<proto>void mssql_min_error_severity (int severity)</proto>
<desc>Fixe le niveau de sévérité des erreurs.</desc>
<return>void
</return>
<params>
<param>
<paramname>severity</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mssql</extension>
<name>mssql_min_message_severity</name>
<proto>void mssql_min_message_severity (int severity)</proto>
<desc>Fixe le niveau de sévérité des messages d'erreurs.</desc>
<return>void
</return>
<params>
<param>
<paramname>severity</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mssql</extension>
<name>mssql_num_fields</name>
<proto>int mssql_num_fields(resource result)</proto>
<desc>Retourne le nombre de champs dans un résultat.</desc>
<return>int</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mssql</extension>
<name>mssql_num_rows</name>
<proto>int mssql_num_rows(resource result)</proto>
<desc>Retourne le nombre de lignes dans un résultat.</desc>
<return>int</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mssql</extension>
<name>mssql_pconnect</name>
<proto>resource mssql_pconnect( [string servername] [, string username] [, string password])</proto>
<desc>Ouvre une connexion persistante à un serveur MS SQL.</desc>
<return>resource</return>
<params>
<param>
<paramname>servername</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>username</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>password</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mssql</extension>
<name>mssql_query</name>
<proto>resource mssql_query(string query [, resource link_identifier])</proto>
<desc>Envoie une requête SQL.</desc>
<return>resource</return>
<params>
<param>
<paramname>query</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mssql</extension>
<name>mssql_result</name>
<proto>)</proto>
<desc>Get result data.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>mssql</extension>
<name>mssql_select_db</name>
<proto>)</proto>
<desc>Selectionne la base de données MS SQL.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>mysql</extension>
<name>mysql_affected_rows</name>
<proto>)</proto>
<desc>Retourne le nombre de lignes affectées lors de la dernière
     requête SQL.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>mysql</extension>
<name>mysql_change_user</name>
<proto>)</proto>
<desc>Change le nom de session de l'utilisateur actif.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>mysql</extension>
<name>mysql_close</name>
<proto>)</proto>
<desc>Ferme la connexion MySQL.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>mysql</extension>
<name>mysql_connect</name>
<proto>)</proto>
<desc>Ouvre une connexion à un serveur MySQL.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>mysql</extension>
<name>mysql_create_db</name>
<proto>)</proto>
<desc>Crée une base de données MySQL.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>mysql</extension>
<name>mysql_data_seek</name>
<proto>)</proto>
<desc>Déplace le pointeur interne de résultat.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>mysql</extension>
<name>mysql_db_name</name>
<proto>int mysql_db_name(resource result_identifier, int row [, mixed field])</proto>
<desc>Lit les noms des bases de donné</desc>
<return>int</return>
<params>
<param>
<paramname>result_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>row</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field</paramname>
<paramtype>mixed</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>mysql</extension>
<name>mysql_db_query</name>
<proto>)</proto>
<desc>Envoie une requête MySQL à un serveur MySQL.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>mysql</extension>
<name>mysql_drop_db</name>
<proto>)</proto>
<desc>Efface une base de données MySQL.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>mysql</extension>
<name>mysql_errno</name>
<proto>)</proto>
<desc>Retourne le numéro de message d'erreur de la dernière
     opération MySQL.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>mysql</extension>
<name>mysql_error</name>
<proto>)</proto>
<desc>Retourne le texte associée avec l'erreur générée
      lors de la dernière requête.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>mysql</extension>
<name>mysql_fetch_array</name>
<proto>)</proto>
<desc>Retourne une ligne de résultat sous la forme d'un tableau associatif.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>mysql</extension>
<name>mysql_fetch_assoc</name>
<proto>array mysql_fetch_assoc(resource result_identifier)</proto>
<desc>Lit une ligne de résultat dans un tableau associatif</desc>
<return>array</return>
<params>
<param>
<paramname>result_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>mysql</extension>
<name>mysql_fetch_field</name>
<proto>)</proto>
<desc>Retourne les données enregistrées dans une colonne
     sous forme d'objet.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>mysql</extension>
<name>mysql_fetch_lengths</name>
<proto>)</proto>
<desc>Retourne la taille de chaque colonne d'une ligne de résultat.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>mysql</extension>
<name>mysql_fetch_object</name>
<proto>)</proto>
<desc>Retourne les lignes résultats sous la forme d'un objet.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>mysql</extension>
<name>mysql_fetch_row</name>
<proto>)</proto>
<desc>Retourne une ligne de résultat sous la forme d'un tableau.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>mysql</extension>
<name>mysql_field_flags</name>
<proto>)</proto>
<desc>Retourne le sémaphore associé à la colonne
     spécifiée dans le résultat courant.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>mysql</extension>
<name>mysql_field_name</name>
<proto>)</proto>
<desc>Retourne le nom d'une colonne</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>mysql</extension>
<name>mysql_field_len</name>
<proto>)</proto>
<desc>Retourne la longueur du champs spécifié.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>mysql</extension>
<name>mysql_field_seek</name>
<proto>)</proto>
<desc>Place le pointeur de résultat à un offset donné</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>mysql</extension>
<name>mysql_field_table</name>
<proto>)</proto>
<desc>Retourne le nom de la table où se trouve une colonne</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>mysql</extension>
<name>mysql_field_type</name>
<proto>)</proto>
<desc>Retourne le type de la colonne spécifiée dans le résultat courant.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>mysql</extension>
<name>mysql_free_result</name>
<proto>)</proto>
<desc>Efface le résultat de la mémoire.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>mysql</extension>
<name>mysql_insert_id</name>
<proto>)</proto>
<desc>Retourne l'identifiant généré par la dernière
     requête INSERT.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>mysql</extension>
<name>mysql_list_dbs</name>
<proto>)</proto>
<desc>Liste les bases de données disponibles sur le serveur MySQL.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>mysql</extension>
<name>mysql_list_fields</name>
<proto>)</proto>
<desc>Liste les champs du résultat MySQL.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>mysql</extension>
<name>mysql_list_tables</name>
<proto>)</proto>
<desc>Liste les tables d'une base de données.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>mysql</extension>
<name>mysql_num_fields</name>
<proto>)</proto>
<desc>Retourne le nombre de champs d'un résultat.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>mysql</extension>
<name>mysql_num_rows</name>
<proto>)</proto>
<desc>Retourne le nombre de ligne d'un résultat.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>mysql</extension>
<name>mysql_pconnect</name>
<proto>)</proto>
<desc>Ouvre une connexion persistante à un serveur MySQL.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>mysql</extension>
<name>mysql_query</name>
<proto>)</proto>
<desc>Envoie une requête SQL à un serveur MySQL.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>mysql</extension>
<name>mysql_result</name>
<proto>)</proto>
<desc>Retourne un champs d'un résultat.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>mysql</extension>
<name>mysql_select_db</name>
<proto>)</proto>
<desc>Sélectionne une base de données MySQL.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>mysql</extension>
<name>mysql_tablename</name>
<proto>)</proto>
<desc>Lit le nom de la table qui contient le champs spécifié.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>network</extension>
<name>checkdnsrr</name>
<proto>int checkdnsrr(string host [, string type])</proto>
<desc>Résolution DNS d'une adresse IP.</desc>
<return>int</return>
<params>
<param>
<paramname>host</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>type</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>network</extension>
<name>closelog</name>
<proto>int closelog(void)</proto>
<desc>Ferme la connexion à l'historique système.</desc>
<return>int</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>network</extension>
<name>debugger_off</name>
<proto>int debugger_off(void)</proto>
<desc>Inactive le debugger interne de PHP.</desc>
<return>int</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>network</extension>
<name>debugger_on</name>
<proto>)</proto>
<desc>Active le debugger interne de PHP.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>network</extension>
<name>define_syslog_variables</name>
<proto>void define_syslog_variables(void)</proto>
<desc>Initialise toutes les constantes liées au syslog</desc>
<return>void</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>network</extension>
<name>fsockopen</name>
<proto>int fsockopen( [string udp://hostname], int port [, int errno] [, string errstr] [, double timeout])</proto>
<desc>Ouvre une socket de connexion Internet ou Unix.</desc>
<return>int</return>
<params>
<param>
<paramname>hostname</paramname>
<paramtype>string udp</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>port</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>errno</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>errstr</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>timeout</paramname>
<paramtype>double</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>network</extension>
<name>gethostbyaddr</name>
<proto>string gethostbyaddr(string ip_address)</proto>
<desc>Retourne le nom d'hôte correspondant à une IP.</desc>
<return>string</return>
<params>
<param>
<paramname>ip_address</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>network</extension>
<name>gethostbyname</name>
<proto>string gethostbyname(string hostname)</proto>
<desc>Retourne l'adresse IP correspondant à un hôte.</desc>
<return>string</return>
<params>
<param>
<paramname>hostname</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>network</extension>
<name>gethostbynamel</name>
<proto>array gethostbynamel(string hostname)</proto>
<desc>Retourne la liste d'IP correspondants à un hôte.</desc>
<return>array</return>
<params>
<param>
<paramname>hostname</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>network</extension>
<name>getmxrr</name>
<proto>int getmxrr(string hostname, array mxhosts [, array weight])</proto>
<desc>Retourne les enregistrements MX d'un hôte.</desc>
<return>int</return>
<params>
<param>
<paramname>hostname</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mxhosts</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>weight</paramname>
<paramtype>array</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>network</extension>
<name>getprotobyname</name>
<proto>int getprotobyname(string name)</proto>
<desc>Retourne le numéro de protocole associé au nom de protocole</desc>
<return>int</return>
<params>
<param>
<paramname>name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>network</extension>
<name>getprotobynumber</name>
<proto>string getprotobynumber(int number)</proto>
<desc>Retourne le nom de protocole associé au numéro de protocole</desc>
<return>string</return>
<params>
<param>
<paramname>number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>network</extension>
<name>getservbyname</name>
<proto>int getservbyname(string service, string protocol)</proto>
<desc>Retourne le numéro de port associé à un service
      Internet, et un protocole.</desc>
<return>int</return>
<params>
<param>
<paramname>service</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>protocol</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>network</extension>
<name>getservbyport</name>
<proto>string getservbyport(int port, string protocol)</proto>
<desc>Retourne le service Internet qui correspond au port et protocole.</desc>
<return>string</return>
<params>
<param>
<paramname>port</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>protocol</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>network</extension>
<name>ip2long</name>
<proto>int ip2long(string ip_address)</proto>
<desc>Convertit une chaîne contenant une adresse (IPv4)
      IP numérique en adresse litérale.</desc>
<return>int</return>
<params>
<param>
<paramname>ip_address</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>network</extension>
<name>long2ip</name>
<proto>string long2ip(int proper_address)</proto>
<desc>Convertit une adresse IP (IPv4) en adresse IP numérique</desc>
<return>string</return>
<params>
<param>
<paramname>proper_address</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>network</extension>
<name>openlog</name>
<proto>int openlog(string ident, int option, int facility)</proto>
<desc>Ouvre la connexion à l'historique système.</desc>
<return>int</return>
<params>
<param>
<paramname>ident</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>option</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>facility</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>network</extension>
<name>pfsockopen</name>
<proto>int pfsockopen(string hostname, int port [, int errno] [, string errstr] [, int timeout])</proto>
<desc>Ouvre une socket de connexion Internet ou Unix persistante.</desc>
<return>int</return>
<params>
<param>
<paramname>hostname</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>port</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>errno</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>errstr</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>timeout</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>network</extension>
<name>socket_get_status</name>
<proto>array socket_get_status(resource socket_get_status)</proto>
<desc>Retourne les informations sur une socket</desc>
<return>array</return>
<params>
<param>
<paramname></paramname>
<paramtype>resource
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>network</extension>
<name>socket_set_blocking</name>
<proto>int socket_set_blocking(int socket descriptor, int mode)</proto>
<desc>Active/désactive le mode bloquant d'une socket.</desc>
<return>int</return>
<params>
<param>
<paramname>socket</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>network</extension>
<name>socket_set_timeout</name>
<proto>bool socket_set_timeout(int socket descriptor, int seconds, int microseconds)</proto>
<desc>Fixe la durée de vie de la socket</desc>
<return>bool</return>
<params>
<param>
<paramname>socket</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>seconds</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>microseconds</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>network</extension>
<name>syslog</name>
<proto>int syslog(int priority, string message)</proto>
<desc>Génére un message dans l'historique système.</desc>
<return>int</return>
<params>
<param>
<paramname>priority</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>message</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>nis</extension>
<name>yp_get_default_domain</name>
<proto>int yp_get_default_domain(void)</proto>
<desc>Retourne le domaine NIS par défaut.</desc>
<return>int</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>nis</extension>
<name>yp_order</name>
<proto>int yp_order(string domain, string map)</proto>
<desc>Retourne le numéro d'ordre d'une carte.</desc>
<return>int</return>
<params>
<param>
<paramname>domain</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>map</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>nis</extension>
<name>yp_master</name>
<proto>string yp_master(string domain, string map)</proto>
<desc>Retourne le nom de la machine maître pour une carte.</desc>
<return>string</return>
<params>
<param>
<paramname>domain</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>map</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>nis</extension>
<name>yp_match</name>
<proto>string yp_match(string domain, string map, string key)</proto>
<desc>Retourne la ligne associée.</desc>
<return>string</return>
<params>
<param>
<paramname>domain</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>map</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>key</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>nis</extension>
<name>yp_first</name>
<proto>array yp_first(string domain, string map)</proto>
<desc>Retourne le premier couple (clé ; valeur) d'une carte donnée.</desc>
<return>array</return>
<params>
<param>
<paramname>domain</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>map</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>nis</extension>
<name>yp_next</name>
<proto>array yp_next(string domain, string map, string key)</proto>
<desc>Retourne le couple (clé ; valeur) suivant d'une carte donnée.</desc>
<return>array</return>
<params>
<param>
<paramname>domain</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>map</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>key</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>nis</extension>
<name>yp_errno</name>
<proto>int yp_errno()</proto>
<desc>Retourne le code d'erreur de la dernière opération.</desc>
<return>int</return>
<params>
</params>
</function>
<function>
<extension>nis</extension>
<name>yp_err_string</name>
<proto>string yp_err_string(void)</proto>
<desc>Retourne la chaîne d'erreur associée à la dernière opération.</desc>
<return>string</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>ociDefineByName</name>
<proto>int ocidefinebyname(resource stmt, string Column-Name, mixed variable [, int type])</proto>
<desc>Utilise une variable PHP pour la phase de définition, dans une commande SELECT.</desc>
<return>int</return>
<params>
<param>
<paramname>stmt</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>Column-Name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>variable</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int type</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>ociBindByName</name>
<proto>int ocibindbyname(resource stmt, string ph_name, mixed &amp;variable, int length [, int type])</proto>
<desc>Utilise une variable PHP pour la phase de définition, dans un SELECT.</desc>
<return>int</return>
<params>
<param>
<paramname>stmt</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>ph_name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>&amp;variable</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>length</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>type</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>ociLogon</name>
<proto>resource ocilogon(string username, string password [, string db])</proto>
<desc>Etablit une connexion à un serveur Oracle.</desc>
<return>resource</return>
<params>
<param>
<paramname>username</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>password</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>db</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>ociPLogon</name>
<proto>resource ociplogon(string username, string password [, string db])</proto>
<desc>Connection persistante à un serveur Oracle.</desc>
<return>resource</return>
<params>
<param>
<paramname>username</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>password</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>db</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>ociNLogon</name>
<proto>resource ocinlogon(string username, string password [, string db])</proto>
<desc>Se connecte à un serveur Oracle avec une nouvelle connexion.</desc>
<return>resource</return>
<params>
<param>
<paramname>username</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>password</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>db</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>ociLogOff</name>
<proto>int ocilogoff(resource connection)</proto>
<desc>Déconnexion d'un serveur Oracle</desc>
<return>int</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>ociexecute</name>
<proto>int ociexecute(resource statement [, int mode])</proto>
<desc>Exécute une commande</desc>
<return>int</return>
<params>
<param>
<paramname>statement</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>ociCommit</name>
<proto>int ocicommit(resource connection)</proto>
<desc>Valide les transactions en cours.</desc>
<return>int</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>ociRollback</name>
<proto>int ocirollback(resource connection)</proto>
<desc>Annule les transactions en cours</desc>
<return>int</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>ociNewDescriptor</name>
<proto>resource ocinewdescriptor(resource connection [, int type])</proto>
<desc>Initialise un nouveau pointeur vide de LOB/FILE</desc>
<return>resource</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>type</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>ociRowCount</name>
<proto>int ocirowcount(resource statement)</proto>
<desc>Retourne le nombre de lignes affectées.</desc>
<return>int</return>
<params>
<param>
<paramname>statement</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>ociNumCols</name>
<proto>int ocinumcols(resource stmt)</proto>
<desc>Retourne le nombre de colonnes dans un résultat</desc>
<return>int</return>
<params>
<param>
<paramname>stmt</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>ociResult</name>
<proto>mixed ociresult(resource statement, mixed column)</proto>
<desc>Retourne la valeur d'une colonne dans une ligne lue</desc>
<return>mixed</return>
<params>
<param>
<paramname>statement</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>column</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>ociFetch</name>
<proto>int ocifetch(resource statement)</proto>
<desc>Modifie la prochaine ligne dans le pointeur interne de résultat.</desc>
<return>int</return>
<params>
<param>
<paramname>statement</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>ociFetchInto</name>
<proto>int ocifetchinto(resource stmt, array &amp;result [, int mode])</proto>
<desc>Retourne la ligne suivante dans un tableau.</desc>
<return>int</return>
<params>
<param>
<paramname>stmt</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>&amp;result</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>ociFetchStatement</name>
<proto>int ocifetchstatement(resource stmt, array &amp;variable)</proto>
<desc>Retourne toutes les lignes d'un résultat.</desc>
<return>int</return>
<params>
<param>
<paramname>stmt</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>&amp;variable</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>ociColumnIsNULL</name>
<proto>int ocicolumnisnull(resource stmt, mixed column)</proto>
<desc>Teste si la valeur d'une colonne est NULL</desc>
<return>int</return>
<params>
<param>
<paramname>stmt</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>column</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>ociColumnName</name>
<proto>string ocicolumnname(resource stmt, int col)</proto>
<desc>Retourne le nom d'une colonne.</desc>
<return>string</return>
<params>
<param>
<paramname>stmt</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>col</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>ociColumnSize</name>
<proto>int ocicolumnsize(resource stmt, mixed column)</proto>
<desc>Retourne la taille de la colonne.</desc>
<return>int</return>
<params>
<param>
<paramname>stmt</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>column</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>ociColumnType</name>
<proto>mixed ocicolumntype(resource stmt, int col)</proto>
<desc>Retourne le type de données d'une colonne.</desc>
<return>mixed</return>
<params>
<param>
<paramname>stmt</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>col</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>ociServerVersion</name>
<proto>string ociserverversion(resource conn)</proto>
<desc>Retourne une chaîne contenant les informations de version du serveur.</desc>
<return>string</return>
<params>
<param>
<paramname>conn</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>ociStatementType</name>
<proto>string ocistatementtype(resource stmt)</proto>
<desc>Retourne le type de commande oci.</desc>
<return>string</return>
<params>
<param>
<paramname>stmt</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>ociNewCursor</name>
<proto>int ocinewcursor(resource conn)</proto>
<desc>Retourne un nouveau pointeur à utiliser pour lier les pointeurs de références</desc>
<return>int</return>
<params>
<param>
<paramname>conn</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>ociFreeStatement</name>
<proto>int ocifreestatement(resource stmt)</proto>
<desc>Libère toutes les ressources occupées par une commande.</desc>
<return>int</return>
<params>
<param>
<paramname>stmt</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>ociFreeCursor</name>
<proto>boolean ocifreecursor(resource stmt)</proto>
<desc>Libère toutes les ressources occupées par un pointeur.</desc>
<return>boolean</return>
<params>
<param>
<paramname>stmt</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>ociFreeDesc</name>
<proto>int ocifreedesc(object lob)</proto>
<desc>Supprime un descripteur de LOB</desc>
<return>int</return>
<params>
<param>
<paramname>lob</paramname>
<paramtype>object</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>ociparse</name>
<proto>int ociparse(resource conn, string query)</proto>
<desc>Analyse une requête.</desc>
<return>int</return>
<params>
<param>
<paramname>conn</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>query</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>ociError</name>
<proto>array ocierror( [int stmt|conn])</proto>
<desc>Retourne la dernière erreur de stmt|conn|global.</desc>
<return>array</return>
<params>
<param>
<paramname></paramname>
<paramtype>int stmt conn</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>ociinternaldebug</name>
<proto>void ociinternaldebug(int onoff)</proto>
<desc>Active ou désactive l'affichage des données de debuggage.</desc>
<return>void</return>
<params>
<param>
<paramname>onoff</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>OCICancel</name>
<proto>int ocicancel(resource stmt)</proto>
<desc>Bientôt documenté....</desc>
<return>int</return>
<params>
<param>
<paramname>stmt</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>ocisetprefetch</name>
<proto>int ocisetprefetch(resource stmt, int rows)</proto>
<desc>Indique le nombre de lignes qui doivent être pré-lues</desc>
<return>int</return>
<params>
<param>
<paramname>stmt</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>rows</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>OCIWriteLobToFile</name>
<proto>void ociwritelobtofile(object lob [, string filename] [, int start] [, int lenght])</proto>
<desc>Bientôt documenté....</desc>
<return>void</return>
<params>
<param>
<paramname>lob</paramname>
<paramtype>object</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string filename</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int start</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int lenght</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>OCISaveLobFile</name>
<proto>string ocisavelobfile(object lob)</proto>
<desc>Bientôt documenté....</desc>
<return>string</return>
<params>
<param>
<paramname>lob</paramname>
<paramtype>object</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>OCISaveLob</name>
<proto>string ocisavelob(object lob)</proto>
<desc>Bientôt documenté....</desc>
<return>string</return>
<params>
<param>
<paramname>lob</paramname>
<paramtype>object</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>OCILoadLob</name>
<proto>string ociloadlob(object lob)</proto>
<desc>Bientôt documenté....</desc>
<return>string</return>
<params>
<param>
<paramname>lob</paramname>
<paramtype>object</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>OCIColumnScale</name>
<proto>int ocicolumnscale(resource stmt, int col)</proto>
<desc>Bientôt documenté....</desc>
<return>int</return>
<params>
<param>
<paramname>stmt</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>col</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>OCIColumnPrecision</name>
<proto>int ocicolumnprecision(resource stmt, int col)</proto>
<desc>Bientôt documenté....</desc>
<return>int</return>
<params>
<param>
<paramname>stmt</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>col</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>OCIColumnTypeRaw</name>
<proto>mixed ocicolumntyperaw(resource stmt, int col)</proto>
<desc>Bientôt documenté....</desc>
<return>mixed</return>
<params>
<param>
<paramname>stmt</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>col</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>OCINewCollection</name>
<proto>string ocinewcollection(int conn, string tdo [, string shema])</proto>
<desc>Bientôt documenté....</desc>
<return>string</return>
<params>
<param>
<paramname>conn</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>tdo</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string shema</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>OCIFreeCollection</name>
<proto>string ocifreecollection(object lob)</proto>
<desc>Bientôt documenté....</desc>
<return>string</return>
<params>
<param>
<paramname>lob</paramname>
<paramtype>object</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>OCICollAssign</name>
<proto>string ocicollassign(object collection, object object)</proto>
<desc>Bientôt documenté....</desc>
<return>string</return>
<params>
<param>
<paramname>collection</paramname>
<paramtype>object</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>object</paramname>
<paramtype>object</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>OCICollAssignElem</name>
<proto>string ocicollassignelem(object collection, string ndx, string val)</proto>
<desc>Bientôt documenté....</desc>
<return>string</return>
<params>
<param>
<paramname>collection</paramname>
<paramtype>object</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>ndx</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>val</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>OCICollGetElem</name>
<proto>string ocicollgetelem(object collection, string ndx)</proto>
<desc>Bientôt documenté....</desc>
<return>string</return>
<params>
<param>
<paramname>collection</paramname>
<paramtype>object</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>ndx</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>OCICollMax</name>
<proto>string ocicollmax(object collection)</proto>
<desc>Bientôt documenté....</desc>
<return>string</return>
<params>
<param>
<paramname>collection</paramname>
<paramtype>object</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>OCICollSize</name>
<proto>string ocicollsize(object collection)</proto>
<desc>Bientôt documenté....</desc>
<return>string</return>
<params>
<param>
<paramname>collection</paramname>
<paramtype>object</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oci8</extension>
<name>OCICollTrim</name>
<proto>string ocicolltrim(object collection, int num)</proto>
<desc>Bientôt documenté....</desc>
<return>string</return>
<params>
<param>
<paramname>collection</paramname>
<paramtype>object</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>num</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>openssl</extension>
<name>openssl_error_string</name>
<proto>mixed openssl_error_string(void)</proto>
<desc>Retourne le message d'erreur OpenSSL</desc>
<return>mixed</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>openssl</extension>
<name>openssl_free_key</name>
<proto>void openssl_free_key(resource key_identifier)</proto>
<desc>Libère les ressources</desc>
<return>void</return>
<params>
<param>
<paramname>key_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>openssl</extension>
<name>openssl_get_privatekey</name>
<proto>resource openssl_get_privatekey(mixed key [, string passphrase])</proto>
<desc>Prépare une clé privée au format PEM</desc>
<return>resource</return>
<params>
<param>
<paramname>key</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string passphrase</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>openssl</extension>
<name>openssl_get_publickey</name>
<proto>resource openssl_get_publickey(mixed certificate)</proto>
<desc>Extrait une clé publique d'un certificat</desc>
<return>resource</return>
<params>
<param>
<paramname>certificate</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>openssl</extension>
<name>openssl_open</name>
<proto>bool openssl_open(string sealed_data, string open_data, string env_key, mixed priv_key_id)</proto>
<desc>Ouvre des données scellées</desc>
<return>bool</return>
<params>
<param>
<paramname>sealed_data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>open_data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>env_key</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>priv_key_id</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>openssl</extension>
<name>openssl_seal</name>
<proto>int openssl_seal(string data, string sealed_data, array env_keys, array pub_key_ids)</proto>
<desc>Scelle des données</desc>
<return>int</return>
<params>
<param>
<paramname>data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>sealed_data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>env_keys</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>pub_key_ids</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>openssl</extension>
<name>openssl_sign</name>
<proto>bool openssl_sign(string data, string signature, mixed priv_key_id)</proto>
<desc>Signe les données</desc>
<return>bool</return>
<params>
<param>
<paramname>data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>signature</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>priv_key_id</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>openssl</extension>
<name>openssl_verify</name>
<proto>int openssl_verify(string data, string signature, resource pub_key_id)</proto>
<desc>Vérifie une signature</desc>
<return>int</return>
<params>
<param>
<paramname>data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>signature</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>pub_key_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>openssl</extension>
<name>openssl_pkcs7_decrypt</name>
<proto>bool openssl_pkcs7_decrypt(string infilename, string outfilename, mixed recipcert, mixed recipkey)</proto>
<desc>Déchiffre un message S/MIME</desc>
<return>bool</return>
<params>
<param>
<paramname>infilename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>outfilename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>recipcert</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>recipkey</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>openssl</extension>
<name>openssl_pkcs7_encrypt</name>
<proto>bool openssl_pkcs7_encrypt(string infilename, string outfilename, mixed recipcerts, array headers [, long flags])</proto>
<desc>Chiffre un message S/MIME</desc>
<return>bool</return>
<params>
<param>
<paramname>infilename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>outfilename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>recipcerts</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>headers</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>long flags</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>openssl</extension>
<name>openssl_pkcs7_sign</name>
<proto>bool openssl_pkcs7_sign(string infilename, string outfilename, mixed signcert, mixed privkey, array headers [, long flags] [, string extracertsfilename])</proto>
<desc>signe un message S/MIME</desc>
<return>bool</return>
<params>
<param>
<paramname>infilename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>outfilename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>signcert</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>privkey</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>headers</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>flags</paramname>
<paramtype>long</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>extracertsfilename</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>openssl</extension>
<name>openssl_pkcs7_verify</name>
<proto>bool openssl_pkcs7_verify(string filename, int flags [, string outfilename] [, array cainfo] [, string extracerts])</proto>
<desc>Vérifie la signature d'un message S/MIME</desc>
<return>bool</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>flags</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string outfilename</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>array cainfo</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string extracerts</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>openssl</extension>
<name>openssl_x509_checkpurpose</name>
<proto>bool openssl_x509_checkpurpose(mixed x509cert, int purpose, array cainfo [, string untrustedfile])</proto>
<desc>Vérifie l'usage d'un certificat</desc>
<return>bool</return>
<params>
<param>
<paramname>x509cert</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>purpose</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>cainfo</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>untrustedfile</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>openssl</extension>
<name>openssl_x509_free</name>
<proto>void openssl_x509_free(resource x509cert)</proto>
<desc>Libère les ressources prises par un certificat</desc>
<return>void</return>
<params>
<param>
<paramname>x509cert</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>openssl</extension>
<name>openssl_x509_parse</name>
<proto>array openssl_x509_parse(mixed x509cert [, bool shortnames])</proto>
<desc>Analyse un certificat X509.</desc>
<return>array</return>
<params>
<param>
<paramname>x509cert</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>shortnames</paramname>
<paramtype>bool</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>openssl</extension>
<name>openssl_x509_read</name>
<proto>resource openssl_x509_read(mixed x509certdata)</proto>
<desc>Analyse un certificat X.509 et retourne une ressource</desc>
<return>resource</return>
<params>
<param>
<paramname>x509certdata</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oracle</extension>
<name>Ora_Bind</name>
<proto>int ora_bind(resource cursor, string PHP variable name, string SQL parameter name, int length [, int type])</proto>
<desc>Lie une variable PHP à un paramètre Oracle.</desc>
<return>int</return>
<params>
<param>
<paramname>cursor</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>PHP</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>SQL</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>length</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int type</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>oracle</extension>
<name>Ora_Close</name>
<proto>int ora_close(resource cursor)</proto>
<desc>Ferme un pointeur Oracle.</desc>
<return>int</return>
<params>
<param>
<paramname>cursor</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oracle</extension>
<name>Ora_ColumnName</name>
<proto>string ora_columnname(resource cursor, int column)</proto>
<desc>Retourne le nom de la colonne de résultat.</desc>
<return>string</return>
<params>
<param>
<paramname>cursor</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>column</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oracle</extension>
<name>Ora_ColumnSize</name>
<proto>int ora_columnsize(resource cursor, int column)</proto>
<desc>Lit la taille d'une colonne</desc>
<return>int</return>
<params>
<param>
<paramname>cursor</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>column</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oracle</extension>
<name>Ora_ColumnType</name>
<proto>string ora_columntype(resource cursor, int column)</proto>
<desc>Retourne le type de la colonne de résultat.</desc>
<return>string</return>
<params>
<param>
<paramname>cursor</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>column</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oracle</extension>
<name>Ora_Commit</name>
<proto>int ora_commit(resource conn)</proto>
<desc>Valide une transaction Oracle.</desc>
<return>int</return>
<params>
<param>
<paramname>conn</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oracle</extension>
<name>Ora_CommitOff</name>
<proto>int ora_commitoff(resource conn)</proto>
<desc>Inactive la validation automatique.</desc>
<return>int</return>
<params>
<param>
<paramname>conn</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oracle</extension>
<name>Ora_CommitOn</name>
<proto>int ora_commiton(resource conn)</proto>
<desc>Active la validation automatique.</desc>
<return>int</return>
<params>
<param>
<paramname>conn</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oracle</extension>
<name>Ora_Do</name>
<proto>int ora_do(resource conn, string query)</proto>
<desc>Analyse, exécute et lit une requête</desc>
<return>int</return>
<params>
<param>
<paramname>conn</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>query</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oracle</extension>
<name>Ora_Error</name>
<proto>string ora_error(resource cursor_or_connection)</proto>
<desc>Retourne le message d'erreur Oracle.</desc>
<return>string</return>
<params>
<param>
<paramname>cursor_or_connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oracle</extension>
<name>Ora_ErrorCode</name>
<proto>int ora_errorcode(resource cursor_or_connection)</proto>
<desc>Retourne le code d'erreur Oracle.</desc>
<return>int</return>
<params>
<param>
<paramname>cursor_or_connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oracle</extension>
<name>Ora_Exec</name>
<proto>)</proto>
<desc>Exécute une commande analysée sur un pointeur Oracle.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>oracle</extension>
<name>Ora_Fetch</name>
<proto>)</proto>
<desc>Retourne une ligne de résultat.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>oracle</extension>
<name>Ora_Fetch_Into</name>
<proto>int ora_fetch_into(resource cursor, array result [, int flags])</proto>
<desc>Lit une ligne dans un tableau</desc>
<return>int</return>
<params>
<param>
<paramname>cursor</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>result</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>flags</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>oracle</extension>
<name>Ora_GetColumn</name>
<proto>mixed ora_getcolumn(resource cursor, mixed column)</proto>
<desc>Retourne une donnée d'une ligne lue.</desc>
<return>mixed</return>
<params>
<param>
<paramname>cursor</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>column</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oracle</extension>
<name>Ora_Logoff</name>
<proto>)</proto>
<desc>Ferme une connexion Oracle.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>oracle</extension>
<name>Ora_Logon</name>
<proto>)</proto>
<desc>Ouvre une connexion Oracle.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>oracle</extension>
<name>Ora_pLogon</name>
<proto>resource ora_plogon(string user, string password)</proto>
<desc>Ouvre une connexion persistante à Oracle</desc>
<return>resource</return>
<params>
<param>
<paramname>user</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>password</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oracle</extension>
<name>Ora_Numcols</name>
<proto>int ora_numcols(resource cursor_ind)</proto>
<desc>Retourne le nombre de colonnes</desc>
<return>int</return>
<params>
<param>
<paramname>cursor_ind</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oracle</extension>
<name>Ora_Numrows</name>
<proto>int ora_numrows(resource cursor_ind)</proto>
<desc>Retourne le nombre de colonnes</desc>
<return>int</return>
<params>
<param>
<paramname>cursor_ind</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oracle</extension>
<name>Ora_Open</name>
<proto>resource ora_open(resource connection)</proto>
<desc>Ouvre un pointeur Oracle.</desc>
<return>resource</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oracle</extension>
<name>Ora_Parse</name>
<proto>int ora_parse(resource cursor_ind, string sql_statement, int defer)</proto>
<desc>Analyse une requête SQL.</desc>
<return>int</return>
<params>
<param>
<paramname>cursor_ind</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>sql_statement</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>defer</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>oracle</extension>
<name>Ora_Rollback</name>
<proto>int ora_rollback(resource connection)</proto>
<desc>Annule une transaction.</desc>
<return>int</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>outcontrol</extension>
<name>flush</name>
<proto>void flush(void)</proto>
<desc>Vide les buffers de sortie.</desc>
<return>void</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>outcontrol</extension>
<name>ob_start</name>
<proto>void ob_start( [string output_callback])</proto>
<desc>Enclenche la bufferisation de sortie</desc>
<return>void</return>
<params>
<param>
<paramname>output_callback</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>outcontrol</extension>
<name>ob_gzhandler</name>
<proto>string ob_gzhandler(string buffer)</proto>
<desc>Fonction de callback pour la compression automatique des buffers</desc>
<return>string</return>
<params>
<param>
<paramname>buffer</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>outcontrol</extension>
<name>ob_get_contents</name>
<proto>string ob_get_contents(void)</proto>
<desc>Retourne le contenu du buffer de sortie</desc>
<return>string</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>outcontrol</extension>
<name>ob_get_length</name>
<proto>string ob_get_length(void)</proto>
<desc>Retourne la longueur du contenu du buffer de sortie</desc>
<return>string</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>outcontrol</extension>
<name>ob_end_flush</name>
<proto>void ob_end_flush()</proto>
<desc>Envoie les données du buffer de sortie, et éteind la bufferisation de sortie</desc>
<return>void</return>
<params>
</params>
</function>
<function>
<extension>outcontrol</extension>
<name>ob_end_clean</name>
<proto>void ob_end_clean()</proto>
<desc>Détruit les données du buffer de sortie, et éteind la bufferisation de sortie</desc>
<return>void</return>
<params>
</params>
</function>
<function>
<extension>outcontrol</extension>
<name>ob_implicit_flush</name>
<proto>void ob_implicit_flush( [int flag])</proto>
<desc>Active/désactive l'envoi implicite</desc>
<return>void</return>
<params>
<param>
<paramname>flag</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ovrimos</extension>
<name>ovrimos_connect</name>
<proto>int ovrimos_connect(string host, string db, string user, string password)</proto>
<desc>Connexion à un serveur</desc>
<return>int</return>
<params>
<param>
<paramname>host</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>db</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>user</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>password</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ovrimos</extension>
<name>ovrimos_close</name>
<proto>void ovrimos_close(int connection)</proto>
<desc>Ferme une connexion</desc>
<return>void</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ovrimos</extension>
<name>ovrimos_close_all</name>
<proto>void ovrimos_close_all(void)</proto>
<desc>Ferme toutes les connexions aux serveur ovrimos</desc>
<return>void</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ovrimos</extension>
<name>ovrimos_longreadlen</name>
<proto>int ovrimos_longreadlen(int result_id, int length)</proto>
<desc>Indique la taille des données à lire dans une colonne de grande taille</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>length</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ovrimos</extension>
<name>ovrimos_prepare</name>
<proto>int ovrimos_prepare(int connection_id, string query)</proto>
<desc>Prépare une requête SQL</desc>
<return>int</return>
<params>
<param>
<paramname>connection_id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>query</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ovrimos</extension>
<name>ovrimos_execute</name>
<proto>int ovrimos_execute(int result_id [, array parameters_array])</proto>
<desc>Exécute une requête préparée</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>parameters_array</paramname>
<paramtype>array</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ovrimos</extension>
<name>ovrimos_cursor</name>
<proto>int ovrimos_cursor(int result_id)</proto>
<desc>Retourne le nom du curseur</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ovrimos</extension>
<name>ovrimos_exec</name>
<proto>int ovrimos_exec(int connection_id, string query)</proto>
<desc>Exécute une requÍte SQL</desc>
<return>int</return>
<params>
<param>
<paramname>connection_id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>query</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ovrimos</extension>
<name>ovrimos_fetch_into</name>
<proto>int ovrimos_fetch_into(int result_id, array result_array [, string how] [, int rownumber])</proto>
<desc>Lit une ligne dans un résultat</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>result_array</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>how</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>rownumber</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ovrimos</extension>
<name>ovrimos_fetch_row</name>
<proto>int ovrimos_fetch_row(int result_id [, int how] [, int row_number])</proto>
<desc>Lit une ligne dans un résultat</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>how</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>row_number</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ovrimos</extension>
<name>ovrimos_result</name>
<proto>int ovrimos_result(int result_id, mixed field)</proto>
<desc>Lit le contenu d'une colonne</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ovrimos</extension>
<name>ovrimos_result_all</name>
<proto>int ovrimos_result_all(int result_id [, string format])</proto>
<desc>Affiche un résultat sous forme de table HTML</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>format</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>ovrimos</extension>
<name>ovrimos_num_rows</name>
<proto>int ovrimos_num_rows(int result_id)</proto>
<desc>Retourne le nombre de lignes affectées par une modification</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ovrimos</extension>
<name>ovrimos_num_fields</name>
<proto>int ovrimos_num_fields(int result_id)</proto>
<desc>Retourne le nombre de colonnes</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ovrimos</extension>
<name>ovrimos_field_name</name>
<proto>int ovrimos_field_name(int result_id, int field_number)</proto>
<desc>Retourne le nom d'une colonne</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field_number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ovrimos</extension>
<name>ovrimos_field_type</name>
<proto>int ovrimos_field_type(int result_id, int field_number)</proto>
<desc>Retourne le type numérique d'une colonne</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field_number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ovrimos</extension>
<name>ovrimos_field_len</name>
<proto>int ovrimos_field_len(int result_id, int field_number)</proto>
<desc>Retourne la taille d'une colonne</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field_number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ovrimos</extension>
<name>ovrimos_field_num</name>
<proto>int ovrimos_field_num(int result_id, string field_name)</proto>
<desc>Retourne le numéro de colonne</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field_name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ovrimos</extension>
<name>ovrimos_free_result</name>
<proto>int ovrimos_free_result(int result_id)</proto>
<desc>Libère les ressources utilisées par un résultat</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ovrimos</extension>
<name>ovrimos_commit</name>
<proto>int ovrimos_commit(int connection_id)</proto>
<desc>Valide une transaction</desc>
<return>int</return>
<params>
<param>
<paramname>connection_id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>ovrimos</extension>
<name>ovrimos_rollback</name>
<proto>int ovrimos_rollback(int connection_id)</proto>
<desc>Annule une transaction</desc>
<return>int</return>
<params>
<param>
<paramname>connection_id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pcntl</extension>
<name>pcntl_fork</name>
<proto>int pcntl_fork()</proto>
<desc>Forks the currently running process</desc>
<return>int</return>
<params>
</params>
</function>
<function>
<extension>pcntl</extension>
<name>pcntl_signal</name>
<proto>bool pcntl_signal(int signo, mixed handle)</proto>
<desc>Installs a signal handler</desc>
<return>bool</return>
<params>
<param>
<paramname>signo</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>handle</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pcntl</extension>
<name>pcntl_waitpid</name>
<proto>int pcntl_waitpid(int pid, int status, int options)</proto>
<desc>Waits on or returns the status of a forked child</desc>
<return>int</return>
<params>
<param>
<paramname>pid</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>status</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>options</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pcntl</extension>
<name>pcntl_wexitstatus</name>
<proto>int pcntl_wexitstatus(int status)</proto>
<desc>Returns the return code of a terminated child</desc>
<return>int</return>
<params>
<param>
<paramname>status</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pcntl</extension>
<name>pcntl_wifexited</name>
<proto>int pcntl_wifexited(int status)</proto>
<desc>Returns TRUE if status code represents a successful exit</desc>
<return>int</return>
<params>
<param>
<paramname>status</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pcntl</extension>
<name>pcntl_wifsignaled</name>
<proto>int pcntl_wifsignaled(int status)</proto>
<desc>Returns TRUE if status code represents a termination due to a signal</desc>
<return>int</return>
<params>
<param>
<paramname>status</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pcntl</extension>
<name>pcntl_wifstopped</name>
<proto>int pcntl_wifstopped(int status)</proto>
<desc>Returns TRUE if child process is currently stopped</desc>
<return>int</return>
<params>
<param>
<paramname>status</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pcntl</extension>
<name>pcntl_wstopsig</name>
<proto>int pcntl_wstopsig(int status)</proto>
<desc>Returns the signal which caused the child to stop</desc>
<return>int</return>
<params>
<param>
<paramname>status</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pcntl</extension>
<name>pcntl_wtermsig</name>
<proto>int pcntl_wtermsig(int status)</proto>
<desc>Returns the signal which caused the child to terminate</desc>
<return>int</return>
<params>
<param>
<paramname>status</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pcre</extension>
<name>preg_match</name>
<proto>int preg_match(string pattern, string subject [, array matches])</proto>
<desc>Expression régulière standard.</desc>
<return>int</return>
<params>
<param>
<paramname>pattern</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>subject</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>matches</paramname>
<paramtype>array</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>pcre</extension>
<name>preg_match_all</name>
<proto>int preg_match_all(string pattern, string subject, array matches [, int order])</proto>
<desc>Expression régulière globale.</desc>
<return>int</return>
<params>
<param>
<paramname>pattern</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>subject</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>matches</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>order</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>pcre</extension>
<name>preg_replace</name>
<proto>mixed preg_replace(mixed pattern, mixed replacement, mixed subject [, int limit])</proto>
<desc>Rechercher et remplacer par expression régulière standard.</desc>
<return>mixed</return>
<params>
<param>
<paramname>pattern</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>replacement</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>subject</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>limit</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>pcre</extension>
<name>preg_replace_callback</name>
<proto>mixed preg_replace_callback(mixed pattern, mixed callback, mixed subject [, int limit])</proto>
<desc>Rechercher/remplacer avec fonction de callback</desc>
<return>mixed</return>
<params>
<param>
<paramname>pattern</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>callback</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>subject</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>limit</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>pcre</extension>
<name>preg_split</name>
<proto>array preg_split(string pattern, string subject [, int limit] [, int flags])</proto>
<desc>Eclatement d'une chaîne par expression régulière.</desc>
<return>array</return>
<params>
<param>
<paramname>pattern</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>subject</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>limit</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>flags</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>pcre</extension>
<name>preg_quote</name>
<proto>string preg_quote(string str [, string delimiter])</proto>
<desc>Echappement des caractères spéciaux des expressions régulières.</desc>
<return>string</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>delimiter</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>pcre</extension>
<name>preg_grep</name>
<proto>array preg_grep(string pattern, array input)</proto>
<desc>Retourne un tableau avec les résultat de la recherche.</desc>
<return>array</return>
<params>
<param>
<paramname>pattern</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>input</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pcre</extension>
<name>options de recherche</name>
<proto>)</proto>
<desc>Options disponibles pour les expressions régulières.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>pcre</extension>
<name>syntaxe des masques</name>
<proto>)</proto>
<desc>Fonctionnement des expressions régulières.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_add_annotation</name>
<proto>)</proto>
<desc>Obsolète: Ajoute une annotation</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_add_bookmark</name>
<proto>int pdf_add_bookmark(resource pdf_object, string text [, int parent] [, int open])</proto>
<desc>Ajoute un signet à la page courante</desc>
<return>int</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>text</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int parent</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int open</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_add_launchlink</name>
<proto>int pdf_add_launchlink(resource pdf_object, double llx, double lly, double urx, double ury, string filename)</proto>
<desc>Ajoute une annotation éxécutable dans la page courante</desc>
<return>int</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>llx</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>lly</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>urx</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>ury</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_add_locallink</name>
<proto>int pdf_add_locallink(resource pdf_object, double llx, double lly, double urx, double ury, int page, string dest)</proto>
<desc>Ajoute un lien sur une annotation dans la page courante</desc>
<return>int</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>llx</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>lly</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>urx</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>ury</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>page</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>dest</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_add_note</name>
<proto>int pdf_add_note(resource pdf_object, double llx, double lly, double urx, double ury, string contents, string title, string icon, int open)</proto>
<desc>Ajoute une note d'annotation dans la page courante</desc>
<return>int</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>llx</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>lly</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>urx</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>ury</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>contents</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>title</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>icon</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>open</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_add_outline</name>
<proto>)</proto>
<desc>Obsolète: Ajoute un signet dans la page courante</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_add_pdflink</name>
<proto>int pdf_add_pdflink(resource pdf_object, double llx, double lly, double urx, double ury, string filename, int page, string dest)</proto>
<desc>Ajoute un lien sur un fichier dans la page courante</desc>
<return>int</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>llx</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>lly</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>urx</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>ury</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>page</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>dest</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_add_weblink</name>
<proto>int pdf_add_weblink(resource pdf_object, double llx, double lly, double urx, double ury, string url)</proto>
<desc>Ajoute un lien hypertexte dans la page courante</desc>
<return>int</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>llx</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>lly</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>urx</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>ury</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>url</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_arc</name>
<proto>void pdf_arc(resource pdf_object, double x-coor, double y-coor, double radius, double start, double end)</proto>
<desc>Dessine un arc.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x-coor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y-coor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>radius</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>start</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>end</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_attach_file</name>
<proto>int pdf_attach_file(resource pdf_object, double llx, double lly, double urx, double ury, string filename, string description, string author, string mimetype, string icon)</proto>
<desc>Attache un fichier à la page courante</desc>
<return>int</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>llx</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>lly</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>urx</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>ury</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>description</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>author</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mimetype</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>icon</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_begin_page</name>
<proto>void pdf_begin_page(resource pdf_object, double width, double height)</proto>
<desc>Commence une nouvelle page.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>width</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>height</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_circle</name>
<proto>void pdf_circle(resource pdf_object, double x-coor, double y-coor, double radius)</proto>
<desc>Dessine un cercle.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x-coor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y-coor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>radius</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_clip</name>
<proto>void pdf_clip(resource pdf_object)</proto>
<desc>Aligne sur le chemin courant.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_close</name>
<proto>void pdf_close(resource pdf_object)</proto>
<desc>Ferme un document PDF.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_closepath</name>
<proto>void pdf_closepath(resource pdf_object)</proto>
<desc>Ferme et clos le chemin.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_closepath_fill_stroke</name>
<proto>void pdf_closepath_fill_stroke(resource pdf_object)</proto>
<desc>Remplis, dessine et ferme le chemin courant.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_closepath_stroke</name>
<proto>void pdf_closepath_stroke(resource pdf_object)</proto>
<desc>Ferme le chemin et dessine le long du chemin.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_close_image</name>
<proto>void pdf_close_image(resource image)</proto>
<desc>Ferme une image</desc>
<return>void</return>
<params>
<param>
<paramname>image</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_concat</name>
<proto>void pdf_concat(resource pdf_object, double a, double b, double c, double d, double e, double f)</proto>
<desc>Concatène une matrice avec CTM</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>a</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>b</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>c</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>d</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>e</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>f</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_continue_text</name>
<proto>void pdf_continue_text(resource pdf_object, string text)</proto>
<desc>Affiche un texte sur une nouvelle ligne.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>text</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_curveto</name>
<proto>void pdf_curveto(resource pdf_object, double x1, double y1, double x2, double y2, double x3, double y3)</proto>
<desc>Dessine une courbe.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x1</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y1</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x2</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y2</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x3</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y3</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_delete</name>
<proto>void pdf_delete(resource pdf_object)</proto>
<desc>Efface un objet PDF</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_end_page</name>
<proto>void pdf_end_page(resource pdf_object)</proto>
<desc>Termine une page.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_endpath</name>
<proto>void pdf_endpath(resource pdf_object)</proto>
<desc>Ferme le chemin courant</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_fill</name>
<proto>void pdf_fill(resource pdf_object)</proto>
<desc>Remplis le chemin courant.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_fill_stroke</name>
<proto>void pdf_fill_stroke(resource pdf_object)</proto>
<desc>Remplis et dessine le chemin courant.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_findfont</name>
<proto>void pdf_findfont(resource pdf_object, string fontname, string encoding, int embed)</proto>
<desc>Prépare  une police pour utilisation ultérieure</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>fontname</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>encoding</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>embed</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_get_buffer</name>
<proto>string pdf_get_buffer(resource pdf_object)</proto>
<desc>Lit un buffer contenant des données PDF</desc>
<return>string</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_get_font</name>
<proto>)</proto>
<desc>Obsolète : gestion de police</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_get_fontname</name>
<proto>)</proto>
<desc>Obsolète : gestion de nom de police</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_get_fontsize</name>
<proto>)</proto>
<desc>Obsolète : gestion de taille de police</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_get_image_height</name>
<proto>string pdf_get_image_height(resource pdf_object, resource image)</proto>
<desc>Retourne la hauteur d'une image</desc>
<return>string</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>image</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_get_image_width</name>
<proto>string pdf_get_image_width(resource pdf_object, resource image)</proto>
<desc>Retourne la largeur d'une image</desc>
<return>string</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>image</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_get_parameter</name>
<proto>string pdf_get_parameter(resource pdf_object, string key [, double modifier])</proto>
<desc>Lit la valeur d'un paramètre PDFLib chaîne</desc>
<return>string</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>key</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>double modifier</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_get_value</name>
<proto>double pdf_get_value(resource pdf_object, string key [, double modifier])</proto>
<desc>Lit la valeur d'un paramètre PDFLib numérique</desc>
<return>double</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>key</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>double modifier</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_lineto</name>
<proto>void pdf_lineto(resource pdf_object, double x-coor, double y-coor)</proto>
<desc>Dessine une ligne.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x-coor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y-coor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_moveto</name>
<proto>void pdf_moveto(resource pdf_object, double x-coor, double y-coor)</proto>
<desc>Déplace le point courant.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x-coor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y-coor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_new</name>
<proto>resource pdf_new(void)</proto>
<desc>Crée un nouvel objet PDF</desc>
<return>resource</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_open</name>
<proto>)</proto>
<desc>Obsolète: Ouvre un nouvel objet PDF</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_open_CCITT</name>
<proto>int pdf_open_ccitt(resource pdf_object, string filename, int width, int height, int BitReverse, int k, int Blackls1)</proto>
<desc>Ouvre une nouvelle image à partir de données CCITT</desc>
<return>int</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>width</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>height</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>BitReverse</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>k</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>Blackls1</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_open_file</name>
<proto>int pdf_open_file(resource pdf_object [, string filename])</proto>
<desc>Ouvre un nouvel objet PDF</desc>
<return>int</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string filename</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_open_gif</name>
<proto>)</proto>
<desc>Obsolète: Ouvre une image GIF</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_open_image</name>
<proto>int pdf_open_image(int PDF-document, string imagetype, string source, string data, long length, int width, int height, int components, int bpc, string params)</proto>
<desc>Fonction générique pour les images</desc>
<return>int</return>
<params>
<param>
<paramname>PDF-document</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>imagetype</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>source</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>length</paramname>
<paramtype>long</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>width</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>height</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>components</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>bpc</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>params</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_open_image_file</name>
<proto>int pdf_open_image_file(resource pdf_object, string imagetype, string filename [, string stringparam] [, string intparam])</proto>
<desc>Lit une image depuis un fichier</desc>
<return>int</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>imagetype</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string stringparam</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string intparam</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_open_png</name>
<proto>)</proto>
<desc>Obsolète: Ouvre une image PNG</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_open_jpeg</name>
<proto>)</proto>
<desc>Obsolète: Ouvre une image JPEG</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_open_tiff</name>
<proto>int pdf_open_tiff(int PDF-document, string filename)</proto>
<desc>Obsolète: Ouvre une image TIFF</desc>
<return>int</return>
<params>
<param>
<paramname>PDF-document</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_place_image</name>
<proto>void pdf_place_image(resource pdf_object, resource image, double x-coor, double y-coor, double scale)</proto>
<desc>Place une image dans la page.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>image</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x-coor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y-coor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>scale</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_rect</name>
<proto>void pdf_rect(resource pdf_object, double x-coor, double y-coor, double width, double height)</proto>
<desc>Dessine un rectangle.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x-coor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y-coor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>width</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>height</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_restore</name>
<proto>void pdf_restore(resource pdf_object)</proto>
<desc>Restaure un environnement sauvé.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_rotate</name>
<proto>void pdf_rotate(resource pdf_object, double angle)</proto>
<desc>Choisi la rotation.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>angle</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_save</name>
<proto>void pdf_save(resource pdf_object)</proto>
<desc>Enregistre l'environnement courant.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_scale</name>
<proto>void pdf_scale(resource pdf_object, double x-scale, double y-scale)</proto>
<desc>Modifie l'échelle.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x-scale</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y-scale</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_setdash</name>
<proto>void pdf_setdash(resource pdf_object, double white, double black)</proto>
<desc>Modifie les caractères de remplissage.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>white</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>black</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_setflat</name>
<proto>void pdf_setflat(resource pdf_object, double value)</proto>
<desc>Modifie la platitude (flatness).</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>value</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_setfont</name>
<proto>void pdf_setfont(resource pdf_object, int font, double size)</proto>
<desc>Modifie la police courante</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>font</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>size</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_setgray</name>
<proto>void pdf_setgray(resource pdf_object, double gray value)</proto>
<desc>Modifie la couleur grise comme couleur de remplissage et de dessin.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>gray</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_setgray_fill</name>
<proto>void pdf_setgray_fill(resource pdf_object, double gray value)</proto>
<desc>Modifie la couleur grise comme couleur de remplissage.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>gray</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_setgray_stroke</name>
<proto>void pdf_setgray_stroke(resource pdf_object, double gray value)</proto>
<desc>Modifie la couleur de dessin à un niveau de gris.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>gray</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_setlinecap</name>
<proto>void pdf_setlinecap(resource pdf_object, int value)</proto>
<desc>Modifie le paramètre linecap.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>value</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_setlinejoin</name>
<proto>void pdf_setlinejoin(resource pdf_object, long value)</proto>
<desc>Modifie le paramètre linejoin.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>value</paramname>
<paramtype>long</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_setlinewidth</name>
<proto>void pdf_setlinewidth(resource pdf_object, double width)</proto>
<desc>Modifie la largeur de ligne.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>width</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_setmiterlimit</name>
<proto>void pdf_setmiterlimit(resource pdf_object, double value)</proto>
<desc>Modifie la "miter limit".</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>value</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_setpolydash</name>
<proto>void pdf_setpolydash(resource pdf_object, array dasharray)</proto>
<desc>Modifie les pointillés compliqués</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>dasharray</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_setrgbcolor</name>
<proto>void pdf_setrgbcolor(resource pdf_object, double red value, double green value, double blue value)</proto>
<desc>Modifie la couleur rgb comme couleur de dessin et de remplissage.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>red</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>green</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>blue</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_setrgbcolor_fill</name>
<proto>void pdf_setrgbcolor_fill(resource pdf_object, double red value, double green value, double blue value)</proto>
<desc>Modifie la couleur rgb comme couleur de remplissage.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>red</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>green</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>blue</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_setrgbcolor_stroke</name>
<proto>void pdf_setrgbcolor_stroke(resource pdf_object, double red value, double green value, double blue value)</proto>
<desc>Modifie la couleur rgb comme couleur de dessin.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>red</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>green</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>blue</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_set_border_color</name>
<proto>void pdf_set_border_color(resource pdf_object, double red, double green, double blue)</proto>
<desc>Modifie la couleur des liens et annotations</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>red</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>green</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>blue</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_set_border_dash</name>
<proto>void pdf_set_border_dash(resource pdf_object, double black, double white)</proto>
<desc>Modifie les pointillés des liens et annotations</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>black</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>white</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_set_border_style</name>
<proto>void pdf_set_border_style(resource pdf_object, string style, double width)</proto>
<desc>Modifie le bord des liens et annotations</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>style</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>width</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_set_char_spacing</name>
<proto>void pdf_set_char_spacing(resource pdf_object, double space)</proto>
<desc>Fixe l'espacement des caractères.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>space</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_set_duration</name>
<proto>void pdf_set_duration(resource pdf_object, double duration)</proto>
<desc>Choisi la durée de transition entre deux pages.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>duration</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_set_font</name>
<proto>void pdf_set_font(resource pdf_object, string font name, double size, string encoding [, int embed])</proto>
<desc>Sélectionne la police et sa taille.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>font</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>size</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>encoding</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int embed</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_set_horiz_scaling</name>
<proto>void pdf_set_horiz_scaling(resource pdf_object, double scale)</proto>
<desc>Fixe l'echelle horizontale du texte.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>scale</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_set_info</name>
<proto>void pdf_set_info(resource pdf_object, string fieldname, string value)</proto>
<desc>Remplis les entêtes du document</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>fieldname</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>value</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_set_leading</name>
<proto>)</proto>
<desc>Obsolète : Modifie la distance entre les lignes du texte</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_set_parameter</name>
<proto>void pdf_set_parameter(resource pdf_object, string name, string value)</proto>
<desc>Modifie certains paramètres.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>value</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_set_text_pos</name>
<proto>void pdf_set_text_pos(resource pdf_object, double x-coor, double y-coor)</proto>
<desc>Fixe la position du texte.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x-coor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y-coor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_set_text_rendering</name>
<proto>void pdf_set_text_rendering(resource pdf_object, int mode)</proto>
<desc>Détermine le rendu du texte.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_set_text_matrix</name>
<proto>)</proto>
<desc>Obsolète: Modifie la transition des pages</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_set_value</name>
<proto>void pdf_set_value(resource pdf_object, string name, double value)</proto>
<desc>Modifie certains paramètre numériques</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>value</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_set_word_spacing</name>
<proto>void pdf_set_word_spacing(resource pdf_object, double space)</proto>
<desc>Fixe l'espacement des mots.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>space</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_show</name>
<proto>void pdf_show(resource pdf_object, string text)</proto>
<desc>Affiche un texte à la position courante.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>text</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_show_boxed</name>
<proto>int pdf_show_boxed(resource pdf_object, string text, double x-coor, double y-coor, double width, double height, string mode [, string feature])</proto>
<desc>Affiche un texte dans un rectangle.</desc>
<return>int</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>text</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x-coor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y-coor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>width</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>height</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string feature</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_show_xy</name>
<proto>void pdf_show_xy(resource pdf_object, string text, double x-coor, double y-coor)</proto>
<desc>Affiche un texte à une position donnée.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>text</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x-coor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y-coor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_skew</name>
<proto>void pdf_skew(resource pdf_object, double alpha, double beta)</proto>
<desc>Modifie le système de coordonnées.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>alpha</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>beta</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_stringwidth</name>
<proto>double pdf_stringwidth(resource pdf_object, string text)</proto>
<desc>Retourne la largeur du texte avec la police courante.</desc>
<return>double</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>text</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_stroke</name>
<proto>void pdf_stroke(resource pdf_object)</proto>
<desc>Dessine le long du chemin.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_translate</name>
<proto>void pdf_translate(resource pdf_object, double x-coor, double y-coor)</proto>
<desc>Modifie l'origine du système de coordonnées.</desc>
<return>void</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x-coor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y-coor</paramname>
<paramtype>double</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pdf</extension>
<name>pdf_open_memory_image</name>
<proto>resource pdf_open_memory_image(resource pdf_object, resource image)</proto>
<desc>Ouvre une image créée par les fonctions images PHP.</desc>
<return>resource</return>
<params>
<param>
<paramname>pdf_object</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>image</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pfpro</extension>
<name>pfpro_init</name>
<proto>void pfpro_init()</proto>
<desc>Initialise la librairie Payflow Pro</desc>
<return>void</return>
<params>
</params>
</function>
<function>
<extension>pfpro</extension>
<name>pfpro_cleanup</name>
<proto>void pfpro_cleanup()</proto>
<desc>Eteind la librairie Payflow Pro</desc>
<return>void</return>
<params>
</params>
</function>
<function>
<extension>pfpro</extension>
<name>pfpro_process</name>
<proto>array pfpro_process(array parameters [, string address] [, int port] [, int timeout] [, string proxy address] [, int proxy port] [, string proxy logon] [, string proxy password])</proto>
<desc>Effectue une transaction avec Payflow Pro</desc>
<return>array</return>
<params>
<param>
<paramname>parameters</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>address</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>port</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>timeout</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>proxy address</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>proxy port</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>proxy logon</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>proxy password</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>pfpro</extension>
<name>pfpro_process_raw</name>
<proto>string pfpro_process_raw(string parameters [, string address] [, int port] [, int timeout] [, string proxy address] [, int proxy port] [, string proxy logon] [, string proxy password])</proto>
<desc>Envoie une transaction brute à Payflow Pro</desc>
<return>string</return>
<params>
<param>
<paramname>parameters</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>address</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>port</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>timeout</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>proxy address</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>proxy port</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>proxy logon</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>proxy password</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>pfpro</extension>
<name>pfpro_version</name>
<proto>string pfpro_version()</proto>
<desc>Lit le numéro de version de Payflow Pro</desc>
<return>string</return>
<params>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_Close</name>
<proto>bool pg_close(resource connection)</proto>
<desc>Termine une connexion PostgreSQL.</desc>
<return>bool</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_cmdTuples</name>
<proto>int pg_cmdtuples(resource result_id)</proto>
<desc>Retourne le nombre de tuples affectés.</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_Connect</name>
<proto>resource pg_connect(string conn_string)</proto>
<desc>Ouvre une connexion.</desc>
<return>resource</return>
<params>
<param>
<paramname>conn_string</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_DBname</name>
<proto>string pg_dbname(resource connection)</proto>
<desc>Nom de la base de données.</desc>
<return>string</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_end_copy</name>
<proto>bool pg_end_copy( [resource connection])</proto>
<desc>Synchronise avec le serveur PostgreSQL</desc>
<return>bool</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_ErrorMessage</name>
<proto>string pg_errormessage(resource connection)</proto>
<desc>Message d'erreur.</desc>
<return>string</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_Exec</name>
<proto>resource pg_exec(resource connection, string query)</proto>
<desc>Exécute une requête.</desc>
<return>resource</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>query</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_Fetch_Array</name>
<proto>array pg_fetch_array(resource result, int row [, int result_type])</proto>
<desc>Lit une ligne dans un tableau.</desc>
<return>array</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>row</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>result_type</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_Fetch_Object</name>
<proto>object pg_fetch_object(resource result, int row [, int result_type])</proto>
<desc>Lit une ligne dans un objet.</desc>
<return>object</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>row</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>result_type</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_Fetch_Row</name>
<proto>array pg_fetch_row(resource result, int row)</proto>
<desc>Lit une ligne dans un tableau.</desc>
<return>array</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>row</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_FieldIsNull</name>
<proto>int pg_fieldisnull(resource result_id, int row, mixed field)</proto>
<desc>Teste si un champs est à NULL.</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>row</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_FieldName</name>
<proto>string pg_fieldname(resource result_id, int field_number)</proto>
<desc>Retourne le nom d'un champs.</desc>
<return>string</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field_number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_FieldNum</name>
<proto>int pg_fieldnum(resource result_id, string field_name)</proto>
<desc>Retourne le numéro d'une colonne.</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field_name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_FieldPrtLen</name>
<proto>int pg_fieldprtlen(resource result_id, int row_number, string field_name)</proto>
<desc>Retourne la taille imprimée.</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>row_number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field_name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_FieldSize</name>
<proto>int pg_fieldsize(resource result_id, int field_number)</proto>
<desc>Retourne la taille interne de stockage d'un champs donné.</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field_number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_FieldType</name>
<proto>string pg_fieldtype(resource result_id, int field_number)</proto>
<desc>Retourne le type d'un champs donné par index.</desc>
<return>string</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field_number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_FreeResult</name>
<proto>int pg_freeresult(resource result_id)</proto>
<desc>Libère la mémoire</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_GetLastOid</name>
<proto>resource pg_getlastoid(resource result_id)</proto>
<desc>Retourne le dernier identifiant d'objet.</desc>
<return>resource</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_Host</name>
<proto>string pg_host(resource connection_id)</proto>
<desc>Retourne le nom d'hôte.</desc>
<return>string</return>
<params>
<param>
<paramname>connection_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_loclose</name>
<proto>void pg_loclose(resource fd)</proto>
<desc>Ferme un objet de grande taille.</desc>
<return>void</return>
<params>
<param>
<paramname>fd</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_locreate</name>
<proto>resource pg_loimport(resource conn)</proto>
<desc>Crée un objet de grande taille.</desc>
<return>resource</return>
<params>
<param>
<paramname>conn</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_loexport</name>
<proto>bool pg_loexport(resource oid, int file [, resource connection_id])</proto>
<desc>Exporte un objet de grande taille vers un fichier</desc>
<return>bool</return>
<params>
<param>
<paramname></paramname>
<paramtype>resource
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>connection_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_loimport</name>
<proto>resource pg_loimport(int file [, resource connection_id])</proto>
<desc>Importe un objet de grande taille depuis un fichier</desc>
<return>resource</return>
<params>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>connection_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_loopen</name>
<proto>int pg_loopen(resource conn, resource objoid, string mode)</proto>
<desc>Ouvre un objet de grande taille.</desc>
<return>int</return>
<params>
<param>
<paramname>conn</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>objoid</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_loread</name>
<proto>string pg_loread(resource loid, int len)</proto>
<desc>Lit un objet de grande taille.</desc>
<return>string</return>
<params>
<param>
<paramname>loid</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>len</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_loreadall</name>
<proto>void pg_loreadall(resource fd)</proto>
<desc>Lit un objet de grande taille en totalité.</desc>
<return>void</return>
<params>
<param>
<paramname>fd</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_lounlink</name>
<proto>void pg_lounlink(resource conn, resource lobjid)</proto>
<desc>Efface un objet de grande taille</desc>
<return>void</return>
<params>
<param>
<paramname>conn</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>lobjid</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_lowrite</name>
<proto>int pg_lowrite(resource fd, string buf)</proto>
<desc>Ecrit un objet de grande taille</desc>
<return>int</return>
<params>
<param>
<paramname>fd</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>buf</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_NumFields</name>
<proto>int pg_numfields(resource result_id)</proto>
<desc>Retourne le nombre de champs</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_NumRows</name>
<proto>int pg_numrows(resource result_id)</proto>
<desc>Retourne le nombre de lignes.</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_Options</name>
<proto>string pg_options(resource connection_id)</proto>
<desc>Retourne les options.</desc>
<return>string</return>
<params>
<param>
<paramname>connection_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_pConnect</name>
<proto>int pg_pconnect(string conn_string)</proto>
<desc>Etablit une connexion persistante.</desc>
<return>int</return>
<params>
<param>
<paramname>conn_string</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_Port</name>
<proto>int pg_port(resource connection_id)</proto>
<desc>Retourne le numéro de port.</desc>
<return>int</return>
<params>
<param>
<paramname>connection_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_put_line</name>
<proto>bool pg_put_line( [resource connection_id], string data)</proto>
<desc>Envoie une chaîne au serveur PostgreSQL</desc>
<return>bool</return>
<params>
<param>
<paramname>connection_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_Result</name>
<proto>mixed pg_result(resource result_id, int row_number, mixed fieldname)</proto>
<desc>Retourne les valeurs d'un identifiant de résultat.</desc>
<return>mixed</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>row_number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>fieldname</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_set_client_encoding</name>
<proto>int pg_set_client_encoding( [resource connection], string encoding)</proto>
<desc>Choisi l'encodage du client</desc>
<return>int</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>encoding</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_client_encoding</name>
<proto>string pg_client_encoding( [resource connection])</proto>
<desc>Lit l'encodage du client</desc>
<return>string</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_trace</name>
<proto>bool pg_trace(string filename [, string mode] [, resource connection])</proto>
<desc>Active le suivi d'une connexion PostgreSQL</desc>
<return>bool</return>
<params>
<param>
<paramname></paramname>
<paramtype>string
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_tty</name>
<proto>)</proto>
<desc>Retourne le nom de tty.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>pgsql</extension>
<name>pg_untrace</name>
<proto>bool pg_untrace( [resource connection])</proto>
<desc>Termine le suivi d'une connexion PostgreSQL</desc>
<return>bool</return>
<params>
<param>
<paramname>connection</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>posix</extension>
<name>posix_kill</name>
<proto>bool posix_kill(int pid, int sig)</proto>
<desc>Envoie un signal à un process.</desc>
<return>bool</return>
<params>
<param>
<paramname>pid</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>sig</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>posix</extension>
<name>posix_getpid</name>
<proto>int posix_getpid(void)</proto>
<desc>Retourne l'identifiant du processus courant.</desc>
<return>int</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>posix</extension>
<name>posix_getppid</name>
<proto>)</proto>
<desc>Retourne l'identifiant du processus parent.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>posix</extension>
<name>posix_getuid</name>
<proto>int posix_getuid(void)</proto>
<desc>Retourne l'ID de l'utilisateur du processus courant.</desc>
<return>int</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>posix</extension>
<name>posix_geteuid</name>
<proto>int posix_geteuid(void)</proto>
<desc>Retourne l'UID effectif de l'utilisateur du processus courant.</desc>
<return>int</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>posix</extension>
<name>posix_getgid</name>
<proto>int posix_getgid(void)</proto>
<desc>Retourne l'UID du groupe du processus courant.</desc>
<return>int</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>posix</extension>
<name>posix_getegid</name>
<proto>int posix_getegid(void)</proto>
<desc>Retourne l'ID effectif du groupe du processus courant.</desc>
<return>int</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>posix</extension>
<name>posix_setuid</name>
<proto>bool posix_setuid(int uid)</proto>
<desc>Fixe l'UID effective du processus courant.</desc>
<return>bool</return>
<params>
<param>
<paramname>uid</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>posix</extension>
<name>posix_setgid</name>
<proto>bool posix_setgid(int gid)</proto>
<desc>Fixe le GID effective du processus courant.</desc>
<return>bool</return>
<params>
<param>
<paramname>gid</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>posix</extension>
<name>posix_getgroups</name>
<proto>array posix_getgroups(void)</proto>
<desc>Retourne les identifiants du groupe du processus courant.</desc>
<return>array</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>posix</extension>
<name>posix_getlogin</name>
<proto>string posix_getlogin(void)</proto>
<desc>Retourne le nom de login.</desc>
<return>string</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>posix</extension>
<name>posix_getpgrp</name>
<proto>int posix_getpgrp(void)</proto>
<desc>Retourne l'identifiant du groupe de processus.</desc>
<return>int</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>posix</extension>
<name>posix_setsid</name>
<proto>int posix_setsid(void)</proto>
<desc>Fait du processus courant un chef de session.</desc>
<return>int</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>posix</extension>
<name>posix_setpgid</name>
<proto>int posix_setpgid(int pid, int pgid)</proto>
<desc>Fixe l'identifiant de group de processus.</desc>
<return>int</return>
<params>
<param>
<paramname>pid</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>pgid</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>posix</extension>
<name>posix_getpgid</name>
<proto>int posix_getpgid(int pid)</proto>
<desc>Retourne l'id du groupe de processus.</desc>
<return>int</return>
<params>
<param>
<paramname>pid</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>posix</extension>
<name>posix_getsid</name>
<proto>int posix_getsid(int pid)</proto>
<desc>Retourne le sid du processus.</desc>
<return>int</return>
<params>
<param>
<paramname>pid</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>posix</extension>
<name>posix_uname</name>
<proto>array posix_uname(void)</proto>
<desc>Retourne le nom du système.</desc>
<return>array</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>posix</extension>
<name>posix_times</name>
<proto>array posix_times(void)</proto>
<desc>Utilisation des ressources.</desc>
<return>array</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>posix</extension>
<name>posix_ctermid</name>
<proto>string posix_ctermid(void)</proto>
<desc>Retourne le chemin du terminal.</desc>
<return>string</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>posix</extension>
<name>posix_ttyname</name>
<proto>string posix_ttyname(int fd)</proto>
<desc>Retourne le nom de device du terminal.</desc>
<return>string</return>
<params>
<param>
<paramname>fd</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>posix</extension>
<name>posix_isatty</name>
<proto>bool posix_isatty(int fd)</proto>
<desc>Détermine si un pointeur de fichier est un terminal interactif.</desc>
<return>bool</return>
<params>
<param>
<paramname>fd</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>posix</extension>
<name>posix_getcwd</name>
<proto>string posix_getcwd(void)</proto>
<desc>Chemin du dossier courant.</desc>
<return>string</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>posix</extension>
<name>posix_mkfifo</name>
<proto>bool posix_mkfifo(string pathname, int mode)</proto>
<desc>Crée un fichier fifo (first in, first out) (un pipe nommé).</desc>
<return>bool</return>
<params>
<param>
<paramname>pathname</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>posix</extension>
<name>posix_getgrnam</name>
<proto>array posix_getgrnam(string name)</proto>
<desc>Retourne des informations sur un groupe.</desc>
<return>array</return>
<params>
<param>
<paramname>name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>posix</extension>
<name>posix_getgrgid</name>
<proto>array posix_getgrgid(int gid)</proto>
<desc>Retourne des informations sur un groupe.</desc>
<return>array</return>
<params>
<param>
<paramname>gid</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>posix</extension>
<name>posix_getpwnam</name>
<proto>array posix_getpwnam(string username)</proto>
<desc>Retourne des informations sur un utilisateur.</desc>
<return>array</return>
<params>
<param>
<paramname>username</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>posix</extension>
<name>posix_getpwuid</name>
<proto>array posix_getpwuid(int uid)</proto>
<desc>Retourne des informations sur un utilisateur.</desc>
<return>array</return>
<params>
<param>
<paramname>uid</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>posix</extension>
<name>posix_getrlimit</name>
<proto>array posix_getrlimit(void)</proto>
<desc>Retourne les limites système.</desc>
<return>array</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>printer</extension>
<name>printer_open</name>
<proto>mixed printer_open( [string devicename])</proto>
<desc>Open connection to a printer</desc>
<return>mixed</return>
<params>
<param>
<paramname></paramname>
<paramtype>string devicename</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>printer</extension>
<name>printer_abort</name>
<proto>void printer_abort(resource handle)</proto>
<desc>Deletes the printer's spool file</desc>
<return>void</return>
<params>
<param>
<paramname>handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>printer</extension>
<name>printer_close</name>
<proto>void printer_close(resource handle)</proto>
<desc>Close an open printer connection</desc>
<return>void</return>
<params>
<param>
<paramname>handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>printer</extension>
<name>printer_write</name>
<proto>bool printer_write(resource handle, string content)</proto>
<desc>Write data to the printer</desc>
<return>bool</return>
<params>
<param>
<paramname>handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>content</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>printer</extension>
<name>printer_list</name>
<proto>array printer_list(int enumtype [, string name] [, int level])</proto>
<desc>Return an array of printers attached to the server</desc>
<return>array</return>
<params>
<param>
<paramname>enumtype</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string name</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int level</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>printer</extension>
<name>printer_set_option</name>
<proto>bool printer_set_option(resource handle, int option, mixed value)</proto>
<desc>Configure the printer connection</desc>
<return>bool</return>
<params>
<param>
<paramname>handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>option</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>value</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>printer</extension>
<name>printer_get_option</name>
<proto>mixed printer_get_option(resource handle, string option)</proto>
<desc>Retrieve printer configuration data</desc>
<return>mixed</return>
<params>
<param>
<paramname>handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>option</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>printer</extension>
<name>printer_create_dc</name>
<proto>void printer_create_dc(resource handle)</proto>
<desc>Create a new device context</desc>
<return>void</return>
<params>
<param>
<paramname>handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>printer</extension>
<name>printer_delete_dc</name>
<proto>bool printer_delete_dc(resource handle)</proto>
<desc>Delete a device context</desc>
<return>bool</return>
<params>
<param>
<paramname>handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>printer</extension>
<name>printer_start_doc</name>
<proto>bool printer_start_doc(resource handle [, string document])</proto>
<desc>Start a new document</desc>
<return>bool</return>
<params>
<param>
<paramname>handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string document</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>printer</extension>
<name>printer_end_doc</name>
<proto>bool printer_end_doc (resource handle)</proto>
<desc>Close document</desc>
<return>bool</return>
<params>
<param>
<paramname>handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>printer</extension>
<name>printer_start_page</name>
<proto>bool printer_start_page (resource handle)</proto>
<desc>Start a new page</desc>
<return>bool</return>
<params>
<param>
<paramname>handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>printer</extension>
<name>printer_end_page</name>
<proto>bool printer_end_page (resource handle)</proto>
<desc>Close active page</desc>
<return>bool</return>
<params>
<param>
<paramname>handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>printer</extension>
<name>printer_create_pen</name>
<proto>mixed printer_create_pen (int style, int width, string color)</proto>
<desc>Create a new pen</desc>
<return>mixed</return>
<params>
<param>
<paramname>style</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>width</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>color</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>printer</extension>
<name>printer_delete_pen</name>
<proto>bool printer_delete_pen (resource handle)</proto>
<desc>Delete a pen</desc>
<return>bool</return>
<params>
<param>
<paramname>handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>printer</extension>
<name>printer_select_pen</name>
<proto>void printer_select_pen (resource printer_handle, resource pen_handle)</proto>
<desc>Select a pen</desc>
<return>void</return>
<params>
<param>
<paramname>printer_handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>pen_handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>printer</extension>
<name>printer_create_brush</name>
<proto>mixed printer_create_brush (int style, string color)</proto>
<desc>Create a new brush</desc>
<return>mixed</return>
<params>
<param>
<paramname>style</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>color</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>printer</extension>
<name>printer_delete_brush</name>
<proto>bool printer_delete_brush (resource handle)</proto>
<desc>Delete a brush</desc>
<return>bool</return>
<params>
<param>
<paramname>handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>printer</extension>
<name>printer_select_brush</name>
<proto>void printer_select_brush (resource printer_handle, resource brush_handle)</proto>
<desc>Select a brush</desc>
<return>void</return>
<params>
<param>
<paramname>printer_handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>brush_handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>printer</extension>
<name>printer_create_font</name>
<proto>mixed printer_create_font (string face, int height, int width, int font_weight, bool italic, bool underline, bool strikeout, int orientaton)</proto>
<desc>Create a new font</desc>
<return>mixed</return>
<params>
<param>
<paramname>face</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>height</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>width</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>font_weight</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>italic</paramname>
<paramtype>bool</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>underline</paramname>
<paramtype>bool</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>strikeout</paramname>
<paramtype>bool</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>orientaton</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>printer</extension>
<name>printer_delete_font</name>
<proto>bool printer_delete_font (resource handle)</proto>
<desc>Delete a font</desc>
<return>bool</return>
<params>
<param>
<paramname>handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>printer</extension>
<name>printer_select_font</name>
<proto>void printer_select_font (resource printer_handle, resource font_handle)</proto>
<desc>Select a font</desc>
<return>void</return>
<params>
<param>
<paramname>printer_handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>font_handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>printer</extension>
<name>printer_logical_fontheight</name>
<proto>int printer_logical_fontheight (resource handle, int height)</proto>
<desc>Get logical font height</desc>
<return>int</return>
<params>
<param>
<paramname>handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>height</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>printer</extension>
<name>printer_draw_roundrect</name>
<proto>void printer_draw_roundrect (resource handle, int ul_x, int ul_y, int lr_x, int lr_y, int width, int height)</proto>
<desc>Draw a rectangle with rounded corners</desc>
<return>void</return>
<params>
<param>
<paramname>handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>ul_x</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>ul_y</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>lr_x</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>lr_y</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>width</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>height</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>printer</extension>
<name>printer_draw_rectangle</name>
<proto>void printer_draw_rectangle (resource handle, int ul_x, int ul_y, int lr_x, int lr_y)</proto>
<desc>Draw a rectangle</desc>
<return>void</return>
<params>
<param>
<paramname>handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>ul_x</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>ul_y</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>lr_x</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>lr_y</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>printer</extension>
<name>printer_draw_elipse</name>
<proto>void printer_draw_elipse (resource handle, int ul_x, int ul_y, int lr_x, int lr_y)</proto>
<desc>Draw an ellipse</desc>
<return>void</return>
<params>
<param>
<paramname>handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>ul_x</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>ul_y</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>lr_x</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>lr_y</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>printer</extension>
<name>printer_draw_text</name>
<proto>void printer_draw_text (resource printer_handle, string text, int x, int y)</proto>
<desc>Draw text</desc>
<return>void</return>
<params>
<param>
<paramname>printer_handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>text</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>printer</extension>
<name>printer_draw_line</name>
<proto>void printer_draw_line(resource printer_handle, int from_x, int from_y, int to_x, int to_y)</proto>
<desc>Draw a line</desc>
<return>void</return>
<params>
<param>
<paramname>printer_handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>from_x</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>from_y</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>to_x</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>to_y</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>printer</extension>
<name>printer_draw_chord</name>
<proto>void printer_draw_chord (resource handle, int rec_x, int rec_y, int rec_x1, int rec_y1, int rad_x, int rad_y, int rad_x1, int rad_y1)</proto>
<desc>Draw a chord</desc>
<return>void</return>
<params>
<param>
<paramname>handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>rec_x</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>rec_y</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>rec_x1</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>rec_y1</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>rad_x</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>rad_y</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>rad_x1</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>rad_y1</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>printer</extension>
<name>printer_draw_pie</name>
<proto>void printer_draw_pie(resource handle, int rec_x, int rec_y, int rec_x1, int rec_y1, int rad1_x, int rad1_y, int rad2_x, int rad2_y)</proto>
<desc>Draw a pie</desc>
<return>void</return>
<params>
<param>
<paramname>handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>rec_x</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>rec_y</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>rec_x1</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>rec_y1</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>rad1_x</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>rad1_y</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>rad2_x</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>rad2_y</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>printer</extension>
<name>printer_draw_bmp</name>
<proto>void printer_draw_bmp (resource handle, string filename, int x, int y)</proto>
<desc>Draw a bmp</desc>
<return>void</return>
<params>
<param>
<paramname>handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>x</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>y</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pspell</extension>
<name>pspell_add_to_personal</name>
<proto>int pspell_add_to_personal(resource dictionary_link, string word)</proto>
<desc>Ajoute le mot au dictionnaire personnel.</desc>
<return>int</return>
<params>
<param>
<paramname>dictionary_link</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>word</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pspell</extension>
<name>pspell_add_to_session</name>
<proto>int pspell_add_to_session(resource dictionary_link, string word)</proto>
<desc>Ajoute le mot au dictionnaire personnel de la session courante</desc>
<return>int</return>
<params>
<param>
<paramname>dictionary_link</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>word</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pspell</extension>
<name>pspell_check</name>
<proto>boolean pspell_check(resource dictionary_link, string word)</proto>
<desc>Vérifie un mot</desc>
<return>boolean</return>
<params>
<param>
<paramname>dictionary_link</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>word</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pspell</extension>
<name>pspell_clear_session</name>
<proto>int pspell_clear_session(resource dictionary_link)</proto>
<desc>Remet à zéro la session courante.</desc>
<return>int</return>
<params>
<param>
<paramname>dictionary_link</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pspell</extension>
<name>pspell_config_create</name>
<proto>resource pspell_config_create(string language [, string spelling] [, string jargon] [, string encoding])</proto>
<desc>Crée une configuration utilisée pour ouvrir un dictionnaire</desc>
<return>resource</return>
<params>
<param>
<paramname>language</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>spelling</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>jargon</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>encoding</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>pspell</extension>
<name>pspell_config_ignore</name>
<proto>int pspell_config_ignore(resource dictionary_link, int n)</proto>
<desc>Ignore les mots des moins de N caractères.</desc>
<return>int</return>
<params>
<param>
<paramname>dictionary_link</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>n</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pspell</extension>
<name>pspell_config_mode</name>
<proto>int pspell_config_mode(resource dictionary_link, int mode)</proto>
<desc>Change le mode de suggestion</desc>
<return>int</return>
<params>
<param>
<paramname>dictionary_link</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pspell</extension>
<name>pspell_config_personal</name>
<proto>int pspell_config_personal(resource dictionary_link, string file)</proto>
<desc>Choisit le fichier qui contient le dictionnaire personnel</desc>
<return>int</return>
<params>
<param>
<paramname>dictionary_link</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>file</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pspell</extension>
<name>pspell_config_repl</name>
<proto>int pspell_config_repl(resource dictionary_link, string file)</proto>
<desc>Choisit le fichier qui contient les paires de remplacement.</desc>
<return>int</return>
<params>
<param>
<paramname>dictionary_link</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>file</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pspell</extension>
<name>pspell_config_runtogether</name>
<proto>int pspell_config_runtogether(resource dictionary_link, boolean flag)</proto>
<desc>Considère deux mots accolés comme un composé.</desc>
<return>int</return>
<params>
<param>
<paramname>dictionary_link</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>flag</paramname>
<paramtype>boolean</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pspell</extension>
<name>pspell_config_save_repl</name>
<proto>int pspell_config_save_repl(resource dictionary_link, boolean flag)</proto>
<desc>Active la sauvegarde des paires de remplacement</desc>
<return>int</return>
<params>
<param>
<paramname>dictionary_link</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>flag</paramname>
<paramtype>boolean</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pspell</extension>
<name>pspell_new</name>
<proto>resource pspell_new(string language [, string spelling] [, string jargon] [, string encoding])</proto>
<desc>Charge un nouveau dictionnaire</desc>
<return>resource</return>
<params>
<param>
<paramname>language</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>spelling</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>jargon</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>encoding</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>pspell</extension>
<name>pspell_new_config</name>
<proto>resource pspell_new_config(resource config)</proto>
<desc>Charge un nouveau dictionnaire</desc>
<return>resource</return>
<params>
<param>
<paramname>config</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pspell</extension>
<name>pspell_new_personal</name>
<proto>resource pspell_new_personal(string personal, string language [, string spelling] [, string jargon] [, string encoding] [, int mode])</proto>
<desc>Charge un nouveau dictionnaire avec un dictionnaire personnel</desc>
<return>resource</return>
<params>
<param>
<paramname>personal</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>language</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>spelling</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>jargon</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>encoding</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>pspell</extension>
<name>pspell_save_wordlist</name>
<proto>int pspell_save_wordlist(resource dictionary_link)</proto>
<desc>Sauve le dictionnaire personnel dans un fichier.</desc>
<return>int</return>
<params>
<param>
<paramname>dictionary_link</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pspell</extension>
<name>pspell_store_replacement</name>
<proto>int pspell_store_replacement(resource dictionary_link, string misspelled, string correct)</proto>
<desc>Enregistre une paire de remplacement pour un mot</desc>
<return>int</return>
<params>
<param>
<paramname>dictionary_link</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>misspelled</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>correct</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>pspell</extension>
<name>pspell_suggest</name>
<proto>array pspell_suggest(resource dictionary_link, string word)</proto>
<desc>Suggèegrave;re une orthographe</desc>
<return>array</return>
<params>
<param>
<paramname>dictionary_link</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>word</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>readline</extension>
<name>readline</name>
<proto>string readline( [string prompt])</proto>
<desc>Lit une ligne</desc>
<return>string</return>
<params>
<param>
<paramname>prompt</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>readline</extension>
<name>readline_add_history</name>
<proto>void readline_add_history(string line)</proto>
<desc>Ajoute une ligne à l'historique</desc>
<return>void</return>
<params>
<param>
<paramname>line</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>readline</extension>
<name>readline_clear_history</name>
<proto>boolean readline_clear_history(void)</proto>
<desc>Efface l'historique</desc>
<return>boolean</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>readline</extension>
<name>readline_completion_function</name>
<proto>boolean readline_completion_function (string line)</proto>
<desc>Enregistre une fonction de complétion</desc>
<return>boolean
</return>
<params>
<param>
<paramname>line</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>readline</extension>
<name>readline_info</name>
<proto>mixed readline_info( [string varname] [, string newvalue])</proto>
<desc>Lit/modifie diverses variables internes</desc>
<return>mixed</return>
<params>
<param>
<paramname>varname</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>newvalue</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>readline</extension>
<name>readline_list_history</name>
<proto>array readline_list_history(void)</proto>
<desc>Liste l'historique</desc>
<return>array</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>readline</extension>
<name>readline_read_history</name>
<proto>boolean readline_read_history (string filename)</proto>
<desc>Lit l'historique</desc>
<return>boolean
</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>readline</extension>
<name>readline_write_history</name>
<proto>boolean readline_write_history (string filename)</proto>
<desc>Ecrit dans l'historique</desc>
<return>boolean
</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>recode</extension>
<name>recode_string</name>
<proto>string recode_string(string request, string string)</proto>
<desc>Recode une chaîne en fonction de la requête.</desc>
<return>string</return>
<params>
<param>
<paramname>request</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>string</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>recode</extension>
<name>recode</name>
<proto>string recode(string request, string string)</proto>
<desc>Recode une fonction grâce à une requête</desc>
<return>string</return>
<params>
<param>
<paramname>request</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>string</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>recode</extension>
<name>recode_file</name>
<proto>boolean recode_file(string request, resource input, resource output)</proto>
<desc>Recode de fichier à fichier, en fonction de la requête.</desc>
<return>boolean</return>
<params>
<param>
<paramname>request</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>input</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>output</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>regex</extension>
<name>ereg</name>
<proto>int ereg(string pattern, string string [, array regs])</proto>
<desc>Expression régulière standard.</desc>
<return>int</return>
<params>
<param>
<paramname>pattern</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>string</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>regs</paramname>
<paramtype>array</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>regex</extension>
<name>ereg_replace</name>
<proto>string ereg_replace(string pattern, string replacement, string string)</proto>
<desc>Remplacement par expression régulière.</desc>
<return>string</return>
<params>
<param>
<paramname>pattern</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>replacement</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>string</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>regex</extension>
<name>eregi</name>
<proto>int eregi(string pattern, string string [, array regs])</proto>
<desc>Recherche par expression régulière insensible à la casse.</desc>
<return>int</return>
<params>
<param>
<paramname>pattern</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>string</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>regs</paramname>
<paramtype>array</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>regex</extension>
<name>eregi_replace</name>
<proto>string eregi_replace(string pattern, string replacement, string string)</proto>
<desc>Remplacement par expression régulière insensible à
    la casse.</desc>
<return>string</return>
<params>
<param>
<paramname>pattern</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>replacement</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>string</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>regex</extension>
<name>split</name>
<proto>)</proto>
<desc>Scinde une chaîne en un tableau, grâce à une
    expression régulière.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>regex</extension>
<name>spliti</name>
<proto>array spliti(string pattern, string string [, int limit])</proto>
<desc>Scinde une chaîne en un tableau, grâce à une
    expression régulière.</desc>
<return>array</return>
<params>
<param>
<paramname>pattern</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>string</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>limit</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>regex</extension>
<name>sql_regcase</name>
<proto>)</proto>
<desc>Prépare une expression régulière pour effectuer
    une recherche insensible à la casse.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>satellite</extension>
<name>OrbitObject</name>
<proto>new orbitobject(string ior)</proto>
<desc>Accède aux objets CORBA</desc>
<return>new</return>
<params>
<param>
<paramname>ior</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>satellite</extension>
<name>OrbitEnum</name>
<proto>new orbitenum(string id)</proto>
<desc>Utilise les énumérations CORBA</desc>
<return>new</return>
<params>
<param>
<paramname>id</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>satellite</extension>
<name>OrbitStruct</name>
<proto>new orbitstruct(string id)</proto>
<desc>Utilise une structure CORBA</desc>
<return>new</return>
<params>
<param>
<paramname>id</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>satellite</extension>
<name>satellite_caught_exception</name>
<proto>bool satellite_caught_exception ()</proto>
<desc>Indique si une exception a été émise</desc>
<return>bool
</return>
<params>
<param>
<paramname></paramname>
<paramtype></paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>satellite</extension>
<name>satellite_exception_id</name>
<proto>string satellite_exception_id()</proto>
<desc>Lit l'identifiant de repository de la dernière exception</desc>
<return>string</return>
<params>
<param>
<paramname></paramname>
<paramtype></paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>satellite</extension>
<name>satellite_exception_value</name>
<proto>OrbitStruct satellite_exception_value ()</proto>
<desc>Lit la structure de la dernière exception</desc>
<return>OrbitStruct
</return>
<params>
<param>
<paramname></paramname>
<paramtype></paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sem</extension>
<name>sem_get</name>
<proto>resource sem_get(int key [, int max_acquire] [, int perm])</proto>
<desc>Retourne un identifiant de sémaphore.</desc>
<return>resource</return>
<params>
<param>
<paramname>key</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>max_acquire</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>perm</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>sem</extension>
<name>sem_acquire</name>
<proto>int sem_acquire(resource sem_identifier)</proto>
<desc>Réserve un sémaphore.</desc>
<return>int</return>
<params>
<param>
<paramname>sem_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sem</extension>
<name>sem_release</name>
<proto>int sem_release(int sem_identifier)</proto>
<desc>Libère un sémaphore.</desc>
<return>int</return>
<params>
<param>
<paramname>sem_identifier</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sem</extension>
<name>shm_attach</name>
<proto>resource shm_attach(int key [, int memsize] [, int perm])</proto>
<desc>Crée ou ouvre un segment de mémoire partagée.</desc>
<return>resource</return>
<params>
<param>
<paramname>key</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>memsize</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>perm</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>sem</extension>
<name>shm_detach</name>
<proto>resource shm_detach(int shm_identifier)</proto>
<desc>Libère un segment de mémoire partagée.</desc>
<return>resource</return>
<params>
<param>
<paramname>shm_identifier</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sem</extension>
<name>shm_remove</name>
<proto>int shm_remove(resource shm_identifier)</proto>
<desc>Supprime un segment de mémoire partagée sous Unix.</desc>
<return>int</return>
<params>
<param>
<paramname>shm_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sem</extension>
<name>shm_put_var</name>
<proto>int shm_put_var(resource shm_identifier, int variable_key, mixed variable)</proto>
<desc>Insère ou modifie une variable de la mémoire partagée.</desc>
<return>int</return>
<params>
<param>
<paramname>shm_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>variable_key</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>variable</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sem</extension>
<name>shm_get_var</name>
<proto>mixed shm_get_var(resource shm_identifier, int variable_key)</proto>
<desc>Lit une variable dans la mémoire partagée.</desc>
<return>mixed</return>
<params>
<param>
<paramname>shm_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>variable_key</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sem</extension>
<name>shm_remove_var</name>
<proto>int shm_remove_var(int shm_identifier, int variable_key)</proto>
<desc>Efface une variable de la mémoire partagée.</desc>
<return>int</return>
<params>
<param>
<paramname>shm_identifier</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>variable_key</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sesam</extension>
<name>sesam_connect</name>
<proto>boolean sesam_connect(string catalog, string schema, string user)</proto>
<desc>Ouvre une connexion SESAM</desc>
<return>boolean</return>
<params>
<param>
<paramname>catalog</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>schema</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>user</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sesam</extension>
<name>sesam_disconnect</name>
<proto>boolean sesam_disconnect(void)</proto>
<desc>Déconnexion d'une base SESAM</desc>
<return>boolean</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sesam</extension>
<name>sesam_settransaction</name>
<proto>boolean sesam_settransaction(int isolation_level, int read_only)</proto>
<desc>Modifie les paramètres de transaction SESAM</desc>
<return>boolean</return>
<params>
<param>
<paramname>isolation_level</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>read_only</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sesam</extension>
<name>sesam_commit</name>
<proto>boolean sesam_commit(void)</proto>
<desc>Valide la transaction SESAM en cours</desc>
<return>boolean</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sesam</extension>
<name>sesam_rollback</name>
<proto>boolean sesam_rollback(void)</proto>
<desc>Annule une transaction SESAM</desc>
<return>boolean</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sesam</extension>
<name>sesam_execimm</name>
<proto>string sesam_execimm(string query)</proto>
<desc>Exécute immédiatement une requête SQL</desc>
<return>string</return>
<params>
<param>
<paramname>query</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sesam</extension>
<name>sesam_query</name>
<proto>string sesam_query(string query [, boolean scrollable])</proto>
<desc>Exécute une requête SESAM</desc>
<return>string</return>
<params>
<param>
<paramname>query</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>scrollable</paramname>
<paramtype>boolean</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>sesam</extension>
<name>sesam_num_fields</name>
<proto>int sesam_num_fields(string result_id)</proto>
<desc>Retourne le nombre de colonne dans un résultat</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sesam</extension>
<name>sesam_field_name</name>
<proto>int sesam_field_name(string result_id, int index)</proto>
<desc>Retourne le nom d'une colonne</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>index</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sesam</extension>
<name>sesam_diagnostic</name>
<proto>array sesam_diagnostic(void)</proto>
<desc>Retourne l'état de la dernière requête SESAM</desc>
<return>array</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sesam</extension>
<name>sesam_fetch_result</name>
<proto>mixed sesam_fetch_result(string result_id [, int max_rows])</proto>
<desc>Retourne tout ou partie d'un résultat SESAM</desc>
<return>mixed</return>
<params>
<param>
<paramname></paramname>
<paramtype>string
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>max_rows</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>sesam</extension>
<name>sesam_affected_rows</name>
<proto>int sesam_affected_rows(string result_id)</proto>
<desc>Lit le nombre de lignes affectées par une requête immédiate</desc>
<return>int</return>
<params>
<param>
<paramname></paramname>
<paramtype>string
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sesam</extension>
<name>sesam_errormsg</name>
<proto>string sesam_errormsg(void)</proto>
<desc>retourne le message d'erreur</desc>
<return>string</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sesam</extension>
<name>sesam_field_array</name>
<proto>array sesam_field_array(string result_id)</proto>
<desc>Retourne des informations sur une colonne</desc>
<return>array</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sesam</extension>
<name>sesam_fetch_row</name>
<proto>array sesam_fetch_row(string result_id [, int whence] [, int offset])</proto>
<desc>Lit une ligne dans un tableau</desc>
<return>array</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>whence</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>offset</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>sesam</extension>
<name>sesam_fetch_array</name>
<proto>array sesam_fetch_array(string result_id [, int whence] [, int offset])</proto>
<desc>Lit une ligne dans un tableau associatif</desc>
<return>array</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>whence</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>offset</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>sesam</extension>
<name>sesam_seek_row</name>
<proto>boolean sesam_seek_row(string result_id, int whence [, int offset])</proto>
<desc>Déplace un curseur à défilement</desc>
<return>boolean</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>whence</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>offset</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>sesam</extension>
<name>sesam_free_result</name>
<proto>int sesam_free_result(string result_id)</proto>
<desc>Libère les ressources</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>session</extension>
<name>session_start</name>
<proto>boolean session_start(void)</proto>
<desc>Initialise les données de session</desc>
<return>boolean</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>session</extension>
<name>session_destroy</name>
<proto>boolean session_destroy(void)</proto>
<desc>Détruit toutes les données enregistrées d'une session</desc>
<return>boolean</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>session</extension>
<name>session_name</name>
<proto>string session_name( [string name])</proto>
<desc>Affecte et/ou retourne le nom de la session courante</desc>
<return>string</return>
<params>
<param>
<paramname>name</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>session</extension>
<name>session_module_name</name>
<proto>string session_module_name( [string module])</proto>
<desc>Affecte et/ou retourne le module courant de session courante</desc>
<return>string</return>
<params>
<param>
<paramname>module</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>session</extension>
<name>session_save_path</name>
<proto>string session_save_path( [string path])</proto>
<desc>Affecte et/ou retourne le chemin de sauvegarde de la session courante</desc>
<return>string</return>
<params>
<param>
<paramname>path</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>session</extension>
<name>session_id</name>
<proto>string session_id( [string id])</proto>
<desc>Affecte et/ou retourne l'identifiant de session courante</desc>
<return>string</return>
<params>
<param>
<paramname></paramname>
<paramtype>string id</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>session</extension>
<name>session_register</name>
<proto>boolean session_register(mixed name [, mixed ...])</proto>
<desc>Enregistre une variable dans la session courante</desc>
<return>boolean</return>
<params>
<param>
<paramname>name</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>...</paramname>
<paramtype>mixed</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>session</extension>
<name>session_unregister</name>
<proto>boolean session_unregister(string name)</proto>
<desc>Supprime une variable dans la session courante</desc>
<return>boolean</return>
<params>
<param>
<paramname>name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>session</extension>
<name>session_unset</name>
<proto>void session_unset(void)</proto>
<desc>Détruit toutes les variables de session</desc>
<return>void</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>session</extension>
<name>session_is_registered</name>
<proto>boolean session_is_registered(string name)</proto>
<desc>Indique si une variable a été enregistrée dans la session ou pas</desc>
<return>boolean</return>
<params>
<param>
<paramname>name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>session</extension>
<name>session_get_cookie_params</name>
<proto> array session_get_cookie_params (void)</proto>
<desc>Lit les paramètres du cookie de session</desc>
<return>
</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>session</extension>
<name>session_set_cookie_params</name>
<proto>void session_set_cookie_params(int lifetime [, string path] [, string domain])</proto>
<desc>Modifie les paramètres du cookie de session</desc>
<return>void</return>
<params>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>path</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>domain</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>session</extension>
<name>session_decode</name>
<proto>boolean session_decode(string data)</proto>
<desc>Décode les données de session à partir d'une chaîne</desc>
<return>boolean</return>
<params>
<param>
<paramname>data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>session</extension>
<name>session_encode</name>
<proto>boolean session_encode(void)</proto>
<desc>Encode les données de session dans une chaîne</desc>
<return>boolean</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>session</extension>
<name>session_set_save_handler</name>
<proto>void session_set_save_handler (string open, string close, string read, string write, string destroy, string gc)</proto>
<desc>Définit les fonctions utilisateurs de stockage des sessions</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>string
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>session</extension>
<name>session_cache_limiter</name>
<proto>string session_cache_limiter( [string cache_limiter])</proto>
<desc>Lit et/ou modifie le limiteur de cache</desc>
<return>string</return>
<params>
<param>
<paramname>cache_limiter</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>shmop</extension>
<name>shmop_open</name>
<proto>resource shmop_open(int key, string flags, int mode, int size)</proto>
<desc>Crée ou ouvre un bloc de mémoire partagée</desc>
<return>resource</return>
<params>
<param>
<paramname>key</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>flags</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>size</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>shmop</extension>
<name>shmop_read</name>
<proto>string shmop_read(resource shmid, int start, int count)</proto>
<desc>Lit un bloc</desc>
<return>string</return>
<params>
<param>
<paramname>shmid</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>start</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>count</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>shmop</extension>
<name>shmop_write</name>
<proto>int shmop_write(resource shmid, string data, int offset)</proto>
<desc>Ecrire dans un bloc de mémoire partagée</desc>
<return>int</return>
<params>
<param>
<paramname>shmid</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>offset</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>shmop</extension>
<name>shmop_size</name>
<proto>int shmop_size(resource shmid)</proto>
<desc>Lire la taille du bloc de mémoire partagée</desc>
<return>int</return>
<params>
<param>
<paramname>shmid</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>shmop</extension>
<name>shmop_delete</name>
<proto>int shmop_delete(resource shmid)</proto>
<desc>Détruit un bloc de mémoire partagée</desc>
<return>int</return>
<params>
<param>
<paramname>shmid</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>shmop</extension>
<name>shmop_close</name>
<proto>int shmop_close(resource shmid)</proto>
<desc>Ferme un bloc de mémoire partagée</desc>
<return>int</return>
<params>
<param>
<paramname>shmid</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>snmp</extension>
<name>snmpget</name>
<proto>string snmpget(string hostname, string community, string object_id [, int timeout] [, int retries])</proto>
<desc>Reçoit un objet SNMP.</desc>
<return>string</return>
<params>
<param>
<paramname>hostname</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>community</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>object_id</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int timeout</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int retries</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>snmp</extension>
<name>snmpset</name>
<proto>bool snmpset(string hostname, string community, string object_id, string type, mixed value [, int timeout] [, int retries])</proto>
<desc>Envoie un objet SNMP.</desc>
<return>bool</return>
<params>
<param>
<paramname>hostname</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>community</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>object_id</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>type</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>value</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int timeout</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int retries</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>snmp</extension>
<name>snmpwalk</name>
<proto>array snmpwalk(string hostname, string community, string object_id [, int timeout] [, int retries])</proto>
<desc>Reçoit tous les objets SNMP d'un agent.</desc>
<return>array</return>
<params>
<param>
<paramname>hostname</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>community</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>object_id</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int timeout</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int retries</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>snmp</extension>
<name>snmpwalkoid</name>
<proto>array snmpwalkoid(string hostname, string community, string object_id [, int timeout] [, int retries])</proto>
<desc>Demande d'informations d'arbre sur une entité du réseau.</desc>
<return>array</return>
<params>
<param>
<paramname>hostname</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>community</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>object_id</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int timeout</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int retries</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>snmp</extension>
<name>snmp_get_quick_print</name>
<proto>boolean snmp_get_quick_print(void)</proto>
<desc>Lit la valeur courante de l'option quick_print de la librairie UCD.</desc>
<return>boolean</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>snmp</extension>
<name>snmp_set_quick_print</name>
<proto>void snmp_set_quick_print(boolean quick_print)</proto>
<desc>Ecrit la valeur courante de l'option quick_print de la librairie UCD.</desc>
<return>void</return>
<params>
<param>
<paramname>quick_print</paramname>
<paramtype>boolean</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sockets</extension>
<name>accept_connect</name>
<proto>int accept_connect(resource socket)</proto>
<desc>Accepte une connexion sur une socket.</desc>
<return>int</return>
<params>
<param>
<paramname>socket</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sockets</extension>
<name>bind</name>
<proto>int bind(resource socket, string address [, int protocol])</proto>
<desc>Lie un nom à une socket.</desc>
<return>int</return>
<params>
<param>
<paramname>socket</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>address</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>protocol</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>sockets</extension>
<name>close</name>
<proto>bool close(resource socket)</proto>
<desc>Ferme une socket.</desc>
<return>bool</return>
<params>
<param>
<paramname>socket</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sockets</extension>
<name>connect</name>
<proto>int connect(resource socket, string address [, int port])</proto>
<desc>Initie une connexion avec une socket.</desc>
<return>int</return>
<params>
<param>
<paramname>socket</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>address</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>port</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>sockets</extension>
<name>listen</name>
<proto>int listen(resource socket, int backlog)</proto>
<desc>Attend une connexion sur une socket.</desc>
<return>int</return>
<params>
<param>
<paramname>socket</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>backlog</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sockets</extension>
<name>read</name>
<proto>int read(resource socket_des, string &amp;buffer, int length)</proto>
<desc>Lit sur une socket</desc>
<return>int</return>
<params>
<param>
<paramname>socket_des</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>&amp;buffer</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>length</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sockets</extension>
<name>socket</name>
<proto>resource socket(int domain, int type, int protocol)</proto>
<desc>Crée une socket (point de communication).</desc>
<return>resource</return>
<params>
<param>
<paramname>domain</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>type</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>protocol</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sockets</extension>
<name>strerror</name>
<proto>string strerror(int errno)</proto>
<desc>Décrit une erreur de socket.</desc>
<return>string</return>
<params>
<param>
<paramname>errno</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sockets</extension>
<name>write</name>
<proto>int write(resource socket_des, string &amp;buffer, int length)</proto>
<desc>Ecrit sur une socket</desc>
<return>int</return>
<params>
<param>
<paramname>socket_des</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>&amp;buffer</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>length</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>AddCSlashes</name>
<proto>string addcslashes(string str, string charlist)</proto>
<desc>Ajoute des slash dans une chaîne, comme en langage C.</desc>
<return>string</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>charlist</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>AddSlashes</name>
<proto>string addslashes(string str)</proto>
<desc>Ajoute un slash devant tous les caractères spéciaux.</desc>
<return>string</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>bin2hex</name>
<proto>string bin2hex(string str)</proto>
<desc>Convertit une valeur binaire en hexadécimale</desc>
<return>string</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>chop</name>
<proto>string chop(string str)</proto>
<desc>Enlève les espaces de fin de chaîne.</desc>
<return>string</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>chr</name>
<proto>string chr(int ascii)</proto>
<desc>Retourne un caractère.</desc>
<return>string</return>
<params>
<param>
<paramname>ascii</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>chunk_split</name>
<proto>string chunk_split(string string [, int chunklen] [, string end])</proto>
<desc>Scinde une chaîne en plus petits morceaux.</desc>
<return>string</return>
<params>
<param>
<paramname>string</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>chunklen</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>end</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>convert_cyr_string</name>
<proto>string convert_cyr_string(string str, string from, string to)</proto>
<desc>Convertit la chaîne d'un alphabet cyrillique vers un autre.</desc>
<return>string</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>from</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>to</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>count_chars</name>
<proto>mixed count_chars(string string [, int mode])</proto>
<desc>Retourne des informations sur les caractères utilisés dans
    une chaîne.</desc>
<return>mixed</return>
<params>
<param>
<paramname>string</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>crc32</name>
<proto>int crc32(string str)</proto>
<desc>Calcule le polynôme crc32 d'une chaîne</desc>
<return>int</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>crypt</name>
<proto>string crypt(string str [, string salt])</proto>
<desc>Chiffre une chaîne avec un DES.</desc>
<return>string</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>salt</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>echo</name>
<proto>echo(string arg1 [, string argn...])</proto>
<desc>Affiche une ou plusieurs chaînes.</desc>
<return>echo(</return>
<params>
<param>
<paramname>arg1</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>argn...</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>explode</name>
<proto>array explode(string separator, string string [, int limit])</proto>
<desc>Scinde une chaîne en morceaux, grâce à un délimiteur.</desc>
<return>array</return>
<params>
<param>
<paramname>separator</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>string</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>limit</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>get_html_translation_table</name>
<proto>string get_html_translation_table (int table [, int quote_style])</proto>
<desc>Retourne la table de traduction HTML</desc>
<return>string
</return>
<params>
<param>
<paramname>table</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int quote_style</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>get_meta_tags</name>
<proto>array get_meta_tags(string filename [, int use_include_path])</proto>
<desc>Extrait toutes les balises meta d'un fichier</desc>
<return>array</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>use_include_path</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>hebrev</name>
<proto>string hebrev(string hebrew_text [, int max_chars_per_line])</proto>
<desc>Convertit un texte hébreux logique en texte visual</desc>
<return>string</return>
<params>
<param>
<paramname>hebrew_text</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>max_chars_per_line</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>hebrevc</name>
<proto>string hebrevc(string hebrew_text [, int max_chars_per_line])</proto>
<desc>Convertit un texte hébreux logique en texte visuel
    avec les nouvelles lignes de conversion.</desc>
<return>string</return>
<params>
<param>
<paramname>hebrew_text</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>max_chars_per_line</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>htmlentities</name>
<proto>string htmlentities(string string [, int quote_style])</proto>
<desc>Convertit tous les caractères spéciaux en entité HTML.</desc>
<return>string</return>
<params>
<param>
<paramname>string</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int quote_style</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>htmlspecialchars</name>
<proto>string htmlspecialchars(string string [, int quote_style])</proto>
<desc>Convertit tous les caractères spéciaux en entité HTML.</desc>
<return>string</return>
<params>
<param>
<paramname>string</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int quote_style</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>implode</name>
<proto>string implode(string glue, array pieces)</proto>
<desc>Regroupe tous les éléments d'un tableau dans une chaîne, avec une chaîne de jointure.</desc>
<return>string</return>
<params>
<param>
<paramname>glue</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>pieces</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>join</name>
<proto>string join(string glue, array pieces)</proto>
<desc>Regroupe tous les éléments d'un tableau dans
    une chaîne, avec une chaîne de jointure.</desc>
<return>string</return>
<params>
<param>
<paramname>glue</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>pieces</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>levenshtein</name>
<proto>int levenshtein string str1 string str2 int levenshtein string str1 string str2 int cost_ins int cost_rep int cost_del int levenshtein(string str1, string str2, string str1, string str2, int cost_ins, int cost_rep, int cost_del, string str1, string str2, function cost)</proto>
<desc>Calcule la distance Levenshtein entre deux chaînes</desc>
<return>int</return>
<params>
<param>
<paramname>str1</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>str2</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>str1</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>str2</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>cost_ins</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>cost_rep</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>cost_del</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>str1</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>str2</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>cost</paramname>
<paramtype>function</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>localeconv</name>
<proto>array localeconv(void)</proto>
<desc>Lit le formatage numérique et monétaire</desc>
<return>array</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>ltrim</name>
<proto>string ltrim(string str)</proto>
<desc>Enlève les espaces de début de chaîne.</desc>
<return>string</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>md5</name>
<proto>string md5(string str)</proto>
<desc>Calcule un md5 avec la chaîne.</desc>
<return>string</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>metaphone</name>
<proto>string metaphone(string str)</proto>
<desc>Calcule la clé métaphone d'une chaîne de caractères.</desc>
<return>string</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>nl2br</name>
<proto>string nl2br(string string)</proto>
<desc>Insère une césure HTML avant chaque nouvelle ligne.</desc>
<return>string</return>
<params>
<param>
<paramname>string</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>ord</name>
<proto>int ord(string string)</proto>
<desc>Retourne la valeur ASCII du caractère.</desc>
<return>int</return>
<params>
<param>
<paramname>string</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>parse_str</name>
<proto>void parse_str(string str [, array arr])</proto>
<desc>Analyse une chaîne, et en déduit des variables et leur valeur.</desc>
<return>void</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>array arr</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>print</name>
<proto>print(string arg)</proto>
<desc>Affiche une chaîne.</desc>
<return>print(</return>
<params>
<param>
<paramname>arg</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>printf</name>
<proto>int printf(string format [, mixed args...])</proto>
<desc>Affiche une chaîne formatée.</desc>
<return>int</return>
<params>
<param>
<paramname>format</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>args...</paramname>
<paramtype>mixed</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>quoted_printable_decode</name>
<proto>string quoted_printable_decode (string str)</proto>
<desc>Décode une chaîne</desc>
<return>string
</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>QuoteMeta</name>
<proto>string quotemeta(string str)</proto>
<desc>Ajoute un antislash devant tous les caractères méta</desc>
<return>string</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>rtrim</name>
<proto>string rtrim(string str)</proto>
<desc>Efface les espaces de fin de chaîne.</desc>
<return>string</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>sscanf</name>
<proto>mixed sscanf(string str, string format [, string var1...])</proto>
<desc>Analyse une fonction en fonction d'un format</desc>
<return>mixed</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>format</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>var1...</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>setlocale</name>
<proto>string setlocale(mixed category, string locale)</proto>
<desc>Change les informations locales.</desc>
<return>string</return>
<params>
<param>
<paramname>category</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>locale</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>similar_text</name>
<proto>int similar_text(string first, string second [, double percent])</proto>
<desc>Calcule la similarité de deux chaînes.</desc>
<return>int</return>
<params>
<param>
<paramname>first</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>second</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>percent</paramname>
<paramtype>double</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>soundex</name>
<proto>string soundex(string str)</proto>
<desc>Calcule la valeur soundex d'une chaîne.</desc>
<return>string</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>sprintf</name>
<proto>string sprintf(string format [, mixed args...])</proto>
<desc>Retourne une chaîne formatée.</desc>
<return>string</return>
<params>
<param>
<paramname>format</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>args...</paramname>
<paramtype>mixed</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>strncasecmp</name>
<proto>int strncasecmp(string str1, string str2, int len)</proto>
<desc>Compare en binaire des chaînes de caractères</desc>
<return>int</return>
<params>
<param>
<paramname>str1</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>str2</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>len</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>strcasecmp</name>
<proto>int strcasecmp(string str1, string str2)</proto>
<desc>Compare en binaire des chaînes, insensible à la casse.</desc>
<return>int</return>
<params>
<param>
<paramname>str1</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>str2</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>strchr</name>
<proto>string strchr(string haystack, string needle)</proto>
<desc>Renvoie la chaîne à partir de la première occurrence</desc>
<return>string</return>
<params>
<param>
<paramname>haystack</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>needle</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>strcmp</name>
<proto>int strcmp(string str1, string str2)</proto>
<desc>Compare en binaire des chaînes.</desc>
<return>int</return>
<params>
<param>
<paramname>str1</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>str2</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>strcoll</name>
<proto>int strcoll(string str1, string str2)</proto>
<desc>Compare des chaînes localisées</desc>
<return>int</return>
<params>
<param>
<paramname>str1</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>str2</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>strcspn</name>
<proto>int strcspn(string str1, string str2)</proto>
<desc>Recherche la longueur du premier segment de chaîne qui ne corresponde pas au masque donné.</desc>
<return>int</return>
<params>
<param>
<paramname>str1</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>str2</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>strip_tags</name>
<proto>string strip_tags(string str [, string allowable_tags])</proto>
<desc>Enlève les balises HTML et PHP.</desc>
<return>string</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>allowable_tags</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>StripCSlashes</name>
<proto>string stripcslashes(string str)</proto>
<desc>Déquote une chaîne quotée avec addcslashes()</desc>
<return>string</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>StripSlashes</name>
<proto>string stripslashes(string str)</proto>
<desc>Enlève les slashs ajoutés par la fonction addslashes()</desc>
<return>string</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>stristr</name>
<proto>string stristr(string haystack, string needle)</proto>
<desc>strstr(), insensible à la casse.</desc>
<return>string</return>
<params>
<param>
<paramname>haystack</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>needle</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>strlen</name>
<proto>int strlen(string str)</proto>
<desc>Retourne la longueur de la chaîne.</desc>
<return>int</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>strnatcmp</name>
<proto>int strnatcmp(string str1, string str2)</proto>
<desc>Compare des chaînes par ordre "naturel"</desc>
<return>int</return>
<params>
<param>
<paramname>str1</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>str2</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>strnatcasecmp</name>
<proto>int strnatcasecmp(string str1, string str2)</proto>
<desc>Compare des chaînes par ordre "naturel" insensible à la casse</desc>
<return>int</return>
<params>
<param>
<paramname>str1</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>str2</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>strncmp</name>
<proto>int strncmp(string str1, string str2, int len)</proto>
<desc>Compare en binaire les premiers caractères</desc>
<return>int</return>
<params>
<param>
<paramname>str1</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>str2</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>len</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>str_pad</name>
<proto>string str_pad(string input, int pad_length [, string pad_string] [, int pad_type])</proto>
<desc>Complète une chaîne avec une autre</desc>
<return>string</return>
<params>
<param>
<paramname>input</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>pad_length</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>pad_string</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>pad_type</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>strpos</name>
<proto>int strpos(string haystack, string needle [, int offset])</proto>
<desc>Recherche la première occurrence d'un caractère dans une chaîne.</desc>
<return>int</return>
<params>
<param>
<paramname>haystack</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>needle</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>offset</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>strrchr</name>
<proto>string strrchr(string haystack, string needle)</proto>
<desc>Recherche la partie terminale d'une chaîne après
    un caractère donné</desc>
<return>string</return>
<params>
<param>
<paramname>haystack</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>needle</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>str_repeat</name>
<proto>string str_repeat(string input, int multiplier)</proto>
<desc>Répète une chaîne.</desc>
<return>string</return>
<params>
<param>
<paramname>input</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>multiplier</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>strrev</name>
<proto>string strrev(string string)</proto>
<desc>Inverse l'ordre des caractères d'une chaîne.</desc>
<return>string</return>
<params>
<param>
<paramname>string</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>strrpos</name>
<proto>int strrpos(string haystack, char needle)</proto>
<desc>Recherche la dernière occurrence d'un caractère dans une chaîne.</desc>
<return>int</return>
<params>
<param>
<paramname>haystack</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>needle</paramname>
<paramtype>char</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>strspn</name>
<proto>int strspn(string str1, string str2)</proto>
<desc>Retourne la longueur du premier segment qui vérifie le masque.</desc>
<return>int</return>
<params>
<param>
<paramname>str1</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>str2</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>strstr</name>
<proto>string strstr(string haystack, string needle)</proto>
<desc>Renvoie la chaîne à partir de la première occurrence</desc>
<return>string</return>
<params>
<param>
<paramname>haystack</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>needle</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>strtok</name>
<proto>string strtok(string arg1, string arg2)</proto>
<desc>Morcelle une chaîne</desc>
<return>string</return>
<params>
<param>
<paramname>arg1</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>arg2</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>strtolower</name>
<proto>string strtolower(string str)</proto>
<desc>Met tous les caractères en minuscules.</desc>
<return>string</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>strtoupper</name>
<proto>string strtoupper(string string)</proto>
<desc>Met tous les caractères en majuscules.</desc>
<return>string</return>
<params>
<param>
<paramname>string</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>str_replace</name>
<proto>mixed str_replace(mixed search, mixed replace, mixed subject)</proto>
<desc>Remplace toutes les occurrences d'une chaîne par une autre.</desc>
<return>mixed</return>
<params>
<param>
<paramname>search</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>replace</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>subject</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>strtr</name>
<proto>string strtr(string str, string from, string to)</proto>
<desc>Remplace toutes les occurrences d'un caractère par un autre.</desc>
<return>string</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>from</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>to</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>substr</name>
<proto>string substr(string string, int start [, int length])</proto>
<desc>Retourne une partie de la chaîne.</desc>
<return>string</return>
<params>
<param>
<paramname>string</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>start</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>length</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>substr_count</name>
<proto>int substr_count(string haystrack, string needle)</proto>
<desc>Compte le nombre de sous-chaînes</desc>
<return>int</return>
<params>
<param>
<paramname>haystrack</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>needle</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>substr_replace</name>
<proto>string substr_replace(string string, string replacement, int start [, int length])</proto>
<desc>Remplace dans une sous partie de chaîne</desc>
<return>string</return>
<params>
<param>
<paramname>string</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>replacement</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>start</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>length</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>trim</name>
<proto>string trim(string str)</proto>
<desc>Enlève les espaces de début et de fin de chaîne</desc>
<return>string</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>ucfirst</name>
<proto>string ucfirst(string str)</proto>
<desc>Force le premier caractère d'une chaîne en majuscule.</desc>
<return>string</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>ucwords</name>
<proto>string ucwords(string str)</proto>
<desc>Force le premier caractère de chaque mot d'une chaîne en majuscule</desc>
<return>string</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>strings</extension>
<name>wordwrap</name>
<proto>string wordwrap(string str [, int width] [, string break] [, int cut])</proto>
<desc>Ajoute une césure à une chaîne tous les n caractères</desc>
<return>string</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>width</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>break</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>cut</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_openfile</name>
<proto>void swf_openfile (string filename, float width, float height, float framerate, float r, float g, float b)</proto>
<desc>Ouvre un nouveau fichier Shockwave Flash</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>string
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_closefile</name>
<proto>void swf_closefile ( [int return_file])</proto>
<desc>Ferme le fichier courant Shockwave Flash.</desc>
<return>void
</return>
<params>
<param>
<paramname>return_file</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_labelframe</name>
<proto>void swf_labelframe (string name)</proto>
<desc>Nomme le frame courant.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>string
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_showframe</name>
<proto>void swf_showframe (void)</proto>
<desc>Affiche le frame courant.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_setframe</name>
<proto>void swf_setframe (int framenumber)</proto>
<desc>Fixe le frame courant.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_getframe</name>
<proto>int swf_getframe ()</proto>
<desc>Retourne le numéro de frame courant.</desc>
<return>int
</return>
<params>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_mulcolor</name>
<proto>void swf_mulcolor (float r, float g, float b, float a)</proto>
<desc>Fixe la couleur globale de multiplication (? : the global multiply color).</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_addcolor</name>
<proto>void swf_addcolor (float r, float g, float b, float a)</proto>
<desc>Fixe la couleur globale d'addition (? : the global add color).</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_placeobject</name>
<proto>void swf_placeobject (int objid, int depth)</proto>
<desc>Place un objet sur la scène.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_modifyobject</name>
<proto>void swf_modifyobject (int depth, int how)</proto>
<desc>Modifie un objet.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_removeobject</name>
<proto>void swf_removeobject (int depth)</proto>
<desc>Enlève un objet.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_nextid</name>
<proto>int swf_nextid ()</proto>
<desc>Retourne le prochain identifiant d'objet libre.</desc>
<return>int
</return>
<params>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_startdoaction</name>
<proto>void swf_startdoaction ()</proto>
<desc>Commence la déscription d'une liste d'action pour la frame courante.</desc>
<return>void
</return>
<params>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_actiongotoframe</name>
<proto>void swf_actiongotoframe (int framenumber)</proto>
<desc>Joue un frame puis stoppe.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_actiongeturl</name>
<proto>void swf_actiongeturl (string url, string target)</proto>
<desc>Retourne l'URL d'une animation Shockwave Flash.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>string
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_actionnextframe</name>
<proto>void swf_actionnextframe ()</proto>
<desc>Avance d'un frame.</desc>
<return>void
</return>
<params>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_actionprevframe</name>
<proto>void swf_actionprevframe ()</proto>
<desc>Recule d'un frame.</desc>
<return>void
</return>
<params>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_actionplay</name>
<proto>void swf_actionplay ()</proto>
<desc>Joue l'animation flash à partir du frame courant.</desc>
<return>void
</return>
<params>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_actionstop</name>
<proto>void swf_actionstop ()</proto>
<desc>Arrête l'animation flash.</desc>
<return>void
</return>
<params>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_actiontogglequality</name>
<proto>void swf_actiontogglequality ()</proto>
<desc>Choisi le niveau de qualité haut ou bas.</desc>
<return>void
</return>
<params>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_actionwaitforframe</name>
<proto>void swf_actionwaitforframe (int framenumber, int skipcount)</proto>
<desc>Ignore les actions si le frame n'est pas chargé.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_actionsettarget</name>
<proto>void swf_actionsettarget (string target)</proto>
<desc>Fixe le contexte des actions.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>string
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_actiongotolabel</name>
<proto>void swf_actiongotolabel (string label)</proto>
<desc>Affiche le frame nommé.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>string
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_enddoaction</name>
<proto>void swf_enddoaction ()</proto>
<desc>Termine l'action courante.</desc>
<return>void
</return>
<params>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_defineline</name>
<proto>void swf_defineline (int objid, float x1, float y1, float x2, float y2, float width)</proto>
<desc>Définit une ligne.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_definerect</name>
<proto>void swf_definerect (int objid, float x1, float y1, float x2, float y2, float width)</proto>
<desc>Définit un rectangle.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_definepoly</name>
<proto>void swf_definepoly (int objid, array coords, int npoints, float width)</proto>
<desc>Définit un polygone.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>array
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_startshape</name>
<proto>void swf_startshape (int objid)</proto>
<desc>Commence une forme complexe.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_shapelinesolid</name>
<proto>void swf_shapelinesolid (float r, float g, float b, float a, float width)</proto>
<desc>Fixe le style courant de ligne.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_shapefilloff</name>
<proto>void swf_shapefilloff ()</proto>
<desc>Inactive le remplissage.</desc>
<return>void
</return>
<params>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_shapefillsolid</name>
<proto>void swf_shapefillsolid (float r, float g, float b, float a)</proto>
<desc>Fixe la couleur pour le style courant de remplissage.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_shapefillbitmapclip</name>
<proto>void swf_shapefillbitmapclip (int bitmapid)</proto>
<desc>Choisi le mode de remplissage par texture.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_shapefillbitmaptile</name>
<proto>void swf_shapefillbitmaptile (int bitmapid)</proto>
<desc>Choisi le mode de remplissage par texture repétée.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_shapemoveto</name>
<proto>void swf_shapemoveto (float x, float y)</proto>
<desc>Change la position courante.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_shapelineto</name>
<proto>void swf_shapelineto (float x, float y)</proto>
<desc>Dessine une ligne.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_shapecurveto</name>
<proto>void swf_shapecurveto (float x1, float y1, float x2, float y2)</proto>
<desc>Dessine une courbe de Bézier quadratique entre deux points.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_shapecurveto3</name>
<proto>void swf_shapecurveto3 (float x1, float y1, float x2, float y2, float x3, float y3)</proto>
<desc>Dessine une courbe Bézier cubique.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_shapearc</name>
<proto>void swf_shapearc (float x, float y, float r, float ang1, float ang2)</proto>
<desc>Dessine une arc de cercle.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_endshape</name>
<proto>void swf_endshape ()</proto>
<desc>Complète la définition de la forme courante.</desc>
<return>void
</return>
<params>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_definefont</name>
<proto>void swf_definefont (int fontid, string fontname)</proto>
<desc>Définit une police.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_setfont</name>
<proto>void swf_setfont (int fontid)</proto>
<desc>Change la police courante.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_fontsize</name>
<proto>void swf_fontsize (float size)</proto>
<desc>Change la taille de la police.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_fontslant</name>
<proto>void swf_fontslant (float slant)</proto>
<desc>Change l'inclinaison de la police courante.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_fonttracking</name>
<proto>void swf_fonttracking (float tracking)</proto>
<desc>Change l'espacement des caractères.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>float
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_getfontinfo</name>
<proto>array swf_getfontinfo ()</proto>
<desc>Retourne la hauteur du A majuscule, et du x minuscule.</desc>
<return>array
</return>
<params>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_definetext</name>
<proto>void swf_definetext (int objid, string str, int docenter)</proto>
<desc>Définit une chaîne de texte.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_textwidth</name>
<proto>float swf_textwidth (string str)</proto>
<desc>Retourne la longueur d'une chaîne.</desc>
<return>float
</return>
<params>
<param>
<paramname></paramname>
<paramtype>string
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_definebitmap</name>
<proto>void swf_definebitmap (int objid, string image_name)</proto>
<desc>Définit une image bitmap.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_getbitmapinfo</name>
<proto>array swf_getbitmapinfo (int bitmapid)</proto>
<desc>Lit les informations sur une image.</desc>
<return>array
</return>
<params>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_startsymbol</name>
<proto>void swf_startsymbol (int objid)</proto>
<desc>Définit un symbole.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_endsymbol</name>
<proto>void swf_endsymbol ()</proto>
<desc>Termine la définition de symbole.</desc>
<return>void
</return>
<params>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_startbutton</name>
<proto>void swf_startbutton (int objid, int type)</proto>
<desc>Commence la définition d'un bouton.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_addbuttonrecord</name>
<proto>void swf_addbuttonrecord (int states, int shapeid, int depth)</proto>
<desc>Contrôle la situation, l'aparance et la zone active du bouton courant.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_oncondition</name>
<proto>void swf_oncondition (int transition)</proto>
<desc>Décrit une transition utilisée pour déclencher une liste d'actions.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_endbutton</name>
<proto>void swf_endbutton ()</proto>
<desc>Termine la définition du bouton courant.</desc>
<return>void
</return>
<params>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_viewport</name>
<proto>void swf_viewport (double xmin, double xmax, double ymin, double ymax)</proto>
<desc>Sélectionne une nouvelle zone pour un dessin ultérieur.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>double
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>double
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>double
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>double
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_ortho</name>
<proto>void swf_ortho (double xmin, double xmax, double ymin, double ymax, double zmin, double zmax)</proto>
<desc>Définit une projection orthogonale entre les  coordonnées utilisateur et le port courant.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>double
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>double
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>double
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>double
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>double
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>double
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_ortho2</name>
<proto>void swf_ortho2 (double xmin, double xmax, double ymin, double ymax)</proto>
<desc>Définit une projection orthogonale à 2 dimensions entre les coordonnées utilisateur et le port courant.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>double
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>double
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>double
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>double
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_perspective</name>
<proto>void swf_perspective (double fovy, double aspect, double near, double far)</proto>
<desc>Définit une projection orthogonale à 3 dimensions entre les coordonnées utilisateur et le port courant</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>double
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>double
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>double
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>double
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_polarview</name>
<proto>void swf_polarview (double dist, double azimuth, double incidence, double twist)</proto>
<desc>Défini le point de vue de l'utilisateur en coordonnées polaire.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>double
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>double
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>double
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>double
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_lookat</name>
<proto>void swf_lookat (double view_x, double view_y, double view_z, double reference_x, double reference_y, double reference_z, double twist)</proto>
<desc>Définit une transformation de vue.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>double
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>double
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>double
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>double
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>double
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>double
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>double
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_pushmatrix</name>
<proto>void swf_pushmatrix ()</proto>
<desc>Empile la matrice de transformation courante dans la pile.</desc>
<return>void
</return>
<params>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_popmatrix</name>
<proto>void swf_popmatrix ()</proto>
<desc>Dépile la matrice de transformation.</desc>
<return>void
</return>
<params>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_scale</name>
<proto>void swf_scale (double x, double y, double z)</proto>
<desc>Homothétie.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>double
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>double
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>double
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_translate</name>
<proto>void swf_translate (double x, double y, double z)</proto>
<desc>Translate la transformation courante.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>double
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>double
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>double
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_rotate</name>
<proto>void swf_rotate (double angle, string axis)</proto>
<desc>Rotation de la transformation courante.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>double
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>swf</extension>
<name>swf_posround</name>
<proto>void swf_posround (int round)</proto>
<desc>Active l'approximation des translation d'objets.</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>int
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sybase</extension>
<name>sybase_affected_rows</name>
<proto>int sybase_affected_rows( [resource link_identifier])</proto>
<desc>Retourne le nombre de lignes affectées par la dernière requête.</desc>
<return>int</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>sybase</extension>
<name>sybase_close</name>
<proto>bool sybase_close(resource link_identifier)</proto>
<desc>Ferme une connexion Sybase.</desc>
<return>bool</return>
<params>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sybase</extension>
<name>sybase_connect</name>
<proto>resource sybase_connect(string servername, string username, string password)</proto>
<desc>Ouvre une connexion à un serveur Sybase.</desc>
<return>resource</return>
<params>
<param>
<paramname>servername</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>username</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>password</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sybase</extension>
<name>sybase_data_seek</name>
<proto>bool sybase_data_seek(resource result_identifier, int row_number)</proto>
<desc>Déplace le pointeur interne de lignes.</desc>
<return>bool</return>
<params>
<param>
<paramname>result_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>row_number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sybase</extension>
<name>sybase_fetch_array</name>
<proto>array sybase_fetch_array(resource result)</proto>
<desc>Retourne une ligne sous la forme d'un tableau.</desc>
<return>array</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sybase</extension>
<name>sybase_fetch_field</name>
<proto>object sybase_fetch_field(resource result [, int field_offset])</proto>
<desc>Lit les informations d'un champs.</desc>
<return>object</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field_offset</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>sybase</extension>
<name>sybase_fetch_object</name>
<proto>int sybase_fetch_object(resource result)</proto>
<desc>Retourne une ligne sous la forme d'un objet.</desc>
<return>int</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sybase</extension>
<name>sybase_fetch_row</name>
<proto>array sybase_fetch_row(resource result)</proto>
<desc>Retourne une ligne sous la forme d'un tableau énuméré.</desc>
<return>array</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sybase</extension>
<name>sybase_field_seek</name>
<proto>int sybase_field_seek(resource result, int field_offset)</proto>
<desc>Modifie l'index d'un champs.</desc>
<return>int</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field_offset</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sybase</extension>
<name>sybase_free_result</name>
<proto>bool sybase_free_result(int result)</proto>
<desc>Libère un résultat de la mémoire.</desc>
<return>bool</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sybase</extension>
<name>sybase_get_last_message</name>
<proto>string sybase_get_last_message(void)</proto>
<desc>Retourne le dernier message du serveur</desc>
<return>string</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sybase</extension>
<name>sybase_min_client_severity</name>
<proto>void sybase_min_client_severity(int severity)</proto>
<desc>Fixe la sévérité minimale du client</desc>
<return>void</return>
<params>
<param>
<paramname>severity</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sybase</extension>
<name>sybase_min_error_severity</name>
<proto>void sybase_min_error_severity(int severity)</proto>
<desc>Fixe la sévérité minimale du client pour les erreurs</desc>
<return>void</return>
<params>
<param>
<paramname>severity</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sybase</extension>
<name>sybase_min_message_severity</name>
<proto>void sybase_min_message_severity(int severity)</proto>
<desc>Fixe la sévérité minimale du client pour les messages</desc>
<return>void</return>
<params>
<param>
<paramname>severity</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sybase</extension>
<name>sybase_min_server_severity</name>
<proto>void sybase_min_server_severity(int severity)</proto>
<desc>Fixe la sévérité minimale du client pour le serveur</desc>
<return>void</return>
<params>
<param>
<paramname>severity</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sybase</extension>
<name>sybase_num_fields</name>
<proto>int sybase_num_fields(resource result)</proto>
<desc>Retourne le nombre de champs dans un résultat.</desc>
<return>int</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sybase</extension>
<name>sybase_num_rows</name>
<proto>int sybase_num_rows(resource result)</proto>
<desc>Retourne le nombre de lignes dans un résultat.</desc>
<return>int</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sybase</extension>
<name>sybase_pconnect</name>
<proto>resource sybase_pconnect(string servername, string username, string password)</proto>
<desc>Ouvre une connexion persistante à un serveur Sybase.</desc>
<return>resource</return>
<params>
<param>
<paramname>servername</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>username</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>password</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sybase</extension>
<name>sybase_query</name>
<proto>int sybase_query(string query, int link_identifier)</proto>
<desc>Envoie une requête à une base Sybase.</desc>
<return>int</return>
<params>
<param>
<paramname>query</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>link_identifier</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sybase</extension>
<name>sybase_result</name>
<proto>string sybase_result(resource result, int i, mixed field)</proto>
<desc>Lit une valeur dans un résultat.</desc>
<return>string</return>
<params>
<param>
<paramname>result</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>i</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>sybase</extension>
<name>sybase_select_db</name>
<proto>bool sybase_select_db(string database_name, resource link_identifier)</proto>
<desc>Sélectionne une base de données Sybase.</desc>
<return>bool</return>
<params>
<param>
<paramname>database_name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>link_identifier</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_autocommit</name>
<proto>int odbc_autocommit(resource connection_id [, int OnOff])</proto>
<desc>Active le mode auto-validation</desc>
<return>int</return>
<params>
<param>
<paramname>connection_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int OnOff</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_binmode</name>
<proto>int odbc_binmode(resource result_id, int mode)</proto>
<desc>Modifie la gestion des colonnes de données binaires.</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>mode</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_close</name>
<proto>void odbc_close(resource connection_id)</proto>
<desc>Ferme une connexion ODBC.</desc>
<return>void</return>
<params>
<param>
<paramname>connection_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_close_all</name>
<proto>void odbc_close_all(void)</proto>
<desc>Ferme toutes les connexions ODBC</desc>
<return>void</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_commit</name>
<proto>int odbc_commit(resource connection_id)</proto>
<desc>Valide une transaction ODBC</desc>
<return>int</return>
<params>
<param>
<paramname>connection_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_connect</name>
<proto>resource odbc_connect(string dsn, string user, string password [, int cursor_type])</proto>
<desc>Connexion à une source</desc>
<return>resource</return>
<params>
<param>
<paramname>dsn</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>user</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>password</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int cursor_type</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_cursor</name>
<proto>string odbc_cursor(resource result_id)</proto>
<desc>Lecture du pointeur de fiche courante (cursorname).</desc>
<return>string</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_do</name>
<proto>string odbc_do(resource connection_id, string query)</proto>
<desc>Synonyme de odbc_exec</desc>
<return>string</return>
<params>
<param>
<paramname>connection_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>query</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_error</name>
<proto>string odbc_error( [resource connection_id])</proto>
<desc>Lit le dernier code d'erreur</desc>
<return>string</return>
<params>
<param>
<paramname></paramname>
<paramtype>resource connection_id</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_errormsg</name>
<proto>string odbc_errormsg( [int connection_id])</proto>
<desc>Lit le dernier message d'erreur</desc>
<return>string</return>
<params>
<param>
<paramname></paramname>
<paramtype>int connection_id</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_exec</name>
<proto>int odbc_exec(resource connection_id, string query_string)</proto>
<desc>Prépare et exécute une requête SQL.</desc>
<return>int</return>
<params>
<param>
<paramname>connection_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>query_string</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_execute</name>
<proto>int odbc_execute(resource result_id [, array parameters_array])</proto>
<desc>Exécute une requête SQL préparée.</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>parameters_array</paramname>
<paramtype>array</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_fetch_into</name>
<proto>int odbc_fetch_into(resource result_id [, int rownumber], array result_array, int result_id, array result_array [, int rownumber])</proto>
<desc>Lit une ligne de résultat, et la place dans un tableau.</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int rownumber</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname>result_array</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>result_id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>result_array</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int rownumber</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_fetch_row</name>
<proto>int odbc_fetch_row(resource result_id [, int row_number])</proto>
<desc>Lit une ligne de résultat.</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int row_number</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_field_name</name>
<proto>string odbc_field_name(resource result_id, int field_number)</proto>
<desc>Lit le nom de la colonne.</desc>
<return>string</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field_number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_field_num</name>
<proto>int odbc_field_num(resource result_id, string field_name)</proto>
<desc>Numéro de colonne</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field_name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_field_type</name>
<proto>string odbc_field_type(resource result_id, int field_number)</proto>
<desc>Type de données d'un champs.</desc>
<return>string</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field_number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_field_len</name>
<proto>int odbc_field_len(resource result_id, int field_number)</proto>
<desc>Lit la longueur d'un champs.</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field_number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_field_precision</name>
<proto>string odbc_field_precision(resource result_id, int field_number)</proto>
<desc>Alias de odbc_field_len</desc>
<return>string</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field_number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_field_scale</name>
<proto>string odbc_field_scale(resource result_id, int field_number)</proto>
<desc>Lit l'échelle d'un champs</desc>
<return>string</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field_number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_free_result</name>
<proto>int odbc_free_result(resource result_id)</proto>
<desc>Libère les ressources associées à un résultat</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_longreadlen</name>
<proto>int odbc_longreadlen(resource result_id, int length)</proto>
<desc>Gestion des colonnes de type LONG.</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>length</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_num_fields</name>
<proto>int odbc_num_fields(resource result_id)</proto>
<desc>Nombre de colonnes dans un résultat</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_pconnect</name>
<proto>resource odbc_pconnect(string dsn, string user, string password [, int cursor_type])</proto>
<desc>Ouvre une connexion persistante à une source de données.</desc>
<return>resource</return>
<params>
<param>
<paramname>dsn</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>user</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>password</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int cursor_type</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_prepare</name>
<proto>resource odbc_prepare(resource connection_id, string query_string)</proto>
<desc>Prépare une commande pour l'exécution</desc>
<return>resource</return>
<params>
<param>
<paramname>connection_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>query_string</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_num_rows</name>
<proto>int odbc_num_rows(odbc_prepare result_id)</proto>
<desc>Nombre de ligne dans un résultat.</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>odbc_prepare</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_result</name>
<proto>string odbc_result(odbc_prepare result_id, mixed field)</proto>
<desc>Lit les données de résultat.</desc>
<return>string</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>odbc_prepare</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>field</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_result_all</name>
<proto>int odbc_result_all(odbc_prepare result_id [, string format])</proto>
<desc>Affiche le résultat sous la forme d'une table HTML.</desc>
<return>int</return>
<params>
<param>
<paramname>result_id</paramname>
<paramtype>odbc_prepare</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string format</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_rollback</name>
<proto>int odbc_rollback(odbc_prepare connection_id)</proto>
<desc>Annule une transaction</desc>
<return>int</return>
<params>
<param>
<paramname>connection_id</paramname>
<paramtype>odbc_prepare</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_setoption</name>
<proto>int odbc_setoption(resource id, int function, int option, int param)</proto>
<desc>Modifie les paramètres ODBC.</desc>
<return>int</return>
<params>
<param>
<paramname>id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>function</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>option</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>param</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_tables</name>
<proto>int odbc_tables(odbc_setoption connection_id [, string qualifier] [, string owner] [, string name] [, string types])</proto>
<desc>Liste les tables d'une source.</desc>
<return>int</return>
<params>
<param>
<paramname>connection_id</paramname>
<paramtype>odbc_setoption</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string qualifier</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string owner</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string name</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string types</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_tableprivileges</name>
<proto>int odbc_tableprivileges(resource connection_id [, string qualifier] [, string owner] [, string name])</proto>
<desc>Liste les tables et leurs privilèges</desc>
<return>int</return>
<params>
<param>
<paramname>connection_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string qualifier</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string owner</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string name</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_columns</name>
<proto>int odbc_columns(resource connection_id [, string qualifier] [, string owner] [, string table_name] [, string column_name])</proto>
<desc>Liste les colonnes d'une table</desc>
<return>int</return>
<params>
<param>
<paramname>connection_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string qualifier</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string owner</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string table_name</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string column_name</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_columnprivileges</name>
<proto>int odbc_columnprivileges(resource connection_id [, string qualifier] [, string owner] [, string table_name] [, string column_name])</proto>
<desc>Liste les colonnes et leurs droits associés</desc>
<return>int</return>
<params>
<param>
<paramname>connection_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string qualifier</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string owner</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string table_name</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string column_name</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_gettypeinfo</name>
<proto>int odbc_gettypeinfo(resource connection_id [, int data_type])</proto>
<desc>Liste les types de données supportés par une source</desc>
<return>int</return>
<params>
<param>
<paramname>connection_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int data_type</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_primarykeys</name>
<proto>int odbc_primarykeys(resource connection_id, string qualifier, string owner, string table)</proto>
<desc>Liste les colonnes utilisées dans une clé primaire</desc>
<return>int</return>
<params>
<param>
<paramname>connection_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>qualifier</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>owner</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>table</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_foreignkeys</name>
<proto>int odbc_foreignkeys(resource connection_id, string pk_qualifier, string pk_owner, string pk_table, string fk_qualifier, string fk_owner, string fk_table)</proto>
<desc>Liste les clés étrangères</desc>
<return>int</return>
<params>
<param>
<paramname>connection_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>pk_qualifier</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>pk_owner</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>pk_table</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>fk_qualifier</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>fk_owner</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>fk_table</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_procedures</name>
<proto>int odbc_procedures(resource connection_id [, string qualifier] [, string owner] [, string name])</proto>
<desc>Liste les procédure stockées</desc>
<return>int</return>
<params>
<param>
<paramname>connection_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string qualifier</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string owner</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string name</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_procedurecolumns</name>
<proto>int odbc_procedurecolumns(resource connection_id [, string qualifier] [, string owner] [, string proc] [, string column])</proto>
<desc>Liste les paramètres des procédures</desc>
<return>int</return>
<params>
<param>
<paramname>connection_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string qualifier</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string owner</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string proc</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string column</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_specialcolumns</name>
<proto>int odbc_specialcolumns(resource connection_id, int type, string qualifier, string owner, string table, int scope, int nullable)</proto>
<desc>Retourne l'ensemble optimal de colonnes, qui permettent de
     définir uniquement une ligne dans une table</desc>
<return>int</return>
<params>
<param>
<paramname>connection_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>type</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>qualifier</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>owner</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>table</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>scope</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>nullable</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>uodbc</extension>
<name>odbc_statistics</name>
<proto>int odbc_statistics(resource connection_id, string qualifier, string owner, string table_name, int unique, int accuracy)</proto>
<desc>Calcule des statistiques sur une table</desc>
<return>int</return>
<params>
<param>
<paramname>connection_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>qualifier</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>owner</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>table_name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>unique</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>accuracy</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>url</extension>
<name>base64_decode</name>
<proto>string base64_decode(string encoded_data)</proto>
<desc>Décode une chaîne en MIME base64</desc>
<return>string</return>
<params>
<param>
<paramname>encoded_data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>url</extension>
<name>base64_encode</name>
<proto>string base64_encode(string data)</proto>
<desc>Encode une chaîne en MIME base64.</desc>
<return>string</return>
<params>
<param>
<paramname>data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>url</extension>
<name>parse_url</name>
<proto>array parse_url(string url)</proto>
<desc>Analyse une URL et retourne ses composants.</desc>
<return>array</return>
<params>
<param>
<paramname>url</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>url</extension>
<name>rawurldecode</name>
<proto>string rawurldecode(string str)</proto>
<desc>Décode une chaîne URL.</desc>
<return>string</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>url</extension>
<name>rawurlencode</name>
<proto>string rawurlencode(string str)</proto>
<desc>Encode une chaîne en URL, selon la RFC1738.</desc>
<return>string</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>url</extension>
<name>urldecode</name>
<proto>string urldecode(string str)</proto>
<desc>Décode une chaîne encodée URL.</desc>
<return>string</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>url</extension>
<name>urlencode</name>
<proto>string urlencode(string str)</proto>
<desc>Encode une chaîne en URL.</desc>
<return>string</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>var</extension>
<name>doubleval</name>
<proto>)</proto>
<desc>Retourne la valeur numérique (double) de la variable.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>var</extension>
<name>empty</name>
<proto>)</proto>
<desc>Détermine si une variable est affectée.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>var</extension>
<name>gettype</name>
<proto>)</proto>
<desc>Retourne le type de la variable.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>var</extension>
<name>get_defined_vars</name>
<proto>array get_defined_vars(void)</proto>
<desc>Liste toutes les variables définies</desc>
<return>array</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>var</extension>
<name>get_resource_type</name>
<proto>string get_resource_type(resource handle)</proto>
<desc>Retourne le type de ressource</desc>
<return>string</return>
<params>
<param>
<paramname>handle</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>var</extension>
<name>intval</name>
<proto>int intval(mixed var [, int base])</proto>
<desc>Retourne la valeur numérique (integer) de la variable.</desc>
<return>int</return>
<params>
<param>
<paramname>var</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>base</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>var</extension>
<name>is_array</name>
<proto>bool is_array(mixed var)</proto>
<desc>Détermine si une variable est un tableau.</desc>
<return>bool</return>
<params>
<param>
<paramname>var</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>var</extension>
<name>is_bool</name>
<proto>bool is_bool (mixed var)</proto>
<desc>Détermine si une variable est un tableau booléen</desc>
<return>bool
</return>
<params>
<param>
<paramname></paramname>
<paramtype>mixed
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>var</extension>
<name>is_double</name>
<proto>bool is_double(mixed var)</proto>
<desc>Détermine si une variable est de type double.</desc>
<return>bool</return>
<params>
<param>
<paramname>var</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>var</extension>
<name>is_float</name>
<proto>bool is_float(mixed var)</proto>
<desc>Détermine si une variable est de type float.</desc>
<return>bool</return>
<params>
<param>
<paramname>var</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>var</extension>
<name>is_int</name>
<proto>bool is_int(mixed var)</proto>
<desc>Détermine si une variable est de type integer.</desc>
<return>bool</return>
<params>
<param>
<paramname>var</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>var</extension>
<name>is_integer</name>
<proto>bool is_integer(mixed var)</proto>
<desc>Détermine si une variable est de type int.</desc>
<return>bool</return>
<params>
<param>
<paramname>var</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>var</extension>
<name>is_long</name>
<proto>bool is_long(mixed var)</proto>
<desc>Détermine si une variable est de type integer.</desc>
<return>bool</return>
<params>
<param>
<paramname>var</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>var</extension>
<name>is_null</name>
<proto>bool is_null(mixed var)</proto>
<desc>Indique si une variable est NULL</desc>
<return>bool</return>
<params>
<param>
<paramname>var</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>var</extension>
<name>is_numeric</name>
<proto>bool is_numeric(mixed var)</proto>
<desc>Détermine si une variable est un type numérique</desc>
<return>bool</return>
<params>
<param>
<paramname>var</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>var</extension>
<name>is_object</name>
<proto>bool is_object(mixed var)</proto>
<desc>Détermine si une variable est de type object.</desc>
<return>bool</return>
<params>
<param>
<paramname>var</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>var</extension>
<name>is_real</name>
<proto>bool is_real(mixed var)</proto>
<desc>Détermine si une variable est de type real.</desc>
<return>bool</return>
<params>
<param>
<paramname>var</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>var</extension>
<name>is_resource</name>
<proto>bool is_resource (mixed var)</proto>
<desc>Détermine si une variable est une ressource</desc>
<return>bool
</return>
<params>
<param>
<paramname></paramname>
<paramtype>mixed
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>var</extension>
<name>is_scalar</name>
<proto>bool is_scalar (mixed var)</proto>
<desc>Indique si une variable est un scalaire</desc>
<return>bool
</return>
<params>
<param>
<paramname></paramname>
<paramtype>mixed
</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>var</extension>
<name>is_string</name>
<proto>bool is_string(mixed var)</proto>
<desc>Détermine si une variable est de type string.</desc>
<return>bool</return>
<params>
<param>
<paramname>var</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>var</extension>
<name>isset</name>
<proto>int isset(mixed var)</proto>
<desc>Détermine si une variable est affectée.</desc>
<return>int</return>
<params>
<param>
<paramname>var</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>var</extension>
<name>print_r</name>
<proto>void print_r(mixed expression)</proto>
<desc>Affiche des informations lisibles pour une variable.</desc>
<return>void</return>
<params>
<param>
<paramname>expression</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>var</extension>
<name>serialize</name>
<proto>string serialize(mixed value)</proto>
<desc>Linéarise une variable</desc>
<return>string</return>
<params>
<param>
<paramname>value</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>var</extension>
<name>settype</name>
<proto>int settype(string var, string type)</proto>
<desc>Affecte un type à une variable.</desc>
<return>int</return>
<params>
<param>
<paramname>var</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>type</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>var</extension>
<name>strval</name>
<proto>string strval(mixed var)</proto>
<desc>Retourne la valeur de la variable, au format chaîne.</desc>
<return>string</return>
<params>
<param>
<paramname>var</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>var</extension>
<name>unserialize</name>
<proto>mixed unserialize(string str)</proto>
<desc>Crée une variable PHP à partir d'une valeur linéarisée</desc>
<return>mixed</return>
<params>
<param>
<paramname>str</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>var</extension>
<name>unset</name>
<proto>void unset(mixed var [, mixed var] [, ...])</proto>
<desc>Détruit une variable</desc>
<return>void</return>
<params>
<param>
<paramname>var</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>mixed var</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>...</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>var</extension>
<name>var_dump</name>
<proto>)</proto>
<desc>Dumpe les informations d'une variable.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>wddx</extension>
<name>wddx_serialize_value</name>
<proto>string wddx_serialize_value(mixed var [, string comment])</proto>
<desc>Enregistrer une valeur dans un paquet WDDX</desc>
<return>string
</return>
<params>
<param>
<paramname>var</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>comment</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>wddx</extension>
<name>wddx_serialize_vars</name>
<proto>string wddx_serialize_vars(mixed var_name [, mixed ...])</proto>
<desc>Enregistrer plusieurs valeurs dans un paquet WDDX</desc>
<return>string</return>
<params>
<param>
<paramname>var_name</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>...</paramname>
<paramtype>mixed</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>wddx</extension>
<name>wddx_packet_start</name>
<proto>resource wddx_packet_start( [string comment])</proto>
<desc>Commencer un nouveau paquet WDDX avec une structure</desc>
<return>resource</return>
<params>
<param>
<paramname>comment</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>wddx</extension>
<name>wddx_packet_end</name>
<proto>string wddx_packet_end(resource packet_id)</proto>
<desc>Clos un paquet WDDX.</desc>
<return>string</return>
<params>
<param>
<paramname>packet_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>wddx</extension>
<name>wddx_add_vars</name>
<proto>wddx_add_vars(resource packet_id, mixed name_var [, mixed ...])</proto>
<desc>Ajouter des variables à un paquet WDDX.</desc>
<return>wddx_add_vars(</return>
<params>
<param>
<paramname>packet_id</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>name_var</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>...</paramname>
<paramtype>mixed</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>wddx</extension>
<name>wddx_deserialize</name>
<proto>mixed wddx_deserialize(string packet)</proto>
<desc>Lire un paquet WDDX.</desc>
<return>mixed</return>
<params>
<param>
<paramname>packet</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>xml</extension>
<name>xml_parser_create</name>
<proto>resource xml_parser_create( [string encoding])</proto>
<desc>Création d'un analyseur XML.</desc>
<return>resource</return>
<params>
<param>
<paramname>encoding</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>xml</extension>
<name>xml_set_object</name>
<proto>void xml_set_object(resource parser, object &amp;object)</proto>
<desc>Utilise un analyseur XML à l'intérieur d'un objet.</desc>
<return>void</return>
<params>
<param>
<paramname>parser</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>&amp;object</paramname>
<paramtype>object</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>xml</extension>
<name>xml_set_element_handler</name>
<proto>int xml_set_element_handler resource parser string startElementHandler string endElementHandler xml_set_element_handler affecte les gestionnaires de début et de fin de l'analyseur XML parser. startElementHandler et endElementHandler sont des chaînes qui contiennent les noms de fonctions qui existent lorsque xml_parse est appelé pour créer parser. La fonction startElementHandler doit accepter trois paramètres: startElementHandler resource parser string name array attribs parser Le premier paramètre, parser, est une référence sur l'analyseur XML qui appelle cette fonction. name Le deuxième paramètre, name, contient le nom de l'élément qui a provoqué l'appel du gestionnaire. Si l'analyseur gère la casse, cet élément sera en majuscule. attribs Le troisième paramètre, attribs, contient un tableau associatif avec les attributs de l'éléments (s'il en existe). Les clés de ce tableau seront les noms des attributs, et les valeurs seront les valeurs correspondantes des attributs. Les noms des attributs seront mis en majuscule si l'analyseur gère la casse. Les valeurs des attributs seront intouchées. L'ordre original des attributs peut être retrouvé en passant en revue le tableau attribs, avec la fonction each. La première clé sera la première clé du tableau. La fonction endElementHandler doit accepter deux paramètres: endElementHandler(resource parser, string startElementHandler, string endElementHandler, resource parser, string name, array attribs, resource parser, string name)</proto>
<desc>Affecte les gestionnaires de début et de fin.</desc>
<return>int
</return>
<params>
<param>
<paramname>parser</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>parser</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>attribs</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>parser</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>name</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>xml</extension>
<name>xml_set_character_data_handler</name>
<proto>int xml_set_character_data_handler resource parser string handler Affecte les gestionnaires de début et de fin de l'analyseur XML parser. handler est une chaîne qui contient le nom d'une fonction qui existe lorsque xml_parse est appelé pour créer parser. La fonction handler doit accepter deux paramètres: handler(resource parser, string handler, resource parser, string data)</proto>
<desc>Affecte les gestionnaires de caractère bruts.</desc>
<return>int
</return>
<params>
<param>
<paramname>parser</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>handler</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>parser</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>xml</extension>
<name>xml_set_processing_instruction_handler</name>
<proto>int xml_set_processing_instruction_handler(resource parser, string handler, resource parser, string target, string data)</proto>
<desc>Affecte les gestionnaires d'instructions exécutables.</desc>
<return>int
</return>
<params>
<param>
<paramname>parser</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>handler</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>parser</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>target</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>xml</extension>
<name>xml_set_default_handler</name>
<proto>int xml_set_default_handler resource parser string handler Affecte le gestionnaire par défaut de l'analyseur XML parser. handler est une chaîne qui contient le nom d'une fonction qui existe lorsque xml_parse est appelé pour créer parser. La fonction handler doit accepter deux paramètres: handler(resource parser, string handler, resource parser, string data)</proto>
<desc>Affecte le gestionnaire par défaut.</desc>
<return>int
</return>
<params>
<param>
<paramname>parser</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>handler</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>parser</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>xml</extension>
<name>xml_set_unparsed_entity_decl_handler</name>
<proto>int xml_set_unparsed_entity_decl_handler(resource parser, string handler, resource parser, string entityName, string base, string systemId, string publicId, string notationName)</proto>
<desc>Affecte les gestionnaires d'entité non déclaré.</desc>
<return>int
</return>
<params>
<param>
<paramname>parser</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>handler</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>parser</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>entityName</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>base</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>systemId</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>publicId</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>notationName</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>xml</extension>
<name>xml_set_notation_decl_handler</name>
<proto>int xml_set_notation_decl_handler(resource parser, string handler, resource parser, string notationName, string base, string systemId, string publicId)</proto>
<desc>Affecte les gestionnaires de notation.</desc>
<return>int
</return>
<params>
<param>
<paramname>parser</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>handler</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>parser</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>notationName</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>base</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>systemId</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>publicId</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>xml</extension>
<name>xml_set_external_entity_ref_handler</name>
<proto>int xml_set_external_entity_ref_handler resource parser string handler Fixe le gestionnaire d'entité externe de l'analyseur XML parser. handler et endElementHandler sont des chaînes qui contiennent les noms de fonction qui existent lorsque xml_parse est appelé pour créer le parser. La fonction handler doit accepter 5 paramètres, et retourner un entier. Si la valeur retourné par le gestionnaire est FALSE (comme par exemple si aucune valeur n'est retournée), l'analyseur XML s'arrêtera, et la fonction xml_get_error_code retournera XML_ERROR_EXTERNAL_ENTITY_HANDLING. int handler(resource parser, string handler, resource parser, string openEntityNames, string base, string systemId, string publicId)</proto>
<desc>Modifie le gestionnaire de référence externes.</desc>
<return>int
</return>
<params>
<param>
<paramname>parser</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>handler</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>parser</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>base</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>systemId</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>publicId</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>xml</extension>
<name>xml_parse</name>
<proto>int xml_parse(resource parser, string data [, int isFinal])</proto>
<desc>Commence l'analyse d'un fichier XML.</desc>
<return>int</return>
<params>
<param>
<paramname>parser</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>isFinal</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>xml</extension>
<name>xml_get_error_code</name>
<proto>int xml_get_error_code(resource parser)</proto>
<desc>Retourne le nombre courant de colonne d'un analyseur XML.</desc>
<return>int</return>
<params>
<param>
<paramname>parser</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>xml</extension>
<name>xml_error_string</name>
<proto>string xml_error_string(int code)</proto>
<desc>Lit le message d'erreur de l'analyseur XML.</desc>
<return>string</return>
<params>
<param>
<paramname>code</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>xml</extension>
<name>xml_get_current_line_number</name>
<proto>int xml_get_current_line_number(resource parser)</proto>
<desc>Retourne le numéro de ligne courant d'un analyseur XML.</desc>
<return>int</return>
<params>
<param>
<paramname>parser</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>xml</extension>
<name>xml_get_current_column_number</name>
<proto>int xml_get_current_column_number(resource parser)</proto>
<desc>Retourne le nombre courant de colonne d'un analyseur XML.</desc>
<return>int</return>
<params>
<param>
<paramname>parser</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>xml</extension>
<name>xml_get_current_byte_index</name>
<proto>int xml_get_current_byte_index(resource parser)</proto>
<desc>Retourne l'index de l'octet courant d'un analyseur XML.</desc>
<return>int</return>
<params>
<param>
<paramname>parser</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>xml</extension>
<name>xml_parse_into_struct</name>
<proto>int xml_parse_into_struct(resource parser, string data, array &amp;values, array &amp;index)</proto>
<desc>Analyse une structure XML</desc>
<return>int</return>
<params>
<param>
<paramname>parser</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>&amp;values</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>&amp;index</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>xml</extension>
<name>xml_parser_free</name>
<proto>boolean xml_parser_free(resource parser)</proto>
<desc>Détruit un analyseur XML.</desc>
<return>boolean</return>
<params>
<param>
<paramname>parser</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>xml</extension>
<name>xml_parser_set_option</name>
<proto>int xml_parser_set_option(resource parser, int option, mixed value)</proto>
<desc>Affecte les options d'un analyseur XML.</desc>
<return>int</return>
<params>
<param>
<paramname>parser</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>option</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>value</paramname>
<paramtype>mixed</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>xml</extension>
<name>xml_parser_get_option</name>
<proto>mixed xml_parser_get_option (resource parser, int option)</proto>
<desc>Lit les options d'un analyseur XML.</desc>
<return>mixed
</return>
<params>
<param>
<paramname>parser</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>option</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>xml</extension>
<name>utf8_decode</name>
<proto>string utf8_decode(string data)</proto>
<desc>Convertit une chaîne UTF-8 en ISO-8859.</desc>
<return>string</return>
<params>
<param>
<paramname>data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>xml</extension>
<name>utf8_encode</name>
<proto>string utf8_encode(string data)</proto>
<desc>Convertit une chaîne ISO-8859-1 en UTF-8.</desc>
<return>string</return>
<params>
<param>
<paramname>data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>xslt</extension>
<name>xslt_closelog</name>
<proto>boolean xslt_closelog(resource xh)</proto>
<desc>Efface le fichier d'historique</desc>
<return>boolean</return>
<params>
<param>
<paramname>xh</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>xslt</extension>
<name>xslt_create</name>
<proto>resource xslt_create(void)</proto>
<desc>Crée un nouvel analyseur XSLT.</desc>
<return>resource</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>xslt</extension>
<name>xslt_errno</name>
<proto>int xslt_errno( [resource xh])</proto>
<desc>Retourne le numéro d'erreur courant</desc>
<return>int</return>
<params>
<param>
<paramname>xh</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>xslt</extension>
<name>xslt_error</name>
<proto>mixed xslt_error( [resource xh])</proto>
<desc>Retourne le message d'erreur courant</desc>
<return>mixed</return>
<params>
<param>
<paramname>xh</paramname>
<paramtype>resource</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>xslt</extension>
<name>xslt_fetch_result</name>
<proto>string xslt_fetch_result(resource xh [, string result_name])</proto>
<desc>Lit un résultat</desc>
<return>string</return>
<params>
<param>
<paramname>xh</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string result_name</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>xslt</extension>
<name>xslt_free</name>
<proto>void xslt_free(resource xh)</proto>
<desc>Détruit un analyseur XSLT</desc>
<return>void</return>
<params>
<param>
<paramname>xh</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>xslt</extension>
<name>xslt_openlog</name>
<proto>boolean xslt_openlog(resource xh, string logfile [, int loglevel])</proto>
<desc>Modifie le fichier d'historique</desc>
<return>boolean</return>
<params>
<param>
<paramname>xh</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>logfile</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int loglevel</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>xslt</extension>
<name>xslt_output_begintransform</name>
<proto>void xslt_output_begintransform (string xslt_filename)</proto>
<desc>Commence la transformation XSLT</desc>
<return>void
</return>
<params>
<param>
<paramname>xslt_filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>xslt</extension>
<name>xslt_output_endtransform</name>
<proto>void xslt_output_endtransform (void)</proto>
<desc>Termine une transformation XSLT</desc>
<return>void
</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>xslt</extension>
<name>xslt_process</name>
<proto>boolean xslt_process (string xsl_data, string xml_data, string result)</proto>
<desc>Transforme des données XML</desc>
<return>boolean
</return>
<params>
<param>
<paramname>xsl_data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>xml_data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>result</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>xslt</extension>
<name>xslt_run</name>
<proto>boolean xslt_run(resource xh, string xslt_file, string xml_data_file [, string result] [, array xslt_params] [, array xslt_args])</proto>
<desc>Applique une feuille de style à un fichier</desc>
<return>boolean</return>
<params>
<param>
<paramname>xh</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>xslt_file</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>xml_data_file</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string result</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>array xslt_params</paramtype>
<paramrequired>0</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>array xslt_args</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>xslt</extension>
<name>xslt_set_sax_handler</name>
<proto>boolean xslt_set_sax_handler(resource xh, array handlers)</proto>
<desc>Modifie les gestionnaires SAX de l'analyseur XSLT</desc>
<return>boolean</return>
<params>
<param>
<paramname>xh</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>handlers</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>xslt</extension>
<name>xslt_transform</name>
<proto>boolean xslt_transform (string xsl, string xml, string result, string params, string args, string resultBuffer)</proto>
<desc>Exécute une transformation XSLT</desc>
<return>boolean
</return>
<params>
<param>
<paramname>xsl</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>xml</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>result</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>params</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>args</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>resultBuffer</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>yaz</extension>
<name>yaz_addinfo</name>
<proto>int yaz_addinfo(int id)</proto>
<desc>Retourne plus de détails après une erreur</desc>
<return>int</return>
<params>
<param>
<paramname>id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>yaz</extension>
<name>yaz_close</name>
<proto>int yaz_close(int id)</proto>
<desc>Ferme une connexion YAZ</desc>
<return>int</return>
<params>
<param>
<paramname>id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>yaz</extension>
<name>yaz_connect</name>
<proto>int yaz_connect(string zurl [, string authentication])</proto>
<desc>Prépare une connexion à un hôte YAZ</desc>
<return>int</return>
<params>
<param>
<paramname></paramname>
<paramtype>string
</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>authentication</paramname>
<paramtype>string</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>yaz</extension>
<name>yaz_errno</name>
<proto>int yaz_errno(int id)</proto>
<desc>Retourne le numéro d'erreur</desc>
<return>int</return>
<params>
<param>
<paramname>id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>yaz</extension>
<name>yaz_error</name>
<proto>string yaz_error(int id)</proto>
<desc>Retourne une description de l'erreur</desc>
<return>string</return>
<params>
<param>
<paramname>id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>yaz</extension>
<name>yaz_hits</name>
<proto>int yaz_hits(int id)</proto>
<desc>Retourne le nombre de résultat de la dernière recherche</desc>
<return>int</return>
<params>
<param>
<paramname>id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>yaz</extension>
<name>yaz_element</name>
<proto>int yaz_element(int id, string elementset)</proto>
<desc>Spécifie le type d'éléments à lire</desc>
<return>int</return>
<params>
<param>
<paramname>id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>elementset</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>yaz</extension>
<name>yaz_database</name>
<proto>int yaz_database(int id, string databases)</proto>
<desc>Spécifie la base d'une session</desc>
<return>int</return>
<params>
<param>
<paramname>id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>databases</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>yaz</extension>
<name>yaz_present</name>
<proto>int yaz_present(void)</proto>
<desc>Prépare à la lecture (Z39.50 present).</desc>
<return>int</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>yaz</extension>
<name>yaz_range</name>
<proto>int yaz_range(int id, int start, int number)</proto>
<desc>Spécifie le nombre maximal de résultat à lire</desc>
<return>int</return>
<params>
<param>
<paramname>id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>start</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>number</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>yaz</extension>
<name>yaz_record</name>
<proto>int yaz_record(int id, int pos, string type)</proto>
<desc>Retourne un résultat</desc>
<return>int</return>
<params>
<param>
<paramname>id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>pos</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>type</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>yaz</extension>
<name>yaz_search</name>
<proto>int yaz_search(int id, string type, string query)</proto>
<desc>Prépares une recherche</desc>
<return>int</return>
<params>
<param>
<paramname>id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>type</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>query</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>yaz</extension>
<name>yaz_syntax</name>
<proto>int yaz_syntax(int id, string syntax)</proto>
<desc>Spécifie la syntaxe de lecture des lignes</desc>
<return>int</return>
<params>
<param>
<paramname>id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>syntax</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>yaz</extension>
<name>yaz_scan</name>
<proto>int yaz_scan(int id, string type, string startterm [, array flags])</proto>
<desc>Prépare un scan</desc>
<return>int</return>
<params>
<param>
<paramname>id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>type</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>startterm</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>flags</paramname>
<paramtype>array</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>yaz</extension>
<name>yaz_scan_result</name>
<proto>array yaz_scan_result(int id [, array &amp; result])</proto>
<desc>Retourne le résultat d'un scan</desc>
<return>array</return>
<params>
<param>
<paramname>id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>amp</paramname>
<paramtype>array</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>yaz</extension>
<name>yaz_ccl_conf</name>
<proto>int yaz_ccl_conf(int id, array config)</proto>
<desc>Configure l'analyseur CCL</desc>
<return>int</return>
<params>
<param>
<paramname>id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>config</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>yaz</extension>
<name>yaz_ccl_parse</name>
<proto>int yaz_ccl_parse(int id, string query, array &amp;result)</proto>
<desc>Appelle l'analyseur CCL</desc>
<return>int</return>
<params>
<param>
<paramname>id</paramname>
<paramtype>int</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>query</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>&amp;result</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>yaz</extension>
<name>yaz_itemorder</name>
<proto>int yaz_itemorder(array args)</proto>
<desc>Prépare une requête Z39.50 Item Order avec le package ILL-Request</desc>
<return>int</return>
<params>
<param>
<paramname>args</paramname>
<paramtype>array</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>yaz</extension>
<name>yaz_wait</name>
<proto>int yaz_wait(void)</proto>
<desc>Attend l'exécution d'une requête</desc>
<return>int</return>
<params>
<param>
<paramname></paramname>
<paramtype>void</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>zip</extension>
<name>zip_close</name>
<proto>void zip_close(resource zip)</proto>
<desc>Ferme une archive Zip</desc>
<return>void</return>
<params>
<param>
<paramname>zip</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>zip</extension>
<name>zip_entry_close</name>
<proto>void zip_entry_close(resource zip_entry)</proto>
<desc>Ferme un élément d'archive</desc>
<return>void</return>
<params>
<param>
<paramname>zip_entry</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>zip</extension>
<name>zip_entry_compressedsize</name>
<proto>int zip_entry_compressedsize(resource zip_entry)</proto>
<desc>Lit la taille compressée d'un dossier</desc>
<return>int</return>
<params>
<param>
<paramname>zip_entry</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>zip</extension>
<name>zip_entry_compressionmethod</name>
<proto>string zip_entry_compressionmethod(resource zip_entry)</proto>
<desc>Retourne la méthode de compression d'un dossier</desc>
<return>string</return>
<params>
<param>
<paramname>zip_entry</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>zip</extension>
<name>zip_entry_filesize</name>
<proto>int zip_entry_filesize(resource zip_entry)</proto>
<desc>Retourne la taille réelle d'un fichier dans un dossier</desc>
<return>int</return>
<params>
<param>
<paramname>zip_entry</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>zip</extension>
<name>zip_entry_name</name>
<proto>string zip_entry_name(resource zip_entry)</proto>
<desc>Retourne le nom de l'élément d'archive</desc>
<return>string</return>
<params>
<param>
<paramname>zip_entry</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>zip</extension>
<name>zip_entry_open</name>
<proto>bool zip_entry_open(resource zip, resource zip_entry [, string mode])</proto>
<desc>Ouvre un nouveau dossier dans une archive</desc>
<return>bool</return>
<params>
<param>
<paramname>zip</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>zip_entry</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>string mode</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>zip</extension>
<name>zip_entry_read</name>
<proto>string zip_entry_read(resource zip_entry [, int length])</proto>
<desc>Lit dans un fichier d'archive</desc>
<return>string</return>
<params>
<param>
<paramname>zip_entry</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname></paramname>
<paramtype>int length</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>zip</extension>
<name>zip_open</name>
<proto>resource zip_open(string filename)</proto>
<desc>Ouvre une archive Zip</desc>
<return>resource</return>
<params>
<param>
<paramname>filename</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>zip</extension>
<name>zip_read</name>
<proto>resource zip_read(resource zip)</proto>
<desc>Lit le prochain élément d'archive</desc>
<return>resource</return>
<params>
<param>
<paramname>zip</paramname>
<paramtype>resource</paramtype>
<paramrequired>1</paramrequired>
</param>
</params>
</function>
<function>
<extension>zlib</extension>
<name>gzclose</name>
<proto>)</proto>
<desc>Ferme un pointeur sur un fichier compressé.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>zlib</extension>
<name>gzeof</name>
<proto>)</proto>
<desc>Teste la fin d'un fichier compressé.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>zlib</extension>
<name>gzfile</name>
<proto>)</proto>
<desc>Lit la totalité d'un fichier compressé dans un tableau.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>zlib</extension>
<name>gzgetc</name>
<proto>)</proto>
<desc>Lit un caractère d'un fichier compressé.</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>zlib</extension>
<name>gzgets</name>
<proto>)</proto>
<desc>Lit une ligne d'un fichier compressé</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>zlib</extension>
<name>gzgetss</name>
<proto>)</proto>
<desc>Lit une ligne d'un fichier compressé et supprime les balises HTML</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>zlib</extension>
<name>gzopen</name>
<proto>)</proto>
<desc>Ouvre un fichier compressé</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>zlib</extension>
<name>gzpassthru</name>
<proto>)</proto>
<desc>Lit toutes les informations restantes d'un fichier compressé</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>zlib</extension>
<name>gzputs</name>
<proto>)</proto>
<desc>Ecrit dans un fichier compressé</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>zlib</extension>
<name>gzread</name>
<proto>)</proto>
<desc>Lit un fichier compressé en mode binaire</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>zlib</extension>
<name>gzrewind</name>
<proto>)</proto>
<desc>Replace le pointeur courant au début du fichier</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>zlib</extension>
<name>gzseek</name>
<proto>)</proto>
<desc>Déplace le pointeur courant dans un fichier compressé</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>zlib</extension>
<name>gztell</name>
<proto>)</proto>
<desc>Retourne la position courante du pointeur interne</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>zlib</extension>
<name>gzwrite</name>
<proto>)</proto>
<desc>Ecrit un fichier compressé en mode binaire</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>zlib</extension>
<name>readgzfile</name>
<proto>)</proto>
<desc>Affiche un fichier compressé</desc>
<return></return>
<params>
</params>
</function>
<function>
<extension>zlib</extension>
<name>gzcompress</name>
<proto>string gzcompress(string data [, int level])</proto>
<desc>Compresse une chaîne (ZLIB)</desc>
<return>string</return>
<params>
<param>
<paramname>data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>level</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>zlib</extension>
<name>gzuncompress</name>
<proto>string gzuncompress(string data [, int length])</proto>
<desc>Décompresse une chaîne gz-compressée</desc>
<return>string</return>
<params>
<param>
<paramname>data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>length</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>zlib</extension>
<name>gzdeflate</name>
<proto>string gzdeflate(string data [, int level])</proto>
<desc>Compresse une chaîne (DEFLATE)</desc>
<return>string</return>
<params>
<param>
<paramname>data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>level</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>zlib</extension>
<name>gzinflate</name>
<proto>string gzinflate(string data [, int length])</proto>
<desc>Décompresse une chaîne (INFLATE)</desc>
<return>string</return>
<params>
<param>
<paramname>data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>length</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
<function>
<extension>zlib</extension>
<name>gzencode</name>
<proto>string gzencode(string data [, int level])</proto>
<desc>Crée une chaîne compréssée avec gzip</desc>
<return>string</return>
<params>
<param>
<paramname>data</paramname>
<paramtype>string</paramtype>
<paramrequired>1</paramrequired>
</param>
<param>
<paramname>level</paramname>
<paramtype>int</paramtype>
<paramrequired>0</paramrequired>
</param>
</params>
</function>
</functions>
