All Method Calls (12985)

<com.puppycrawl.tools.checkstyle.api.AuditEvent; getSeverityLevel[]; com.puppycrawl.tools.checkstyle.api.SeverityLevel; com.puppycrawl.tools.checkstyle.DefaultLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; aEvt>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.DefaultLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; SeverityLevel.IGNORE>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getFileName[]; java.lang.String; com.puppycrawl.tools.checkstyle.DefaultLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; aEvt>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.DefaultLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; aEvt>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.DefaultLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; fileName>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.DefaultLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; message>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.DefaultLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; sb>
<java.lang.StringBuffer; append[int]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.DefaultLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; sb.append(':')>
<java.lang.StringBuffer; append[char]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.DefaultLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; append[int]; sb>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getLine[]; int; com.puppycrawl.tools.checkstyle.DefaultLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; aEvt>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getColumn[]; int; com.puppycrawl.tools.checkstyle.DefaultLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; aEvt>
<java.lang.StringBuffer; append[int]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.DefaultLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; sb.append(':')>
<java.lang.StringBuffer; append[char]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.DefaultLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; append[int]; sb>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getColumn[]; int; com.puppycrawl.tools.checkstyle.DefaultLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; aEvt>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.DefaultLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; SeverityLevel.WARNING>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.DefaultLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; sb>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.DefaultLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; sb.append(": ")>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.DefaultLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; append[java.lang.String]; sb>
<java.io.PrintWriter; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.DefaultLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; mErrorWriter>
<java.lang.StringBuffer; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.DefaultLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; sb>
<java.io.PrintWriter; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.DefaultLogger; addException[com.puppycrawl.tools.checkstyle.api.AuditEvent, java.lang.Throwable]; void; null; mErrorWriter>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getFileName[]; java.lang.String; com.puppycrawl.tools.checkstyle.DefaultLogger; addException[com.puppycrawl.tools.checkstyle.api.AuditEvent, java.lang.Throwable]; void; null; aEvt>
<java.lang.Throwable; printStackTrace[java.io.PrintWriter]; void; com.puppycrawl.tools.checkstyle.DefaultLogger; addException[com.puppycrawl.tools.checkstyle.api.AuditEvent, java.lang.Throwable]; void; null; aThrowable>
<java.io.PrintWriter; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.DefaultLogger; auditStarted[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; mInfoWriter>
<java.io.PrintWriter; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.DefaultLogger; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; mInfoWriter>
<com.puppycrawl.tools.checkstyle.DefaultLogger; closeStreams[]; void; com.puppycrawl.tools.checkstyle.DefaultLogger; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; this>
<java.io.PrintWriter; flush[]; void; com.puppycrawl.tools.checkstyle.DefaultLogger; closeStreams[]; void; null; mInfoWriter>
<java.io.PrintWriter; close[]; void; com.puppycrawl.tools.checkstyle.DefaultLogger; closeStreams[]; void; null; mInfoWriter>
<java.io.PrintWriter; flush[]; void; com.puppycrawl.tools.checkstyle.DefaultLogger; closeStreams[]; void; null; mErrorWriter>
<java.io.PrintWriter; close[]; void; com.puppycrawl.tools.checkstyle.DefaultLogger; closeStreams[]; void; null; mErrorWriter>
<java.util.Properties; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.PropertiesExpander; resolve[java.lang.String]; java.lang.String; null; mProperties>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessage; getLineNo[]; int; com.puppycrawl.tools.checkstyle.api.AuditEvent; getLine[]; int; null; mMessage>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessage; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AuditEvent; getMessage[]; java.lang.String; null; mMessage>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessage; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.api.AuditEvent; getColumn[]; int; null; mMessage>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessage; getSeverityLevel[]; com.puppycrawl.tools.checkstyle.api.SeverityLevel; com.puppycrawl.tools.checkstyle.api.AuditEvent; getSeverityLevel[]; com.puppycrawl.tools.checkstyle.api.SeverityLevel; null; mMessage>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessage; getModuleId[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AuditEvent; getModuleId[]; java.lang.String; null; mMessage>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessage; getSourceName[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AuditEvent; getSourceName[]; java.lang.String; null; mMessage>
<java.lang.StringBuffer; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; null; mBuffer>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.api.FullIdent; append[java.lang.String]; void; null; mBuffer>
<java.lang.StringBuffer; append[java.lang.Object]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.api.FullIdent; append[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mBuffer>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.api.FullIdent; append[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.api.FullIdent; append[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.api.FullIdent; append[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<java.lang.Math; min[int, int]; int; com.puppycrawl.tools.checkstyle.api.FullIdent; append[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Math>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.api.FullIdent; append[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.api.FullIdent; append[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.api.FullIdent; append[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<java.lang.Math; min[int, int]; int; com.puppycrawl.tools.checkstyle.api.FullIdent; append[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Math>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.api.FullIdent; append[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.FullIdent; extractFullIdent[com.puppycrawl.tools.checkstyle.api.FullIdent, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; null; this>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdentBelow[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdentBelow[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.FullIdent; extractFullIdent[com.puppycrawl.tools.checkstyle.api.FullIdent, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.FullIdent; extractFullIdent[com.puppycrawl.tools.checkstyle.api.FullIdent, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.api.FullIdent; extractFullIdent[com.puppycrawl.tools.checkstyle.api.FullIdent, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.FullIdent; extractFullIdent[com.puppycrawl.tools.checkstyle.api.FullIdent, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.FullIdent; append[java.lang.String]; void; com.puppycrawl.tools.checkstyle.api.FullIdent; extractFullIdent[com.puppycrawl.tools.checkstyle.api.FullIdent, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aFull>
<com.puppycrawl.tools.checkstyle.api.FullIdent; extractFullIdent[com.puppycrawl.tools.checkstyle.api.FullIdent, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.api.FullIdent; extractFullIdent[com.puppycrawl.tools.checkstyle.api.FullIdent, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.FullIdent; extractFullIdent[com.puppycrawl.tools.checkstyle.api.FullIdent, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getFirstChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.FullIdent; extractFullIdent[com.puppycrawl.tools.checkstyle.api.FullIdent, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getNextSibling[]; aAST>
<com.puppycrawl.tools.checkstyle.api.FullIdent; append[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.api.FullIdent; extractFullIdent[com.puppycrawl.tools.checkstyle.api.FullIdent, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aFull>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.FullIdent; toString[]; java.lang.String; null; this>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getLineNo[]; int; com.puppycrawl.tools.checkstyle.api.FullIdent; toString[]; java.lang.String; null; this>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.api.FullIdent; toString[]; java.lang.String; null; this>
<com.puppycrawl.tools.checkstyle.api.LineColumn; getLine[]; int; com.puppycrawl.tools.checkstyle.api.LineColumn; compareTo[com.puppycrawl.tools.checkstyle.api.LineColumn]; int; null; this>
<com.puppycrawl.tools.checkstyle.api.LineColumn; getLine[]; int; com.puppycrawl.tools.checkstyle.api.LineColumn; compareTo[com.puppycrawl.tools.checkstyle.api.LineColumn]; int; null; aLineColumn>
<com.puppycrawl.tools.checkstyle.api.LineColumn; getLine[]; int; com.puppycrawl.tools.checkstyle.api.LineColumn; compareTo[com.puppycrawl.tools.checkstyle.api.LineColumn]; int; null; this>
<com.puppycrawl.tools.checkstyle.api.LineColumn; getLine[]; int; com.puppycrawl.tools.checkstyle.api.LineColumn; compareTo[com.puppycrawl.tools.checkstyle.api.LineColumn]; int; null; aLineColumn>
<com.puppycrawl.tools.checkstyle.api.LineColumn; getColumn[]; int; com.puppycrawl.tools.checkstyle.api.LineColumn; compareTo[com.puppycrawl.tools.checkstyle.api.LineColumn]; int; null; this>
<com.puppycrawl.tools.checkstyle.api.LineColumn; getColumn[]; int; com.puppycrawl.tools.checkstyle.api.LineColumn; compareTo[com.puppycrawl.tools.checkstyle.api.LineColumn]; int; null; aLineColumn>
<java.util.Map; put[java.lang.String, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AbstractLoader; AbstractLoader[java.lang.String, java.lang.String]; void; null; mPublicIdToResourceNameMap>
<not found; newHashMap[]; not found; com.puppycrawl.tools.checkstyle.api.AbstractLoader; AbstractLoader[java.util.Map<java.lang.String,java.lang.String>]; void; null; Maps>
<javax.xml.parsers.SAXParserFactory; newInstance[]; javax.xml.parsers.SAXParserFactory; com.puppycrawl.tools.checkstyle.api.AbstractLoader; AbstractLoader[java.util.Map<java.lang.String,java.lang.String>]; void; null; SAXParserFactory>
<javax.xml.parsers.SAXParserFactory; setValidating[boolean]; void; com.puppycrawl.tools.checkstyle.api.AbstractLoader; AbstractLoader[java.util.Map<java.lang.String,java.lang.String>]; void; null; factory>
<javax.xml.parsers.SAXParserFactory; setNamespaceAware[boolean]; void; com.puppycrawl.tools.checkstyle.api.AbstractLoader; AbstractLoader[java.util.Map<java.lang.String,java.lang.String>]; void; null; factory>
<javax.xml.parsers.SAXParser; getXMLReader[]; org.xml.sax.XMLReader; com.puppycrawl.tools.checkstyle.api.AbstractLoader; AbstractLoader[java.util.Map<java.lang.String,java.lang.String>]; void; null; factory.newSAXParser()>
<javax.xml.parsers.SAXParserFactory; newSAXParser[]; javax.xml.parsers.SAXParser; com.puppycrawl.tools.checkstyle.api.AbstractLoader; AbstractLoader[java.util.Map<java.lang.String,java.lang.String>]; void; getXMLReader[]; factory>
<org.xml.sax.XMLReader; setContentHandler[org.xml.sax.ContentHandler]; void; com.puppycrawl.tools.checkstyle.api.AbstractLoader; AbstractLoader[java.util.Map<java.lang.String,java.lang.String>]; void; null; mParser>
<org.xml.sax.XMLReader; setEntityResolver[org.xml.sax.EntityResolver]; void; com.puppycrawl.tools.checkstyle.api.AbstractLoader; AbstractLoader[java.util.Map<java.lang.String,java.lang.String>]; void; null; mParser>
<org.xml.sax.XMLReader; setErrorHandler[org.xml.sax.ErrorHandler]; void; com.puppycrawl.tools.checkstyle.api.AbstractLoader; AbstractLoader[java.util.Map<java.lang.String,java.lang.String>]; void; null; mParser>
<org.xml.sax.XMLReader; parse[org.xml.sax.InputSource]; void; com.puppycrawl.tools.checkstyle.api.AbstractLoader; parseInputSource[org.xml.sax.InputSource]; void; null; mParser>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.api.AbstractLoader; resolveEntity[java.lang.String, java.lang.String]; org.xml.sax.InputSource; null; mPublicIdToResourceNameMap.keySet()>
<java.util.Map; keySet[]; java.util.Set<java.lang.String>; com.puppycrawl.tools.checkstyle.api.AbstractLoader; resolveEntity[java.lang.String, java.lang.String]; org.xml.sax.InputSource; contains[java.lang.Object]; mPublicIdToResourceNameMap>
<java.util.Map; get[java.lang.Object]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AbstractLoader; resolveEntity[java.lang.String, java.lang.String]; org.xml.sax.InputSource; null; mPublicIdToResourceNameMap>
<java.lang.Class; getClassLoader[]; java.lang.ClassLoader; com.puppycrawl.tools.checkstyle.api.AbstractLoader; resolveEntity[java.lang.String, java.lang.String]; org.xml.sax.InputSource; null; this.getClass()>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.api.AbstractLoader>; com.puppycrawl.tools.checkstyle.api.AbstractLoader; resolveEntity[java.lang.String, java.lang.String]; org.xml.sax.InputSource; getClassLoader[]; this>
<java.lang.ClassLoader; getResourceAsStream[java.lang.String]; java.io.InputStream; com.puppycrawl.tools.checkstyle.api.AbstractLoader; resolveEntity[java.lang.String, java.lang.String]; org.xml.sax.InputSource; null; loader>
<not found; newHashMap[]; not found; com.puppycrawl.tools.checkstyle.api.AbstractLoader; fatalError[org.xml.sax.SAXParseException]; void; null; Maps>
<not found; getLog[]; not found; com.puppycrawl.tools.checkstyle.api.AbstractLoader; fatalError[org.xml.sax.SAXParseException]; void; null; LogFactory>
<java.lang.Character; isWhitespace[char]; boolean; com.puppycrawl.tools.checkstyle.api.Utils; whitespaceBefore[int, java.lang.String]; boolean; null; Character>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.api.Utils; whitespaceBefore[int, java.lang.String]; boolean; null; aLine>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.api.Utils; lengthMinusTrailingWhitespace[java.lang.String]; int; null; aLine>
<java.lang.Character; isWhitespace[char]; boolean; com.puppycrawl.tools.checkstyle.api.Utils; lengthMinusTrailingWhitespace[java.lang.String]; int; null; Character>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.api.Utils; lengthMinusTrailingWhitespace[java.lang.String]; int; null; aLine>
<java.lang.String; toCharArray[]; char[]; com.puppycrawl.tools.checkstyle.api.Utils; lengthExpandedTabs[java.lang.String, int, int]; int; null; aString>
<com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String, int]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String]; java.util.regex.Pattern; null; this>
<java.util.Map; get[java.lang.Object]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String, int]; java.util.regex.Pattern; null; CREATED_RES>
<java.util.regex.Pattern; compile[java.lang.String, int]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String, int]; java.util.regex.Pattern; null; Pattern>
<java.util.Map; put[java.lang.String, java.util.regex.Pattern]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String, int]; java.util.regex.Pattern; null; CREATED_RES>
<com.puppycrawl.tools.checkstyle.api.Utils; getLines[java.lang.String, java.lang.String]; java.lang.String[]; com.puppycrawl.tools.checkstyle.api.Utils; getLines[java.lang.String]; java.lang.String[]; null; this>
<java.lang.System; getProperty[java.lang.String, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.api.Utils; getLines[java.lang.String]; java.lang.String[]; null; System>
<not found; newArrayList[]; not found; com.puppycrawl.tools.checkstyle.api.Utils; getLines[java.lang.String, java.lang.String]; java.lang.String[]; null; Lists>
<java.lang.Throwable; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.Utils; getLines[java.lang.String, java.lang.String]; java.lang.String[]; null; ex>
<java.io.LineNumberReader; readLine[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.Utils; getLines[java.lang.String, java.lang.String]; java.lang.String[]; null; lnr>
<java.util.List; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.api.Utils; getLines[java.lang.String, java.lang.String]; java.lang.String[]; null; lines>
<com.puppycrawl.tools.checkstyle.api.Utils; closeQuietly[java.io.Closeable]; void; com.puppycrawl.tools.checkstyle.api.Utils; getLines[java.lang.String, java.lang.String]; java.lang.String[]; null; Utils>
<java.util.List; toArray[java.lang.String[]]; java.lang.String[]; com.puppycrawl.tools.checkstyle.api.Utils; getLines[java.lang.String, java.lang.String]; java.lang.String[]; null; lines>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.api.Utils; getLines[java.lang.String, java.lang.String]; java.lang.String[]; null; lines>
<com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.api.Utils; createPattern[java.lang.String]; java.util.regex.Pattern; null; this>
<java.lang.String; lastIndexOf[java.lang.String]; int; com.puppycrawl.tools.checkstyle.api.Utils; baseClassname[java.lang.String]; java.lang.String; null; aType>
<java.lang.String; substring[int]; java.lang.String; com.puppycrawl.tools.checkstyle.api.Utils; baseClassname[java.lang.String]; java.lang.String; null; aType>
<java.lang.String; startsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.api.Utils; getStrippedFileName[java.lang.String, java.lang.String]; java.lang.String; null; aFileName>
<java.lang.String; endsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.api.Utils; getStrippedFileName[java.lang.String, java.lang.String]; java.lang.String; null; aBasedir>
<java.lang.String; substring[int]; java.lang.String; com.puppycrawl.tools.checkstyle.api.Utils; getStrippedFileName[java.lang.String, java.lang.String]; java.lang.String; null; aFileName>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.api.Utils; getStrippedFileName[java.lang.String, java.lang.String]; java.lang.String; null; aBasedir>
<java.io.Closeable; close[]; void; com.puppycrawl.tools.checkstyle.api.Utils; closeQuietly[java.io.Closeable]; void; null; aShutting>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.ScopeUtils; getScopeFromMods[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.Scope; null; aMods>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeUtils; getScopeFromMods[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.Scope; null; token>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeUtils; getScopeFromMods[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.Scope; null; "public">
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeUtils; getScopeFromMods[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.Scope; null; token>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeUtils; getScopeFromMods[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.Scope; null; "protected">
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeUtils; getScopeFromMods[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.Scope; null; token>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeUtils; getScopeFromMods[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.Scope; null; "private">
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeUtils; getScopeFromMods[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.Scope; null; token>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.ScopeUtils; getSurroundingScope[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.Scope; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.ScopeUtils; getSurroundingScope[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.Scope; null; token>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeUtils; getSurroundingScope[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.Scope; null; token>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.ScopeUtils; getSurroundingScope[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.Scope; null; token>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; getScopeFromMods[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.api.ScopeUtils; getSurroundingScope[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.Scope; null; ScopeUtils>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeUtils; getSurroundingScope[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.Scope; null; retVal>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.ScopeUtils; inInterfaceBlock[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.ScopeUtils; inInterfaceBlock[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; token>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeUtils; inInterfaceBlock[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; token>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.ScopeUtils; inAnnotationBlock[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.ScopeUtils; inAnnotationBlock[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; token>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeUtils; inAnnotationBlock[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; token>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; inInterfaceBlock[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeUtils; inInterfaceOrAnnotationBlock[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; inAnnotationBlock[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeUtils; inInterfaceOrAnnotationBlock[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.ScopeUtils; inEnumBlock[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.ScopeUtils; inEnumBlock[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; token>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeUtils; inEnumBlock[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; token>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.ScopeUtils; inCodeBlock[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.ScopeUtils; inCodeBlock[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; token>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeUtils; inCodeBlock[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; token>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.ScopeUtils; isOuterMostType[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.ScopeUtils; isOuterMostType[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; parent>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeUtils; isOuterMostType[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; parent>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeUtils; isOuterMostType[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; parent>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeUtils; isOuterMostType[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; parent>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeUtils; isOuterMostType[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; parent>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeUtils; isLocalVariableDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.ScopeUtils; isLocalVariableDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeUtils; isLocalVariableDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; parent>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeUtils; isLocalVariableDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.ScopeUtils; isLocalVariableDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeUtils; isLocalVariableDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; parent>
<com.puppycrawl.tools.checkstyle.api.Scope; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.Scope; toString[]; java.lang.String; null; this>
<java.lang.String; toLowerCase[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.Scope; getName[]; java.lang.String; null; name()>
<java.lang.Enum; name[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.Scope; getName[]; java.lang.String; toLowerCase[]; this>
<java.lang.Enum; compareTo[com.puppycrawl.tools.checkstyle.api.Scope]; int; com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; null; this>
<java.lang.Enum; valueOf[java.lang.Class<com.puppycrawl.tools.checkstyle.api.Scope>, java.lang.String]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.api.Scope; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.Scope; null; this>
<java.lang.String; toUpperCase[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.Scope; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.Scope; null; aScopeName.trim()>
<java.lang.String; trim[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.Scope; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.Scope; toUpperCase[]; aScopeName>
<not found; newHashSet[]; not found; com.puppycrawl.tools.checkstyle.api.Scope; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.Scope; null; Sets>
<com.puppycrawl.tools.checkstyle.api.Check; getDefaultTokens[]; int[]; com.puppycrawl.tools.checkstyle.api.Check; getAcceptableTokens[]; int[]; null; this>
<java.lang.System; arraycopy[java.lang.Object, int, java.lang.Object, int, int]; void; com.puppycrawl.tools.checkstyle.api.Check; getAcceptableTokens[]; int[]; null; System>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.api.Check; setTokens[java.lang.String[]]; void; null; mTokens>
<com.puppycrawl.tools.checkstyle.api.FileContents; getLines[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.api.Check; getLines[]; java.lang.String[]; null; getFileContents()>
<com.puppycrawl.tools.checkstyle.api.Check; getFileContents[]; com.puppycrawl.tools.checkstyle.api.FileContents; com.puppycrawl.tools.checkstyle.api.Check; getLines[]; java.lang.String[]; getLines[]; this>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessages; add[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; void; com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; null; mMessages>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; getMessageBundle[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; getSeverityLevel[]; com.puppycrawl.tools.checkstyle.api.SeverityLevel; com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; getId[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; null; this>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.api.Check>; com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; null; this>
<java.util.Map; get[java.lang.Object]; java.lang.String; com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; null; this.getCustomMessages()>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; getCustomMessages[]; java.util.Map<java.lang.String,java.lang.String>; com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; get[java.lang.Object]; this>
<com.puppycrawl.tools.checkstyle.api.Utils; lengthExpandedTabs[java.lang.String, int, int]; int; com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.api.Check; getLines[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; getTabWidth[]; int; com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessages; add[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; void; com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; null; mMessages>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; getMessageBundle[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; getSeverityLevel[]; com.puppycrawl.tools.checkstyle.api.SeverityLevel; com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; getId[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; null; this>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.api.Check>; com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; null; this>
<java.util.Map; get[java.lang.Object]; java.lang.String; com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; null; this.getCustomMessages()>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; getCustomMessages[]; java.util.Map<java.lang.String,java.lang.String>; com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; get[java.lang.Object]; this>
<java.util.Locale; getDefault[]; java.util.Locale; com.puppycrawl.tools.checkstyle.api.MessageDispatcher; fireErrors[java.lang.String, java.util.TreeSet<com.puppycrawl.tools.checkstyle.api.LocalizedMessage>]; void; null; Locale>
<java.util.Collections; synchronizedMap[java.util.Map<java.lang.String,java.util.ResourceBundle>]; java.util.Map<java.lang.String,java.util.ResourceBundle>; com.puppycrawl.tools.checkstyle.api.MessageDispatcher; fireErrors[java.lang.String, java.util.TreeSet<com.puppycrawl.tools.checkstyle.api.LocalizedMessage>]; void; null; Collections>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.api.LocalizedMessage; equals[java.lang.Object]; boolean; null; mKey>
<java.util.Arrays; equals[java.lang.Object[], java.lang.Object[]]; boolean; com.puppycrawl.tools.checkstyle.api.LocalizedMessage; equals[java.lang.Object]; boolean; null; Arrays>
<java.lang.String; hashCode[]; int; com.puppycrawl.tools.checkstyle.api.LocalizedMessage; hashCode[]; int; null; mKey>
<java.lang.Object; hashCode[]; int; com.puppycrawl.tools.checkstyle.api.LocalizedMessage; hashCode[]; int; null; element>
<java.lang.Object; clone[]; java.lang.Object[]; com.puppycrawl.tools.checkstyle.api.LocalizedMessage; LocalizedMessage[int, int, java.lang.String, java.lang.String, java.lang.Object[], com.puppycrawl.tools.checkstyle.api.SeverityLevel, java.lang.String, java.lang.Class<?>, java.lang.String]; void; null; aArgs>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessage; getCustomMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.LocalizedMessage; getMessage[]; java.lang.String; null; this>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessage; getBundle[java.lang.String]; java.util.ResourceBundle; com.puppycrawl.tools.checkstyle.api.LocalizedMessage; getMessage[]; java.lang.String; null; this>
<java.util.ResourceBundle; getString[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.api.LocalizedMessage; getMessage[]; java.lang.String; null; bundle>
<java.text.MessageFormat; format[java.lang.String, java.lang.Object[]]; java.lang.String; com.puppycrawl.tools.checkstyle.api.LocalizedMessage; getMessage[]; java.lang.String; null; MessageFormat>
<java.text.MessageFormat; format[java.lang.String, java.lang.Object[]]; java.lang.String; com.puppycrawl.tools.checkstyle.api.LocalizedMessage; getMessage[]; java.lang.String; null; MessageFormat>
<java.text.MessageFormat; format[java.lang.String, java.lang.Object[]]; java.lang.String; com.puppycrawl.tools.checkstyle.api.LocalizedMessage; getCustomMessage[]; java.lang.String; null; MessageFormat>
<java.util.Map; get[java.lang.Object]; java.util.ResourceBundle; com.puppycrawl.tools.checkstyle.api.LocalizedMessage; getBundle[java.lang.String]; java.util.ResourceBundle; null; BUNDLE_CACHE>
<java.util.ResourceBundle; getBundle[java.lang.String, java.util.Locale, java.lang.ClassLoader]; java.util.ResourceBundle; com.puppycrawl.tools.checkstyle.api.LocalizedMessage; getBundle[java.lang.String]; java.util.ResourceBundle; null; ResourceBundle>
<java.lang.Class; getClassLoader[]; java.lang.ClassLoader; com.puppycrawl.tools.checkstyle.api.LocalizedMessage; getBundle[java.lang.String]; java.util.ResourceBundle; null; mSourceClass>
<java.util.Map; put[java.lang.String, java.util.ResourceBundle]; java.util.ResourceBundle; com.puppycrawl.tools.checkstyle.api.LocalizedMessage; getBundle[java.lang.String]; java.util.ResourceBundle; null; BUNDLE_CACHE>
<java.lang.Class; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.LocalizedMessage; getSourceName[]; java.lang.String; null; mSourceClass>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessage; getLineNo[]; int; com.puppycrawl.tools.checkstyle.api.LocalizedMessage; compareTo[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; int; null; this>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessage; getLineNo[]; int; com.puppycrawl.tools.checkstyle.api.LocalizedMessage; compareTo[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; int; null; aOther>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessage; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.api.LocalizedMessage; compareTo[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; int; null; this>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessage; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.api.LocalizedMessage; compareTo[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; int; null; aOther>
<java.lang.String; compareTo[java.lang.String]; int; com.puppycrawl.tools.checkstyle.api.LocalizedMessage; compareTo[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; int; null; getMessage()>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessage; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.LocalizedMessage; compareTo[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; int; compareTo[java.lang.String]; this>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessage; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.LocalizedMessage; compareTo[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; int; null; aOther>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessage; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.api.LocalizedMessage; compareTo[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; int; null; this>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessage; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.api.LocalizedMessage; compareTo[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; int; null; aOther>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessage; getLineNo[]; int; com.puppycrawl.tools.checkstyle.api.LocalizedMessage; compareTo[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; int; null; this>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessage; getLineNo[]; int; com.puppycrawl.tools.checkstyle.api.LocalizedMessage; compareTo[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; int; null; aOther>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.api.SeverityLevelCounter; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; mLevel>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getSeverityLevel[]; com.puppycrawl.tools.checkstyle.api.SeverityLevel; com.puppycrawl.tools.checkstyle.api.SeverityLevelCounter; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; aEvt>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.api.SeverityLevelCounter; addException[com.puppycrawl.tools.checkstyle.api.AuditEvent, java.lang.Throwable]; void; null; SeverityLevel.ERROR>
<com.puppycrawl.tools.checkstyle.api.AnnotationUtility; getAnnotation[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.AnnotationUtility; containsAnnotation[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; boolean; null; AnnotationUtility>
<com.puppycrawl.tools.checkstyle.api.AnnotationUtility; getAnnotationHolder[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.AnnotationUtility; containsAnnotation[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; AnnotationUtility>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.api.AnnotationUtility; containsAnnotation[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; holder>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.AnnotationUtility; getAnnotationHolder[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.AnnotationUtility; getAnnotationHolder[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.AnnotationUtility; getAnnotationHolder[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.AnnotationUtility; getAnnotationHolder[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; aAST>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.api.AnnotationUtility; getAnnotation[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; aAnnotation.trim()>
<java.lang.String; trim[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AnnotationUtility; getAnnotation[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; com.puppycrawl.tools.checkstyle.api.DetailAST; length[]; aAnnotation>
<com.puppycrawl.tools.checkstyle.api.AnnotationUtility; getAnnotationHolder[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.AnnotationUtility; getAnnotation[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; AnnotationUtility>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.AnnotationUtility; getAnnotation[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; holder>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.AnnotationUtility; getAnnotation[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; child>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.AnnotationUtility; getAnnotation[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; child>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.AnnotationUtility; getAnnotation[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; child>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AnnotationUtility; getAnnotation[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; FullIdent.createFullIdent(at.getNextSibling())>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.api.AnnotationUtility; getAnnotation[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; com.puppycrawl.tools.checkstyle.api.DetailAST; getText[]; FullIdent>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.AnnotationUtility; getAnnotation[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; at>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.api.AnnotationUtility; getAnnotation[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; aAnnotation>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.AnnotationUtility; annotatingWhat[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.AnnotationUtility; annotatingWhat[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; aAST.getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.AnnotationUtility; annotatingWhat[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; aAST>
<com.puppycrawl.tools.checkstyle.api.AnnotationUtility; annotatingWhat[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.AnnotationUtility; isAnnotatingType[com.puppycrawl.tools.checkstyle.api.DetailAST, int]; boolean; null; AnnotationUtility>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.AnnotationUtility; isAnnotatingType[com.puppycrawl.tools.checkstyle.api.DetailAST, int]; boolean; null; ast>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessages; reset[]; void; com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; process[java.io.File, java.util.List<java.lang.String>]; java.util.TreeSet<com.puppycrawl.tools.checkstyle.api.LocalizedMessage>; null; getMessageCollector()>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; getMessageCollector[]; com.puppycrawl.tools.checkstyle.api.LocalizedMessages; com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; process[java.io.File, java.util.List<java.lang.String>]; java.util.TreeSet<com.puppycrawl.tools.checkstyle.api.LocalizedMessage>; reset[]; this>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; fileExtensionMatches[java.io.File]; boolean; com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; process[java.io.File, java.util.List<java.lang.String>]; java.util.TreeSet<com.puppycrawl.tools.checkstyle.api.LocalizedMessage>; null; this>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; process[java.io.File, java.util.List<java.lang.String>]; java.util.TreeSet<com.puppycrawl.tools.checkstyle.api.LocalizedMessage>; null; this>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessages; getMessages[]; java.util.TreeSet<com.puppycrawl.tools.checkstyle.api.LocalizedMessage>; com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; process[java.io.File, java.util.List<java.lang.String>]; java.util.TreeSet<com.puppycrawl.tools.checkstyle.api.LocalizedMessage>; null; getMessageCollector()>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; getMessageCollector[]; com.puppycrawl.tools.checkstyle.api.LocalizedMessages; com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; process[java.io.File, java.util.List<java.lang.String>]; java.util.TreeSet<com.puppycrawl.tools.checkstyle.api.LocalizedMessage>; getMessages[]; this>
<java.lang.String; startsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; setFileExtensions[java.lang.String[]]; void; null; extension>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; log[int, java.lang.String, java.lang.Object[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessages; add[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; void; com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; log[int, int, java.lang.String, java.lang.Object[]]; void; null; getMessageCollector()>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; getMessageCollector[]; com.puppycrawl.tools.checkstyle.api.LocalizedMessages; com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; log[int, int, java.lang.String, java.lang.Object[]]; void; add[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; this>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; getMessageBundle[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; log[int, int, java.lang.String, java.lang.Object[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; getSeverityLevel[]; com.puppycrawl.tools.checkstyle.api.SeverityLevel; com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; log[int, int, java.lang.String, java.lang.Object[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; getId[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; log[int, int, java.lang.String, java.lang.Object[]]; void; null; this>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck>; com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; log[int, int, java.lang.String, java.lang.Object[]]; void; null; this>
<java.util.Map; get[java.lang.Object]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; log[int, int, java.lang.String, java.lang.Object[]]; void; null; this.getCustomMessages()>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; getCustomMessages[]; java.util.Map<java.lang.String,java.lang.String>; com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; log[int, int, java.lang.String, java.lang.Object[]]; void; get[java.lang.Object]; this>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessages; getMessages[]; java.util.TreeSet<com.puppycrawl.tools.checkstyle.api.LocalizedMessage>; com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; fireErrors[java.lang.String]; void; null; getMessageCollector()>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; getMessageCollector[]; com.puppycrawl.tools.checkstyle.api.LocalizedMessages; com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; fireErrors[java.lang.String]; void; getMessages[]; this>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessages; reset[]; void; com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; fireErrors[java.lang.String]; void; null; getMessageCollector()>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; getMessageCollector[]; com.puppycrawl.tools.checkstyle.api.LocalizedMessages; com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; fireErrors[java.lang.String]; void; reset[]; this>
<com.puppycrawl.tools.checkstyle.api.MessageDispatcher; fireErrors[java.lang.String, java.util.TreeSet<com.puppycrawl.tools.checkstyle.api.LocalizedMessage>]; void; com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; fireErrors[java.lang.String]; void; null; getMessageDispatcher()>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; getMessageDispatcher[]; com.puppycrawl.tools.checkstyle.api.MessageDispatcher; com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; fireErrors[java.lang.String]; void; fireErrors[java.lang.String, java.util.TreeSet<com.puppycrawl.tools.checkstyle.api.LocalizedMessage>]; this>
<java.lang.String; startsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; fileExtensionMatches[java.io.File]; boolean; null; extension>
<java.io.File; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; fileExtensionMatches[java.io.File]; boolean; null; aFile>
<java.lang.String; endsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; fileExtensionMatches[java.io.File]; boolean; null; fileName>
<java.util.regex.Pattern; compile[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; fileExtensionMatches[java.io.File]; boolean; null; Pattern>
<not found; newHashMap[]; not found; com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; fileExtensionMatches[java.io.File]; boolean; null; Maps>
<not found; newHashMap[]; not found; com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; fileExtensionMatches[java.io.File]; boolean; null; Maps>
<not found; newHashMap[]; not found; com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; fileExtensionMatches[java.io.File]; boolean; null; Maps>
<com.puppycrawl.tools.checkstyle.api.FileText; fromLines[java.io.File, java.util.List<java.lang.String>]; com.puppycrawl.tools.checkstyle.api.FileText; com.puppycrawl.tools.checkstyle.api.FileContents; FileContents[java.lang.String, java.lang.String[]]; void; null; FileText>
<java.util.Arrays; asList[java.lang.String[]]; java.util.List<java.lang.String>; com.puppycrawl.tools.checkstyle.api.FileContents; FileContents[java.lang.String, java.lang.String[]]; void; null; Arrays>
<java.io.File; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.FileContents; FileContents[com.puppycrawl.tools.checkstyle.api.FileText]; void; null; aText.getFile()>
<com.puppycrawl.tools.checkstyle.api.FileText; getFile[]; java.io.File; com.puppycrawl.tools.checkstyle.api.FileContents; FileContents[com.puppycrawl.tools.checkstyle.api.FileText]; void; toString[]; aText>
<com.puppycrawl.tools.checkstyle.api.FileContents; reportCppComment[int, int]; void; com.puppycrawl.tools.checkstyle.api.FileContents; reportSingleLineComment[java.lang.String, int, int]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FileContents; reportCComment[int, int, int, int]; void; com.puppycrawl.tools.checkstyle.api.FileContents; reportBlockComment[java.lang.String, int, int, int, int]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FileContents; line[int]; java.lang.String; com.puppycrawl.tools.checkstyle.api.FileContents; reportCppComment[int, int]; void; null; this>
<java.lang.String; substring[int]; java.lang.String; com.puppycrawl.tools.checkstyle.api.FileContents; reportCppComment[int, int]; void; null; line>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.api.FileContents; reportCppComment[int, int]; void; null; line>
<java.util.Map; put[java.lang.Integer, com.puppycrawl.tools.checkstyle.api.TextBlock]; com.puppycrawl.tools.checkstyle.api.TextBlock; com.puppycrawl.tools.checkstyle.api.FileContents; reportCppComment[int, int]; void; null; mCPlusPlusComments>
<not found; copyOf[]; not found; com.puppycrawl.tools.checkstyle.api.FileContents; getCppComments[]; com.puppycrawl.tools.checkstyle.api.ImmutableMap<java.lang.Integer,com.puppycrawl.tools.checkstyle.api.TextBlock>; null; ImmutableMap>
<com.puppycrawl.tools.checkstyle.api.FileContents; extractCComment[int, int, int, int]; java.lang.String[]; com.puppycrawl.tools.checkstyle.api.FileContents; reportCComment[int, int, int, int]; void; null; this>
<java.util.Map; containsKey[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.api.FileContents; reportCComment[int, int, int, int]; void; null; mCComments>
<java.util.Map; get[java.lang.Object]; java.util.List<com.puppycrawl.tools.checkstyle.api.TextBlock>; com.puppycrawl.tools.checkstyle.api.FileContents; reportCComment[int, int, int, int]; void; null; mCComments>
<java.util.List; add[com.puppycrawl.tools.checkstyle.api.TextBlock]; boolean; com.puppycrawl.tools.checkstyle.api.FileContents; reportCComment[int, int, int, int]; void; null; entries>
<not found; newArrayList[]; not found; com.puppycrawl.tools.checkstyle.api.FileContents; reportCComment[int, int, int, int]; void; null; Lists>
<java.util.List; add[com.puppycrawl.tools.checkstyle.api.TextBlock]; boolean; com.puppycrawl.tools.checkstyle.api.FileContents; reportCComment[int, int, int, int]; void; null; entries>
<java.util.Map; put[java.lang.Integer, java.util.List<com.puppycrawl.tools.checkstyle.api.TextBlock>]; java.util.List<com.puppycrawl.tools.checkstyle.api.TextBlock>; com.puppycrawl.tools.checkstyle.api.FileContents; reportCComment[int, int, int, int]; void; null; mCComments>
<java.lang.String; indexOf[java.lang.String, int]; int; com.puppycrawl.tools.checkstyle.api.FileContents; reportCComment[int, int, int, int]; void; null; line(aStartLineNo - 1)>
<com.puppycrawl.tools.checkstyle.api.FileContents; line[int]; java.lang.String; com.puppycrawl.tools.checkstyle.api.FileContents; reportCComment[int, int, int, int]; void; indexOf[java.lang.String, int]; this>
<java.util.Map; put[java.lang.Integer, com.puppycrawl.tools.checkstyle.api.TextBlock]; com.puppycrawl.tools.checkstyle.api.TextBlock; com.puppycrawl.tools.checkstyle.api.FileContents; reportCComment[int, int, int, int]; void; null; mJavadocComments>
<not found; copyOf[]; not found; com.puppycrawl.tools.checkstyle.api.FileContents; getCComments[]; com.puppycrawl.tools.checkstyle.api.ImmutableMap<java.lang.Integer,java.util.List<com.puppycrawl.tools.checkstyle.api.TextBlock>>; null; ImmutableMap>
<java.lang.String; substring[int, int]; java.lang.String; com.puppycrawl.tools.checkstyle.api.FileContents; extractCComment[int, int, int, int]; java.lang.String[]; null; line(aStartLineNo - 1)>
<com.puppycrawl.tools.checkstyle.api.FileContents; line[int]; java.lang.String; com.puppycrawl.tools.checkstyle.api.FileContents; extractCComment[int, int, int, int]; java.lang.String[]; substring[int, int]; this>
<java.lang.String; substring[int]; java.lang.String; com.puppycrawl.tools.checkstyle.api.FileContents; extractCComment[int, int, int, int]; java.lang.String[]; null; line(aStartLineNo - 1)>
<com.puppycrawl.tools.checkstyle.api.FileContents; line[int]; java.lang.String; com.puppycrawl.tools.checkstyle.api.FileContents; extractCComment[int, int, int, int]; java.lang.String[]; substring[int]; this>
<com.puppycrawl.tools.checkstyle.api.FileContents; line[int]; java.lang.String; com.puppycrawl.tools.checkstyle.api.FileContents; extractCComment[int, int, int, int]; java.lang.String[]; null; this>
<java.lang.String; substring[int, int]; java.lang.String; com.puppycrawl.tools.checkstyle.api.FileContents; extractCComment[int, int, int, int]; java.lang.String[]; null; line(aEndLineNo - 1)>
<com.puppycrawl.tools.checkstyle.api.FileContents; line[int]; java.lang.String; com.puppycrawl.tools.checkstyle.api.FileContents; extractCComment[int, int, int, int]; java.lang.String[]; substring[int, int]; this>
<com.puppycrawl.tools.checkstyle.api.FileContents; lineIsBlank[int]; boolean; com.puppycrawl.tools.checkstyle.api.FileContents; getJavadocBefore[int]; com.puppycrawl.tools.checkstyle.api.TextBlock; null; this>
<com.puppycrawl.tools.checkstyle.api.FileContents; lineIsComment[int]; boolean; com.puppycrawl.tools.checkstyle.api.FileContents; getJavadocBefore[int]; com.puppycrawl.tools.checkstyle.api.TextBlock; null; this>
<java.util.Map; get[java.lang.Object]; com.puppycrawl.tools.checkstyle.api.TextBlock; com.puppycrawl.tools.checkstyle.api.FileContents; getJavadocBefore[int]; com.puppycrawl.tools.checkstyle.api.TextBlock; null; mJavadocComments>
<com.puppycrawl.tools.checkstyle.api.FileText; get[int]; java.lang.String; com.puppycrawl.tools.checkstyle.api.FileContents; line[int]; java.lang.String; null; mText>
<com.puppycrawl.tools.checkstyle.api.FileText; toLinesArray[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.api.FileContents; getLines[]; java.lang.String[]; null; mText>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.api.FileContents; lineIsBlank[int]; boolean; null; "">
<java.lang.String; trim[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.FileContents; lineIsBlank[int]; boolean; null; line(aLineNo)>
<com.puppycrawl.tools.checkstyle.api.FileContents; line[int]; java.lang.String; com.puppycrawl.tools.checkstyle.api.FileContents; lineIsBlank[int]; boolean; trim[]; this>
<java.util.regex.Matcher; matches[]; boolean; com.puppycrawl.tools.checkstyle.api.FileContents; lineIsComment[int]; boolean; null; MATCH_SINGLELINE_COMMENT.matcher(line(aLineNo))>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.api.FileContents; lineIsComment[int]; boolean; matches[]; MATCH_SINGLELINE_COMMENT>
<com.puppycrawl.tools.checkstyle.api.FileContents; line[int]; java.lang.String; com.puppycrawl.tools.checkstyle.api.FileContents; lineIsComment[int]; boolean; null; this>
<java.util.Map; values[]; java.util.Collection<java.util.List<com.puppycrawl.tools.checkstyle.api.TextBlock>>; com.puppycrawl.tools.checkstyle.api.FileContents; hasIntersectionWithComment[int, int, int, int]; boolean; null; mCComments>
<com.puppycrawl.tools.checkstyle.api.TextBlock; intersects[int, int, int, int]; boolean; com.puppycrawl.tools.checkstyle.api.FileContents; hasIntersectionWithComment[int, int, int, int]; boolean; null; comment>
<java.util.Map; get[java.lang.Object]; com.puppycrawl.tools.checkstyle.api.TextBlock; com.puppycrawl.tools.checkstyle.api.FileContents; hasIntersectionWithComment[int, int, int, int]; boolean; null; mCPlusPlusComments>
<com.puppycrawl.tools.checkstyle.api.TextBlock; intersects[int, int, int, int]; boolean; com.puppycrawl.tools.checkstyle.api.FileContents; hasIntersectionWithComment[int, int, int, int]; boolean; null; comment>
<java.lang.String; endsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.api.FileContents; inPackageInfo[]; boolean; null; this.getFilename()>
<com.puppycrawl.tools.checkstyle.api.FileContents; getFilename[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.FileContents; inPackageInfo[]; boolean; endsWith[java.lang.String]; this>
<com.puppycrawl.tools.checkstyle.api.SeverityLevel; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.SeverityLevel; toString[]; java.lang.String; null; this>
<java.lang.String; toLowerCase[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.SeverityLevel; getName[]; java.lang.String; null; name()>
<java.lang.Enum; name[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.SeverityLevel; getName[]; java.lang.String; toLowerCase[]; this>
<java.lang.Enum; valueOf[java.lang.Class<com.puppycrawl.tools.checkstyle.api.SeverityLevel>, java.lang.String]; com.puppycrawl.tools.checkstyle.api.SeverityLevel; com.puppycrawl.tools.checkstyle.api.SeverityLevel; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.SeverityLevel; null; this>
<java.lang.String; toUpperCase[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.SeverityLevel; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.SeverityLevel; null; aSecurityLevelName.trim()>
<java.lang.String; trim[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.SeverityLevel; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.SeverityLevel; toUpperCase[]; aSecurityLevelName>
<not found; newArrayList[]; not found; com.puppycrawl.tools.checkstyle.api.TextBlock; intersects[int, int, int, int]; boolean; null; Lists>
<java.util.List; add[E]; boolean; com.puppycrawl.tools.checkstyle.api.FastStack; push[E]; void; null; mEntries>
<java.util.List; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.api.FastStack; isEmpty[]; boolean; null; mEntries>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.api.FastStack; size[]; int; null; mEntries>
<java.util.List; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.api.FastStack; peek[]; E; null; mEntries>
<java.util.List; get[int]; E; com.puppycrawl.tools.checkstyle.api.FastStack; peek[]; E; null; mEntries>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.api.FastStack; peek[]; E; null; mEntries>
<java.util.List; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.api.FastStack; pop[]; E; null; mEntries>
<java.util.List; remove[int]; E; com.puppycrawl.tools.checkstyle.api.FastStack; pop[]; E; null; mEntries>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.api.FastStack; pop[]; E; null; mEntries>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.api.FastStack; peek[int]; E; null; mEntries>
<java.util.List; get[int]; E; com.puppycrawl.tools.checkstyle.api.FastStack; peek[int]; E; null; mEntries>
<java.util.List; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.api.FastStack; contains[E]; boolean; null; mEntries>
<java.util.List; clear[]; void; com.puppycrawl.tools.checkstyle.api.FastStack; clear[]; void; null; mEntries>
<java.util.List; iterator[]; java.util.Iterator<E>; com.puppycrawl.tools.checkstyle.api.FastStack; iterator[]; java.util.Iterator<E>; null; mEntries>
<not found; newTreeSet[]; not found; com.puppycrawl.tools.checkstyle.api.FastStack; newInstance[]; com.puppycrawl.tools.checkstyle.api.FastStack<T>; null; Sets>
<not found; newTreeSet[]; not found; com.puppycrawl.tools.checkstyle.api.LocalizedMessages; getMessages[]; java.util.TreeSet<com.puppycrawl.tools.checkstyle.api.LocalizedMessage>; null; Sets>
<java.util.TreeSet; clear[]; void; com.puppycrawl.tools.checkstyle.api.LocalizedMessages; reset[]; void; null; mMessages>
<java.util.TreeSet; add[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; boolean; com.puppycrawl.tools.checkstyle.api.LocalizedMessages; add[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; void; null; mMessages>
<java.util.TreeSet; size[]; int; com.puppycrawl.tools.checkstyle.api.LocalizedMessages; size[]; int; null; mMessages>
<not found; builder[]; not found; com.puppycrawl.tools.checkstyle.api.TokenTypes; TokenTypes[]; void; null; ImmutableMap>
<java.lang.Class; getDeclaredFields[]; java.lang.reflect.Field[]; com.puppycrawl.tools.checkstyle.api.TokenTypes; TokenTypes[]; void; null; TokenTypes.class>
<java.lang.reflect.Field; getType[]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.api.TokenTypes; TokenTypes[]; void; null; f>
<java.lang.reflect.Field; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.TokenTypes; TokenTypes[]; void; null; f>
<java.lang.reflect.Field; getInt[java.lang.Object]; int; com.puppycrawl.tools.checkstyle.api.TokenTypes; TokenTypes[]; void; null; f>
<not found; put[]; not found; com.puppycrawl.tools.checkstyle.api.TokenTypes; TokenTypes[]; void; null; builder>
<java.lang.System; arraycopy[java.lang.Object, int, java.lang.Object, int, int]; void; com.puppycrawl.tools.checkstyle.api.TokenTypes; TokenTypes[]; void; null; System>
<java.lang.Throwable; printStackTrace[]; void; com.puppycrawl.tools.checkstyle.api.TokenTypes; TokenTypes[]; void; null; e>
<java.lang.System; exit[int]; void; com.puppycrawl.tools.checkstyle.api.TokenTypes; TokenTypes[]; void; null; System>
<java.lang.Throwable; printStackTrace[]; void; com.puppycrawl.tools.checkstyle.api.TokenTypes; TokenTypes[]; void; null; e>
<java.lang.System; exit[int]; void; com.puppycrawl.tools.checkstyle.api.TokenTypes; TokenTypes[]; void; null; System>
<not found; build[]; not found; com.puppycrawl.tools.checkstyle.api.TokenTypes; TokenTypes[]; void; null; builder>
<not found; get[]; not found; com.puppycrawl.tools.checkstyle.api.TokenTypes; getTokenId[java.lang.String]; int; null; TOKEN_NAME_TO_VALUE>
<java.lang.Integer; intValue[]; int; com.puppycrawl.tools.checkstyle.api.TokenTypes; getTokenId[java.lang.String]; int; null; id>
<not found; containsKey[]; not found; com.puppycrawl.tools.checkstyle.api.TokenTypes; getShortDescription[java.lang.String]; java.lang.String; null; TOKEN_NAME_TO_VALUE>
<java.util.ResourceBundle; getBundle[java.lang.String]; java.util.ResourceBundle; com.puppycrawl.tools.checkstyle.api.TokenTypes; getShortDescription[java.lang.String]; java.lang.String; null; ResourceBundle>
<java.util.ResourceBundle; getString[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.api.TokenTypes; getShortDescription[java.lang.String]; java.lang.String; null; bundle>
<not found; getLine[]; not found; com.puppycrawl.tools.checkstyle.api.DetailAST; initialize[com.puppycrawl.tools.checkstyle.api.Token]; void; null; aTok>
<not found; getColumn[]; not found; com.puppycrawl.tools.checkstyle.api.DetailAST; initialize[com.puppycrawl.tools.checkstyle.api.Token]; void; null; aTok>
<not found; setText[]; not found; com.puppycrawl.tools.checkstyle.api.DetailAST; initialize[com.puppycrawl.tools.checkstyle.api.AST]; void; null; this>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.api.DetailAST; initialize[com.puppycrawl.tools.checkstyle.api.AST]; void; null; da>
<not found; setType[]; not found; com.puppycrawl.tools.checkstyle.api.DetailAST; initialize[com.puppycrawl.tools.checkstyle.api.AST]; void; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.DetailAST; initialize[com.puppycrawl.tools.checkstyle.api.AST]; void; null; da>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.api.DetailAST; initialize[com.puppycrawl.tools.checkstyle.api.AST]; void; null; da>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.api.DetailAST; initialize[com.puppycrawl.tools.checkstyle.api.AST]; void; null; da>
<com.puppycrawl.tools.checkstyle.api.DetailAST; setParent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.api.DetailAST; setFirstChild[com.puppycrawl.tools.checkstyle.api.AST]; void; null; ((DetailAST)aAST)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; setParent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.api.DetailAST; setNextSibling[com.puppycrawl.tools.checkstyle.api.AST]; void; null; ((DetailAST)aAST)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; setPreviousSibling[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.api.DetailAST; setNextSibling[com.puppycrawl.tools.checkstyle.api.AST]; void; null; ((DetailAST)aAST)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; setParent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.api.DetailAST; addChild[com.puppycrawl.tools.checkstyle.api.AST]; void; null; ((DetailAST)aAST)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; setParent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.api.DetailAST; addChild[com.puppycrawl.tools.checkstyle.api.AST]; void; null; (getFirstChild())>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.DetailAST; addChild[com.puppycrawl.tools.checkstyle.api.AST]; void; setParent[com.puppycrawl.tools.checkstyle.api.DetailAST]; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; null; this>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; null; child>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.DetailAST; setParent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; setParent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.api.DetailAST; setParent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; nextSibling>
<com.puppycrawl.tools.checkstyle.api.DetailAST; setPreviousSibling[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.api.DetailAST; setParent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; nextSibling>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; null; child>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; null; sibling>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; null; child>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; null; sibling>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.DetailAST; getLastChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.DetailAST; getLastChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; ast>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.DetailAST; getLastChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; ast>
<java.util.BitSet; set[int]; void; com.puppycrawl.tools.checkstyle.api.DetailAST; getBranchTokenTypes[]; java.util.BitSet; null; mBranchTokenTypes>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.DetailAST; getBranchTokenTypes[]; java.util.BitSet; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.DetailAST; getBranchTokenTypes[]; java.util.BitSet; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getBranchTokenTypes[]; java.util.BitSet; com.puppycrawl.tools.checkstyle.api.DetailAST; getBranchTokenTypes[]; java.util.BitSet; null; child>
<java.util.BitSet; or[java.util.BitSet]; void; com.puppycrawl.tools.checkstyle.api.DetailAST; getBranchTokenTypes[]; java.util.BitSet; null; mBranchTokenTypes>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.DetailAST; getBranchTokenTypes[]; java.util.BitSet; null; child>
<java.util.BitSet; get[int]; boolean; com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; null; getBranchTokenTypes()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getBranchTokenTypes[]; java.util.BitSet; com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; get[int]; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[int]; int; null; this>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[int]; int; null; i>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[int]; int; null; i>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; i>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; i>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.api.DetailAST; toString[]; java.lang.String; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.api.DetailAST; toString[]; java.lang.String; null; this>
<not found; newHashSet[]; not found; com.puppycrawl.tools.checkstyle.api.Context; getAttributeNames[]; com.puppycrawl.tools.checkstyle.api.ImmutableCollection<java.lang.String>; null; Sets>
<java.util.Set; add[com.puppycrawl.tools.checkstyle.api.Filter]; boolean; com.puppycrawl.tools.checkstyle.api.FilterSet; addFilter[com.puppycrawl.tools.checkstyle.api.Filter]; void; null; mFilters>
<java.util.Set; remove[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.api.FilterSet; removeFilter[com.puppycrawl.tools.checkstyle.api.Filter]; void; null; mFilters>
<java.lang.Object; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.FilterSet; toString[]; java.lang.String; null; mFilters>
<java.util.Set; hashCode[]; int; com.puppycrawl.tools.checkstyle.api.FilterSet; hashCode[]; int; null; mFilters>
<java.util.Set; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.api.FilterSet; equals[java.lang.Object]; boolean; null; this.mFilters>
<com.puppycrawl.tools.checkstyle.api.Filter; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; com.puppycrawl.tools.checkstyle.api.FilterSet; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; filter>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.api.FilterSet; clear[]; void; null; mFilters>
<com.puppycrawl.tools.checkstyle.api.SeverityLevel; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.SeverityLevel; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; setSeverity[java.lang.String]; void; null; SeverityLevel>
<com.puppycrawl.tools.checkstyle.api.SeverityLevel; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; getSeverity[]; java.lang.String; null; mSeverityLevel>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; null; aAST>
<java.lang.Class; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; getMessageBundle[]; java.lang.String; null; this.getClass()>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter>; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; getMessageBundle[]; java.lang.String; getName[]; this>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; getMessageBundle[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; getMessageBundle[]; java.lang.String; null; this>
<com.puppycrawl.tools.checkstyle.api.Configuration; getMessages[]; com.puppycrawl.tools.checkstyle.api.ImmutableMap<java.lang.String,java.lang.String>; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; getCustomMessages[]; java.util.Map<java.lang.String,java.lang.String>; null; getConfiguration()>
<com.puppycrawl.tools.checkstyle.api.AutomaticBean; getConfiguration[]; com.puppycrawl.tools.checkstyle.api.Configuration; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; getCustomMessages[]; java.util.Map<java.lang.String,java.lang.String>; getMessages[]; this>
<java.lang.String; lastIndexOf[int]; int; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; getMessageBundle[java.lang.String]; java.lang.String; null; aClassName>
<java.lang.String; substring[int, int]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; getMessageBundle[java.lang.String]; java.lang.String; null; aClassName>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAst>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAst>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; isLocalVariableDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ScopeUtils>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAst>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; isLocalVariableDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ScopeUtils>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAst>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; isLocalVariableDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ScopeUtils>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAst>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAst>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAst>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; getScopeFromMods[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ScopeUtils>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAst>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAst>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; isLocalVariableDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ScopeUtils>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAst>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; isLocalVariableDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ScopeUtils>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAst>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; isLocalVariableDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ScopeUtils>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAst>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAst>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAst>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; returnType.getFirstChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; getType[]; returnType>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAst>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; isLocalVariableDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ScopeUtils>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAst>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; isLocalVariableDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ScopeUtils>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAst>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAst>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; methodNameAst>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; "writeObject">
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; "readObject">
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; "writeExternal">
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; "readExternal">
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; "writeReplace">
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; "readResolve">
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAst>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAst>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; varType>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; "ObjectStreamField">
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; varType.getFirstChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; getText[]; varType>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAst>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; isLocalVariableDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ScopeUtils>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAst>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAst>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; isLocalVariableDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ScopeUtils>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAst>
<com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; values[]; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo[]; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[int, int, java.lang.String, java.lang.Object[]]; void; null; JavadocTagInfo>
<not found; put[]; not found; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[int, int, java.lang.String, java.lang.Object[]]; void; null; textToTagBuilder>
<com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[int, int, java.lang.String, java.lang.Object[]]; void; null; tag>
<not found; put[]; not found; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[int, int, java.lang.String, java.lang.Object[]]; void; null; nameToTagBuilder>
<com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[int, int, java.lang.String, java.lang.Object[]]; void; null; tag>
<not found; build[]; not found; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[int, int, java.lang.String, java.lang.Object[]]; void; null; textToTagBuilder>
<not found; build[]; not found; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[int, int, java.lang.String, java.lang.Object[]]; void; null; nameToTagBuilder>
<java.util.Map; get[java.lang.Object]; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; fromText[java.lang.String]; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; null; TEXT_TO_TAG>
<java.util.Map; get[java.lang.Object]; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; fromName[java.lang.String]; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; null; NAME_TO_TAG>
<java.util.Map; containsKey[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidName[java.lang.String]; boolean; null; NAME_TO_TAG>
<com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; toString[]; java.lang.String; null; Utils>
<java.nio.charset.Charset; forName[java.lang.String]; java.nio.charset.Charset; com.puppycrawl.tools.checkstyle.api.FileText; FileText[java.io.File, java.lang.String]; void; null; Charset>
<java.nio.charset.Charset; newDecoder[]; java.nio.charset.CharsetDecoder; com.puppycrawl.tools.checkstyle.api.FileText; FileText[java.io.File, java.lang.String]; void; null; mCharset>
<java.nio.charset.CharsetDecoder; onMalformedInput[java.nio.charset.CodingErrorAction]; java.nio.charset.CharsetDecoder; com.puppycrawl.tools.checkstyle.api.FileText; FileText[java.io.File, java.lang.String]; void; null; decoder>
<java.nio.charset.CharsetDecoder; onUnmappableCharacter[java.nio.charset.CodingErrorAction]; java.nio.charset.CharsetDecoder; com.puppycrawl.tools.checkstyle.api.FileText; FileText[java.io.File, java.lang.String]; void; null; decoder>
<java.lang.Throwable; initCause[java.lang.Throwable]; java.lang.Throwable; com.puppycrawl.tools.checkstyle.api.FileText; FileText[java.io.File, java.lang.String]; void; null; ex2>
<java.io.Reader; read[char[]]; int; com.puppycrawl.tools.checkstyle.api.FileText; FileText[java.io.File, java.lang.String]; void; null; reader>
<java.lang.StringBuilder; append[char[], int, int]; java.lang.StringBuilder; com.puppycrawl.tools.checkstyle.api.FileText; FileText[java.io.File, java.lang.String]; void; null; buf>
<com.puppycrawl.tools.checkstyle.api.Utils; closeQuietly[java.io.Closeable]; void; com.puppycrawl.tools.checkstyle.api.FileText; FileText[java.io.File, java.lang.String]; void; null; Utils>
<java.lang.StringBuilder; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.FileText; FileText[java.io.File, java.lang.String]; void; null; buf>
<java.util.regex.Pattern; split[java.lang.CharSequence, int]; java.lang.String[]; com.puppycrawl.tools.checkstyle.api.FileText; FileText[java.io.File, java.lang.String]; void; null; LINE_TERMINATOR>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.api.FileText; FileText[java.io.File, java.lang.String]; void; null; lines[lines.length - 1]>
<java.lang.System; arraycopy[java.lang.Object, int, java.lang.Object, int, int]; void; com.puppycrawl.tools.checkstyle.api.FileText; FileText[java.io.File, java.lang.String]; void; null; System>
<java.lang.StringBuilder; append[char]; java.lang.StringBuilder; com.puppycrawl.tools.checkstyle.api.FileText; FileText[java.io.File, java.util.List<java.lang.String>]; void; null; buf.append(line)>
<java.lang.StringBuilder; append[java.lang.String]; java.lang.StringBuilder; com.puppycrawl.tools.checkstyle.api.FileText; FileText[java.io.File, java.util.List<java.lang.String>]; void; append[char]; buf>
<java.lang.AbstractStringBuilder; trimToSize[]; void; com.puppycrawl.tools.checkstyle.api.FileText; FileText[java.io.File, java.util.List<java.lang.String>]; void; null; buf>
<java.util.List; toArray[java.lang.String[]]; java.lang.String[]; com.puppycrawl.tools.checkstyle.api.FileText; FileText[java.io.File, java.util.List<java.lang.String>]; void; null; aLines>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.api.FileText; FileText[java.io.File, java.util.List<java.lang.String>]; void; null; aLines>
<java.io.File; length[]; long; com.puppycrawl.tools.checkstyle.api.FileText; getBytes[]; java.nio.ByteBuffer; null; mFile>
<java.io.File; length[]; long; com.puppycrawl.tools.checkstyle.api.FileText; getBytes[]; java.nio.ByteBuffer; null; mFile>
<java.lang.System; arraycopy[java.lang.Object, int, java.lang.Object, int, int]; void; com.puppycrawl.tools.checkstyle.api.FileText; getBytes[]; java.nio.ByteBuffer; null; System>
<java.io.FileInputStream; read[byte[], int, int]; int; com.puppycrawl.tools.checkstyle.api.FileText; getBytes[]; java.nio.ByteBuffer; null; stream>
<java.nio.ByteBuffer; asReadOnlyBuffer[]; java.nio.ByteBuffer; com.puppycrawl.tools.checkstyle.api.FileText; getBytes[]; java.nio.ByteBuffer; null; ByteBuffer.wrap(bytes,0,fill)>
<java.nio.ByteBuffer; wrap[byte[], int, int]; java.nio.ByteBuffer; com.puppycrawl.tools.checkstyle.api.FileText; getBytes[]; java.nio.ByteBuffer; asReadOnlyBuffer[]; ByteBuffer>
<com.puppycrawl.tools.checkstyle.api.Utils; closeQuietly[java.io.Closeable]; void; com.puppycrawl.tools.checkstyle.api.FileText; getBytes[]; java.nio.ByteBuffer; null; Utils>
<java.lang.Object; clone[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.api.FileText; toLinesArray[]; java.lang.String[]; null; mLines>
<com.puppycrawl.tools.checkstyle.api.FileText; size[]; int; com.puppycrawl.tools.checkstyle.api.FileText; lineBreaks[]; int[]; null; this>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.api.FileText; lineBreaks[]; int[]; null; LINE_TERMINATOR>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.api.FileText; lineBreaks[]; int[]; null; matcher>
<java.util.regex.Matcher; end[]; int; com.puppycrawl.tools.checkstyle.api.FileText; lineBreaks[]; int[]; null; matcher>
<java.lang.CharSequence; length[]; int; com.puppycrawl.tools.checkstyle.api.FileText; lineBreaks[]; int[]; null; mFullText>
<com.puppycrawl.tools.checkstyle.api.FileText; lineBreaks[]; int[]; com.puppycrawl.tools.checkstyle.api.FileText; lineColumn[int]; com.puppycrawl.tools.checkstyle.api.LineColumn; null; this>
<java.util.Arrays; binarySearch[int[], int]; int; com.puppycrawl.tools.checkstyle.api.FileText; lineColumn[int]; com.puppycrawl.tools.checkstyle.api.LineColumn; null; Arrays>
<java.lang.System; arraycopy[java.lang.Object, int, java.lang.Object, int, int]; void; com.puppycrawl.tools.checkstyle.api.Comment; Comment[java.lang.String[], int, int, int]; void; null; System>
<java.lang.Object; clone[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.api.Comment; getText[]; java.lang.String[]; null; mText>
<not found; register[]; not found; com.puppycrawl.tools.checkstyle.api.AutomaticBean; createBeanUtilsBean[]; com.puppycrawl.tools.checkstyle.api.BeanUtilsBean; null; cub>
<not found; register[]; not found; com.puppycrawl.tools.checkstyle.api.AutomaticBean; createBeanUtilsBean[]; com.puppycrawl.tools.checkstyle.api.BeanUtilsBean; null; cub>
<not found; register[]; not found; com.puppycrawl.tools.checkstyle.api.AutomaticBean; createBeanUtilsBean[]; com.puppycrawl.tools.checkstyle.api.BeanUtilsBean; null; cub>
<not found; register[]; not found; com.puppycrawl.tools.checkstyle.api.AutomaticBean; createBeanUtilsBean[]; com.puppycrawl.tools.checkstyle.api.BeanUtilsBean; null; cub>
<not found; register[]; not found; com.puppycrawl.tools.checkstyle.api.AutomaticBean; createBeanUtilsBean[]; com.puppycrawl.tools.checkstyle.api.BeanUtilsBean; null; cub>
<not found; register[]; not found; com.puppycrawl.tools.checkstyle.api.AutomaticBean; createBeanUtilsBean[]; com.puppycrawl.tools.checkstyle.api.BeanUtilsBean; null; cub>
<not found; register[]; not found; com.puppycrawl.tools.checkstyle.api.AutomaticBean; createBeanUtilsBean[]; com.puppycrawl.tools.checkstyle.api.BeanUtilsBean; null; cub>
<not found; register[]; not found; com.puppycrawl.tools.checkstyle.api.AutomaticBean; createBeanUtilsBean[]; com.puppycrawl.tools.checkstyle.api.BeanUtilsBean; null; cub>
<not found; register[]; not found; com.puppycrawl.tools.checkstyle.api.AutomaticBean; createBeanUtilsBean[]; com.puppycrawl.tools.checkstyle.api.BeanUtilsBean; null; cub>
<not found; register[]; not found; com.puppycrawl.tools.checkstyle.api.AutomaticBean; createBeanUtilsBean[]; com.puppycrawl.tools.checkstyle.api.BeanUtilsBean; null; cub>
<not found; register[]; not found; com.puppycrawl.tools.checkstyle.api.AutomaticBean; createBeanUtilsBean[]; com.puppycrawl.tools.checkstyle.api.BeanUtilsBean; null; cub>
<not found; register[]; not found; com.puppycrawl.tools.checkstyle.api.AutomaticBean; createBeanUtilsBean[]; com.puppycrawl.tools.checkstyle.api.BeanUtilsBean; null; cub>
<not found; register[]; not found; com.puppycrawl.tools.checkstyle.api.AutomaticBean; createBeanUtilsBean[]; com.puppycrawl.tools.checkstyle.api.BeanUtilsBean; null; cub>
<not found; register[]; not found; com.puppycrawl.tools.checkstyle.api.AutomaticBean; createBeanUtilsBean[]; com.puppycrawl.tools.checkstyle.api.BeanUtilsBean; null; cub>
<not found; register[]; not found; com.puppycrawl.tools.checkstyle.api.AutomaticBean; createBeanUtilsBean[]; com.puppycrawl.tools.checkstyle.api.BeanUtilsBean; null; cub>
<not found; register[]; not found; com.puppycrawl.tools.checkstyle.api.AutomaticBean; createBeanUtilsBean[]; com.puppycrawl.tools.checkstyle.api.BeanUtilsBean; null; cub>
<not found; register[]; not found; com.puppycrawl.tools.checkstyle.api.AutomaticBean; createBeanUtilsBean[]; com.puppycrawl.tools.checkstyle.api.BeanUtilsBean; null; cub>
<not found; register[]; not found; com.puppycrawl.tools.checkstyle.api.AutomaticBean; createBeanUtilsBean[]; com.puppycrawl.tools.checkstyle.api.BeanUtilsBean; null; cub>
<not found; register[]; not found; com.puppycrawl.tools.checkstyle.api.AutomaticBean; createBeanUtilsBean[]; com.puppycrawl.tools.checkstyle.api.BeanUtilsBean; null; cub>
<not found; register[]; not found; com.puppycrawl.tools.checkstyle.api.AutomaticBean; createBeanUtilsBean[]; com.puppycrawl.tools.checkstyle.api.BeanUtilsBean; null; cub>
<not found; register[]; not found; com.puppycrawl.tools.checkstyle.api.AutomaticBean; createBeanUtilsBean[]; com.puppycrawl.tools.checkstyle.api.BeanUtilsBean; null; cub>
<not found; register[]; not found; com.puppycrawl.tools.checkstyle.api.AutomaticBean; createBeanUtilsBean[]; com.puppycrawl.tools.checkstyle.api.BeanUtilsBean; null; cub>
<not found; register[]; not found; com.puppycrawl.tools.checkstyle.api.AutomaticBean; createBeanUtilsBean[]; com.puppycrawl.tools.checkstyle.api.BeanUtilsBean; null; cub>
<not found; register[]; not found; com.puppycrawl.tools.checkstyle.api.AutomaticBean; createBeanUtilsBean[]; com.puppycrawl.tools.checkstyle.api.BeanUtilsBean; null; cub>
<not found; register[]; not found; com.puppycrawl.tools.checkstyle.api.AutomaticBean; createBeanUtilsBean[]; com.puppycrawl.tools.checkstyle.api.BeanUtilsBean; null; cub>
<com.puppycrawl.tools.checkstyle.api.AutomaticBean; createBeanUtilsBean[]; com.puppycrawl.tools.checkstyle.api.BeanUtilsBean; com.puppycrawl.tools.checkstyle.api.AutomaticBean; configure[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Configuration; getAttributeNames[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.api.AutomaticBean; configure[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; aConfiguration>
<com.puppycrawl.tools.checkstyle.api.Configuration; getAttribute[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AutomaticBean; configure[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; aConfiguration>
<not found; getPropertyDescriptor[]; not found; com.puppycrawl.tools.checkstyle.api.AutomaticBean; configure[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; PropertyUtils>
<java.beans.PropertyDescriptor; getWriteMethod[]; java.lang.reflect.Method; com.puppycrawl.tools.checkstyle.api.AutomaticBean; configure[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; pd>
<com.puppycrawl.tools.checkstyle.api.Configuration; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AutomaticBean; configure[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; aConfiguration>
<not found; copyProperty[]; not found; com.puppycrawl.tools.checkstyle.api.AutomaticBean; configure[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; beanUtils>
<com.puppycrawl.tools.checkstyle.api.Configuration; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AutomaticBean; configure[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; aConfiguration>
<java.lang.Throwable; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AutomaticBean; configure[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; e.getTargetException()>
<java.lang.reflect.InvocationTargetException; getTargetException[]; java.lang.Throwable; com.puppycrawl.tools.checkstyle.api.AutomaticBean; configure[com.puppycrawl.tools.checkstyle.api.Configuration]; void; getMessage[]; e>
<java.lang.Class; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AutomaticBean; configure[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; this.getClass()>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.api.AutomaticBean>; com.puppycrawl.tools.checkstyle.api.AutomaticBean; configure[com.puppycrawl.tools.checkstyle.api.Configuration]; void; getName[]; this>
<java.lang.Class; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AutomaticBean; configure[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; this.getClass()>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.api.AutomaticBean>; com.puppycrawl.tools.checkstyle.api.AutomaticBean; configure[com.puppycrawl.tools.checkstyle.api.Configuration]; void; getName[]; this>
<com.puppycrawl.tools.checkstyle.api.Configuration; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AutomaticBean; configure[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; aConfiguration>
<com.puppycrawl.tools.checkstyle.api.Configuration; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AutomaticBean; configure[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; aConfiguration>
<com.puppycrawl.tools.checkstyle.api.AutomaticBean; finishLocalSetup[]; void; com.puppycrawl.tools.checkstyle.api.AutomaticBean; configure[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Configuration; getChildren[]; com.puppycrawl.tools.checkstyle.api.Configuration[]; com.puppycrawl.tools.checkstyle.api.AutomaticBean; configure[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; aConfiguration>
<com.puppycrawl.tools.checkstyle.api.AutomaticBean; setupChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; com.puppycrawl.tools.checkstyle.api.AutomaticBean; configure[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AutomaticBean; createBeanUtilsBean[]; com.puppycrawl.tools.checkstyle.api.BeanUtilsBean; com.puppycrawl.tools.checkstyle.api.AutomaticBean; contextualize[com.puppycrawl.tools.checkstyle.api.Context]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Context; getAttributeNames[]; com.puppycrawl.tools.checkstyle.api.ImmutableCollection<java.lang.String>; com.puppycrawl.tools.checkstyle.api.AutomaticBean; contextualize[com.puppycrawl.tools.checkstyle.api.Context]; void; null; aContext>
<com.puppycrawl.tools.checkstyle.api.Context; get[java.lang.String]; java.lang.Object; com.puppycrawl.tools.checkstyle.api.AutomaticBean; contextualize[com.puppycrawl.tools.checkstyle.api.Context]; void; null; aContext>
<not found; copyProperty[]; not found; com.puppycrawl.tools.checkstyle.api.AutomaticBean; contextualize[com.puppycrawl.tools.checkstyle.api.Context]; void; null; beanUtils>
<java.lang.Class; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AutomaticBean; contextualize[com.puppycrawl.tools.checkstyle.api.Context]; void; null; this.getClass()>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.api.AutomaticBean>; com.puppycrawl.tools.checkstyle.api.AutomaticBean; contextualize[com.puppycrawl.tools.checkstyle.api.Context]; void; getName[]; this>
<java.lang.Class; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AutomaticBean; contextualize[com.puppycrawl.tools.checkstyle.api.Context]; void; null; this.getClass()>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.api.AutomaticBean>; com.puppycrawl.tools.checkstyle.api.AutomaticBean; contextualize[com.puppycrawl.tools.checkstyle.api.Context]; void; getName[]; this>
<java.lang.Class; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AutomaticBean; contextualize[com.puppycrawl.tools.checkstyle.api.Context]; void; null; this.getClass()>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.api.AutomaticBean>; com.puppycrawl.tools.checkstyle.api.AutomaticBean; contextualize[com.puppycrawl.tools.checkstyle.api.Context]; void; getName[]; this>
<java.lang.Class; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AutomaticBean; contextualize[com.puppycrawl.tools.checkstyle.api.Context]; void; null; this.getClass()>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.api.AutomaticBean>; com.puppycrawl.tools.checkstyle.api.AutomaticBean; contextualize[com.puppycrawl.tools.checkstyle.api.Context]; void; getName[]; this>
<java.lang.String; trim[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AutomaticBean.RelaxedStringArrayConverter; convert[java.lang.Class, java.lang.Object]; java.lang.Object; null; aValue.toString()>
<java.lang.Object; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AutomaticBean.RelaxedStringArrayConverter; convert[java.lang.Class, java.lang.Object]; java.lang.Object; trim[]; aValue>
<not found; newArrayList[]; not found; com.puppycrawl.tools.checkstyle.api.AutomaticBean.RelaxedStringArrayConverter; convert[java.lang.Class, java.lang.Object]; java.lang.Object; null; Lists>
<java.util.StringTokenizer; hasMoreTokens[]; boolean; com.puppycrawl.tools.checkstyle.api.AutomaticBean.RelaxedStringArrayConverter; convert[java.lang.Class, java.lang.Object]; java.lang.Object; null; st>
<java.util.StringTokenizer; nextToken[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AutomaticBean.RelaxedStringArrayConverter; convert[java.lang.Class, java.lang.Object]; java.lang.Object; null; st>
<java.util.List; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.api.AutomaticBean.RelaxedStringArrayConverter; convert[java.lang.Class, java.lang.Object]; java.lang.Object; null; result>
<java.lang.String; trim[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AutomaticBean.RelaxedStringArrayConverter; convert[java.lang.Class, java.lang.Object]; java.lang.Object; null; token>
<java.util.List; toArray[java.lang.String[]]; java.lang.String[]; com.puppycrawl.tools.checkstyle.api.AutomaticBean.RelaxedStringArrayConverter; convert[java.lang.Class, java.lang.Object]; java.lang.Object; null; result>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.api.AutomaticBean.RelaxedStringArrayConverter; convert[java.lang.Class, java.lang.Object]; java.lang.Object; null; result>
<com.puppycrawl.tools.checkstyle.ConfigurationLoader; createIdToResourceNameMap[]; java.util.Map<java.lang.String,java.lang.String>; com.puppycrawl.tools.checkstyle.ConfigurationLoader.InternalLoader; InternalLoader[]; void; null; this>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.ConfigurationLoader.InternalLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; aQName>
<org.xml.sax.Attributes; getValue[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoader.InternalLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; aAtts>
<com.puppycrawl.tools.checkstyle.api.FastStack; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.ConfigurationLoader.InternalLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; mConfigStack>
<com.puppycrawl.tools.checkstyle.api.FastStack; peek[]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; com.puppycrawl.tools.checkstyle.ConfigurationLoader.InternalLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; mConfigStack>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; com.puppycrawl.tools.checkstyle.ConfigurationLoader.InternalLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; top>
<com.puppycrawl.tools.checkstyle.api.FastStack; push[com.puppycrawl.tools.checkstyle.DefaultConfiguration]; void; com.puppycrawl.tools.checkstyle.ConfigurationLoader.InternalLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; mConfigStack>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.ConfigurationLoader.InternalLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; aQName>
<org.xml.sax.Attributes; getValue[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoader.InternalLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; aAtts>
<com.puppycrawl.tools.checkstyle.ConfigurationLoader; replaceProperties[java.lang.String, com.puppycrawl.tools.checkstyle.PropertyResolver, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoader.InternalLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; this>
<org.xml.sax.Attributes; getValue[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoader.InternalLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; aAtts>
<org.xml.sax.Attributes; getValue[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoader.InternalLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; aAtts>
<java.lang.Throwable; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoader.InternalLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; ex>
<com.puppycrawl.tools.checkstyle.api.FastStack; peek[]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; com.puppycrawl.tools.checkstyle.ConfigurationLoader.InternalLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; mConfigStack>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.ConfigurationLoader.InternalLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; top>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.ConfigurationLoader.InternalLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; aQName>
<org.xml.sax.Attributes; getValue[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoader.InternalLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; aAtts>
<org.xml.sax.Attributes; getValue[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoader.InternalLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; aAtts>
<com.puppycrawl.tools.checkstyle.api.FastStack; peek[]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; com.puppycrawl.tools.checkstyle.ConfigurationLoader.InternalLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; mConfigStack>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addMessage[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.ConfigurationLoader.InternalLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; top>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.ConfigurationLoader.InternalLoader; endElement[java.lang.String, java.lang.String, java.lang.String]; void; null; aQName>
<com.puppycrawl.tools.checkstyle.api.FastStack; pop[]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; com.puppycrawl.tools.checkstyle.ConfigurationLoader.InternalLoader; endElement[java.lang.String, java.lang.String, java.lang.String]; void; null; mConfigStack>
<com.puppycrawl.tools.checkstyle.api.Configuration; getAttribute[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoader.InternalLoader; endElement[java.lang.String, java.lang.String, java.lang.String]; void; null; recentModule>
<com.puppycrawl.tools.checkstyle.api.SeverityLevel; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.SeverityLevel; com.puppycrawl.tools.checkstyle.ConfigurationLoader.InternalLoader; endElement[java.lang.String, java.lang.String, java.lang.String]; void; null; SeverityLevel>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.ConfigurationLoader.InternalLoader; endElement[java.lang.String, java.lang.String, java.lang.String]; void; null; SeverityLevel.IGNORE>
<com.puppycrawl.tools.checkstyle.api.FastStack; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.ConfigurationLoader.InternalLoader; endElement[java.lang.String, java.lang.String, java.lang.String]; void; null; mConfigStack>
<com.puppycrawl.tools.checkstyle.api.FastStack; peek[]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; com.puppycrawl.tools.checkstyle.ConfigurationLoader.InternalLoader; endElement[java.lang.String, java.lang.String, java.lang.String]; void; null; mConfigStack>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; removeChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; com.puppycrawl.tools.checkstyle.ConfigurationLoader.InternalLoader; endElement[java.lang.String, java.lang.String, java.lang.String]; void; null; parentModule>
<com.puppycrawl.tools.checkstyle.api.FastStack; newInstance[]; com.puppycrawl.tools.checkstyle.api.FastStack<com.puppycrawl.tools.checkstyle.DefaultConfiguration>; com.puppycrawl.tools.checkstyle.ConfigurationLoader.InternalLoader; endElement[java.lang.String, java.lang.String, java.lang.String]; void; null; FastStack>
<not found; newHashMap[]; not found; com.puppycrawl.tools.checkstyle.ConfigurationLoader; createIdToResourceNameMap[]; java.util.Map<java.lang.String,java.lang.String>; null; Maps>
<java.util.Map; put[java.lang.String, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoader; createIdToResourceNameMap[]; java.util.Map<java.lang.String,java.lang.String>; null; map>
<java.util.Map; put[java.lang.String, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoader; createIdToResourceNameMap[]; java.util.Map<java.lang.String,java.lang.String>; null; map>
<java.util.Map; put[java.lang.String, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoader; createIdToResourceNameMap[]; java.util.Map<java.lang.String,java.lang.String>; null; map>
<java.util.Map; put[java.lang.String, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoader; createIdToResourceNameMap[]; java.util.Map<java.lang.String,java.lang.String>; null; map>
<com.puppycrawl.tools.checkstyle.api.AbstractLoader; parseInputSource[org.xml.sax.InputSource]; void; com.puppycrawl.tools.checkstyle.ConfigurationLoader; parseInputSource[org.xml.sax.InputSource]; void; null; mSaxHandler>
<com.puppycrawl.tools.checkstyle.ConfigurationLoader; loadConfiguration[java.lang.String, com.puppycrawl.tools.checkstyle.PropertyResolver, boolean]; com.puppycrawl.tools.checkstyle.api.Configuration; com.puppycrawl.tools.checkstyle.ConfigurationLoader; loadConfiguration[java.lang.String, com.puppycrawl.tools.checkstyle.PropertyResolver]; com.puppycrawl.tools.checkstyle.api.Configuration; null; this>
<java.net.URL; toURI[]; java.net.URI; com.puppycrawl.tools.checkstyle.ConfigurationLoader; loadConfiguration[java.lang.String, com.puppycrawl.tools.checkstyle.PropertyResolver, boolean]; com.puppycrawl.tools.checkstyle.api.Configuration; null; url>
<java.io.File; exists[]; boolean; com.puppycrawl.tools.checkstyle.ConfigurationLoader; loadConfiguration[java.lang.String, com.puppycrawl.tools.checkstyle.PropertyResolver, boolean]; com.puppycrawl.tools.checkstyle.api.Configuration; null; file>
<java.io.File; toURI[]; java.net.URI; com.puppycrawl.tools.checkstyle.ConfigurationLoader; loadConfiguration[java.lang.String, com.puppycrawl.tools.checkstyle.PropertyResolver, boolean]; com.puppycrawl.tools.checkstyle.api.Configuration; null; file>
<java.lang.Class; getResource[java.lang.String]; java.net.URL; com.puppycrawl.tools.checkstyle.ConfigurationLoader; loadConfiguration[java.lang.String, com.puppycrawl.tools.checkstyle.PropertyResolver, boolean]; com.puppycrawl.tools.checkstyle.api.Configuration; null; ConfigurationLoader.class>
<java.net.URL; toURI[]; java.net.URI; com.puppycrawl.tools.checkstyle.ConfigurationLoader; loadConfiguration[java.lang.String, com.puppycrawl.tools.checkstyle.PropertyResolver, boolean]; com.puppycrawl.tools.checkstyle.api.Configuration; null; configUrl>
<java.net.URI; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoader; loadConfiguration[java.lang.String, com.puppycrawl.tools.checkstyle.PropertyResolver, boolean]; com.puppycrawl.tools.checkstyle.api.Configuration; null; uri>
<com.puppycrawl.tools.checkstyle.ConfigurationLoader; loadConfiguration[org.xml.sax.InputSource, com.puppycrawl.tools.checkstyle.PropertyResolver, boolean]; com.puppycrawl.tools.checkstyle.api.Configuration; com.puppycrawl.tools.checkstyle.ConfigurationLoader; loadConfiguration[java.lang.String, com.puppycrawl.tools.checkstyle.PropertyResolver, boolean]; com.puppycrawl.tools.checkstyle.api.Configuration; null; this>
<java.lang.Throwable; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoader; loadConfiguration[java.lang.String, com.puppycrawl.tools.checkstyle.PropertyResolver, boolean]; com.puppycrawl.tools.checkstyle.api.Configuration; null; e>
<com.puppycrawl.tools.checkstyle.ConfigurationLoader; loadConfiguration[org.xml.sax.InputSource, com.puppycrawl.tools.checkstyle.PropertyResolver, boolean]; com.puppycrawl.tools.checkstyle.api.Configuration; com.puppycrawl.tools.checkstyle.ConfigurationLoader; loadConfiguration[java.io.InputStream, com.puppycrawl.tools.checkstyle.PropertyResolver, boolean]; com.puppycrawl.tools.checkstyle.api.Configuration; null; this>
<com.puppycrawl.tools.checkstyle.ConfigurationLoader; parseInputSource[org.xml.sax.InputSource]; void; com.puppycrawl.tools.checkstyle.ConfigurationLoader; loadConfiguration[org.xml.sax.InputSource, com.puppycrawl.tools.checkstyle.PropertyResolver, boolean]; com.puppycrawl.tools.checkstyle.api.Configuration; null; loader>
<com.puppycrawl.tools.checkstyle.ConfigurationLoader; getConfiguration[]; com.puppycrawl.tools.checkstyle.api.Configuration; com.puppycrawl.tools.checkstyle.ConfigurationLoader; loadConfiguration[org.xml.sax.InputSource, com.puppycrawl.tools.checkstyle.PropertyResolver, boolean]; com.puppycrawl.tools.checkstyle.api.Configuration; null; loader>
<org.xml.sax.SAXException; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoader; loadConfiguration[org.xml.sax.InputSource, com.puppycrawl.tools.checkstyle.PropertyResolver, boolean]; com.puppycrawl.tools.checkstyle.api.Configuration; null; e>
<org.xml.sax.SAXParseException; getLineNumber[]; int; com.puppycrawl.tools.checkstyle.ConfigurationLoader; loadConfiguration[org.xml.sax.InputSource, com.puppycrawl.tools.checkstyle.PropertyResolver, boolean]; com.puppycrawl.tools.checkstyle.api.Configuration; null; e>
<org.xml.sax.SAXParseException; getColumnNumber[]; int; com.puppycrawl.tools.checkstyle.ConfigurationLoader; loadConfiguration[org.xml.sax.InputSource, com.puppycrawl.tools.checkstyle.PropertyResolver, boolean]; com.puppycrawl.tools.checkstyle.api.Configuration; null; e>
<org.xml.sax.SAXException; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoader; loadConfiguration[org.xml.sax.InputSource, com.puppycrawl.tools.checkstyle.PropertyResolver, boolean]; com.puppycrawl.tools.checkstyle.api.Configuration; null; e>
<not found; newArrayList[]; not found; com.puppycrawl.tools.checkstyle.ConfigurationLoader; replaceProperties[java.lang.String, com.puppycrawl.tools.checkstyle.PropertyResolver, java.lang.String]; java.lang.String; null; Lists>
<not found; newArrayList[]; not found; com.puppycrawl.tools.checkstyle.ConfigurationLoader; replaceProperties[java.lang.String, com.puppycrawl.tools.checkstyle.PropertyResolver, java.lang.String]; java.lang.String; null; Lists>
<com.puppycrawl.tools.checkstyle.ConfigurationLoader; parsePropertyString[java.lang.String, java.util.List<java.lang.String>, java.util.List<java.lang.String>]; void; com.puppycrawl.tools.checkstyle.ConfigurationLoader; replaceProperties[java.lang.String, com.puppycrawl.tools.checkstyle.PropertyResolver, java.lang.String]; java.lang.String; null; this>
<java.util.List; iterator[]; java.util.Iterator<java.lang.String>; com.puppycrawl.tools.checkstyle.ConfigurationLoader; replaceProperties[java.lang.String, com.puppycrawl.tools.checkstyle.PropertyResolver, java.lang.String]; java.lang.String; null; fragments>
<java.util.List; iterator[]; java.util.Iterator<java.lang.String>; com.puppycrawl.tools.checkstyle.ConfigurationLoader; replaceProperties[java.lang.String, com.puppycrawl.tools.checkstyle.PropertyResolver, java.lang.String]; java.lang.String; null; propertyRefs>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.ConfigurationLoader; replaceProperties[java.lang.String, com.puppycrawl.tools.checkstyle.PropertyResolver, java.lang.String]; java.lang.String; null; i>
<java.util.Iterator; next[]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoader; replaceProperties[java.lang.String, com.puppycrawl.tools.checkstyle.PropertyResolver, java.lang.String]; java.lang.String; null; i>
<java.util.Iterator; next[]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoader; replaceProperties[java.lang.String, com.puppycrawl.tools.checkstyle.PropertyResolver, java.lang.String]; java.lang.String; null; j>
<com.puppycrawl.tools.checkstyle.PropertyResolver; resolve[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoader; replaceProperties[java.lang.String, com.puppycrawl.tools.checkstyle.PropertyResolver, java.lang.String]; java.lang.String; null; aProps>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.ConfigurationLoader; replaceProperties[java.lang.String, com.puppycrawl.tools.checkstyle.PropertyResolver, java.lang.String]; java.lang.String; null; sb>
<java.lang.StringBuffer; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoader; replaceProperties[java.lang.String, com.puppycrawl.tools.checkstyle.PropertyResolver, java.lang.String]; java.lang.String; null; sb>
<java.lang.String; indexOf[java.lang.String, int]; int; com.puppycrawl.tools.checkstyle.ConfigurationLoader; parsePropertyString[java.lang.String, java.util.List<java.lang.String>, java.util.List<java.lang.String>]; void; null; aValue>
<java.util.List; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.ConfigurationLoader; parsePropertyString[java.lang.String, java.util.List<java.lang.String>, java.util.List<java.lang.String>]; void; null; aFragments>
<java.lang.String; substring[int, int]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoader; parsePropertyString[java.lang.String, java.util.List<java.lang.String>, java.util.List<java.lang.String>]; void; null; aValue>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.ConfigurationLoader; parsePropertyString[java.lang.String, java.util.List<java.lang.String>, java.util.List<java.lang.String>]; void; null; aValue>
<java.util.List; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.ConfigurationLoader; parsePropertyString[java.lang.String, java.util.List<java.lang.String>, java.util.List<java.lang.String>]; void; null; aFragments>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.ConfigurationLoader; parsePropertyString[java.lang.String, java.util.List<java.lang.String>, java.util.List<java.lang.String>]; void; null; aValue>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.ConfigurationLoader; parsePropertyString[java.lang.String, java.util.List<java.lang.String>, java.util.List<java.lang.String>]; void; null; aValue>
<java.util.List; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.ConfigurationLoader; parsePropertyString[java.lang.String, java.util.List<java.lang.String>, java.util.List<java.lang.String>]; void; null; aFragments>
<java.util.List; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.ConfigurationLoader; parsePropertyString[java.lang.String, java.util.List<java.lang.String>, java.util.List<java.lang.String>]; void; null; aFragments>
<java.lang.String; substring[int, int]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoader; parsePropertyString[java.lang.String, java.util.List<java.lang.String>, java.util.List<java.lang.String>]; void; null; aValue>
<java.lang.String; indexOf[int, int]; int; com.puppycrawl.tools.checkstyle.ConfigurationLoader; parsePropertyString[java.lang.String, java.util.List<java.lang.String>, java.util.List<java.lang.String>]; void; null; aValue>
<java.lang.String; substring[int, int]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoader; parsePropertyString[java.lang.String, java.util.List<java.lang.String>, java.util.List<java.lang.String>]; void; null; aValue>
<java.util.List; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.ConfigurationLoader; parsePropertyString[java.lang.String, java.util.List<java.lang.String>, java.util.List<java.lang.String>]; void; null; aFragments>
<java.util.List; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.ConfigurationLoader; parsePropertyString[java.lang.String, java.util.List<java.lang.String>, java.util.List<java.lang.String>]; void; null; aPropertyRefs>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.ConfigurationLoader; parsePropertyString[java.lang.String, java.util.List<java.lang.String>, java.util.List<java.lang.String>]; void; null; aValue>
<java.util.List; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.ConfigurationLoader; parsePropertyString[java.lang.String, java.util.List<java.lang.String>, java.util.List<java.lang.String>]; void; null; aFragments>
<java.lang.String; substring[int]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoader; parsePropertyString[java.lang.String, java.util.List<java.lang.String>, java.util.List<java.lang.String>]; void; null; aValue>
<not found; newArrayList[]; not found; com.puppycrawl.tools.checkstyle.ConfigurationLoader; parsePropertyString[java.lang.String, java.util.List<java.lang.String>, java.util.List<java.lang.String>]; void; null; Lists>
<not found; newHashMap[]; not found; com.puppycrawl.tools.checkstyle.ConfigurationLoader; parsePropertyString[java.lang.String, java.util.List<java.lang.String>, java.util.List<java.lang.String>]; void; null; Maps>
<not found; newHashMap[]; not found; com.puppycrawl.tools.checkstyle.ConfigurationLoader; parsePropertyString[java.lang.String, java.util.List<java.lang.String>, java.util.List<java.lang.String>]; void; null; Maps>
<java.util.Map; keySet[]; java.util.Set<java.lang.String>; com.puppycrawl.tools.checkstyle.DefaultConfiguration; getAttributeNames[]; java.lang.String[]; null; mAttributeMap>
<java.util.Set; toArray[java.lang.String[]]; java.lang.String[]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; getAttributeNames[]; java.lang.String[]; null; keySet>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.DefaultConfiguration; getAttributeNames[]; java.lang.String[]; null; keySet>
<java.util.Map; containsKey[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.DefaultConfiguration; getAttribute[java.lang.String]; java.lang.String; null; mAttributeMap>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.DefaultConfiguration; getAttribute[java.lang.String]; java.lang.String; null; this>
<java.util.Map; get[java.lang.Object]; java.lang.String; com.puppycrawl.tools.checkstyle.DefaultConfiguration; getAttribute[java.lang.String]; java.lang.String; null; mAttributeMap>
<java.util.List; toArray[com.puppycrawl.tools.checkstyle.api.Configuration[]]; com.puppycrawl.tools.checkstyle.api.Configuration[]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; getChildren[]; com.puppycrawl.tools.checkstyle.api.Configuration[]; null; mChildren>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.DefaultConfiguration; getChildren[]; com.puppycrawl.tools.checkstyle.api.Configuration[]; null; mChildren>
<java.util.List; add[com.puppycrawl.tools.checkstyle.api.Configuration]; boolean; com.puppycrawl.tools.checkstyle.DefaultConfiguration; addChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; mChildren>
<java.util.List; remove[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.DefaultConfiguration; removeChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; mChildren>
<java.util.Map; put[java.lang.String, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; null; mAttributeMap>
<java.util.Map; put[java.lang.String, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; null; mAttributeMap>
<java.util.Map; put[java.lang.String, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; null; mAttributeMap>
<java.util.Map; put[java.lang.String, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.DefaultConfiguration; addMessage[java.lang.String, java.lang.String]; void; null; mMessages>
<not found; copyOf[]; not found; com.puppycrawl.tools.checkstyle.DefaultConfiguration; getMessages[]; com.puppycrawl.tools.checkstyle.ImmutableMap<java.lang.String,java.lang.String>; null; ImmutableMap>
<com.puppycrawl.tools.checkstyle.api.FastStack; newInstance[]; com.puppycrawl.tools.checkstyle.api.FastStack<java.lang.String>; com.puppycrawl.tools.checkstyle.DefaultConfiguration; getMessages[]; com.puppycrawl.tools.checkstyle.ImmutableMap<java.lang.String,java.lang.String>; null; FastStack>
<not found; newLinkedHashSet[]; not found; com.puppycrawl.tools.checkstyle.DefaultConfiguration; getMessages[]; com.puppycrawl.tools.checkstyle.ImmutableMap<java.lang.String,java.lang.String>; null; Sets>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.PackageNamesLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; "package">
<org.xml.sax.Attributes; getValue[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.PackageNamesLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; aAtts>
<com.puppycrawl.tools.checkstyle.api.FastStack; push[java.lang.String]; void; com.puppycrawl.tools.checkstyle.PackageNamesLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; mPackageStack>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.PackageNamesLoader; getPackageName[]; java.lang.String; null; buf>
<java.lang.String; endsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.PackageNamesLoader; getPackageName[]; java.lang.String; null; subPackage>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.PackageNamesLoader; getPackageName[]; java.lang.String; null; buf>
<java.lang.StringBuffer; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.PackageNamesLoader; getPackageName[]; java.lang.String; null; buf>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.PackageNamesLoader; endElement[java.lang.String, java.lang.String, java.lang.String]; void; null; "package">
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.PackageNamesLoader; endElement[java.lang.String, java.lang.String, java.lang.String]; void; null; mPackageNames>
<com.puppycrawl.tools.checkstyle.PackageNamesLoader; getPackageName[]; java.lang.String; com.puppycrawl.tools.checkstyle.PackageNamesLoader; endElement[java.lang.String, java.lang.String, java.lang.String]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FastStack; pop[]; java.lang.String; com.puppycrawl.tools.checkstyle.PackageNamesLoader; endElement[java.lang.String, java.lang.String, java.lang.String]; void; null; mPackageStack>
<java.lang.ClassLoader; getResources[java.lang.String]; java.util.Enumeration<java.net.URL>; com.puppycrawl.tools.checkstyle.PackageNamesLoader; getPackageNames[java.lang.ClassLoader]; java.util.Set<java.lang.String>; null; aClassLoader>
<com.puppycrawl.tools.checkstyle.PackageNamesLoader; newPackageNamesLoader[]; com.puppycrawl.tools.checkstyle.PackageNamesLoader; com.puppycrawl.tools.checkstyle.PackageNamesLoader; getPackageNames[java.lang.ClassLoader]; java.util.Set<java.lang.String>; null; this>
<java.util.Enumeration; hasMoreElements[]; boolean; com.puppycrawl.tools.checkstyle.PackageNamesLoader; getPackageNames[java.lang.ClassLoader]; java.util.Set<java.lang.String>; null; packageFiles>
<java.util.Enumeration; nextElement[]; java.net.URL; com.puppycrawl.tools.checkstyle.PackageNamesLoader; getPackageNames[java.lang.ClassLoader]; java.util.Set<java.lang.String>; null; packageFiles>
<java.net.URL; openStream[]; java.io.InputStream; com.puppycrawl.tools.checkstyle.PackageNamesLoader; getPackageNames[java.lang.ClassLoader]; java.util.Set<java.lang.String>; null; aPackageFile>
<com.puppycrawl.tools.checkstyle.PackageNamesLoader; loadPackageNamesSource[org.xml.sax.InputSource, java.lang.String, com.puppycrawl.tools.checkstyle.PackageNamesLoader]; void; com.puppycrawl.tools.checkstyle.PackageNamesLoader; getPackageNames[java.lang.ClassLoader]; java.util.Set<java.lang.String>; null; this>
<com.puppycrawl.tools.checkstyle.api.Utils; closeQuietly[java.io.Closeable]; void; com.puppycrawl.tools.checkstyle.PackageNamesLoader; getPackageNames[java.lang.ClassLoader]; java.util.Set<java.lang.String>; null; Utils>
<com.puppycrawl.tools.checkstyle.PackageNamesLoader; getPackageNames[]; java.util.Set<java.lang.String>; com.puppycrawl.tools.checkstyle.PackageNamesLoader; getPackageNames[java.lang.ClassLoader]; java.util.Set<java.lang.String>; null; namesLoader>
<org.xml.sax.SAXException; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.PackageNamesLoader; newPackageNamesLoader[]; com.puppycrawl.tools.checkstyle.PackageNamesLoader; null; e>
<com.puppycrawl.tools.checkstyle.api.AbstractLoader; parseInputSource[org.xml.sax.InputSource]; void; com.puppycrawl.tools.checkstyle.PackageNamesLoader; loadPackageNamesSource[org.xml.sax.InputSource, java.lang.String, com.puppycrawl.tools.checkstyle.PackageNamesLoader]; void; null; aNameLoader>
<org.xml.sax.SAXException; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.PackageNamesLoader; loadPackageNamesSource[org.xml.sax.InputSource, java.lang.String, com.puppycrawl.tools.checkstyle.PackageNamesLoader]; void; null; e>
<not found; create[]; not found; com.puppycrawl.tools.checkstyle.grammars.CommentListener; reportBlockComment[java.lang.String, int, int, int, int]; void; null; HashMultimap>
<not found; newHashSet[]; not found; com.puppycrawl.tools.checkstyle.grammars.CommentListener; reportBlockComment[java.lang.String, int, int, int, int]; void; null; Sets>
<not found; getLog[]; not found; com.puppycrawl.tools.checkstyle.grammars.CommentListener; reportBlockComment[java.lang.String, int, int, int, int]; void; null; LogFactory>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; setFileExtensions[java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.TreeWalker; TreeWalker[]; void; null; this>
<java.lang.System; getProperty[java.lang.String, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.TreeWalker; TreeWalker[]; void; null; System>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.TreeWalker; TreeWalker[]; void; null; "true">
<not found; debug[]; not found; com.puppycrawl.tools.checkstyle.TreeWalker; TreeWalker[]; void; null; LOG>
<not found; debug[]; not found; com.puppycrawl.tools.checkstyle.TreeWalker; TreeWalker[]; void; null; LOG>
<com.puppycrawl.tools.checkstyle.api.AutomaticBean; getConfiguration[]; com.puppycrawl.tools.checkstyle.api.Configuration; com.puppycrawl.tools.checkstyle.TreeWalker; setCacheFile[java.lang.String]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultContext; add[java.lang.String, java.lang.Object]; void; com.puppycrawl.tools.checkstyle.TreeWalker; finishLocalSetup[]; void; null; checkContext>
<com.puppycrawl.tools.checkstyle.DefaultContext; add[java.lang.String, java.lang.Object]; void; com.puppycrawl.tools.checkstyle.TreeWalker; finishLocalSetup[]; void; null; checkContext>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; getMessageCollector[]; com.puppycrawl.tools.checkstyle.api.LocalizedMessages; com.puppycrawl.tools.checkstyle.TreeWalker; finishLocalSetup[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultContext; add[java.lang.String, java.lang.Object]; void; com.puppycrawl.tools.checkstyle.TreeWalker; finishLocalSetup[]; void; null; checkContext>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; getSeverity[]; java.lang.String; com.puppycrawl.tools.checkstyle.TreeWalker; finishLocalSetup[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultContext; add[java.lang.String, java.lang.Object]; void; com.puppycrawl.tools.checkstyle.TreeWalker; finishLocalSetup[]; void; null; checkContext>
<java.lang.String; valueOf[int]; java.lang.String; com.puppycrawl.tools.checkstyle.TreeWalker; finishLocalSetup[]; void; null; String>
<com.puppycrawl.tools.checkstyle.api.Configuration; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.TreeWalker; setupChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; aChildConf>
<com.puppycrawl.tools.checkstyle.ModuleFactory; createModule[java.lang.String]; java.lang.Object; com.puppycrawl.tools.checkstyle.TreeWalker; setupChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; mModuleFactory>
<com.puppycrawl.tools.checkstyle.api.AutomaticBean; contextualize[com.puppycrawl.tools.checkstyle.api.Context]; void; com.puppycrawl.tools.checkstyle.TreeWalker; setupChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; c>
<com.puppycrawl.tools.checkstyle.api.AutomaticBean; configure[com.puppycrawl.tools.checkstyle.api.Configuration]; void; com.puppycrawl.tools.checkstyle.TreeWalker; setupChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; c>
<com.puppycrawl.tools.checkstyle.api.Check; init[]; void; com.puppycrawl.tools.checkstyle.TreeWalker; setupChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; c>
<com.puppycrawl.tools.checkstyle.TreeWalker; registerCheck[com.puppycrawl.tools.checkstyle.api.Check]; void; com.puppycrawl.tools.checkstyle.TreeWalker; setupChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; this>
<java.io.File; getPath[]; java.lang.String; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; aFile>
<java.io.File; lastModified[]; long; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; aFile>
<com.puppycrawl.tools.checkstyle.PropertyCacheFile; alreadyChecked[java.lang.String, long]; boolean; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; mCache>
<com.puppycrawl.tools.checkstyle.api.FileText; fromLines[java.io.File, java.util.List<java.lang.String>]; com.puppycrawl.tools.checkstyle.api.FileText; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; FileText>
<com.puppycrawl.tools.checkstyle.TreeWalker; parse[com.puppycrawl.tools.checkstyle.api.FileContents]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; TreeWalker>
<com.puppycrawl.tools.checkstyle.TreeWalker; walk[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.FileContents]; void; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; this>
<not found; debug[]; not found; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; Utils.getExceptionLogger()>
<com.puppycrawl.tools.checkstyle.api.Utils; getExceptionLogger[]; com.puppycrawl.tools.checkstyle.api.Log; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; debug[]; Utils>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessages; add[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; void; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; getMessageCollector()>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; getMessageCollector[]; com.puppycrawl.tools.checkstyle.api.LocalizedMessages; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; add[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; this>
<not found; getLine[]; not found; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; re>
<not found; getColumn[]; not found; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; re>
<not found; getMessage[]; not found; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; re>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; getId[]; java.lang.String; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; this>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.TreeWalker>; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; this>
<not found; debug[]; not found; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; Utils.getExceptionLogger()>
<com.puppycrawl.tools.checkstyle.api.Utils; getExceptionLogger[]; com.puppycrawl.tools.checkstyle.api.Log; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; debug[]; Utils>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessages; add[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; void; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; getMessageCollector()>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; getMessageCollector[]; com.puppycrawl.tools.checkstyle.api.LocalizedMessages; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; add[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; this>
<not found; getLine[]; not found; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; re>
<not found; getColumn[]; not found; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; re>
<not found; getMessage[]; not found; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; re>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; getId[]; java.lang.String; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; this>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.TreeWalker>; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessages; add[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; void; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; getMessageCollector()>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; getMessageCollector[]; com.puppycrawl.tools.checkstyle.api.LocalizedMessages; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; add[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; this>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; getId[]; java.lang.String; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; this>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.TreeWalker>; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; this>
<not found; debug[]; not found; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; Utils.getExceptionLogger()>
<com.puppycrawl.tools.checkstyle.api.Utils; getExceptionLogger[]; com.puppycrawl.tools.checkstyle.api.Log; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; debug[]; Utils>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessages; add[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; void; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; getMessageCollector()>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; getMessageCollector[]; com.puppycrawl.tools.checkstyle.api.LocalizedMessages; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; add[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; this>
<not found; getMessage[]; not found; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; te>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; getId[]; java.lang.String; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; this>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.TreeWalker>; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; this>
<not found; debug[]; not found; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; Utils.getExceptionLogger()>
<com.puppycrawl.tools.checkstyle.api.Utils; getExceptionLogger[]; com.puppycrawl.tools.checkstyle.api.Log; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; debug[]; Utils>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessages; add[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; void; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; getMessageCollector()>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; getMessageCollector[]; com.puppycrawl.tools.checkstyle.api.LocalizedMessages; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; add[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; this>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; getId[]; java.lang.String; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; this>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.TreeWalker>; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessages; size[]; int; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; getMessageCollector()>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; getMessageCollector[]; com.puppycrawl.tools.checkstyle.api.LocalizedMessages; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; size[]; this>
<com.puppycrawl.tools.checkstyle.PropertyCacheFile; checkedOk[java.lang.String, long]; void; com.puppycrawl.tools.checkstyle.TreeWalker; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; mCache>
<com.puppycrawl.tools.checkstyle.api.Check; getTokenNames[]; java.util.Set<java.lang.String>; com.puppycrawl.tools.checkstyle.TreeWalker; registerCheck[com.puppycrawl.tools.checkstyle.api.Check]; void; null; aCheck>
<java.util.Set; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.TreeWalker; registerCheck[com.puppycrawl.tools.checkstyle.api.Check]; void; null; checkTokens>
<com.puppycrawl.tools.checkstyle.api.Check; getRequiredTokens[]; int[]; com.puppycrawl.tools.checkstyle.TreeWalker; registerCheck[com.puppycrawl.tools.checkstyle.api.Check]; void; null; aCheck>
<com.puppycrawl.tools.checkstyle.api.Check; getAcceptableTokens[]; int[]; com.puppycrawl.tools.checkstyle.TreeWalker; registerCheck[com.puppycrawl.tools.checkstyle.api.Check]; void; null; aCheck>
<java.util.Arrays; sort[int[]]; void; com.puppycrawl.tools.checkstyle.TreeWalker; registerCheck[com.puppycrawl.tools.checkstyle.api.Check]; void; null; Arrays>
<com.puppycrawl.tools.checkstyle.api.TokenTypes; getTokenId[java.lang.String]; int; com.puppycrawl.tools.checkstyle.TreeWalker; registerCheck[com.puppycrawl.tools.checkstyle.api.Check]; void; null; TokenTypes>
<java.util.Arrays; binarySearch[int[], int]; int; com.puppycrawl.tools.checkstyle.TreeWalker; registerCheck[com.puppycrawl.tools.checkstyle.api.Check]; void; null; Arrays>
<com.puppycrawl.tools.checkstyle.TreeWalker; registerCheck[java.lang.String, com.puppycrawl.tools.checkstyle.api.Check]; void; com.puppycrawl.tools.checkstyle.TreeWalker; registerCheck[com.puppycrawl.tools.checkstyle.api.Check]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; getDefaultTokens[]; int[]; com.puppycrawl.tools.checkstyle.TreeWalker; registerCheck[com.puppycrawl.tools.checkstyle.api.Check]; void; null; aCheck>
<com.puppycrawl.tools.checkstyle.TreeWalker; registerCheck[int, com.puppycrawl.tools.checkstyle.api.Check]; void; com.puppycrawl.tools.checkstyle.TreeWalker; registerCheck[com.puppycrawl.tools.checkstyle.api.Check]; void; null; this>
<java.util.Set; add[com.puppycrawl.tools.checkstyle.api.Check]; boolean; com.puppycrawl.tools.checkstyle.TreeWalker; registerCheck[com.puppycrawl.tools.checkstyle.api.Check]; void; null; mAllChecks>
<com.puppycrawl.tools.checkstyle.TreeWalker; registerCheck[java.lang.String, com.puppycrawl.tools.checkstyle.api.Check]; void; com.puppycrawl.tools.checkstyle.TreeWalker; registerCheck[int, com.puppycrawl.tools.checkstyle.api.Check]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.TokenTypes; getTokenName[int]; java.lang.String; com.puppycrawl.tools.checkstyle.TreeWalker; registerCheck[int, com.puppycrawl.tools.checkstyle.api.Check]; void; null; TokenTypes>
<not found; put[]; not found; com.puppycrawl.tools.checkstyle.TreeWalker; registerCheck[java.lang.String, com.puppycrawl.tools.checkstyle.api.Check]; void; null; mTokenToChecks>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessages; reset[]; void; com.puppycrawl.tools.checkstyle.TreeWalker; walk[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.FileContents]; void; null; getMessageCollector()>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; getMessageCollector[]; com.puppycrawl.tools.checkstyle.api.LocalizedMessages; com.puppycrawl.tools.checkstyle.TreeWalker; walk[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.FileContents]; void; reset[]; this>
<com.puppycrawl.tools.checkstyle.TreeWalker; notifyBegin[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.FileContents]; void; com.puppycrawl.tools.checkstyle.TreeWalker; walk[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.FileContents]; void; null; this>
<com.puppycrawl.tools.checkstyle.TreeWalker; useRecursiveAlgorithm[]; boolean; com.puppycrawl.tools.checkstyle.TreeWalker; walk[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.FileContents]; void; null; this>
<com.puppycrawl.tools.checkstyle.TreeWalker; processRec[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.TreeWalker; walk[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.FileContents]; void; null; this>
<com.puppycrawl.tools.checkstyle.TreeWalker; processIter[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.TreeWalker; walk[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.FileContents]; void; null; this>
<com.puppycrawl.tools.checkstyle.TreeWalker; notifyEnd[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.TreeWalker; walk[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.FileContents]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; setFileContents[com.puppycrawl.tools.checkstyle.api.FileContents]; void; com.puppycrawl.tools.checkstyle.TreeWalker; notifyBegin[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.FileContents]; void; null; ch>
<com.puppycrawl.tools.checkstyle.api.Check; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.TreeWalker; notifyBegin[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.FileContents]; void; null; ch>
<com.puppycrawl.tools.checkstyle.api.Check; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.TreeWalker; notifyEnd[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ch>
<com.puppycrawl.tools.checkstyle.TreeWalker; notifyVisit[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.TreeWalker; processRec[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.TreeWalker; processRec[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.TreeWalker; processRec[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.TreeWalker; processRec[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.TreeWalker; notifyLeave[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.TreeWalker; processRec[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.TreeWalker; processRec[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.TreeWalker; processRec[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.TreeWalker; processRec[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; get[]; not found; com.puppycrawl.tools.checkstyle.TreeWalker; notifyVisit[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mTokenToChecks>
<com.puppycrawl.tools.checkstyle.api.TokenTypes; getTokenName[int]; java.lang.String; com.puppycrawl.tools.checkstyle.TreeWalker; notifyVisit[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; TokenTypes>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.TreeWalker; notifyVisit[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.Check; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.TreeWalker; notifyVisit[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; c>
<not found; get[]; not found; com.puppycrawl.tools.checkstyle.TreeWalker; notifyLeave[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mTokenToChecks>
<com.puppycrawl.tools.checkstyle.api.TokenTypes; getTokenName[int]; java.lang.String; com.puppycrawl.tools.checkstyle.TreeWalker; notifyLeave[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; TokenTypes>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.TreeWalker; notifyLeave[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.Check; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.TreeWalker; notifyLeave[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ch>
<java.lang.CharSequence; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.TreeWalker; parse[com.puppycrawl.tools.checkstyle.api.FileContents]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; aContents.getText().getFullText()>
<com.puppycrawl.tools.checkstyle.api.FileText; getFullText[]; java.lang.CharSequence; com.puppycrawl.tools.checkstyle.TreeWalker; parse[com.puppycrawl.tools.checkstyle.api.FileContents]; com.puppycrawl.tools.checkstyle.api.DetailAST; toString[]; aContents.getText()>
<com.puppycrawl.tools.checkstyle.api.FileContents; getText[]; com.puppycrawl.tools.checkstyle.api.FileText; com.puppycrawl.tools.checkstyle.TreeWalker; parse[com.puppycrawl.tools.checkstyle.api.FileContents]; com.puppycrawl.tools.checkstyle.api.DetailAST; getFullText[]; aContents>
<not found; setFilename[]; not found; com.puppycrawl.tools.checkstyle.TreeWalker; parse[com.puppycrawl.tools.checkstyle.api.FileContents]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; lexer>
<com.puppycrawl.tools.checkstyle.api.FileContents; getFilename[]; java.lang.String; com.puppycrawl.tools.checkstyle.TreeWalker; parse[com.puppycrawl.tools.checkstyle.api.FileContents]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; aContents>
<not found; setCommentListener[]; not found; com.puppycrawl.tools.checkstyle.TreeWalker; parse[com.puppycrawl.tools.checkstyle.api.FileContents]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; lexer>
<not found; setTreatAssertAsKeyword[]; not found; com.puppycrawl.tools.checkstyle.TreeWalker; parse[com.puppycrawl.tools.checkstyle.api.FileContents]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; lexer>
<not found; setTreatEnumAsKeyword[]; not found; com.puppycrawl.tools.checkstyle.TreeWalker; parse[com.puppycrawl.tools.checkstyle.api.FileContents]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; lexer>
<not found; setFilename[]; not found; com.puppycrawl.tools.checkstyle.TreeWalker; parse[com.puppycrawl.tools.checkstyle.api.FileContents]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; parser>
<com.puppycrawl.tools.checkstyle.api.FileContents; getFilename[]; java.lang.String; com.puppycrawl.tools.checkstyle.TreeWalker; parse[com.puppycrawl.tools.checkstyle.api.FileContents]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; aContents>
<not found; setASTNodeClass[]; not found; com.puppycrawl.tools.checkstyle.TreeWalker; parse[com.puppycrawl.tools.checkstyle.api.FileContents]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; parser>
<java.lang.Class; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.TreeWalker; parse[com.puppycrawl.tools.checkstyle.api.FileContents]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; DetailAST.class>
<not found; compilationUnit[]; not found; com.puppycrawl.tools.checkstyle.TreeWalker; parse[com.puppycrawl.tools.checkstyle.api.FileContents]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; parser>
<not found; getAST[]; not found; com.puppycrawl.tools.checkstyle.TreeWalker; parse[com.puppycrawl.tools.checkstyle.api.FileContents]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; parser>
<com.puppycrawl.tools.checkstyle.api.Check; destroy[]; void; com.puppycrawl.tools.checkstyle.TreeWalker; destroy[]; void; null; c>
<com.puppycrawl.tools.checkstyle.PropertyCacheFile; destroy[]; void; com.puppycrawl.tools.checkstyle.TreeWalker; destroy[]; void; null; mCache>
<com.puppycrawl.tools.checkstyle.TreeWalker; notifyVisit[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.TreeWalker; processIter[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.TreeWalker; processIter[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; curNode>
<com.puppycrawl.tools.checkstyle.TreeWalker; notifyLeave[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.TreeWalker; processIter[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.TreeWalker; processIter[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; curNode>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.TreeWalker; processIter[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; curNode>
<not found; newArrayList[]; not found; com.puppycrawl.tools.checkstyle.TreeWalker; processIter[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Lists>
<not found; newArrayList[]; not found; com.puppycrawl.tools.checkstyle.TreeWalker; processIter[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Lists>
<java.lang.Thread; getContextClassLoader[]; java.lang.ClassLoader; com.puppycrawl.tools.checkstyle.TreeWalker; processIter[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Thread.currentThread()>
<java.lang.Thread; currentThread[]; java.lang.Thread; com.puppycrawl.tools.checkstyle.TreeWalker; processIter[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getContextClassLoader[]; Thread>
<java.util.Locale; getCountry[]; java.lang.String; com.puppycrawl.tools.checkstyle.TreeWalker; processIter[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Locale.getDefault()>
<java.util.Locale; getDefault[]; java.util.Locale; com.puppycrawl.tools.checkstyle.TreeWalker; processIter[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getCountry[]; Locale>
<java.util.Locale; getLanguage[]; java.lang.String; com.puppycrawl.tools.checkstyle.TreeWalker; processIter[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Locale.getDefault()>
<java.util.Locale; getDefault[]; java.util.Locale; com.puppycrawl.tools.checkstyle.TreeWalker; processIter[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getLanguage[]; Locale>
<java.lang.System; getProperty[java.lang.String, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.TreeWalker; processIter[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; System>
<com.puppycrawl.tools.checkstyle.Checker; addListener[com.puppycrawl.tools.checkstyle.api.AuditListener]; void; com.puppycrawl.tools.checkstyle.Checker; Checker[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessage; setLocale[java.util.Locale]; void; com.puppycrawl.tools.checkstyle.Checker; finishLocalSetup[]; void; null; LocalizedMessage>
<com.puppycrawl.tools.checkstyle.PackageNamesLoader; getPackageNames[java.lang.ClassLoader]; java.util.Set<java.lang.String>; com.puppycrawl.tools.checkstyle.Checker; finishLocalSetup[]; void; null; PackageNamesLoader>
<com.puppycrawl.tools.checkstyle.DefaultContext; add[java.lang.String, java.lang.Object]; void; com.puppycrawl.tools.checkstyle.Checker; finishLocalSetup[]; void; null; context>
<com.puppycrawl.tools.checkstyle.DefaultContext; add[java.lang.String, java.lang.Object]; void; com.puppycrawl.tools.checkstyle.Checker; finishLocalSetup[]; void; null; context>
<com.puppycrawl.tools.checkstyle.DefaultContext; add[java.lang.String, java.lang.Object]; void; com.puppycrawl.tools.checkstyle.Checker; finishLocalSetup[]; void; null; context>
<com.puppycrawl.tools.checkstyle.DefaultContext; add[java.lang.String, java.lang.Object]; void; com.puppycrawl.tools.checkstyle.Checker; finishLocalSetup[]; void; null; context>
<com.puppycrawl.tools.checkstyle.api.SeverityLevel; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.Checker; finishLocalSetup[]; void; null; mSeverityLevel>
<com.puppycrawl.tools.checkstyle.DefaultContext; add[java.lang.String, java.lang.Object]; void; com.puppycrawl.tools.checkstyle.Checker; finishLocalSetup[]; void; null; context>
<com.puppycrawl.tools.checkstyle.api.Configuration; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.Checker; setupChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; aChildConf>
<com.puppycrawl.tools.checkstyle.ModuleFactory; createModule[java.lang.String]; java.lang.Object; com.puppycrawl.tools.checkstyle.Checker; setupChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; mModuleFactory>
<com.puppycrawl.tools.checkstyle.api.AutomaticBean; contextualize[com.puppycrawl.tools.checkstyle.api.Context]; void; com.puppycrawl.tools.checkstyle.Checker; setupChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; bean>
<com.puppycrawl.tools.checkstyle.api.AutomaticBean; configure[com.puppycrawl.tools.checkstyle.api.Configuration]; void; com.puppycrawl.tools.checkstyle.Checker; setupChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; bean>
<com.puppycrawl.tools.checkstyle.Checker; addFileSetCheck[com.puppycrawl.tools.checkstyle.api.FileSetCheck]; void; com.puppycrawl.tools.checkstyle.Checker; setupChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; this>
<com.puppycrawl.tools.checkstyle.Checker; addFilter[com.puppycrawl.tools.checkstyle.api.Filter]; void; com.puppycrawl.tools.checkstyle.Checker; setupChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; this>
<com.puppycrawl.tools.checkstyle.Checker; addListener[com.puppycrawl.tools.checkstyle.api.AuditListener]; void; com.puppycrawl.tools.checkstyle.Checker; setupChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; this>
<java.lang.Throwable; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.Checker; setupChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; ex>
<com.puppycrawl.tools.checkstyle.api.FileSetCheck; setMessageDispatcher[com.puppycrawl.tools.checkstyle.api.MessageDispatcher]; void; com.puppycrawl.tools.checkstyle.Checker; addFileSetCheck[com.puppycrawl.tools.checkstyle.api.FileSetCheck]; void; null; aFileSetCheck>
<java.util.List; add[com.puppycrawl.tools.checkstyle.api.FileSetCheck]; boolean; com.puppycrawl.tools.checkstyle.Checker; addFileSetCheck[com.puppycrawl.tools.checkstyle.api.FileSetCheck]; void; null; mFileSetChecks>
<com.puppycrawl.tools.checkstyle.api.FilterSet; addFilter[com.puppycrawl.tools.checkstyle.api.Filter]; void; com.puppycrawl.tools.checkstyle.Checker; addFilter[com.puppycrawl.tools.checkstyle.api.Filter]; void; null; mFilters>
<com.puppycrawl.tools.checkstyle.api.FilterSet; removeFilter[com.puppycrawl.tools.checkstyle.api.Filter]; void; com.puppycrawl.tools.checkstyle.Checker; removeFilter[com.puppycrawl.tools.checkstyle.api.Filter]; void; null; mFilters>
<java.util.List; clear[]; void; com.puppycrawl.tools.checkstyle.Checker; destroy[]; void; null; mListeners>
<com.puppycrawl.tools.checkstyle.api.FilterSet; clear[]; void; com.puppycrawl.tools.checkstyle.Checker; destroy[]; void; null; mFilters>
<java.util.List; add[com.puppycrawl.tools.checkstyle.api.AuditListener]; boolean; com.puppycrawl.tools.checkstyle.Checker; addListener[com.puppycrawl.tools.checkstyle.api.AuditListener]; void; null; mListeners>
<java.util.List; remove[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.Checker; removeListener[com.puppycrawl.tools.checkstyle.api.AuditListener]; void; null; mListeners>
<com.puppycrawl.tools.checkstyle.Checker; fireAuditStarted[]; void; com.puppycrawl.tools.checkstyle.Checker; process[java.util.List<java.io.File>]; int; null; this>
<com.puppycrawl.tools.checkstyle.api.FileSetCheck; beginProcessing[java.lang.String]; void; com.puppycrawl.tools.checkstyle.Checker; process[java.util.List<java.io.File>]; int; null; fsc>
<java.io.File; getAbsolutePath[]; java.lang.String; com.puppycrawl.tools.checkstyle.Checker; process[java.util.List<java.io.File>]; int; null; f>
<com.puppycrawl.tools.checkstyle.Checker; fireFileStarted[java.lang.String]; void; com.puppycrawl.tools.checkstyle.Checker; process[java.util.List<java.io.File>]; int; null; this>
<not found; newTreeSet[]; not found; com.puppycrawl.tools.checkstyle.Checker; process[java.util.List<java.io.File>]; int; null; Sets>
<java.io.File; getAbsoluteFile[]; java.io.File; com.puppycrawl.tools.checkstyle.Checker; process[java.util.List<java.io.File>]; int; null; f>
<java.util.TreeSet; addAll[java.util.Collection<? extends com.puppycrawl.tools.checkstyle.api.LocalizedMessage>]; boolean; com.puppycrawl.tools.checkstyle.Checker; process[java.util.List<java.io.File>]; int; null; fileMessages>
<com.puppycrawl.tools.checkstyle.api.FileSetCheck; process[java.io.File, java.util.List<java.lang.String>]; java.util.TreeSet<com.puppycrawl.tools.checkstyle.api.LocalizedMessage>; com.puppycrawl.tools.checkstyle.Checker; process[java.util.List<java.io.File>]; int; null; fsc>
<not found; debug[]; not found; com.puppycrawl.tools.checkstyle.Checker; process[java.util.List<java.io.File>]; int; null; Utils.getExceptionLogger()>
<com.puppycrawl.tools.checkstyle.api.Utils; getExceptionLogger[]; com.puppycrawl.tools.checkstyle.api.Log; com.puppycrawl.tools.checkstyle.Checker; process[java.util.List<java.io.File>]; int; debug[]; Utils>
<java.util.TreeSet; add[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; boolean; com.puppycrawl.tools.checkstyle.Checker; process[java.util.List<java.io.File>]; int; null; fileMessages>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.Checker>; com.puppycrawl.tools.checkstyle.Checker; process[java.util.List<java.io.File>]; int; null; this>
<not found; debug[]; not found; com.puppycrawl.tools.checkstyle.Checker; process[java.util.List<java.io.File>]; int; null; Utils.getExceptionLogger()>
<com.puppycrawl.tools.checkstyle.api.Utils; getExceptionLogger[]; com.puppycrawl.tools.checkstyle.api.Log; com.puppycrawl.tools.checkstyle.Checker; process[java.util.List<java.io.File>]; int; debug[]; Utils>
<java.util.TreeSet; add[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; boolean; com.puppycrawl.tools.checkstyle.Checker; process[java.util.List<java.io.File>]; int; null; fileMessages>
<java.lang.Throwable; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.Checker; process[java.util.List<java.io.File>]; int; null; ioe>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.Checker>; com.puppycrawl.tools.checkstyle.Checker; process[java.util.List<java.io.File>]; int; null; this>
<com.puppycrawl.tools.checkstyle.Checker; fireErrors[java.lang.String, java.util.TreeSet<com.puppycrawl.tools.checkstyle.api.LocalizedMessage>]; void; com.puppycrawl.tools.checkstyle.Checker; process[java.util.List<java.io.File>]; int; null; this>
<com.puppycrawl.tools.checkstyle.Checker; fireFileFinished[java.lang.String]; void; com.puppycrawl.tools.checkstyle.Checker; process[java.util.List<java.io.File>]; int; null; this>
<com.puppycrawl.tools.checkstyle.api.FileSetCheck; finishProcessing[]; void; com.puppycrawl.tools.checkstyle.Checker; process[java.util.List<java.io.File>]; int; null; fsc>
<com.puppycrawl.tools.checkstyle.api.FileSetCheck; destroy[]; void; com.puppycrawl.tools.checkstyle.Checker; process[java.util.List<java.io.File>]; int; null; fsc>
<com.puppycrawl.tools.checkstyle.api.SeverityLevelCounter; getCount[]; int; com.puppycrawl.tools.checkstyle.Checker; process[java.util.List<java.io.File>]; int; null; mCounter>
<com.puppycrawl.tools.checkstyle.Checker; fireAuditFinished[]; void; com.puppycrawl.tools.checkstyle.Checker; process[java.util.List<java.io.File>]; int; null; this>
<com.puppycrawl.tools.checkstyle.api.Utils; getStrippedFileName[java.lang.String, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.Checker; getStrippedFileName[java.lang.String]; java.lang.String; null; Utils>
<com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.Checker; setBasedir[java.lang.String]; void; null; this>
<java.lang.String; toLowerCase[java.util.Locale]; java.lang.String; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; System.getProperty("os.name")>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; toLowerCase[java.util.Locale]; System>
<java.lang.String; indexOf[java.lang.String]; int; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; osName>
<java.lang.String; replace[char, char]; java.lang.String; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; aPath.replace('/',File.separatorChar)>
<java.lang.String; replace[char, char]; java.lang.String; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; replace[char, char]; aPath>
<java.lang.String; indexOf[java.lang.String]; int; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; path>
<java.lang.String; startsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; path>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; path>
<java.lang.Character; isLetter[char]; boolean; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; Character>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; path>
<java.lang.String; startsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; path>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; path>
<java.lang.Character; isLetter[char]; boolean; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; Character>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; path>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; path>
<java.lang.String; toCharArray[]; char[]; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; path.replace('/','\\')>
<java.lang.String; replace[char, char]; java.lang.String; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; toCharArray[]; path>
<java.lang.StringBuffer; append[char]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; sbRoot>
<java.lang.Character; toUpperCase[char]; char; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; Character>
<java.lang.StringBuffer; append[char]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; sbRoot>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; path>
<java.lang.StringBuffer; append[char]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; sbRoot>
<java.lang.StringBuffer; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; sbRoot>
<java.lang.StringBuffer; append[char]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; sbPath>
<java.lang.String; replace[char, char]; java.lang.String; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; sbPath.toString()>
<java.lang.StringBuffer; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; replace[char, char]; sbPath>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; path>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; path>
<java.lang.String; substring[int]; java.lang.String; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; path>
<java.lang.String; substring[int]; java.lang.String; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; path>
<com.puppycrawl.tools.checkstyle.api.FastStack; newInstance[]; com.puppycrawl.tools.checkstyle.api.FastStack<java.lang.String>; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; FastStack>
<com.puppycrawl.tools.checkstyle.api.FastStack; push[java.lang.String]; void; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; s>
<java.util.StringTokenizer; hasMoreTokens[]; boolean; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; tok>
<java.util.StringTokenizer; nextToken[]; java.lang.String; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; tok>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; ".">
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; "..">
<com.puppycrawl.tools.checkstyle.api.FastStack; size[]; int; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; s>
<com.puppycrawl.tools.checkstyle.api.FastStack; pop[]; java.lang.String; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; s>
<com.puppycrawl.tools.checkstyle.api.FastStack; push[java.lang.String]; void; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; s>
<com.puppycrawl.tools.checkstyle.api.FastStack; size[]; int; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; s>
<java.lang.StringBuffer; append[char]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; sb>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; sb>
<com.puppycrawl.tools.checkstyle.api.FastStack; peek[int]; java.lang.String; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; s>
<java.lang.StringBuffer; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; sb>
<java.lang.String; replace[char, char]; java.lang.String; com.puppycrawl.tools.checkstyle.Checker; normalize[java.lang.String]; java.lang.String; null; path>
<com.puppycrawl.tools.checkstyle.api.AuditListener; auditStarted[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; com.puppycrawl.tools.checkstyle.Checker; fireAuditStarted[]; void; null; listener>
<com.puppycrawl.tools.checkstyle.api.AuditListener; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; com.puppycrawl.tools.checkstyle.Checker; fireAuditFinished[]; void; null; listener>
<com.puppycrawl.tools.checkstyle.Checker; getStrippedFileName[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.Checker; fireFileStarted[java.lang.String]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AuditListener; fileStarted[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; com.puppycrawl.tools.checkstyle.Checker; fireFileStarted[java.lang.String]; void; null; listener>
<com.puppycrawl.tools.checkstyle.Checker; getStrippedFileName[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.Checker; fireFileFinished[java.lang.String]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AuditListener; fileFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; com.puppycrawl.tools.checkstyle.Checker; fireFileFinished[java.lang.String]; void; null; listener>
<com.puppycrawl.tools.checkstyle.Checker; getStrippedFileName[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.Checker; fireErrors[java.lang.String, java.util.TreeSet<com.puppycrawl.tools.checkstyle.api.LocalizedMessage>]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FilterSet; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; com.puppycrawl.tools.checkstyle.Checker; fireErrors[java.lang.String, java.util.TreeSet<com.puppycrawl.tools.checkstyle.api.LocalizedMessage>]; void; null; mFilters>
<com.puppycrawl.tools.checkstyle.api.AuditListener; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; com.puppycrawl.tools.checkstyle.Checker; fireErrors[java.lang.String, java.util.TreeSet<com.puppycrawl.tools.checkstyle.api.LocalizedMessage>]; void; null; listener>
<com.puppycrawl.tools.checkstyle.api.SeverityLevel; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.SeverityLevel; com.puppycrawl.tools.checkstyle.Checker; setSeverity[java.lang.String]; void; null; SeverityLevel>
<java.nio.charset.Charset; isSupported[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.Checker; setCharset[java.lang.String]; void; null; Charset>
<not found; addOption[]; not found; com.puppycrawl.tools.checkstyle.Checker; setCharset[java.lang.String]; void; null; OPTS>
<not found; addOption[]; not found; com.puppycrawl.tools.checkstyle.Checker; setCharset[java.lang.String]; void; null; OPTS>
<not found; addOption[]; not found; com.puppycrawl.tools.checkstyle.Checker; setCharset[java.lang.String]; void; null; OPTS>
<not found; addOption[]; not found; com.puppycrawl.tools.checkstyle.Checker; setCharset[java.lang.String]; void; null; OPTS>
<not found; addOption[]; not found; com.puppycrawl.tools.checkstyle.Checker; setCharset[java.lang.String]; void; null; OPTS>
<not found; parse[]; not found; com.puppycrawl.tools.checkstyle.Main; main[java.lang.String[]]; void; null; clp>
<not found; printStackTrace[]; not found; com.puppycrawl.tools.checkstyle.Main; main[java.lang.String[]]; void; null; e>
<com.puppycrawl.tools.checkstyle.Main; usage[]; void; com.puppycrawl.tools.checkstyle.Main; main[java.lang.String[]]; void; null; this>
<not found; hasOption[]; not found; com.puppycrawl.tools.checkstyle.Main; main[java.lang.String[]]; void; null; line>
<com.puppycrawl.tools.checkstyle.Main; loadProperties[java.io.File]; java.util.Properties; com.puppycrawl.tools.checkstyle.Main; main[java.lang.String[]]; void; null; this>
<not found; getOptionValue[]; not found; com.puppycrawl.tools.checkstyle.Main; main[java.lang.String[]]; void; null; line>
<java.lang.System; getProperties[]; java.util.Properties; com.puppycrawl.tools.checkstyle.Main; main[java.lang.String[]]; void; null; System>
<not found; hasOption[]; not found; com.puppycrawl.tools.checkstyle.Main; main[java.lang.String[]]; void; null; line>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.Main; main[java.lang.String[]]; void; null; System.out>
<com.puppycrawl.tools.checkstyle.Main; usage[]; void; com.puppycrawl.tools.checkstyle.Main; main[java.lang.String[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.Main; loadConfig[com.puppycrawl.tools.checkstyle.CommandLine, java.util.Properties]; com.puppycrawl.tools.checkstyle.api.Configuration; com.puppycrawl.tools.checkstyle.Main; main[java.lang.String[]]; void; null; this>
<not found; hasOption[]; not found; com.puppycrawl.tools.checkstyle.Main; main[java.lang.String[]]; void; null; line>
<not found; getOptionValue[]; not found; com.puppycrawl.tools.checkstyle.Main; main[java.lang.String[]]; void; null; line>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.Main; main[java.lang.String[]]; void; null; System.out>
<java.lang.System; exit[int]; void; com.puppycrawl.tools.checkstyle.Main; main[java.lang.String[]]; void; null; System>
<com.puppycrawl.tools.checkstyle.Main; createListener[com.puppycrawl.tools.checkstyle.CommandLine, java.io.OutputStream, boolean]; com.puppycrawl.tools.checkstyle.api.AuditListener; com.puppycrawl.tools.checkstyle.Main; main[java.lang.String[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.Main; getFilesToProcess[com.puppycrawl.tools.checkstyle.CommandLine]; java.util.List<java.io.File>; com.puppycrawl.tools.checkstyle.Main; main[java.lang.String[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.Main; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration, com.puppycrawl.tools.checkstyle.api.AuditListener]; com.puppycrawl.tools.checkstyle.Checker; com.puppycrawl.tools.checkstyle.Main; main[java.lang.String[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.Checker; process[java.util.List<java.io.File>]; int; com.puppycrawl.tools.checkstyle.Main; main[java.lang.String[]]; void; null; c>
<com.puppycrawl.tools.checkstyle.Checker; destroy[]; void; com.puppycrawl.tools.checkstyle.Main; main[java.lang.String[]]; void; null; c>
<java.lang.System; exit[int]; void; com.puppycrawl.tools.checkstyle.Main; main[java.lang.String[]]; void; null; System>
<java.lang.Class; getClassLoader[]; java.lang.ClassLoader; com.puppycrawl.tools.checkstyle.Main; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration, com.puppycrawl.tools.checkstyle.api.AuditListener]; com.puppycrawl.tools.checkstyle.Checker; null; Checker.class>
<com.puppycrawl.tools.checkstyle.Checker; setModuleClassLoader[java.lang.ClassLoader]; void; com.puppycrawl.tools.checkstyle.Main; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration, com.puppycrawl.tools.checkstyle.api.AuditListener]; com.puppycrawl.tools.checkstyle.Checker; null; c>
<com.puppycrawl.tools.checkstyle.api.AutomaticBean; configure[com.puppycrawl.tools.checkstyle.api.Configuration]; void; com.puppycrawl.tools.checkstyle.Main; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration, com.puppycrawl.tools.checkstyle.api.AuditListener]; com.puppycrawl.tools.checkstyle.Checker; null; c>
<com.puppycrawl.tools.checkstyle.Checker; addListener[com.puppycrawl.tools.checkstyle.api.AuditListener]; void; com.puppycrawl.tools.checkstyle.Main; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration, com.puppycrawl.tools.checkstyle.api.AuditListener]; com.puppycrawl.tools.checkstyle.Checker; null; c>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.Main; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration, com.puppycrawl.tools.checkstyle.api.AuditListener]; com.puppycrawl.tools.checkstyle.Checker; null; System.out>
<java.lang.Throwable; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.Main; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration, com.puppycrawl.tools.checkstyle.api.AuditListener]; com.puppycrawl.tools.checkstyle.Checker; null; e>
<java.lang.Throwable; printStackTrace[java.io.PrintStream]; void; com.puppycrawl.tools.checkstyle.Main; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration, com.puppycrawl.tools.checkstyle.api.AuditListener]; com.puppycrawl.tools.checkstyle.Checker; null; e>
<java.lang.System; exit[int]; void; com.puppycrawl.tools.checkstyle.Main; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration, com.puppycrawl.tools.checkstyle.api.AuditListener]; com.puppycrawl.tools.checkstyle.Checker; null; System>
<not found; newLinkedList[]; not found; com.puppycrawl.tools.checkstyle.Main; getFilesToProcess[com.puppycrawl.tools.checkstyle.CommandLine]; java.util.List<java.io.File>; null; Lists>
<not found; hasOption[]; not found; com.puppycrawl.tools.checkstyle.Main; getFilesToProcess[com.puppycrawl.tools.checkstyle.CommandLine]; java.util.List<java.io.File>; null; aLine>
<not found; getOptionValues[]; not found; com.puppycrawl.tools.checkstyle.Main; getFilesToProcess[com.puppycrawl.tools.checkstyle.CommandLine]; java.util.List<java.io.File>; null; aLine>
<com.puppycrawl.tools.checkstyle.Main; traverse[java.io.File, java.util.List<java.io.File>]; void; com.puppycrawl.tools.checkstyle.Main; getFilesToProcess[com.puppycrawl.tools.checkstyle.CommandLine]; java.util.List<java.io.File>; null; this>
<not found; getArgs[]; not found; com.puppycrawl.tools.checkstyle.Main; getFilesToProcess[com.puppycrawl.tools.checkstyle.CommandLine]; java.util.List<java.io.File>; null; aLine>
<java.util.List; add[java.io.File]; boolean; com.puppycrawl.tools.checkstyle.Main; getFilesToProcess[com.puppycrawl.tools.checkstyle.CommandLine]; java.util.List<java.io.File>; null; files>
<java.util.List; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.Main; getFilesToProcess[com.puppycrawl.tools.checkstyle.CommandLine]; java.util.List<java.io.File>; null; files>
<not found; hasOption[]; not found; com.puppycrawl.tools.checkstyle.Main; getFilesToProcess[com.puppycrawl.tools.checkstyle.CommandLine]; java.util.List<java.io.File>; null; aLine>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.Main; getFilesToProcess[com.puppycrawl.tools.checkstyle.CommandLine]; java.util.List<java.io.File>; null; System.out>
<com.puppycrawl.tools.checkstyle.Main; usage[]; void; com.puppycrawl.tools.checkstyle.Main; getFilesToProcess[com.puppycrawl.tools.checkstyle.CommandLine]; java.util.List<java.io.File>; null; this>
<not found; hasOption[]; not found; com.puppycrawl.tools.checkstyle.Main; createListener[com.puppycrawl.tools.checkstyle.CommandLine, java.io.OutputStream, boolean]; com.puppycrawl.tools.checkstyle.api.AuditListener; null; aLine>
<not found; getOptionValue[]; not found; com.puppycrawl.tools.checkstyle.Main; createListener[com.puppycrawl.tools.checkstyle.CommandLine, java.io.OutputStream, boolean]; com.puppycrawl.tools.checkstyle.api.AuditListener; null; aLine>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.Main; createListener[com.puppycrawl.tools.checkstyle.CommandLine, java.io.OutputStream, boolean]; com.puppycrawl.tools.checkstyle.api.AuditListener; null; "xml">
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.Main; createListener[com.puppycrawl.tools.checkstyle.CommandLine, java.io.OutputStream, boolean]; com.puppycrawl.tools.checkstyle.api.AuditListener; null; "plain">
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.Main; createListener[com.puppycrawl.tools.checkstyle.CommandLine, java.io.OutputStream, boolean]; com.puppycrawl.tools.checkstyle.api.AuditListener; null; System.out>
<com.puppycrawl.tools.checkstyle.Main; usage[]; void; com.puppycrawl.tools.checkstyle.Main; createListener[com.puppycrawl.tools.checkstyle.CommandLine, java.io.OutputStream, boolean]; com.puppycrawl.tools.checkstyle.api.AuditListener; null; this>
<com.puppycrawl.tools.checkstyle.ConfigurationLoader; loadConfiguration[java.lang.String, com.puppycrawl.tools.checkstyle.PropertyResolver]; com.puppycrawl.tools.checkstyle.api.Configuration; com.puppycrawl.tools.checkstyle.Main; loadConfig[com.puppycrawl.tools.checkstyle.CommandLine, java.util.Properties]; com.puppycrawl.tools.checkstyle.api.Configuration; null; ConfigurationLoader>
<not found; getOptionValue[]; not found; com.puppycrawl.tools.checkstyle.Main; loadConfig[com.puppycrawl.tools.checkstyle.CommandLine, java.util.Properties]; com.puppycrawl.tools.checkstyle.api.Configuration; null; aLine>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.Main; loadConfig[com.puppycrawl.tools.checkstyle.CommandLine, java.util.Properties]; com.puppycrawl.tools.checkstyle.api.Configuration; null; System.out>
<java.lang.Throwable; printStackTrace[java.io.PrintStream]; void; com.puppycrawl.tools.checkstyle.Main; loadConfig[com.puppycrawl.tools.checkstyle.CommandLine, java.util.Properties]; com.puppycrawl.tools.checkstyle.api.Configuration; null; e>
<java.lang.System; exit[int]; void; com.puppycrawl.tools.checkstyle.Main; loadConfig[com.puppycrawl.tools.checkstyle.CommandLine, java.util.Properties]; com.puppycrawl.tools.checkstyle.api.Configuration; null; System>
<not found; printHelp[]; not found; com.puppycrawl.tools.checkstyle.Main; usage[]; void; null; hf>
<java.lang.Class; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.Main; usage[]; void; null; Main.class>
<java.lang.System; exit[int]; void; com.puppycrawl.tools.checkstyle.Main; usage[]; void; null; System>
<java.io.File; canRead[]; boolean; com.puppycrawl.tools.checkstyle.Main; traverse[java.io.File, java.util.List<java.io.File>]; void; null; aNode>
<java.io.File; isDirectory[]; boolean; com.puppycrawl.tools.checkstyle.Main; traverse[java.io.File, java.util.List<java.io.File>]; void; null; aNode>
<java.io.File; listFiles[]; java.io.File[]; com.puppycrawl.tools.checkstyle.Main; traverse[java.io.File, java.util.List<java.io.File>]; void; null; aNode>
<com.puppycrawl.tools.checkstyle.Main; traverse[java.io.File, java.util.List<java.io.File>]; void; com.puppycrawl.tools.checkstyle.Main; traverse[java.io.File, java.util.List<java.io.File>]; void; null; this>
<java.io.File; isFile[]; boolean; com.puppycrawl.tools.checkstyle.Main; traverse[java.io.File, java.util.List<java.io.File>]; void; null; aNode>
<java.util.List; add[java.io.File]; boolean; com.puppycrawl.tools.checkstyle.Main; traverse[java.io.File, java.util.List<java.io.File>]; void; null; aFiles>
<java.util.Properties; load[java.io.InputStream]; void; com.puppycrawl.tools.checkstyle.Main; loadProperties[java.io.File]; java.util.Properties; null; properties>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.Main; loadProperties[java.io.File]; java.util.Properties; null; System.out>
<java.io.File; getAbsolutePath[]; java.lang.String; com.puppycrawl.tools.checkstyle.Main; loadProperties[java.io.File]; java.util.Properties; null; aFile>
<java.lang.Throwable; printStackTrace[java.io.PrintStream]; void; com.puppycrawl.tools.checkstyle.Main; loadProperties[java.io.File]; java.util.Properties; null; ex>
<java.lang.System; exit[int]; void; com.puppycrawl.tools.checkstyle.Main; loadProperties[java.io.File]; java.util.Properties; null; System>
<com.puppycrawl.tools.checkstyle.api.Utils; closeQuietly[java.io.Closeable]; void; com.puppycrawl.tools.checkstyle.Main; loadProperties[java.io.File]; java.util.Properties; null; Utils>
<javax.swing.JTree; addTreeExpansionListener[javax.swing.event.TreeExpansionListener]; void; com.puppycrawl.tools.checkstyle.gui.TreeTableModelAdapter; TreeTableModelAdapter[com.puppycrawl.tools.checkstyle.gui.TreeTableModel, javax.swing.JTree]; void; null; aTree>
<javax.swing.table.AbstractTableModel; fireTableDataChanged[]; void; java.lang.Object; treeExpanded[javax.swing.event.TreeExpansionEvent]; void; null; this>
<javax.swing.table.AbstractTableModel; fireTableDataChanged[]; void; java.lang.Object; treeCollapsed[javax.swing.event.TreeExpansionEvent]; void; null; this>
<javax.swing.tree.TreeModel; addTreeModelListener[javax.swing.event.TreeModelListener]; void; com.puppycrawl.tools.checkstyle.gui.TreeTableModelAdapter; TreeTableModelAdapter[com.puppycrawl.tools.checkstyle.gui.TreeTableModel, javax.swing.JTree]; void; null; aTreeTableModel>
<com.puppycrawl.tools.checkstyle.gui.TreeTableModelAdapter; delayedFireTableDataChanged[]; void; java.lang.Object; treeNodesChanged[javax.swing.event.TreeModelEvent]; void; null; this>
<com.puppycrawl.tools.checkstyle.gui.TreeTableModelAdapter; delayedFireTableDataChanged[]; void; java.lang.Object; treeNodesInserted[javax.swing.event.TreeModelEvent]; void; null; this>
<com.puppycrawl.tools.checkstyle.gui.TreeTableModelAdapter; delayedFireTableDataChanged[]; void; java.lang.Object; treeNodesRemoved[javax.swing.event.TreeModelEvent]; void; null; this>
<com.puppycrawl.tools.checkstyle.gui.TreeTableModelAdapter; delayedFireTableDataChanged[]; void; java.lang.Object; treeStructureChanged[javax.swing.event.TreeModelEvent]; void; null; this>
<com.puppycrawl.tools.checkstyle.gui.TreeTableModel; getColumnCount[]; int; com.puppycrawl.tools.checkstyle.gui.TreeTableModelAdapter; getColumnCount[]; int; null; mTreeTableModel>
<com.puppycrawl.tools.checkstyle.gui.TreeTableModel; getColumnName[int]; java.lang.String; com.puppycrawl.tools.checkstyle.gui.TreeTableModelAdapter; getColumnName[int]; java.lang.String; null; mTreeTableModel>
<com.puppycrawl.tools.checkstyle.gui.TreeTableModel; getColumnClass[int]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.gui.TreeTableModelAdapter; getColumnClass[int]; java.lang.Class<?>; null; mTreeTableModel>
<javax.swing.JTree; getRowCount[]; int; com.puppycrawl.tools.checkstyle.gui.TreeTableModelAdapter; getRowCount[]; int; null; mTree>
<javax.swing.JTree; getPathForRow[int]; javax.swing.tree.TreePath; com.puppycrawl.tools.checkstyle.gui.TreeTableModelAdapter; nodeForRow[int]; java.lang.Object; null; mTree>
<javax.swing.tree.TreePath; getLastPathComponent[]; java.lang.Object; com.puppycrawl.tools.checkstyle.gui.TreeTableModelAdapter; nodeForRow[int]; java.lang.Object; null; treePath>
<com.puppycrawl.tools.checkstyle.gui.TreeTableModel; getValueAt[java.lang.Object, int]; java.lang.Object; com.puppycrawl.tools.checkstyle.gui.TreeTableModelAdapter; getValueAt[int, int]; java.lang.Object; null; mTreeTableModel>
<com.puppycrawl.tools.checkstyle.gui.TreeTableModelAdapter; nodeForRow[int]; java.lang.Object; com.puppycrawl.tools.checkstyle.gui.TreeTableModelAdapter; getValueAt[int, int]; java.lang.Object; null; this>
<com.puppycrawl.tools.checkstyle.gui.TreeTableModel; isCellEditable[java.lang.Object, int]; boolean; com.puppycrawl.tools.checkstyle.gui.TreeTableModelAdapter; isCellEditable[int, int]; boolean; null; mTreeTableModel>
<com.puppycrawl.tools.checkstyle.gui.TreeTableModelAdapter; nodeForRow[int]; java.lang.Object; com.puppycrawl.tools.checkstyle.gui.TreeTableModelAdapter; isCellEditable[int, int]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.gui.TreeTableModel; setValueAt[java.lang.Object, java.lang.Object, int]; void; com.puppycrawl.tools.checkstyle.gui.TreeTableModelAdapter; setValueAt[java.lang.Object, int, int]; void; null; mTreeTableModel>
<com.puppycrawl.tools.checkstyle.gui.TreeTableModelAdapter; nodeForRow[int]; java.lang.Object; com.puppycrawl.tools.checkstyle.gui.TreeTableModelAdapter; setValueAt[java.lang.Object, int, int]; void; null; this>
<javax.swing.SwingUtilities; invokeLater[java.lang.Runnable]; void; com.puppycrawl.tools.checkstyle.gui.TreeTableModelAdapter; delayedFireTableDataChanged[]; void; null; SwingUtilities>
<javax.swing.table.AbstractTableModel; fireTableDataChanged[]; void; java.lang.Object; run[]; void; null; this>
<com.puppycrawl.tools.checkstyle.gui.ParseTreeModel; createArtificialTreeRoot[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.gui.ParseTreeModel; ParseTreeModel[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.gui.ParseTreeModel; setParseTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.gui.ParseTreeModel; ParseTreeModel[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; setASTNodeClass[]; not found; com.puppycrawl.tools.checkstyle.gui.ParseTreeModel; createArtificialTreeRoot[]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; factory>
<java.lang.Class; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.gui.ParseTreeModel; createArtificialTreeRoot[]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; DetailAST.class>
<not found; create[]; not found; com.puppycrawl.tools.checkstyle.gui.ParseTreeModel; createArtificialTreeRoot[]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; factory>
<com.puppycrawl.tools.checkstyle.gui.AbstractTreeTableModel; getRoot[]; java.lang.Object; com.puppycrawl.tools.checkstyle.gui.ParseTreeModel; setParseTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; setFirstChild[com.puppycrawl.tools.checkstyle.api.AST]; void; com.puppycrawl.tools.checkstyle.gui.ParseTreeModel; setParseTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; root>
<com.puppycrawl.tools.checkstyle.gui.AbstractTreeTableModel; fireTreeStructureChanged[java.lang.Object, java.lang.Object[], int[], java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.gui.ParseTreeModel; setParseTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.TokenTypes; getTokenName[int]; java.lang.String; com.puppycrawl.tools.checkstyle.gui.ParseTreeModel; getValueAt[java.lang.Object, int]; java.lang.Object; null; TokenTypes>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.gui.ParseTreeModel; getValueAt[java.lang.Object, int]; java.lang.Object; null; ast>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.gui.ParseTreeModel; getValueAt[java.lang.Object, int]; java.lang.Object; null; ast>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.gui.ParseTreeModel; getValueAt[java.lang.Object, int]; java.lang.Object; null; ast>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.gui.ParseTreeModel; getValueAt[java.lang.Object, int]; java.lang.Object; null; ast>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.gui.ParseTreeModel; getChild[java.lang.Object, int]; java.lang.Object; null; ast>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.gui.ParseTreeModel; getChild[java.lang.Object, int]; java.lang.Object; null; child>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; com.puppycrawl.tools.checkstyle.gui.ParseTreeModel; getChildCount[java.lang.Object]; int; null; ast>
<java.io.File; isDirectory[]; boolean; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel.JavaFileFilter; accept[java.io.File]; boolean; null; f>
<java.lang.String; endsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel.JavaFileFilter; accept[java.io.File]; boolean; null; f.getName()>
<java.io.File; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel.JavaFileFilter; accept[java.io.File]; boolean; endsWith[java.lang.String]; f>
<javax.swing.AbstractAction; putValue[java.lang.String, java.lang.Object]; void; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel.FileSelectionAction; FileSelectionAction[]; void; null; this>
<javax.swing.JFileChooser; setFileFilter[javax.swing.filechooser.FileFilter]; void; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel.FileSelectionAction; actionPerformed[java.awt.event.ActionEvent]; void; null; fc>
<javax.swing.SwingUtilities; getRoot[java.awt.Component]; java.awt.Component; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel.FileSelectionAction; actionPerformed[java.awt.event.ActionEvent]; void; null; SwingUtilities>
<javax.swing.JFileChooser; showDialog[java.awt.Component, java.lang.String]; int; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel.FileSelectionAction; actionPerformed[java.awt.event.ActionEvent]; void; null; fc>
<javax.swing.JFileChooser; getSelectedFile[]; java.io.File; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel.FileSelectionAction; actionPerformed[java.awt.event.ActionEvent]; void; null; fc>
<com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; openFile[java.io.File, java.awt.Component]; void; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel.FileSelectionAction; actionPerformed[java.awt.event.ActionEvent]; void; null; this>
<javax.swing.AbstractAction; putValue[java.lang.String, java.lang.Object]; void; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel.ReloadAction; ReloadAction[]; void; null; this>
<javax.swing.SwingUtilities; getRoot[java.awt.Component]; java.awt.Component; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel.ReloadAction; actionPerformed[java.awt.event.ActionEvent]; void; null; SwingUtilities>
<com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; openFile[java.io.File, java.awt.Component]; void; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel.ReloadAction; actionPerformed[java.awt.event.ActionEvent]; void; null; this>
<com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; openFile[java.io.File, java.awt.Component]; void; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel.FileDropListener; filesDropped[java.io.File[]]; void; null; this>
<java.awt.Frame; setTitle[java.lang.String]; void; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; openFile[java.io.File, java.awt.Component]; void; null; Main.frame>
<java.io.File; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; openFile[java.io.File, java.awt.Component]; void; null; aFile>
<java.io.File; getAbsoluteFile[]; java.io.File; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; openFile[java.io.File, java.awt.Component]; void; null; aFile>
<com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; getEncoding[]; java.lang.String; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; openFile[java.io.File, java.awt.Component]; void; null; this>
<com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; parseFile[com.puppycrawl.tools.checkstyle.api.FileText]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; openFile[java.io.File, java.awt.Component]; void; null; this>
<com.puppycrawl.tools.checkstyle.gui.ParseTreeModel; setParseTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; openFile[java.io.File, java.awt.Component]; void; null; mParseTreeModel>
<java.io.File; getParentFile[]; java.io.File; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; openFile[java.io.File, java.awt.Component]; void; null; aFile>
<javax.swing.Action; setEnabled[boolean]; void; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; openFile[java.io.File, java.awt.Component]; void; null; reloadAction>
<com.puppycrawl.tools.checkstyle.api.FileText; toLinesArray[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; openFile[java.io.File, java.awt.Component]; void; null; text>
<java.util.List; clear[]; void; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; openFile[java.io.File, java.awt.Component]; void; null; getLines2position()>
<com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; getLines2position[]; java.util.List<java.lang.Integer>; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; openFile[java.io.File, java.awt.Component]; void; clear[]; this>
<java.util.List; add[java.lang.Integer]; boolean; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; openFile[java.io.File, java.awt.Component]; void; null; getLines2position()>
<com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; getLines2position[]; java.util.List<java.lang.Integer>; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; openFile[java.io.File, java.awt.Component]; void; add[java.lang.Integer]; this>
<java.util.List; add[java.lang.Integer]; boolean; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; openFile[java.io.File, java.awt.Component]; void; null; getLines2position()>
<com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; getLines2position[]; java.util.List<java.lang.Integer>; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; openFile[java.io.File, java.awt.Component]; void; add[java.lang.Integer]; this>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; openFile[java.io.File, java.awt.Component]; void; null; mJTextArea.getText()>
<javax.swing.text.JTextComponent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; openFile[java.io.File, java.awt.Component]; void; length[]; mJTextArea>
<javax.swing.JTextArea; append[java.lang.String]; void; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; openFile[java.io.File, java.awt.Component]; void; null; mJTextArea>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; openFile[java.io.File, java.awt.Component]; void; null; mJTextArea.getText()>
<javax.swing.text.JTextComponent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; openFile[java.io.File, java.awt.Component]; void; length[]; mJTextArea>
<javax.swing.JTextArea; replaceRange[java.lang.String, int, int]; void; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; openFile[java.io.File, java.awt.Component]; void; null; mJTextArea>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; openFile[java.io.File, java.awt.Component]; void; null; mJTextArea.getText()>
<javax.swing.text.JTextComponent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; openFile[java.io.File, java.awt.Component]; void; length[]; mJTextArea>
<javax.swing.JTextArea; append[java.lang.String]; void; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; openFile[java.io.File, java.awt.Component]; void; null; mJTextArea>
<javax.swing.text.JTextComponent; moveCaretPosition[int]; void; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; openFile[java.io.File, java.awt.Component]; void; null; mJTextArea>
<com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; showErrorDialog[java.awt.Component, java.lang.String]; void; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; openFile[java.io.File, java.awt.Component]; void; null; this>
<java.lang.Throwable; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; openFile[java.io.File, java.awt.Component]; void; null; ex>
<com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; showErrorDialog[java.awt.Component, java.lang.String]; void; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; openFile[java.io.File, java.awt.Component]; void; null; this>
<not found; getMessage[]; not found; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; openFile[java.io.File, java.awt.Component]; void; null; ex>
<com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; parseFile[com.puppycrawl.tools.checkstyle.api.FileText]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; parseFile[java.lang.String]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; this>
<com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; getEncoding[]; java.lang.String; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; parseFile[java.lang.String]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; this>
<com.puppycrawl.tools.checkstyle.TreeWalker; parse[com.puppycrawl.tools.checkstyle.api.FileContents]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; parseFile[com.puppycrawl.tools.checkstyle.api.FileText]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; TreeWalker>
<java.lang.System; getProperty[java.lang.String, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; getEncoding[]; java.lang.String; null; System>
<java.awt.Container; setLayout[java.awt.LayoutManager]; void; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; ParseTreeInfoPanel[]; void; null; this>
<java.awt.Container; add[java.awt.Component, java.lang.Object]; void; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; ParseTreeInfoPanel[]; void; null; this>
<javax.swing.Action; setEnabled[boolean]; void; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; ParseTreeInfoPanel[]; void; null; reloadAction>
<javax.swing.text.JTextComponent; setEditable[boolean]; void; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; ParseTreeInfoPanel[]; void; null; mJTextArea>
<com.puppycrawl.tools.checkstyle.gui.JTreeTable; setEditor[javax.swing.JTextArea]; void; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; ParseTreeInfoPanel[]; void; null; mTreeTable>
<com.puppycrawl.tools.checkstyle.gui.JTreeTable; setLinePositionMap[java.util.List<java.lang.Integer>]; void; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; ParseTreeInfoPanel[]; void; null; mTreeTable>
<java.awt.Container; add[java.awt.Component, java.lang.Object]; void; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; ParseTreeInfoPanel[]; void; null; this>
<java.awt.Container; add[java.awt.Component, java.lang.Object]; void; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; ParseTreeInfoPanel[]; void; null; this>
<java.awt.Container; add[java.awt.Component]; java.awt.Component; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; ParseTreeInfoPanel[]; void; null; p>
<java.awt.Container; add[java.awt.Component]; java.awt.Component; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; ParseTreeInfoPanel[]; void; null; p>
<com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; showErrorDialog[java.awt.Component, java.lang.String]; void; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; ParseTreeInfoPanel[]; void; null; this>
<javax.swing.JOptionPane; showMessageDialog[java.awt.Component, java.lang.Object]; void; java.lang.Object; run[]; void; null; JOptionPane>
<javax.swing.SwingUtilities; invokeLater[java.lang.Runnable]; void; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; showErrorDialog[java.awt.Component, java.lang.String]; void; null; SwingUtilities>
<javax.swing.event.EventListenerList; add[java.lang.Class<javax.swing.event.CellEditorListener>, javax.swing.event.CellEditorListener]; void; com.puppycrawl.tools.checkstyle.gui.AbstractCellEditor; addCellEditorListener[javax.swing.event.CellEditorListener]; void; null; mListenerList>
<javax.swing.event.EventListenerList; remove[java.lang.Class<javax.swing.event.CellEditorListener>, javax.swing.event.CellEditorListener]; void; com.puppycrawl.tools.checkstyle.gui.AbstractCellEditor; removeCellEditorListener[javax.swing.event.CellEditorListener]; void; null; mListenerList>
<javax.swing.event.EventListenerList; getListenerList[]; java.lang.Object[]; com.puppycrawl.tools.checkstyle.gui.AbstractCellEditor; fireEditingStopped[]; void; null; mListenerList>
<javax.swing.event.CellEditorListener; editingStopped[javax.swing.event.ChangeEvent]; void; com.puppycrawl.tools.checkstyle.gui.AbstractCellEditor; fireEditingStopped[]; void; null; ((CellEditorListener)listeners[i + 1])>
<javax.swing.event.EventListenerList; getListenerList[]; java.lang.Object[]; com.puppycrawl.tools.checkstyle.gui.AbstractCellEditor; fireEditingCanceled[]; void; null; mListenerList>
<javax.swing.event.CellEditorListener; editingCanceled[javax.swing.event.ChangeEvent]; void; com.puppycrawl.tools.checkstyle.gui.AbstractCellEditor; fireEditingCanceled[]; void; null; ((CellEditorListener)listeners[i + 1])>
<java.awt.Container; add[java.awt.Component]; java.awt.Component; com.puppycrawl.tools.checkstyle.gui.Main; main[java.lang.String[]]; void; null; frame.getContentPane()>
<javax.swing.JFrame; getContentPane[]; java.awt.Container; com.puppycrawl.tools.checkstyle.gui.Main; main[java.lang.String[]]; void; add[java.awt.Component]; frame>
<com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; openFile[java.io.File, java.awt.Component]; void; com.puppycrawl.tools.checkstyle.gui.Main; main[java.lang.String[]]; void; null; panel>
<java.awt.Window; pack[]; void; com.puppycrawl.tools.checkstyle.gui.Main; main[java.lang.String[]]; void; null; frame>
<javax.swing.JFrame; setDefaultCloseOperation[int]; void; com.puppycrawl.tools.checkstyle.gui.Main; main[java.lang.String[]]; void; null; frame>
<java.awt.Window; setVisible[boolean]; void; com.puppycrawl.tools.checkstyle.gui.Main; main[java.lang.String[]]; void; null; frame>
<javax.swing.tree.TreeModel; getChildCount[java.lang.Object]; int; com.puppycrawl.tools.checkstyle.gui.AbstractTreeTableModel; isLeaf[java.lang.Object]; boolean; null; this>
<javax.swing.tree.TreeModel; getChildCount[java.lang.Object]; int; com.puppycrawl.tools.checkstyle.gui.AbstractTreeTableModel; getIndexOfChild[java.lang.Object, java.lang.Object]; int; null; this>
<java.lang.Object; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.gui.AbstractTreeTableModel; getIndexOfChild[java.lang.Object, java.lang.Object]; int; null; getChild(parent,i)>
<javax.swing.tree.TreeModel; getChild[java.lang.Object, int]; java.lang.Object; com.puppycrawl.tools.checkstyle.gui.AbstractTreeTableModel; getIndexOfChild[java.lang.Object, java.lang.Object]; int; equals[java.lang.Object]; this>
<javax.swing.event.EventListenerList; add[java.lang.Class<javax.swing.event.TreeModelListener>, javax.swing.event.TreeModelListener]; void; com.puppycrawl.tools.checkstyle.gui.AbstractTreeTableModel; addTreeModelListener[javax.swing.event.TreeModelListener]; void; null; mListenerList>
<javax.swing.event.EventListenerList; remove[java.lang.Class<javax.swing.event.TreeModelListener>, javax.swing.event.TreeModelListener]; void; com.puppycrawl.tools.checkstyle.gui.AbstractTreeTableModel; removeTreeModelListener[javax.swing.event.TreeModelListener]; void; null; mListenerList>
<javax.swing.event.EventListenerList; getListenerList[]; java.lang.Object[]; com.puppycrawl.tools.checkstyle.gui.AbstractTreeTableModel; fireTreeNodesChanged[java.lang.Object, java.lang.Object[], int[], java.lang.Object[]]; void; null; mListenerList>
<javax.swing.event.TreeModelListener; treeNodesChanged[javax.swing.event.TreeModelEvent]; void; com.puppycrawl.tools.checkstyle.gui.AbstractTreeTableModel; fireTreeNodesChanged[java.lang.Object, java.lang.Object[], int[], java.lang.Object[]]; void; null; ((TreeModelListener)listeners[i + 1])>
<javax.swing.event.EventListenerList; getListenerList[]; java.lang.Object[]; com.puppycrawl.tools.checkstyle.gui.AbstractTreeTableModel; fireTreeNodesInserted[java.lang.Object, java.lang.Object[], int[], java.lang.Object[]]; void; null; mListenerList>
<javax.swing.event.TreeModelListener; treeNodesInserted[javax.swing.event.TreeModelEvent]; void; com.puppycrawl.tools.checkstyle.gui.AbstractTreeTableModel; fireTreeNodesInserted[java.lang.Object, java.lang.Object[], int[], java.lang.Object[]]; void; null; ((TreeModelListener)listeners[i + 1])>
<javax.swing.event.EventListenerList; getListenerList[]; java.lang.Object[]; com.puppycrawl.tools.checkstyle.gui.AbstractTreeTableModel; fireTreeNodesRemoved[java.lang.Object, java.lang.Object[], int[], java.lang.Object[]]; void; null; mListenerList>
<javax.swing.event.TreeModelListener; treeNodesRemoved[javax.swing.event.TreeModelEvent]; void; com.puppycrawl.tools.checkstyle.gui.AbstractTreeTableModel; fireTreeNodesRemoved[java.lang.Object, java.lang.Object[], int[], java.lang.Object[]]; void; null; ((TreeModelListener)listeners[i + 1])>
<javax.swing.event.EventListenerList; getListenerList[]; java.lang.Object[]; com.puppycrawl.tools.checkstyle.gui.AbstractTreeTableModel; fireTreeStructureChanged[java.lang.Object, java.lang.Object[], int[], java.lang.Object[]]; void; null; mListenerList>
<javax.swing.event.TreeModelListener; treeStructureChanged[javax.swing.event.TreeModelEvent]; void; com.puppycrawl.tools.checkstyle.gui.AbstractTreeTableModel; fireTreeStructureChanged[java.lang.Object, java.lang.Object[], int[], java.lang.Object[]]; void; null; ((TreeModelListener)listeners[i + 1])>
<com.puppycrawl.tools.checkstyle.gui.AbstractTreeTableModel; getColumnClass[int]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.gui.AbstractTreeTableModel; isCellEditable[java.lang.Object, int]; boolean; null; this>
<java.util.List; get[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.gui.CodeSelector; select[]; void; null; lines2position>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.gui.CodeSelector; select[]; void; null; ast>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.gui.CodeSelector; select[]; void; null; ast>
<com.puppycrawl.tools.checkstyle.gui.CodeSelector; findLastPosition[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; com.puppycrawl.tools.checkstyle.gui.CodeSelector; select[]; void; null; this>
<javax.swing.text.JTextComponent; setSelectedTextColor[java.awt.Color]; void; com.puppycrawl.tools.checkstyle.gui.CodeSelector; select[]; void; null; editor>
<javax.swing.JComponent; requestFocusInWindow[]; boolean; com.puppycrawl.tools.checkstyle.gui.CodeSelector; select[]; void; null; editor>
<javax.swing.text.JTextComponent; setSelectionStart[int]; void; com.puppycrawl.tools.checkstyle.gui.CodeSelector; select[]; void; null; editor>
<javax.swing.text.JTextComponent; setSelectionEnd[int]; void; com.puppycrawl.tools.checkstyle.gui.CodeSelector; select[]; void; null; editor>
<java.awt.Component; transferFocusBackward[]; void; com.puppycrawl.tools.checkstyle.gui.CodeSelector; select[]; void; null; editor>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; com.puppycrawl.tools.checkstyle.gui.CodeSelector; findLastPosition[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; null; ast>
<java.util.List; get[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.gui.CodeSelector; findLastPosition[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; null; lines2position>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.gui.CodeSelector; findLastPosition[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; null; ast>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.gui.CodeSelector; findLastPosition[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; null; ast>
<not found; length[]; not found; com.puppycrawl.tools.checkstyle.gui.CodeSelector; findLastPosition[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; null; ast.getText()>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.gui.CodeSelector; findLastPosition[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; length[]; ast>
<com.puppycrawl.tools.checkstyle.gui.CodeSelector; findLastPosition[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; com.puppycrawl.tools.checkstyle.gui.CodeSelector; findLastPosition[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLastChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.gui.CodeSelector; findLastPosition[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; null; ast>
<javax.swing.BorderFactory; createMatteBorder[int, int, int, int, java.awt.Color]; javax.swing.border.MatteBorder; com.puppycrawl.tools.checkstyle.gui.FileDrop; FileDrop[java.awt.Component, com.puppycrawl.tools.checkstyle.gui.FileDrop.Listener]; void; null; BorderFactory>
<com.puppycrawl.tools.checkstyle.gui.FileDrop; makeDropTarget[java.awt.Component, boolean]; void; com.puppycrawl.tools.checkstyle.gui.FileDrop; FileDrop[java.awt.Component, javax.swing.border.Border, boolean, com.puppycrawl.tools.checkstyle.gui.FileDrop.Listener]; void; null; this>
<java.awt.dnd.DropTarget; addDropTargetListener[java.awt.dnd.DropTargetListener]; void; com.puppycrawl.tools.checkstyle.gui.FileDrop; makeDropTarget[java.awt.Component, boolean]; void; null; dt>
<java.awt.Component; addHierarchyListener[java.awt.event.HierarchyListener]; void; com.puppycrawl.tools.checkstyle.gui.FileDrop; makeDropTarget[java.awt.Component, boolean]; void; null; c>
<java.awt.Component; getParent[]; java.awt.Container; java.lang.Object; hierarchyChanged[java.awt.event.HierarchyEvent]; void; null; c>
<java.awt.Component; setDropTarget[java.awt.dnd.DropTarget]; void; java.lang.Object; hierarchyChanged[java.awt.event.HierarchyEvent]; void; null; c>
<java.awt.Component; getParent[]; java.awt.Container; com.puppycrawl.tools.checkstyle.gui.FileDrop; makeDropTarget[java.awt.Component, boolean]; void; null; c>
<java.awt.Container; getComponents[]; java.awt.Component[]; com.puppycrawl.tools.checkstyle.gui.FileDrop; makeDropTarget[java.awt.Component, boolean]; void; null; cont>
<com.puppycrawl.tools.checkstyle.gui.FileDrop; makeDropTarget[java.awt.Component, boolean]; void; com.puppycrawl.tools.checkstyle.gui.FileDrop; makeDropTarget[java.awt.Component, boolean]; void; null; this>
<java.awt.dnd.DropTargetDragEvent; getCurrentDataFlavors[]; java.awt.datatransfer.DataFlavor[]; com.puppycrawl.tools.checkstyle.gui.FileDrop; isDragOk[java.awt.dnd.DropTargetDragEvent]; boolean; null; evt>
<java.awt.datatransfer.DataFlavor; equals[java.awt.datatransfer.DataFlavor]; boolean; com.puppycrawl.tools.checkstyle.gui.FileDrop; isDragOk[java.awt.dnd.DropTargetDragEvent]; boolean; null; flavors[i]>
<com.puppycrawl.tools.checkstyle.gui.FileDrop; remove[java.awt.Component, boolean]; void; com.puppycrawl.tools.checkstyle.gui.FileDrop; remove[java.awt.Component]; void; null; this>
<java.awt.Component; setDropTarget[java.awt.dnd.DropTarget]; void; com.puppycrawl.tools.checkstyle.gui.FileDrop; remove[java.awt.Component, boolean]; void; null; c>
<java.awt.Container; getComponents[]; java.awt.Component[]; com.puppycrawl.tools.checkstyle.gui.FileDrop; remove[java.awt.Component, boolean]; void; null; ((Container)c)>
<com.puppycrawl.tools.checkstyle.gui.FileDrop; remove[java.awt.Component, boolean]; void; com.puppycrawl.tools.checkstyle.gui.FileDrop; remove[java.awt.Component, boolean]; void; null; this>
<com.puppycrawl.tools.checkstyle.gui.FileDrop; isDragOk[java.awt.dnd.DropTargetDragEvent]; boolean; com.puppycrawl.tools.checkstyle.gui.FileDrop.FileDropTargetListener; dragEnter[java.awt.dnd.DropTargetDragEvent]; void; null; this>
<javax.swing.JComponent; getBorder[]; javax.swing.border.Border; com.puppycrawl.tools.checkstyle.gui.FileDrop.FileDropTargetListener; dragEnter[java.awt.dnd.DropTargetDragEvent]; void; null; jc>
<javax.swing.JComponent; setBorder[javax.swing.border.Border]; void; com.puppycrawl.tools.checkstyle.gui.FileDrop.FileDropTargetListener; dragEnter[java.awt.dnd.DropTargetDragEvent]; void; null; jc>
<java.awt.dnd.DropTargetDragEvent; acceptDrag[int]; void; com.puppycrawl.tools.checkstyle.gui.FileDrop.FileDropTargetListener; dragEnter[java.awt.dnd.DropTargetDragEvent]; void; null; evt>
<java.awt.dnd.DropTargetDragEvent; rejectDrag[]; void; com.puppycrawl.tools.checkstyle.gui.FileDrop.FileDropTargetListener; dragEnter[java.awt.dnd.DropTargetDragEvent]; void; null; evt>
<java.awt.dnd.DropTargetDropEvent; getTransferable[]; java.awt.datatransfer.Transferable; com.puppycrawl.tools.checkstyle.gui.FileDrop.FileDropTargetListener; drop[java.awt.dnd.DropTargetDropEvent]; void; null; evt>
<java.awt.datatransfer.Transferable; isDataFlavorSupported[java.awt.datatransfer.DataFlavor]; boolean; com.puppycrawl.tools.checkstyle.gui.FileDrop.FileDropTargetListener; drop[java.awt.dnd.DropTargetDropEvent]; void; null; tr>
<java.awt.dnd.DropTargetDropEvent; acceptDrop[int]; void; com.puppycrawl.tools.checkstyle.gui.FileDrop.FileDropTargetListener; drop[java.awt.dnd.DropTargetDropEvent]; void; null; evt>
<java.awt.datatransfer.Transferable; getTransferData[java.awt.datatransfer.DataFlavor]; java.lang.Object; com.puppycrawl.tools.checkstyle.gui.FileDrop.FileDropTargetListener; drop[java.awt.dnd.DropTargetDropEvent]; void; null; tr>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.gui.FileDrop.FileDropTargetListener; drop[java.awt.dnd.DropTargetDropEvent]; void; null; fileList>
<java.util.List; toArray[java.io.File[]]; java.io.File[]; com.puppycrawl.tools.checkstyle.gui.FileDrop.FileDropTargetListener; drop[java.awt.dnd.DropTargetDropEvent]; void; null; fileList>
<com.puppycrawl.tools.checkstyle.gui.FileDrop$Listener; filesDropped[java.io.File[]]; void; com.puppycrawl.tools.checkstyle.gui.FileDrop.FileDropTargetListener; drop[java.awt.dnd.DropTargetDropEvent]; void; null; mListener>
<java.awt.dnd.DropTargetContext; dropComplete[boolean]; void; com.puppycrawl.tools.checkstyle.gui.FileDrop.FileDropTargetListener; drop[java.awt.dnd.DropTargetDropEvent]; void; null; evt.getDropTargetContext()>
<java.awt.dnd.DropTargetEvent; getDropTargetContext[]; java.awt.dnd.DropTargetContext; com.puppycrawl.tools.checkstyle.gui.FileDrop.FileDropTargetListener; drop[java.awt.dnd.DropTargetDropEvent]; void; dropComplete[boolean]; evt>
<java.awt.dnd.DropTargetDropEvent; rejectDrop[]; void; com.puppycrawl.tools.checkstyle.gui.FileDrop.FileDropTargetListener; drop[java.awt.dnd.DropTargetDropEvent]; void; null; evt>
<java.awt.dnd.DropTargetDropEvent; rejectDrop[]; void; com.puppycrawl.tools.checkstyle.gui.FileDrop.FileDropTargetListener; drop[java.awt.dnd.DropTargetDropEvent]; void; null; evt>
<java.awt.dnd.DropTargetDropEvent; rejectDrop[]; void; com.puppycrawl.tools.checkstyle.gui.FileDrop.FileDropTargetListener; drop[java.awt.dnd.DropTargetDropEvent]; void; null; evt>
<javax.swing.JComponent; setBorder[javax.swing.border.Border]; void; com.puppycrawl.tools.checkstyle.gui.FileDrop.FileDropTargetListener; drop[java.awt.dnd.DropTargetDropEvent]; void; null; jc>
<javax.swing.JComponent; setBorder[javax.swing.border.Border]; void; com.puppycrawl.tools.checkstyle.gui.FileDrop.FileDropTargetListener; dragExit[java.awt.dnd.DropTargetEvent]; void; null; jc>
<com.puppycrawl.tools.checkstyle.gui.FileDrop; isDragOk[java.awt.dnd.DropTargetDragEvent]; boolean; com.puppycrawl.tools.checkstyle.gui.FileDrop.FileDropTargetListener; dropActionChanged[java.awt.dnd.DropTargetDragEvent]; void; null; this>
<java.awt.dnd.DropTargetDragEvent; acceptDrag[int]; void; com.puppycrawl.tools.checkstyle.gui.FileDrop.FileDropTargetListener; dropActionChanged[java.awt.dnd.DropTargetDragEvent]; void; null; evt>
<java.awt.dnd.DropTargetDragEvent; rejectDrag[]; void; com.puppycrawl.tools.checkstyle.gui.FileDrop.FileDropTargetListener; dropActionChanged[java.awt.dnd.DropTargetDragEvent]; void; null; evt>
<javax.swing.JTree; setSelectionModel[javax.swing.tree.TreeSelectionModel]; void; com.puppycrawl.tools.checkstyle.gui.JTreeTable; JTreeTable[com.puppycrawl.tools.checkstyle.gui.TreeTableModel]; void; null; tree>
<javax.swing.JTable; setSelectionModel[javax.swing.ListSelectionModel]; void; com.puppycrawl.tools.checkstyle.gui.JTreeTable; JTreeTable[com.puppycrawl.tools.checkstyle.gui.TreeTableModel]; void; null; this>
<com.puppycrawl.tools.checkstyle.gui.JTreeTable$ListToTreeSelectionModelWrapper; getListSelectionModel[]; javax.swing.ListSelectionModel; com.puppycrawl.tools.checkstyle.gui.JTreeTable; JTreeTable[com.puppycrawl.tools.checkstyle.gui.TreeTableModel]; void; null; selectionWrapper>
<javax.swing.JTable; setDefaultRenderer[java.lang.Class<?>, javax.swing.table.TableCellRenderer]; void; com.puppycrawl.tools.checkstyle.gui.JTreeTable; JTreeTable[com.puppycrawl.tools.checkstyle.gui.TreeTableModel]; void; null; this>
<javax.swing.JTable; setDefaultEditor[java.lang.Class<?>, javax.swing.table.TableCellEditor]; void; com.puppycrawl.tools.checkstyle.gui.JTreeTable; JTreeTable[com.puppycrawl.tools.checkstyle.gui.TreeTableModel]; void; null; this>
<javax.swing.JTable; setShowGrid[boolean]; void; com.puppycrawl.tools.checkstyle.gui.JTreeTable; JTreeTable[com.puppycrawl.tools.checkstyle.gui.TreeTableModel]; void; null; this>
<javax.swing.JTable; setIntercellSpacing[java.awt.Dimension]; void; com.puppycrawl.tools.checkstyle.gui.JTreeTable; JTreeTable[com.puppycrawl.tools.checkstyle.gui.TreeTableModel]; void; null; this>
<javax.swing.JTree; getRowHeight[]; int; com.puppycrawl.tools.checkstyle.gui.JTreeTable; JTreeTable[com.puppycrawl.tools.checkstyle.gui.TreeTableModel]; void; null; tree>
<com.puppycrawl.tools.checkstyle.gui.JTreeTable; setRowHeight[int]; void; com.puppycrawl.tools.checkstyle.gui.JTreeTable; JTreeTable[com.puppycrawl.tools.checkstyle.gui.TreeTableModel]; void; null; this>
<javax.swing.JTable; getRowHeight[]; int; com.puppycrawl.tools.checkstyle.gui.JTreeTable; JTreeTable[com.puppycrawl.tools.checkstyle.gui.TreeTableModel]; void; null; this>
<javax.swing.JTree; getSelectionPath[]; javax.swing.tree.TreePath; javax.swing.AbstractAction; actionPerformed[java.awt.event.ActionEvent]; void; null; tree>
<javax.swing.tree.TreePath; getLastPathComponent[]; java.lang.Object; javax.swing.AbstractAction; actionPerformed[java.awt.event.ActionEvent]; void; null; selected>
<com.puppycrawl.tools.checkstyle.gui.CodeSelector; select[]; void; javax.swing.AbstractAction; actionPerformed[java.awt.event.ActionEvent]; void; getLastPathComponent[]; new CodeSelector(ast,editor,lines2position)>
<javax.swing.JTree; isExpanded[javax.swing.tree.TreePath]; boolean; javax.swing.AbstractAction; actionPerformed[java.awt.event.ActionEvent]; void; null; tree>
<javax.swing.JTree; collapsePath[javax.swing.tree.TreePath]; void; javax.swing.AbstractAction; actionPerformed[java.awt.event.ActionEvent]; void; null; tree>
<javax.swing.JTree; expandPath[javax.swing.tree.TreePath]; void; javax.swing.AbstractAction; actionPerformed[java.awt.event.ActionEvent]; void; null; tree>
<javax.swing.JTree; setSelectionPath[javax.swing.tree.TreePath]; void; javax.swing.AbstractAction; actionPerformed[java.awt.event.ActionEvent]; void; null; tree>
<javax.swing.KeyStroke; getKeyStroke[java.lang.String]; javax.swing.KeyStroke; com.puppycrawl.tools.checkstyle.gui.JTreeTable; JTreeTable[com.puppycrawl.tools.checkstyle.gui.TreeTableModel]; void; null; KeyStroke>
<javax.swing.InputMap; put[javax.swing.KeyStroke, java.lang.Object]; void; com.puppycrawl.tools.checkstyle.gui.JTreeTable; JTreeTable[com.puppycrawl.tools.checkstyle.gui.TreeTableModel]; void; null; getInputMap()>
<javax.swing.JComponent; getInputMap[]; javax.swing.InputMap; com.puppycrawl.tools.checkstyle.gui.JTreeTable; JTreeTable[com.puppycrawl.tools.checkstyle.gui.TreeTableModel]; void; put[javax.swing.KeyStroke, java.lang.Object]; this>
<javax.swing.ActionMap; put[java.lang.Object, javax.swing.Action]; void; com.puppycrawl.tools.checkstyle.gui.JTreeTable; JTreeTable[com.puppycrawl.tools.checkstyle.gui.TreeTableModel]; void; null; getActionMap()>
<javax.swing.JComponent; getActionMap[]; javax.swing.ActionMap; com.puppycrawl.tools.checkstyle.gui.JTreeTable; JTreeTable[com.puppycrawl.tools.checkstyle.gui.TreeTableModel]; void; put[java.lang.Object, javax.swing.Action]; this>
<com.puppycrawl.tools.checkstyle.gui.JTreeTable$TreeTableCellRenderer; updateUI[]; void; com.puppycrawl.tools.checkstyle.gui.JTreeTable; updateUI[]; void; null; tree>
<javax.swing.LookAndFeel; installColorsAndFont[javax.swing.JComponent, java.lang.String, java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.gui.JTreeTable; updateUI[]; void; null; LookAndFeel>
<javax.swing.JTable; getColumnClass[int]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.gui.JTreeTable; getEditingRow[]; int; null; this>
<javax.swing.JTree; getRowHeight[]; int; com.puppycrawl.tools.checkstyle.gui.JTreeTable; setRowHeight[int]; void; null; tree>
<com.puppycrawl.tools.checkstyle.gui.JTreeTable$TreeTableCellRenderer; setRowHeight[int]; void; com.puppycrawl.tools.checkstyle.gui.JTreeTable; setRowHeight[int]; void; null; tree>
<javax.swing.JTable; getRowHeight[]; int; com.puppycrawl.tools.checkstyle.gui.JTreeTable; setRowHeight[int]; void; null; this>
<javax.swing.JTree; getCellRenderer[]; javax.swing.tree.TreeCellRenderer; com.puppycrawl.tools.checkstyle.gui.JTreeTable.TreeTableCellRenderer; updateUI[]; void; null; this>
<javax.swing.tree.DefaultTreeCellRenderer; setTextSelectionColor[java.awt.Color]; void; com.puppycrawl.tools.checkstyle.gui.JTreeTable.TreeTableCellRenderer; updateUI[]; void; null; dtcr>
<javax.swing.UIManager; getColor[java.lang.Object]; java.awt.Color; com.puppycrawl.tools.checkstyle.gui.JTreeTable.TreeTableCellRenderer; updateUI[]; void; null; UIManager>
<javax.swing.tree.DefaultTreeCellRenderer; setBackgroundSelectionColor[java.awt.Color]; void; com.puppycrawl.tools.checkstyle.gui.JTreeTable.TreeTableCellRenderer; updateUI[]; void; null; dtcr>
<javax.swing.UIManager; getColor[java.lang.Object]; java.awt.Color; com.puppycrawl.tools.checkstyle.gui.JTreeTable.TreeTableCellRenderer; updateUI[]; void; null; UIManager>
<javax.swing.JTable; getRowHeight[]; int; com.puppycrawl.tools.checkstyle.gui.JTreeTable.TreeTableCellRenderer; setRowHeight[int]; void; null; JTreeTable.this>
<com.puppycrawl.tools.checkstyle.gui.JTreeTable; setRowHeight[int]; void; com.puppycrawl.tools.checkstyle.gui.JTreeTable.TreeTableCellRenderer; setRowHeight[int]; void; null; JTreeTable.this>
<javax.swing.JTree; getRowHeight[]; int; com.puppycrawl.tools.checkstyle.gui.JTreeTable.TreeTableCellRenderer; setRowHeight[int]; void; null; this>
<javax.swing.JComponent; getHeight[]; int; com.puppycrawl.tools.checkstyle.gui.JTreeTable.TreeTableCellRenderer; setBounds[int, int, int, int]; void; null; JTreeTable.this>
<java.awt.Graphics; translate[int, int]; void; com.puppycrawl.tools.checkstyle.gui.JTreeTable.TreeTableCellRenderer; paint[java.awt.Graphics]; void; null; g>
<javax.swing.JTree; getRowHeight[]; int; com.puppycrawl.tools.checkstyle.gui.JTreeTable.TreeTableCellRenderer; paint[java.awt.Graphics]; void; null; this>
<javax.swing.JComponent; setBackground[java.awt.Color]; void; com.puppycrawl.tools.checkstyle.gui.JTreeTable.TreeTableCellRenderer; getTableCellRendererComponent[javax.swing.JTable, java.lang.Object, boolean, boolean, int, int]; java.awt.Component; null; this>
<javax.swing.JTable; getSelectionBackground[]; java.awt.Color; com.puppycrawl.tools.checkstyle.gui.JTreeTable.TreeTableCellRenderer; getTableCellRendererComponent[javax.swing.JTable, java.lang.Object, boolean, boolean, int, int]; java.awt.Component; null; table>
<javax.swing.JComponent; setBackground[java.awt.Color]; void; com.puppycrawl.tools.checkstyle.gui.JTreeTable.TreeTableCellRenderer; getTableCellRendererComponent[javax.swing.JTable, java.lang.Object, boolean, boolean, int, int]; java.awt.Component; null; this>
<java.awt.Component; getBackground[]; java.awt.Color; com.puppycrawl.tools.checkstyle.gui.JTreeTable.TreeTableCellRenderer; getTableCellRendererComponent[javax.swing.JTable, java.lang.Object, boolean, boolean, int, int]; java.awt.Component; null; table>
<javax.swing.JTable; getColumnCount[]; int; com.puppycrawl.tools.checkstyle.gui.JTreeTable.TreeTableCellEditor; isCellEditable[java.util.EventObject]; boolean; null; this>
<javax.swing.JTable; getColumnClass[int]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.gui.JTreeTable.TreeTableCellEditor; isCellEditable[java.util.EventObject]; boolean; null; this>
<java.awt.AWTEvent; getID[]; int; com.puppycrawl.tools.checkstyle.gui.JTreeTable.TreeTableCellEditor; isCellEditable[java.util.EventObject]; boolean; null; me>
<java.awt.event.InputEvent; getWhen[]; long; com.puppycrawl.tools.checkstyle.gui.JTreeTable.TreeTableCellEditor; isCellEditable[java.util.EventObject]; boolean; null; me>
<java.awt.event.InputEvent; getModifiers[]; int; com.puppycrawl.tools.checkstyle.gui.JTreeTable.TreeTableCellEditor; isCellEditable[java.util.EventObject]; boolean; null; me>
<java.awt.event.MouseEvent; getX[]; int; com.puppycrawl.tools.checkstyle.gui.JTreeTable.TreeTableCellEditor; isCellEditable[java.util.EventObject]; boolean; null; me>
<javax.swing.JTable; getCellRect[int, int, boolean]; java.awt.Rectangle; com.puppycrawl.tools.checkstyle.gui.JTreeTable.TreeTableCellEditor; isCellEditable[java.util.EventObject]; boolean; null; this>
<java.awt.event.MouseEvent; getY[]; int; com.puppycrawl.tools.checkstyle.gui.JTreeTable.TreeTableCellEditor; isCellEditable[java.util.EventObject]; boolean; null; me>
<java.awt.event.MouseEvent; getClickCount[]; int; com.puppycrawl.tools.checkstyle.gui.JTreeTable.TreeTableCellEditor; isCellEditable[java.util.EventObject]; boolean; null; me>
<java.awt.event.MouseEvent; isPopupTrigger[]; boolean; com.puppycrawl.tools.checkstyle.gui.JTreeTable.TreeTableCellEditor; isCellEditable[java.util.EventObject]; boolean; null; me>
<java.awt.Component; dispatchEvent[java.awt.AWTEvent]; void; com.puppycrawl.tools.checkstyle.gui.JTreeTable.TreeTableCellEditor; isCellEditable[java.util.EventObject]; boolean; null; tree>
<javax.swing.ListSelectionModel; addListSelectionListener[javax.swing.event.ListSelectionListener]; void; com.puppycrawl.tools.checkstyle.gui.JTreeTable.ListToTreeSelectionModelWrapper; ListToTreeSelectionModelWrapper[]; void; null; getListSelectionModel()>
<com.puppycrawl.tools.checkstyle.gui.JTreeTable$ListToTreeSelectionModelWrapper; getListSelectionModel[]; javax.swing.ListSelectionModel; com.puppycrawl.tools.checkstyle.gui.JTreeTable.ListToTreeSelectionModelWrapper; ListToTreeSelectionModelWrapper[]; void; addListSelectionListener[javax.swing.event.ListSelectionListener]; this>
<com.puppycrawl.tools.checkstyle.gui.JTreeTable$ListToTreeSelectionModelWrapper; createListSelectionListener[]; javax.swing.event.ListSelectionListener; com.puppycrawl.tools.checkstyle.gui.JTreeTable.ListToTreeSelectionModelWrapper; ListToTreeSelectionModelWrapper[]; void; null; this>
<javax.swing.DefaultListSelectionModel; getMinSelectionIndex[]; int; com.puppycrawl.tools.checkstyle.gui.JTreeTable.ListToTreeSelectionModelWrapper; updateSelectedPathsFromSelectedRows[]; void; null; listSelectionModel>
<javax.swing.DefaultListSelectionModel; getMaxSelectionIndex[]; int; com.puppycrawl.tools.checkstyle.gui.JTreeTable.ListToTreeSelectionModelWrapper; updateSelectedPathsFromSelectedRows[]; void; null; listSelectionModel>
<javax.swing.tree.DefaultTreeSelectionModel; clearSelection[]; void; com.puppycrawl.tools.checkstyle.gui.JTreeTable.ListToTreeSelectionModelWrapper; updateSelectedPathsFromSelectedRows[]; void; null; this>
<javax.swing.DefaultListSelectionModel; isSelectedIndex[int]; boolean; com.puppycrawl.tools.checkstyle.gui.JTreeTable.ListToTreeSelectionModelWrapper; updateSelectedPathsFromSelectedRows[]; void; null; listSelectionModel>
<javax.swing.JTree; getPathForRow[int]; javax.swing.tree.TreePath; com.puppycrawl.tools.checkstyle.gui.JTreeTable.ListToTreeSelectionModelWrapper; updateSelectedPathsFromSelectedRows[]; void; null; tree>
<javax.swing.tree.DefaultTreeSelectionModel; addSelectionPath[javax.swing.tree.TreePath]; void; com.puppycrawl.tools.checkstyle.gui.JTreeTable.ListToTreeSelectionModelWrapper; updateSelectedPathsFromSelectedRows[]; void; null; this>
<com.puppycrawl.tools.checkstyle.gui.JTreeTable$ListToTreeSelectionModelWrapper; updateSelectedPathsFromSelectedRows[]; void; com.puppycrawl.tools.checkstyle.gui.JTreeTable.ListToTreeSelectionModelWrapper.ListSelectionHandler; valueChanged[javax.swing.event.ListSelectionEvent]; void; null; this>
<not found; newArrayList[]; not found; com.puppycrawl.tools.checkstyle.PropertyResolver; resolve[java.lang.String]; java.lang.String; null; Lists>
<not found; newArrayList[]; not found; com.puppycrawl.tools.checkstyle.PropertyResolver; resolve[java.lang.String]; java.lang.String; null; Lists>
<not found; newArrayList[]; not found; com.puppycrawl.tools.checkstyle.PropertyResolver; resolve[java.lang.String]; java.lang.String; null; Lists>
<not found; add[]; not found; com.puppycrawl.tools.checkstyle.CheckStyleTask; addFileset[com.puppycrawl.tools.checkstyle.FileSet]; void; null; mFileSets>
<java.util.List; add[com.puppycrawl.tools.checkstyle.CheckStyleTask.Formatter]; boolean; com.puppycrawl.tools.checkstyle.CheckStyleTask; addFormatter[com.puppycrawl.tools.checkstyle.CheckStyleTask.Formatter]; void; null; mFormatters>
<java.util.List; add[com.puppycrawl.tools.checkstyle.CheckStyleTask.Property]; boolean; com.puppycrawl.tools.checkstyle.CheckStyleTask; addProperty[com.puppycrawl.tools.checkstyle.CheckStyleTask.Property]; void; null; mOverrideProps>
<not found; append[]; not found; com.puppycrawl.tools.checkstyle.CheckStyleTask; setClasspath[com.puppycrawl.tools.checkstyle.Path]; void; null; mClasspath>
<not found; setRefid[]; not found; com.puppycrawl.tools.checkstyle.CheckStyleTask; setClasspathRef[com.puppycrawl.tools.checkstyle.Reference]; void; null; createClasspath()>
<com.puppycrawl.tools.checkstyle.CheckStyleTask; createClasspath[]; com.puppycrawl.tools.checkstyle.Path; com.puppycrawl.tools.checkstyle.CheckStyleTask; setClasspathRef[com.puppycrawl.tools.checkstyle.Reference]; void; setRefid[]; this>
<not found; getProject[]; not found; com.puppycrawl.tools.checkstyle.CheckStyleTask; createClasspath[]; com.puppycrawl.tools.checkstyle.Path; null; this>
<not found; createPath[]; not found; com.puppycrawl.tools.checkstyle.CheckStyleTask; createClasspath[]; com.puppycrawl.tools.checkstyle.Path; null; mClasspath>
<java.io.File; getAbsolutePath[]; java.lang.String; com.puppycrawl.tools.checkstyle.CheckStyleTask; setFile[java.io.File]; void; null; aFile>
<com.puppycrawl.tools.checkstyle.CheckStyleTask; setConfigLocation[java.lang.String]; void; com.puppycrawl.tools.checkstyle.CheckStyleTask; setConfig[java.io.File]; void; null; this>
<java.io.File; getAbsolutePath[]; java.lang.String; com.puppycrawl.tools.checkstyle.CheckStyleTask; setConfig[java.io.File]; void; null; aFile>
<com.puppycrawl.tools.checkstyle.CheckStyleTask; setConfigLocation[java.lang.String]; void; com.puppycrawl.tools.checkstyle.CheckStyleTask; setConfigURL[java.net.URL]; void; null; this>
<java.net.URL; toExternalForm[]; java.lang.String; com.puppycrawl.tools.checkstyle.CheckStyleTask; setConfigURL[java.net.URL]; void; null; aURL>
<java.lang.System; currentTimeMillis[]; long; com.puppycrawl.tools.checkstyle.CheckStyleTask; execute[]; void; null; System>
<com.puppycrawl.tools.checkstyle.CheckStyleTask; realExecute[]; void; com.puppycrawl.tools.checkstyle.CheckStyleTask; execute[]; void; null; this>
<java.lang.System; currentTimeMillis[]; long; com.puppycrawl.tools.checkstyle.CheckStyleTask; execute[]; void; null; System>
<not found; log[]; not found; com.puppycrawl.tools.checkstyle.CheckStyleTask; execute[]; void; null; this>
<java.util.ResourceBundle; getBundle[java.lang.String]; java.util.ResourceBundle; com.puppycrawl.tools.checkstyle.CheckStyleTask; realExecute[]; void; null; ResourceBundle>
<java.util.ResourceBundle; getString[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.CheckStyleTask; realExecute[]; void; null; compilationProperties>
<java.util.ResourceBundle; getString[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.CheckStyleTask; realExecute[]; void; null; compilationProperties>
<not found; log[]; not found; com.puppycrawl.tools.checkstyle.CheckStyleTask; realExecute[]; void; null; this>
<not found; log[]; not found; com.puppycrawl.tools.checkstyle.CheckStyleTask; realExecute[]; void; null; this>
<not found; size[]; not found; com.puppycrawl.tools.checkstyle.CheckStyleTask; realExecute[]; void; null; mFileSets>
<not found; getLocation[]; not found; com.puppycrawl.tools.checkstyle.CheckStyleTask; realExecute[]; void; null; this>
<not found; getLocation[]; not found; com.puppycrawl.tools.checkstyle.CheckStyleTask; realExecute[]; void; null; this>
<com.puppycrawl.tools.checkstyle.CheckStyleTask; createChecker[]; com.puppycrawl.tools.checkstyle.Checker; com.puppycrawl.tools.checkstyle.CheckStyleTask; realExecute[]; void; null; this>
<com.puppycrawl.tools.checkstyle.Checker; addListener[com.puppycrawl.tools.checkstyle.api.AuditListener]; void; com.puppycrawl.tools.checkstyle.CheckStyleTask; realExecute[]; void; null; c>
<java.lang.System; currentTimeMillis[]; long; com.puppycrawl.tools.checkstyle.CheckStyleTask; realExecute[]; void; null; System>
<com.puppycrawl.tools.checkstyle.CheckStyleTask; scanFileSets[]; java.util.List<java.io.File>; com.puppycrawl.tools.checkstyle.CheckStyleTask; realExecute[]; void; null; this>
<java.lang.System; currentTimeMillis[]; long; com.puppycrawl.tools.checkstyle.CheckStyleTask; realExecute[]; void; null; System>
<not found; log[]; not found; com.puppycrawl.tools.checkstyle.CheckStyleTask; realExecute[]; void; null; this>
<not found; log[]; not found; com.puppycrawl.tools.checkstyle.CheckStyleTask; realExecute[]; void; null; this>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.CheckStyleTask; realExecute[]; void; null; files>
<not found; log[]; not found; com.puppycrawl.tools.checkstyle.CheckStyleTask; realExecute[]; void; null; this>
<java.lang.System; currentTimeMillis[]; long; com.puppycrawl.tools.checkstyle.CheckStyleTask; realExecute[]; void; null; System>
<com.puppycrawl.tools.checkstyle.Checker; process[java.util.List<java.io.File>]; int; com.puppycrawl.tools.checkstyle.CheckStyleTask; realExecute[]; void; null; c>
<java.lang.System; currentTimeMillis[]; long; com.puppycrawl.tools.checkstyle.CheckStyleTask; realExecute[]; void; null; System>
<not found; log[]; not found; com.puppycrawl.tools.checkstyle.CheckStyleTask; realExecute[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.SeverityLevelCounter; getCount[]; int; com.puppycrawl.tools.checkstyle.CheckStyleTask; realExecute[]; void; null; warningCounter>
<not found; setProperty[]; not found; com.puppycrawl.tools.checkstyle.CheckStyleTask; realExecute[]; void; null; getProject()>
<not found; getProject[]; not found; com.puppycrawl.tools.checkstyle.CheckStyleTask; realExecute[]; void; setProperty[]; this>
<not found; getLocation[]; not found; com.puppycrawl.tools.checkstyle.CheckStyleTask; realExecute[]; void; null; this>
<com.puppycrawl.tools.checkstyle.Checker; destroy[]; void; com.puppycrawl.tools.checkstyle.CheckStyleTask; realExecute[]; void; null; c>
<com.puppycrawl.tools.checkstyle.CheckStyleTask; createOverridingProperties[]; java.util.Properties; com.puppycrawl.tools.checkstyle.CheckStyleTask; createChecker[]; com.puppycrawl.tools.checkstyle.Checker; null; this>
<com.puppycrawl.tools.checkstyle.ConfigurationLoader; loadConfiguration[java.lang.String, com.puppycrawl.tools.checkstyle.PropertyResolver, boolean]; com.puppycrawl.tools.checkstyle.api.Configuration; com.puppycrawl.tools.checkstyle.CheckStyleTask; createChecker[]; com.puppycrawl.tools.checkstyle.Checker; null; ConfigurationLoader>
<not found; getProject[]; not found; com.puppycrawl.tools.checkstyle.CheckStyleTask; createChecker[]; com.puppycrawl.tools.checkstyle.Checker; null; this>
<com.puppycrawl.tools.checkstyle.DefaultContext; add[java.lang.String, java.lang.Object]; void; com.puppycrawl.tools.checkstyle.CheckStyleTask; createChecker[]; com.puppycrawl.tools.checkstyle.Checker; null; context>
<java.lang.Class; getClassLoader[]; java.lang.ClassLoader; com.puppycrawl.tools.checkstyle.CheckStyleTask; createChecker[]; com.puppycrawl.tools.checkstyle.Checker; null; Checker.class>
<com.puppycrawl.tools.checkstyle.DefaultContext; add[java.lang.String, java.lang.Object]; void; com.puppycrawl.tools.checkstyle.CheckStyleTask; createChecker[]; com.puppycrawl.tools.checkstyle.Checker; null; context>
<com.puppycrawl.tools.checkstyle.api.AutomaticBean; contextualize[com.puppycrawl.tools.checkstyle.api.Context]; void; com.puppycrawl.tools.checkstyle.CheckStyleTask; createChecker[]; com.puppycrawl.tools.checkstyle.Checker; null; c>
<com.puppycrawl.tools.checkstyle.api.AutomaticBean; configure[com.puppycrawl.tools.checkstyle.api.Configuration]; void; com.puppycrawl.tools.checkstyle.CheckStyleTask; createChecker[]; com.puppycrawl.tools.checkstyle.Checker; null; c>
<com.puppycrawl.tools.checkstyle.CheckStyleTask; getListeners[]; com.puppycrawl.tools.checkstyle.api.AuditListener[]; com.puppycrawl.tools.checkstyle.CheckStyleTask; createChecker[]; com.puppycrawl.tools.checkstyle.Checker; null; this>
<com.puppycrawl.tools.checkstyle.Checker; addListener[com.puppycrawl.tools.checkstyle.api.AuditListener]; void; com.puppycrawl.tools.checkstyle.CheckStyleTask; createChecker[]; com.puppycrawl.tools.checkstyle.Checker; null; c>
<java.lang.Throwable; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.CheckStyleTask; createChecker[]; com.puppycrawl.tools.checkstyle.Checker; null; e>
<java.util.Properties; load[java.io.InputStream]; void; com.puppycrawl.tools.checkstyle.CheckStyleTask; createOverridingProperties[]; java.util.Properties; null; retVal>
<not found; getLocation[]; not found; com.puppycrawl.tools.checkstyle.CheckStyleTask; createOverridingProperties[]; java.util.Properties; null; this>
<not found; getLocation[]; not found; com.puppycrawl.tools.checkstyle.CheckStyleTask; createOverridingProperties[]; java.util.Properties; null; this>
<com.puppycrawl.tools.checkstyle.api.Utils; closeQuietly[java.io.Closeable]; void; com.puppycrawl.tools.checkstyle.CheckStyleTask; createOverridingProperties[]; java.util.Properties; null; Utils>
<not found; getProperties[]; not found; com.puppycrawl.tools.checkstyle.CheckStyleTask; createOverridingProperties[]; java.util.Properties; null; this.getProject()>
<not found; getProject[]; not found; com.puppycrawl.tools.checkstyle.CheckStyleTask; createOverridingProperties[]; java.util.Properties; getProperties[]; this>
<java.util.Hashtable; keySet[]; java.util.Set<>; com.puppycrawl.tools.checkstyle.CheckStyleTask; createOverridingProperties[]; java.util.Properties; null; antProps>
<java.lang.String; valueOf[java.lang.Object]; java.lang.String; com.puppycrawl.tools.checkstyle.CheckStyleTask; createOverridingProperties[]; java.util.Properties; null; String>
<java.util.Hashtable; get[java.lang.Object]; ; com.puppycrawl.tools.checkstyle.CheckStyleTask; createOverridingProperties[]; java.util.Properties; null; antProps>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.CheckStyleTask; createOverridingProperties[]; java.util.Properties; null; retVal>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.CheckStyleTask; createOverridingProperties[]; java.util.Properties; null; retVal>
<com.puppycrawl.tools.checkstyle.CheckStyleTask$Property; getKey[]; java.lang.String; com.puppycrawl.tools.checkstyle.CheckStyleTask; createOverridingProperties[]; java.util.Properties; null; p>
<com.puppycrawl.tools.checkstyle.CheckStyleTask$Property; getValue[]; java.lang.String; com.puppycrawl.tools.checkstyle.CheckStyleTask; createOverridingProperties[]; java.util.Properties; null; p>
<java.lang.Math; max[int, int]; int; com.puppycrawl.tools.checkstyle.CheckStyleTask; getListeners[]; com.puppycrawl.tools.checkstyle.api.AuditListener[]; null; Math>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.CheckStyleTask; getListeners[]; com.puppycrawl.tools.checkstyle.api.AuditListener[]; null; mFormatters>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.CheckStyleTask; getListeners[]; com.puppycrawl.tools.checkstyle.api.AuditListener[]; null; mFormatters>
<java.util.List; get[int]; com.puppycrawl.tools.checkstyle.CheckStyleTask.Formatter; com.puppycrawl.tools.checkstyle.CheckStyleTask; getListeners[]; com.puppycrawl.tools.checkstyle.api.AuditListener[]; null; mFormatters>
<com.puppycrawl.tools.checkstyle.CheckStyleTask$Formatter; createListener[com.puppycrawl.tools.checkstyle.Task]; com.puppycrawl.tools.checkstyle.api.AuditListener; com.puppycrawl.tools.checkstyle.CheckStyleTask; getListeners[]; com.puppycrawl.tools.checkstyle.api.AuditListener[]; null; f>
<not found; newArrayList[]; not found; com.puppycrawl.tools.checkstyle.CheckStyleTask; scanFileSets[]; java.util.List<java.io.File>; null; Lists>
<not found; log[]; not found; com.puppycrawl.tools.checkstyle.CheckStyleTask; scanFileSets[]; java.util.List<java.io.File>; null; this>
<java.util.List; add[java.io.File]; boolean; com.puppycrawl.tools.checkstyle.CheckStyleTask; scanFileSets[]; java.util.List<java.io.File>; null; list>
<not found; size[]; not found; com.puppycrawl.tools.checkstyle.CheckStyleTask; scanFileSets[]; java.util.List<java.io.File>; null; mFileSets>
<not found; get[]; not found; com.puppycrawl.tools.checkstyle.CheckStyleTask; scanFileSets[]; java.util.List<java.io.File>; null; mFileSets>
<not found; getDirectoryScanner[]; not found; com.puppycrawl.tools.checkstyle.CheckStyleTask; scanFileSets[]; java.util.List<java.io.File>; null; fs>
<not found; getProject[]; not found; com.puppycrawl.tools.checkstyle.CheckStyleTask; scanFileSets[]; java.util.List<java.io.File>; null; this>
<not found; scan[]; not found; com.puppycrawl.tools.checkstyle.CheckStyleTask; scanFileSets[]; java.util.List<java.io.File>; null; ds>
<not found; getIncludedFiles[]; not found; com.puppycrawl.tools.checkstyle.CheckStyleTask; scanFileSets[]; java.util.List<java.io.File>; null; ds>
<not found; log[]; not found; com.puppycrawl.tools.checkstyle.CheckStyleTask; scanFileSets[]; java.util.List<java.io.File>; null; this>
<not found; getBasedir[]; not found; com.puppycrawl.tools.checkstyle.CheckStyleTask; scanFileSets[]; java.util.List<java.io.File>; null; ds>
<not found; getBasedir[]; not found; com.puppycrawl.tools.checkstyle.CheckStyleTask; scanFileSets[]; java.util.List<java.io.File>; null; ds>
<java.util.List; add[java.io.File]; boolean; com.puppycrawl.tools.checkstyle.CheckStyleTask; scanFileSets[]; java.util.List<java.io.File>; null; list>
<java.lang.Object; clone[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.CheckStyleTask.FormatterType; getValues[]; java.lang.String[]; null; VALUES>
<not found; getValue[]; not found; com.puppycrawl.tools.checkstyle.CheckStyleTask.Formatter; setType[com.puppycrawl.tools.checkstyle.CheckStyleTask.FormatterType]; void; null; aType>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.CheckStyleTask.Formatter; setType[com.puppycrawl.tools.checkstyle.CheckStyleTask.FormatterType]; void; null; E_XML>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.CheckStyleTask.Formatter; setType[com.puppycrawl.tools.checkstyle.CheckStyleTask.FormatterType]; void; null; E_PLAIN>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.CheckStyleTask.Formatter; createListener[com.puppycrawl.tools.checkstyle.Task]; com.puppycrawl.tools.checkstyle.api.AuditListener; null; E_XML>
<not found; getValue[]; not found; com.puppycrawl.tools.checkstyle.CheckStyleTask.Formatter; createListener[com.puppycrawl.tools.checkstyle.Task]; com.puppycrawl.tools.checkstyle.api.AuditListener; null; mFormatterType>
<com.puppycrawl.tools.checkstyle.CheckStyleTask$Formatter; createXMLLogger[com.puppycrawl.tools.checkstyle.Task]; com.puppycrawl.tools.checkstyle.api.AuditListener; com.puppycrawl.tools.checkstyle.CheckStyleTask.Formatter; createListener[com.puppycrawl.tools.checkstyle.Task]; com.puppycrawl.tools.checkstyle.api.AuditListener; null; this>
<com.puppycrawl.tools.checkstyle.CheckStyleTask$Formatter; createDefaultLogger[com.puppycrawl.tools.checkstyle.Task]; com.puppycrawl.tools.checkstyle.api.AuditListener; com.puppycrawl.tools.checkstyle.CheckStyleTask.Formatter; createListener[com.puppycrawl.tools.checkstyle.Task]; com.puppycrawl.tools.checkstyle.api.AuditListener; null; this>
<com.puppycrawl.tools.checkstyle.CheckStyleTask$Property; setValue[java.lang.String]; void; com.puppycrawl.tools.checkstyle.CheckStyleTask.Property; setFile[java.io.File]; void; null; this>
<java.io.File; getAbsolutePath[]; java.lang.String; com.puppycrawl.tools.checkstyle.CheckStyleTask.Property; setFile[java.io.File]; void; null; aValue>
<com.puppycrawl.tools.checkstyle.XMLLogger; setOutputStream[java.io.OutputStream]; void; com.puppycrawl.tools.checkstyle.XMLLogger; XMLLogger[java.io.OutputStream, boolean]; void; null; this>
<java.io.PrintWriter; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.XMLLogger; auditStarted[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; mWriter>
<java.util.ResourceBundle; getBundle[java.lang.String]; java.util.ResourceBundle; com.puppycrawl.tools.checkstyle.XMLLogger; auditStarted[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; ResourceBundle>
<java.util.ResourceBundle; getString[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.XMLLogger; auditStarted[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; compilationProperties>
<java.io.PrintWriter; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.XMLLogger; auditStarted[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; mWriter>
<java.io.PrintWriter; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.XMLLogger; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; mWriter>
<java.io.PrintWriter; close[]; void; com.puppycrawl.tools.checkstyle.XMLLogger; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; mWriter>
<java.io.PrintWriter; flush[]; void; com.puppycrawl.tools.checkstyle.XMLLogger; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; mWriter>
<java.io.PrintWriter; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.XMLLogger; fileStarted[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; mWriter>
<com.puppycrawl.tools.checkstyle.XMLLogger; encode[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.XMLLogger; fileStarted[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getFileName[]; java.lang.String; com.puppycrawl.tools.checkstyle.XMLLogger; fileStarted[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; aEvt>
<java.io.PrintWriter; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.XMLLogger; fileFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; mWriter>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.XMLLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; SeverityLevel.IGNORE>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getSeverityLevel[]; com.puppycrawl.tools.checkstyle.api.SeverityLevel; com.puppycrawl.tools.checkstyle.XMLLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; aEvt>
<java.io.PrintWriter; print[java.lang.String]; void; com.puppycrawl.tools.checkstyle.XMLLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; mWriter>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getLine[]; int; com.puppycrawl.tools.checkstyle.XMLLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; aEvt>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getColumn[]; int; com.puppycrawl.tools.checkstyle.XMLLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; aEvt>
<java.io.PrintWriter; print[java.lang.String]; void; com.puppycrawl.tools.checkstyle.XMLLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; mWriter>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getColumn[]; int; com.puppycrawl.tools.checkstyle.XMLLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; aEvt>
<java.io.PrintWriter; print[java.lang.String]; void; com.puppycrawl.tools.checkstyle.XMLLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; mWriter>
<com.puppycrawl.tools.checkstyle.api.SeverityLevel; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.XMLLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; aEvt.getSeverityLevel()>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getSeverityLevel[]; com.puppycrawl.tools.checkstyle.api.SeverityLevel; com.puppycrawl.tools.checkstyle.XMLLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; getName[]; aEvt>
<java.io.PrintWriter; print[java.lang.String]; void; com.puppycrawl.tools.checkstyle.XMLLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; mWriter>
<com.puppycrawl.tools.checkstyle.XMLLogger; encode[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.XMLLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.XMLLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; aEvt>
<java.io.PrintWriter; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.XMLLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; mWriter>
<com.puppycrawl.tools.checkstyle.XMLLogger; encode[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.XMLLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getSourceName[]; java.lang.String; com.puppycrawl.tools.checkstyle.XMLLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; aEvt>
<java.io.PrintWriter; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.XMLLogger; addException[com.puppycrawl.tools.checkstyle.api.AuditEvent, java.lang.Throwable]; void; null; pw>
<java.io.PrintWriter; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.XMLLogger; addException[com.puppycrawl.tools.checkstyle.api.AuditEvent, java.lang.Throwable]; void; null; pw>
<java.lang.Throwable; printStackTrace[java.io.PrintWriter]; void; com.puppycrawl.tools.checkstyle.XMLLogger; addException[com.puppycrawl.tools.checkstyle.api.AuditEvent, java.lang.Throwable]; void; null; aThrowable>
<java.io.PrintWriter; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.XMLLogger; addException[com.puppycrawl.tools.checkstyle.api.AuditEvent, java.lang.Throwable]; void; null; pw>
<java.io.PrintWriter; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.XMLLogger; addException[com.puppycrawl.tools.checkstyle.api.AuditEvent, java.lang.Throwable]; void; null; pw>
<java.io.PrintWriter; flush[]; void; com.puppycrawl.tools.checkstyle.XMLLogger; addException[com.puppycrawl.tools.checkstyle.api.AuditEvent, java.lang.Throwable]; void; null; pw>
<java.io.PrintWriter; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.XMLLogger; addException[com.puppycrawl.tools.checkstyle.api.AuditEvent, java.lang.Throwable]; void; null; mWriter>
<com.puppycrawl.tools.checkstyle.XMLLogger; encode[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.XMLLogger; addException[com.puppycrawl.tools.checkstyle.api.AuditEvent, java.lang.Throwable]; void; null; this>
<java.io.StringWriter; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.XMLLogger; addException[com.puppycrawl.tools.checkstyle.api.AuditEvent, java.lang.Throwable]; void; null; sw>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.XMLLogger; encode[java.lang.String]; java.lang.String; null; aValue>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.XMLLogger; encode[java.lang.String]; java.lang.String; null; aValue>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.XMLLogger; encode[java.lang.String]; java.lang.String; null; sb>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.XMLLogger; encode[java.lang.String]; java.lang.String; null; sb>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.XMLLogger; encode[java.lang.String]; java.lang.String; null; sb>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.XMLLogger; encode[java.lang.String]; java.lang.String; null; sb>
<java.lang.String; indexOf[java.lang.String, int]; int; com.puppycrawl.tools.checkstyle.XMLLogger; encode[java.lang.String]; java.lang.String; null; aValue>
<com.puppycrawl.tools.checkstyle.XMLLogger; isReference[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.XMLLogger; encode[java.lang.String]; java.lang.String; null; this>
<java.lang.String; substring[int, int]; java.lang.String; com.puppycrawl.tools.checkstyle.XMLLogger; encode[java.lang.String]; java.lang.String; null; aValue>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.XMLLogger; encode[java.lang.String]; java.lang.String; null; sb>
<java.lang.StringBuffer; append[char]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.XMLLogger; encode[java.lang.String]; java.lang.String; null; sb>
<java.lang.StringBuffer; append[char]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.XMLLogger; encode[java.lang.String]; java.lang.String; null; sb>
<java.lang.StringBuffer; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.XMLLogger; encode[java.lang.String]; java.lang.String; null; sb>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.XMLLogger; isReference[java.lang.String]; boolean; null; aEnt>
<java.lang.String; endsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.XMLLogger; isReference[java.lang.String]; boolean; null; aEnt>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.XMLLogger; isReference[java.lang.String]; boolean; null; aEnt>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.XMLLogger; isReference[java.lang.String]; boolean; null; aEnt>
<java.lang.Integer; parseInt[java.lang.String, int]; int; com.puppycrawl.tools.checkstyle.XMLLogger; isReference[java.lang.String]; boolean; null; Integer>
<java.lang.String; substring[int, int]; java.lang.String; com.puppycrawl.tools.checkstyle.XMLLogger; isReference[java.lang.String]; boolean; null; aEnt>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.XMLLogger; isReference[java.lang.String]; boolean; null; aEnt>
<java.lang.String; substring[int, int]; java.lang.String; com.puppycrawl.tools.checkstyle.XMLLogger; isReference[java.lang.String]; boolean; null; aEnt>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.XMLLogger; isReference[java.lang.String]; boolean; null; aEnt>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.XMLLogger; isReference[java.lang.String]; boolean; null; name>
<com.puppycrawl.tools.checkstyle.doclets.TokenTypesDoclet; getDestFileName[java.lang.String[][]]; java.lang.String; com.puppycrawl.tools.checkstyle.doclets.TokenTypesDoclet; start[com.puppycrawl.tools.checkstyle.doclets.RootDoc]; boolean; null; this>
<not found; options[]; not found; com.puppycrawl.tools.checkstyle.doclets.TokenTypesDoclet; start[com.puppycrawl.tools.checkstyle.doclets.RootDoc]; boolean; null; aRoot>
<not found; classes[]; not found; com.puppycrawl.tools.checkstyle.doclets.TokenTypesDoclet; start[com.puppycrawl.tools.checkstyle.doclets.RootDoc]; boolean; null; aRoot>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.doclets.TokenTypesDoclet; start[com.puppycrawl.tools.checkstyle.doclets.RootDoc]; boolean; null; "TokenTypes">
<not found; name[]; not found; com.puppycrawl.tools.checkstyle.doclets.TokenTypesDoclet; start[com.puppycrawl.tools.checkstyle.doclets.RootDoc]; boolean; null; classes[0]>
<not found; fields[]; not found; com.puppycrawl.tools.checkstyle.doclets.TokenTypesDoclet; start[com.puppycrawl.tools.checkstyle.doclets.RootDoc]; boolean; null; classes[0]>
<not found; isStatic[]; not found; com.puppycrawl.tools.checkstyle.doclets.TokenTypesDoclet; start[com.puppycrawl.tools.checkstyle.doclets.RootDoc]; boolean; null; field>
<not found; isPublic[]; not found; com.puppycrawl.tools.checkstyle.doclets.TokenTypesDoclet; start[com.puppycrawl.tools.checkstyle.doclets.RootDoc]; boolean; null; field>
<not found; isFinal[]; not found; com.puppycrawl.tools.checkstyle.doclets.TokenTypesDoclet; start[com.puppycrawl.tools.checkstyle.doclets.RootDoc]; boolean; null; field>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.doclets.TokenTypesDoclet; start[com.puppycrawl.tools.checkstyle.doclets.RootDoc]; boolean; null; "int">
<not found; qualifiedTypeName[]; not found; com.puppycrawl.tools.checkstyle.doclets.TokenTypesDoclet; start[com.puppycrawl.tools.checkstyle.doclets.RootDoc]; boolean; null; field.type()>
<not found; type[]; not found; com.puppycrawl.tools.checkstyle.doclets.TokenTypesDoclet; start[com.puppycrawl.tools.checkstyle.doclets.RootDoc]; boolean; qualifiedTypeName[]; field>
<not found; firstSentenceTags[]; not found; com.puppycrawl.tools.checkstyle.doclets.TokenTypesDoclet; start[com.puppycrawl.tools.checkstyle.doclets.RootDoc]; boolean; null; field>
<java.io.PrintStream; println[char[]]; void; com.puppycrawl.tools.checkstyle.doclets.TokenTypesDoclet; start[com.puppycrawl.tools.checkstyle.doclets.RootDoc]; boolean; null; ps>
<not found; name[]; not found; com.puppycrawl.tools.checkstyle.doclets.TokenTypesDoclet; start[com.puppycrawl.tools.checkstyle.doclets.RootDoc]; boolean; null; field>
<not found; text[]; not found; com.puppycrawl.tools.checkstyle.doclets.TokenTypesDoclet; start[com.puppycrawl.tools.checkstyle.doclets.RootDoc]; boolean; null; field.firstSentenceTags()[0]>
<not found; firstSentenceTags[]; not found; com.puppycrawl.tools.checkstyle.doclets.TokenTypesDoclet; start[com.puppycrawl.tools.checkstyle.doclets.RootDoc]; boolean; text[]; field>
<java.io.PrintStream; close[]; void; com.puppycrawl.tools.checkstyle.doclets.TokenTypesDoclet; start[com.puppycrawl.tools.checkstyle.doclets.RootDoc]; boolean; null; ps>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.doclets.TokenTypesDoclet; optionLength[java.lang.String]; int; null; DEST_FILE_OPT>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.doclets.TokenTypesDoclet; validOptions[java.lang.String[][], com.puppycrawl.tools.checkstyle.doclets.DocErrorReporter]; boolean; null; DEST_FILE_OPT>
<not found; printError[]; not found; com.puppycrawl.tools.checkstyle.doclets.TokenTypesDoclet; validOptions[java.lang.String[][], com.puppycrawl.tools.checkstyle.doclets.DocErrorReporter]; boolean; null; aReporter>
<not found; printError[]; not found; com.puppycrawl.tools.checkstyle.doclets.TokenTypesDoclet; validOptions[java.lang.String[][], com.puppycrawl.tools.checkstyle.doclets.DocErrorReporter]; boolean; null; aReporter>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.doclets.TokenTypesDoclet; getDestFileName[java.lang.String[][]]; java.lang.String; null; DEST_FILE_OPT>
<com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; getCheckName[com.puppycrawl.tools.checkstyle.doclets.ClassDoc]; java.lang.String; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet.ClassDocByCheckNameComparator; compare[com.puppycrawl.tools.checkstyle.doclets.ClassDoc, com.puppycrawl.tools.checkstyle.doclets.ClassDoc]; int; null; this>
<com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; getCheckName[com.puppycrawl.tools.checkstyle.doclets.ClassDoc]; java.lang.String; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet.ClassDocByCheckNameComparator; compare[com.puppycrawl.tools.checkstyle.doclets.ClassDoc, com.puppycrawl.tools.checkstyle.doclets.ClassDoc]; int; null; this>
<java.lang.String; compareTo[java.lang.String]; int; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet.ClassDocByCheckNameComparator; compare[com.puppycrawl.tools.checkstyle.doclets.ClassDoc, com.puppycrawl.tools.checkstyle.doclets.ClassDoc]; int; null; checkName1>
<not found; firstSentenceTags[]; not found; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; getDescription[com.puppycrawl.tools.checkstyle.doclets.ClassDoc]; java.lang.String; null; aClassDoc>
<java.lang.StringBuffer; append[java.lang.Object]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; getDescription[com.puppycrawl.tools.checkstyle.doclets.ClassDoc]; java.lang.String; null; buf>
<not found; text[]; not found; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; getDescription[com.puppycrawl.tools.checkstyle.doclets.ClassDoc]; java.lang.String; null; tags[0]>
<com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; removeOpeningParagraphTag[java.lang.StringBuffer]; void; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; getDescription[com.puppycrawl.tools.checkstyle.doclets.ClassDoc]; java.lang.String; null; this>
<java.lang.StringBuffer; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; getDescription[com.puppycrawl.tools.checkstyle.doclets.ClassDoc]; java.lang.String; null; buf>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; removeOpeningParagraphTag[java.lang.StringBuffer]; void; null; openTag>
<java.lang.StringBuffer; length[]; int; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; removeOpeningParagraphTag[java.lang.StringBuffer]; void; null; aText>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; removeOpeningParagraphTag[java.lang.StringBuffer]; void; null; aText.substring(0,tagLen)>
<java.lang.StringBuffer; substring[int, int]; java.lang.String; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; removeOpeningParagraphTag[java.lang.StringBuffer]; void; equals[java.lang.Object]; aText>
<java.lang.StringBuffer; delete[int, int]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; removeOpeningParagraphTag[java.lang.StringBuffer]; void; null; aText>
<not found; typeName[]; not found; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; getCheckName[com.puppycrawl.tools.checkstyle.doclets.ClassDoc]; java.lang.String; null; aClassDoc>
<java.lang.String; endsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; getCheckName[com.puppycrawl.tools.checkstyle.doclets.ClassDoc]; java.lang.String; null; strippedClassName>
<java.lang.String; substring[int, int]; java.lang.String; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; getCheckName[com.puppycrawl.tools.checkstyle.doclets.ClassDoc]; java.lang.String; null; strippedClassName>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; getCheckName[com.puppycrawl.tools.checkstyle.doclets.ClassDoc]; java.lang.String; null; strippedClassName>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; getCheckName[com.puppycrawl.tools.checkstyle.doclets.ClassDoc]; java.lang.String; null; "Check">
<java.io.PrintWriter; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; writeXdocsHeader[java.io.PrintWriter, java.lang.String]; void; null; aPrintWriter>
<java.io.PrintWriter; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; writeXdocsHeader[java.io.PrintWriter, java.lang.String]; void; null; aPrintWriter>
<java.io.PrintWriter; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; writeXdocsHeader[java.io.PrintWriter, java.lang.String]; void; null; aPrintWriter>
<java.io.PrintWriter; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; writeXdocsHeader[java.io.PrintWriter, java.lang.String]; void; null; aPrintWriter>
<java.io.PrintWriter; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; writeXdocsHeader[java.io.PrintWriter, java.lang.String]; void; null; aPrintWriter>
<java.io.PrintWriter; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; writeXdocsHeader[java.io.PrintWriter, java.lang.String]; void; null; aPrintWriter>
<java.io.PrintWriter; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; writeXdocsHeader[java.io.PrintWriter, java.lang.String]; void; null; aPrintWriter>
<java.io.PrintWriter; flush[]; void; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; writeXdocsHeader[java.io.PrintWriter, java.lang.String]; void; null; aPrintWriter>
<java.io.PrintWriter; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; writeXdocsFooter[java.io.PrintWriter]; void; null; aPrintWriter>
<java.io.PrintWriter; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; writeXdocsFooter[java.io.PrintWriter]; void; null; aPrintWriter>
<java.io.PrintWriter; flush[]; void; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; writeXdocsFooter[java.io.PrintWriter]; void; null; aPrintWriter>
<not found; classes[]; not found; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; start[com.puppycrawl.tools.checkstyle.doclets.RootDoc]; boolean; null; aRoot>
<com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; getDestDir[java.lang.String[][]]; java.lang.String; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; start[com.puppycrawl.tools.checkstyle.doclets.RootDoc]; boolean; null; this>
<not found; options[]; not found; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; start[com.puppycrawl.tools.checkstyle.doclets.RootDoc]; boolean; null; aRoot>
<com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; writeXdocsHeader[java.io.PrintWriter, java.lang.String]; void; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; start[com.puppycrawl.tools.checkstyle.doclets.RootDoc]; boolean; null; this>
<java.io.PrintWriter; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; start[com.puppycrawl.tools.checkstyle.doclets.RootDoc]; boolean; null; fileWriter>
<java.io.PrintWriter; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; start[com.puppycrawl.tools.checkstyle.doclets.RootDoc]; boolean; null; fileWriter>
<java.util.Arrays; sort[java.lang.Object[], java.util.Comparator]; void; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; start[com.puppycrawl.tools.checkstyle.doclets.RootDoc]; boolean; null; Arrays>
<not found; endsWith[]; not found; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; start[com.puppycrawl.tools.checkstyle.doclets.RootDoc]; boolean; null; classDoc.typeName()>
<not found; typeName[]; not found; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; start[com.puppycrawl.tools.checkstyle.doclets.RootDoc]; boolean; endsWith[]; classDoc>
<not found; isAbstract[]; not found; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; start[com.puppycrawl.tools.checkstyle.doclets.RootDoc]; boolean; null; classDoc>
<com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; getPageName[com.puppycrawl.tools.checkstyle.doclets.ClassDoc]; java.lang.String; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; start[com.puppycrawl.tools.checkstyle.doclets.RootDoc]; boolean; null; this>
<not found; tags[]; not found; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; start[com.puppycrawl.tools.checkstyle.doclets.RootDoc]; boolean; null; classDoc>
<not found; text[]; not found; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; start[com.puppycrawl.tools.checkstyle.doclets.RootDoc]; boolean; null; docPageTags[0]>
<com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; getDescription[com.puppycrawl.tools.checkstyle.doclets.ClassDoc]; java.lang.String; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; start[com.puppycrawl.tools.checkstyle.doclets.RootDoc]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; getCheckName[com.puppycrawl.tools.checkstyle.doclets.ClassDoc]; java.lang.String; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; start[com.puppycrawl.tools.checkstyle.doclets.RootDoc]; boolean; null; this>
<java.io.PrintWriter; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; start[com.puppycrawl.tools.checkstyle.doclets.RootDoc]; boolean; null; fileWriter>
<java.io.PrintWriter; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; start[com.puppycrawl.tools.checkstyle.doclets.RootDoc]; boolean; null; fileWriter>
<com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; writeXdocsFooter[java.io.PrintWriter]; void; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; start[com.puppycrawl.tools.checkstyle.doclets.RootDoc]; boolean; null; this>
<java.io.PrintWriter; close[]; void; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; start[com.puppycrawl.tools.checkstyle.doclets.RootDoc]; boolean; null; fileWriter>
<not found; name[]; not found; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; getPageName[com.puppycrawl.tools.checkstyle.doclets.ClassDoc]; java.lang.String; null; aClassDoc.containingPackage()>
<not found; containingPackage[]; not found; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; getPageName[com.puppycrawl.tools.checkstyle.doclets.ClassDoc]; java.lang.String; name[]; aClassDoc>
<java.lang.String; substring[int]; java.lang.String; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; getPageName[com.puppycrawl.tools.checkstyle.doclets.ClassDoc]; java.lang.String; null; packageName>
<java.lang.String; lastIndexOf[int]; int; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; getPageName[com.puppycrawl.tools.checkstyle.doclets.ClassDoc]; java.lang.String; null; packageName>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; getPageName[com.puppycrawl.tools.checkstyle.doclets.ClassDoc]; java.lang.String; null; "checks">
<java.lang.String; equalsIgnoreCase[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; getDestDir[java.lang.String[][]]; java.lang.String; null; DEST_DIR_OPT>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; optionLength[java.lang.String]; int; null; DEST_DIR_OPT>
<not found; newHashSet[]; not found; com.puppycrawl.tools.checkstyle.doclets.CheckDocsDoclet; optionLength[java.lang.String]; int; null; Sets>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; setFileExtensions[java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheck; JavadocPackageCheck[]; void; null; this>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheck; beginProcessing[java.lang.String]; void; null; mDirectoriesChecked>
<java.io.File; getParentFile[]; java.io.File; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; aFile>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; mDirectoriesChecked>
<java.util.Set; add[java.io.File]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; mDirectoriesChecked>
<java.io.File; exists[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; packageInfo>
<java.io.File; exists[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; packageHtml>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; this>
<java.io.File; exists[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; packageHtml>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; fromName[java.lang.String]; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; JavadocTag[int, int, java.lang.String, java.lang.String]; void; null; JavadocTagInfo>
<com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getTagName[]; java.lang.String; null; mTagInfo>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getTagName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; toString[]; java.lang.String; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; toString[]; java.lang.String; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getArg1[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; toString[]; java.lang.String; null; this>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; isAuthorTag[]; boolean; null; JavadocTagInfo.AUTHOR>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; isReturnTag[]; boolean; null; JavadocTagInfo.RETURN>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; isParamTag[]; boolean; null; JavadocTagInfo.PARAM>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; isThrowsTag[]; boolean; null; JavadocTagInfo.THROWS>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; isThrowsTag[]; boolean; null; JavadocTagInfo.EXCEPTION>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; isSeeOrInheritDocTag[]; boolean; null; JavadocTagInfo.SEE>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; isInheritDocTag[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; isSeeOrInheritDocTag[]; boolean; null; this>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; isInheritDocTag[]; boolean; null; JavadocTagInfo.INHERIT_DOC>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; canReferenceImports[]; boolean; null; JavadocTagInfo.SEE>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; canReferenceImports[]; boolean; null; JavadocTagInfo.LINK>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; canReferenceImports[]; boolean; null; JavadocTagInfo.LINKPLAIN>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; canReferenceImports[]; boolean; null; JavadocTagInfo.THROWS>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; canReferenceImports[]; boolean; null; JavadocTagInfo.EXCEPTION>
<com.puppycrawl.tools.checkstyle.api.Scope; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck; setScope[java.lang.String]; void; null; Scope>
<com.puppycrawl.tools.checkstyle.api.Scope; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck; setExcludeScope[java.lang.String]; void; null; Scope>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; getFileContents[]; com.puppycrawl.tools.checkstyle.api.FileContents; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FileContents; getJavadocBefore[int]; com.puppycrawl.tools.checkstyle.api.TextBlock; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; contents>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; inCodeBlock[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ScopeUtils>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; getScopeFromMods[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ScopeUtils>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; inInterfaceOrAnnotationBlock[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ScopeUtils>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; getSurroundingScope[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ScopeUtils>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; scope>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; surroundingScope>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; scope>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; surroundingScope>
<not found; of[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ImmutableSortedSet>
<not found; of[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ImmutableSortedSet>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; getFileContents[]; com.puppycrawl.tools.checkstyle.api.FileContents; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FileContents; getJavadocBefore[int]; com.puppycrawl.tools.checkstyle.api.TextBlock; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; contents>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getFirstChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getLineNo[]; aAST>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.FileContents; inPackageInfo[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; getFileContents()>
<com.puppycrawl.tools.checkstyle.api.Check; getFileContents[]; com.puppycrawl.tools.checkstyle.api.FileContents; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; inPackageInfo[]; this>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; inCodeBlock[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ScopeUtils>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; getScopeFromMods[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ScopeUtils>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; inInterfaceOrAnnotationBlock[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ScopeUtils>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; getSurroundingScope[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ScopeUtils>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; scope>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; surroundingScope>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; scope>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; surroundingScope>
<com.puppycrawl.tools.checkstyle.api.FileContents; inPackageInfo[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; getFileContents()>
<com.puppycrawl.tools.checkstyle.api.Check; getFileContents[]; com.puppycrawl.tools.checkstyle.api.FileContents; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; inPackageInfo[]; this>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkFirstSentence[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkHtml[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkEmptyJavadoc[com.puppycrawl.tools.checkstyle.api.TextBlock]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; getCommentText[java.lang.String[]]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkFirstSentence[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.TextBlock; getText[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkFirstSentence[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; aComment>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkFirstSentence[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; commentText>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkFirstSentence[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; getEndOfSentencePattern().matcher(commentText)>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkFirstSentence[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; find[]; getEndOfSentencePattern()>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; getEndOfSentencePattern[]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkFirstSentence[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; matcher[java.lang.CharSequence]; this>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkFirstSentence[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; "{@inheritDoc}">
<com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkFirstSentence[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; JavadocTagInfo.INHERIT_DOC>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkFirstSentence[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.TextBlock; getStartLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkFirstSentence[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; aComment>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; getCommentText[java.lang.String[]]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkEmptyJavadoc[com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.TextBlock; getText[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkEmptyJavadoc[com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; aComment>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkEmptyJavadoc[com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; commentText>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkEmptyJavadoc[com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.TextBlock; getStartLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkEmptyJavadoc[com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; aComment>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; findTextStart[java.lang.String]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; getCommentText[java.lang.String[]]; java.lang.String; null; this>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; getCommentText[java.lang.String[]]; java.lang.String; null; line>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; getCommentText[java.lang.String[]]; java.lang.String; null; buffer>
<java.lang.String; substring[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; getCommentText[java.lang.String[]]; java.lang.String; null; line>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; trimTail[java.lang.StringBuffer]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; getCommentText[java.lang.String[]]; java.lang.String; null; this>
<java.lang.StringBuffer; append[char]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; getCommentText[java.lang.String[]]; java.lang.String; null; buffer>
<java.lang.String; trim[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; getCommentText[java.lang.String[]]; java.lang.String; null; buffer.toString()>
<java.lang.StringBuffer; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; getCommentText[java.lang.String[]]; java.lang.String; trim[]; buffer>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; findTextStart[java.lang.String]; int; null; aLine>
<java.lang.Character; isWhitespace[char]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; findTextStart[java.lang.String]; int; null; Character>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; findTextStart[java.lang.String]; int; null; aLine>
<java.lang.String; regionMatches[int, java.lang.String, int, int]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; findTextStart[java.lang.String]; int; null; aLine>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; findTextStart[java.lang.String]; int; null; "/**">
<java.lang.String; regionMatches[int, java.lang.String, int, int]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; findTextStart[java.lang.String]; int; null; aLine>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; findTextStart[java.lang.String]; int; null; aLine>
<java.lang.StringBuffer; length[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; trimTail[java.lang.StringBuffer]; void; null; aBuffer>
<java.lang.Character; isWhitespace[char]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; trimTail[java.lang.StringBuffer]; void; null; Character>
<java.lang.StringBuffer; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; trimTail[java.lang.StringBuffer]; void; null; aBuffer>
<java.lang.StringBuffer; deleteCharAt[int]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; trimTail[java.lang.StringBuffer]; void; null; aBuffer>
<java.lang.StringBuffer; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; trimTail[java.lang.StringBuffer]; void; null; aBuffer>
<java.lang.StringBuffer; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; trimTail[java.lang.StringBuffer]; void; null; aBuffer>
<java.lang.StringBuffer; deleteCharAt[int]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; trimTail[java.lang.StringBuffer]; void; null; aBuffer>
<java.lang.StringBuffer; deleteCharAt[int]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; trimTail[java.lang.StringBuffer]; void; null; aBuffer>
<java.lang.StringBuffer; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; trimTail[java.lang.StringBuffer]; void; null; aBuffer>
<java.lang.StringBuffer; deleteCharAt[int]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; trimTail[java.lang.StringBuffer]; void; null; aBuffer>
<com.puppycrawl.tools.checkstyle.api.TextBlock; getStartLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkHtml[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; aComment>
<com.puppycrawl.tools.checkstyle.api.FastStack; newInstance[]; com.puppycrawl.tools.checkstyle.api.FastStack<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkHtml[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; FastStack>
<com.puppycrawl.tools.checkstyle.api.TextBlock; getText[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkHtml[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; aComment>
<com.puppycrawl.tools.checkstyle.checks.CheckUtils; getTypeParameterNames[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<java.lang.String>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkHtml[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; CheckUtils>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; hasNextTag[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkHtml[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; parser>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; nextTag[]; com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkHtml[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; parser>
<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag; isIncompleteTag[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkHtml[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; tag>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkHtml[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag; getLineno[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkHtml[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; tag>
<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag; getLineno[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkHtml[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; tag>
<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag; isClosedTag[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkHtml[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; tag>
<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag; isCloseTag[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkHtml[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; tag>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; isAllowedTag[com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkHtml[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FastStack; push[com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkHtml[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; htmlStack>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; isExtraHtml[java.lang.String, com.puppycrawl.tools.checkstyle.api.FastStack<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag>]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkHtml[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag; getId[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkHtml[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; tag>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkHtml[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag; getLineno[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkHtml[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; tag>
<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag; getPosition[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkHtml[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; tag>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkUnclosedTags[com.puppycrawl.tools.checkstyle.api.FastStack<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag>, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkHtml[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag; getId[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkHtml[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; tag>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; isSingleTag[com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkHtml[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; this>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkHtml[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; htag.getId()>
<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag; getId[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkHtml[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; equals[java.lang.Object]; htag>
<java.util.List; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkHtml[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; typeParameters>
<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag; getId[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkHtml[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; htag>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkHtml[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag; getLineno[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkHtml[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; htag>
<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag; getPosition[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkHtml[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; htag>
<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag; getId[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkHtml[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; htag>
<com.puppycrawl.tools.checkstyle.api.FastStack; newInstance[]; com.puppycrawl.tools.checkstyle.api.FastStack<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkUnclosedTags[com.puppycrawl.tools.checkstyle.api.FastStack<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag>, java.lang.String]; void; null; FastStack>
<com.puppycrawl.tools.checkstyle.api.FastStack; pop[]; com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkUnclosedTags[com.puppycrawl.tools.checkstyle.api.FastStack<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag>, java.lang.String]; void; null; aHtmlStack>
<java.lang.String; equalsIgnoreCase[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkUnclosedTags[com.puppycrawl.tools.checkstyle.api.FastStack<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag>, java.lang.String]; void; null; aToken>
<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag; getId[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkUnclosedTags[com.puppycrawl.tools.checkstyle.api.FastStack<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag>, java.lang.String]; void; null; lastOpenTag>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; isSingleTag[com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkUnclosedTags[com.puppycrawl.tools.checkstyle.api.FastStack<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag>, java.lang.String]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FastStack; pop[]; com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkUnclosedTags[com.puppycrawl.tools.checkstyle.api.FastStack<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag>, java.lang.String]; void; null; aHtmlStack>
<com.puppycrawl.tools.checkstyle.api.FastStack; push[com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkUnclosedTags[com.puppycrawl.tools.checkstyle.api.FastStack<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag>, java.lang.String]; void; null; unclosedTags>
<com.puppycrawl.tools.checkstyle.api.FastStack; pop[]; com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkUnclosedTags[com.puppycrawl.tools.checkstyle.api.FastStack<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag>, java.lang.String]; void; null; aHtmlStack>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkUnclosedTags[com.puppycrawl.tools.checkstyle.api.FastStack<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag>, java.lang.String]; void; null; lastOpenTag.getId()>
<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag; getId[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkUnclosedTags[com.puppycrawl.tools.checkstyle.api.FastStack<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag>, java.lang.String]; void; equals[java.lang.Object]; lastOpenTag>
<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag; getId[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkUnclosedTags[com.puppycrawl.tools.checkstyle.api.FastStack<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag>, java.lang.String]; void; null; lastOpenTag>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkUnclosedTags[com.puppycrawl.tools.checkstyle.api.FastStack<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag>, java.lang.String]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag; getLineno[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkUnclosedTags[com.puppycrawl.tools.checkstyle.api.FastStack<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag>, java.lang.String]; void; null; lastOpenTag>
<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag; getPosition[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkUnclosedTags[com.puppycrawl.tools.checkstyle.api.FastStack<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag>, java.lang.String]; void; null; lastOpenTag>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; isSingleTag[com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag]; boolean; null; SINGLE_TAGS>
<java.lang.String; toLowerCase[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; isSingleTag[com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag]; boolean; null; aTag.getId()>
<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag; getId[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; isSingleTag[com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag]; boolean; toLowerCase[]; aTag>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; isAllowedTag[com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag]; boolean; null; ALLOWED_TAGS>
<java.lang.String; toLowerCase[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; isAllowedTag[com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag]; boolean; null; aTag.getId()>
<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag; getId[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; isAllowedTag[com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag]; boolean; toLowerCase[]; aTag>
<java.lang.String; equalsIgnoreCase[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; isExtraHtml[java.lang.String, com.puppycrawl.tools.checkstyle.api.FastStack<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag>]; boolean; null; aToken>
<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag; getId[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; isExtraHtml[java.lang.String, com.puppycrawl.tools.checkstyle.api.FastStack<com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag>]; boolean; null; td>
<com.puppycrawl.tools.checkstyle.api.Scope; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; setScope[java.lang.String]; void; null; Scope>
<com.puppycrawl.tools.checkstyle.api.Scope; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; setExcludeScope[java.lang.String]; void; null; Scope>
<java.util.regex.Pattern; compile[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; getEndOfSentencePattern[]; java.util.regex.Pattern; null; Pattern>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag; HtmlTag[java.lang.String, int, int, boolean, boolean, java.lang.String]; void; null; "">
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag; HtmlTag[java.lang.String, int, int, boolean, boolean, java.lang.String]; void; null; aId>
<java.lang.String; substring[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag; HtmlTag[java.lang.String, int, int, boolean, boolean, java.lang.String]; void; null; aId>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag; isCloseTag[]; boolean; null; mText>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag; isCloseTag[]; boolean; null; mText>
<java.lang.Math; min[int, int]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag; toString[]; java.lang.String; null; Math>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag; toString[]; java.lang.String; null; mText>
<java.lang.String; substring[int, int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag; toString[]; java.lang.String; null; mText>
<com.puppycrawl.tools.checkstyle.api.Scope; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; setScope[java.lang.String]; void; null; Scope>
<com.puppycrawl.tools.checkstyle.api.Scope; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; setExcludeScope[java.lang.String]; void; null; Scope>
<com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; setAuthorFormat[java.lang.String]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; setVersionFormat[java.lang.String]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; getFileContents[]; com.puppycrawl.tools.checkstyle.api.FileContents; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.FileContents; getJavadocBefore[int]; com.puppycrawl.tools.checkstyle.api.TextBlock; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; contents>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; isOuterMostType[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ScopeUtils>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkTag[int, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.lang.String, java.util.regex.Pattern, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; JavadocTagInfo.AUTHOR>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkTag[int, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.lang.String, java.util.regex.Pattern, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; JavadocTagInfo.VERSION>
<com.puppycrawl.tools.checkstyle.checks.CheckUtils; getTypeParameterNames[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<java.lang.String>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; CheckUtils>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkTypeParamTag[int, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkUnusedTypeParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<java.lang.String>]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; getScopeFromMods[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ScopeUtils>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; inInterfaceOrAnnotationBlock[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ScopeUtils>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; getSurroundingScope[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ScopeUtils>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; scope>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; surroundingScope>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; scope>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; surroundingScope>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; JavadocUtils>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; getInvalidTags[]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.InvalidJavadocTag>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; tags>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.InvalidJavadocTag; getLine[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; tag>
<com.puppycrawl.tools.checkstyle.checks.javadoc.InvalidJavadocTag; getCol[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; tag>
<com.puppycrawl.tools.checkstyle.checks.javadoc.InvalidJavadocTag; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; tag>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; getValidTags[]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; tags>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkTag[int, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.lang.String, java.util.regex.Pattern, java.lang.String]; void; null; aTags>
<java.util.List; get[int]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkTag[int, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.lang.String, java.util.regex.Pattern, java.lang.String]; void; null; aTags>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkTag[int, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.lang.String, java.util.regex.Pattern, java.lang.String]; void; null; tag.getTagName()>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getTagName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkTag[int, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.lang.String, java.util.regex.Pattern, java.lang.String]; void; equals[java.lang.Object]; tag>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkTag[int, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.lang.String, java.util.regex.Pattern, java.lang.String]; void; null; aFormatPattern.matcher(tag.getArg1())>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkTag[int, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.lang.String, java.util.regex.Pattern, java.lang.String]; void; find[]; aFormatPattern>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getArg1[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkTag[int, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.lang.String, java.util.regex.Pattern, java.lang.String]; void; null; tag>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkTag[int, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.lang.String, java.util.regex.Pattern, java.lang.String]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkTag[int, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.lang.String, java.util.regex.Pattern, java.lang.String]; void; null; this>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkTypeParamTag[int, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.lang.String]; void; null; aTags>
<java.util.List; get[int]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkTypeParamTag[int, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.lang.String]; void; null; aTags>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; isParamTag[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkTypeParamTag[int, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.lang.String]; void; null; tag>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getArg1[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkTypeParamTag[int, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.lang.String]; void; null; tag>
<java.lang.String; indexOf[java.lang.String]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkTypeParamTag[int, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.lang.String]; void; null; tag.getArg1()>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getArg1[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkTypeParamTag[int, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.lang.String]; void; indexOf[java.lang.String]; tag>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkTypeParamTag[int, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.lang.String]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkTypeParamTag[int, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.lang.String]; void; null; JavadocTagInfo.PARAM>
<com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkUnusedTypeParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<java.lang.String>]; void; null; Utils>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkUnusedTypeParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<java.lang.String>]; void; null; aTags>
<java.util.List; get[int]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkUnusedTypeParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<java.lang.String>]; void; null; aTags>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; isParamTag[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkUnusedTypeParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<java.lang.String>]; void; null; tag>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getArg1[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkUnusedTypeParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<java.lang.String>]; void; null; tag>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkUnusedTypeParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<java.lang.String>]; void; null; pattern>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getArg1[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkUnusedTypeParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<java.lang.String>]; void; null; tag>
<java.util.regex.Matcher; matches[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkUnusedTypeParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<java.lang.String>]; void; null; matcher>
<java.lang.String; trim[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkUnusedTypeParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<java.lang.String>]; void; null; matcher.group(1)>
<java.util.regex.Matcher; group[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkUnusedTypeParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<java.lang.String>]; void; trim[]; matcher>
<java.util.List; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkUnusedTypeParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<java.lang.String>]; void; null; aTypeParamNames>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkUnusedTypeParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<java.lang.String>]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkUnusedTypeParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<java.lang.String>]; void; null; tag>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkUnusedTypeParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<java.lang.String>]; void; null; tag>
<com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkUnusedTypeParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<java.lang.String>]; void; null; JavadocTagInfo.PARAM>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkUnusedTypeParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<java.lang.String>]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkUnusedTypeParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<java.lang.String>]; void; null; tag>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkUnusedTypeParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<java.lang.String>]; void; null; tag>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkUnusedTypeParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<java.lang.String>]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkUnusedTypeParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<java.lang.String>]; void; null; tag>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkUnusedTypeParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<java.lang.String>]; void; null; tag>
<not found; newLinkedList[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkUnusedTypeParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<java.lang.String>]; void; null; Lists>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; parseTags[java.lang.String[], int]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; TagParser[java.lang.String[], int]; void; null; this>
<java.util.List; remove[int]; com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; nextTag[]; com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag; null; mTags>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; hasNextTag[]; boolean; null; mTags>
<java.util.List; add[com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; add[com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag]; void; null; mTags>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; findChar[java.lang.String[], char, com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; parseTags[java.lang.String[], int]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser$Point; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; parseTags[java.lang.String[], int]; void; null; position>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; isCommentTag[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; parseTags[java.lang.String[], int]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; skipHtmlComment[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; parseTags[java.lang.String[], int]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; isTag[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; parseTags[java.lang.String[], int]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; getNextCharPos[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; parseTags[java.lang.String[], int]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; findChar[java.lang.String[], char, com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; parseTags[java.lang.String[], int]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser$Point; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; parseTags[java.lang.String[], int]; void; null; endTag>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; getTagId[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; parseTags[java.lang.String[], int]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser$Point; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; parseTags[java.lang.String[], int]; void; null; endTag>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser$Point; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; parseTags[java.lang.String[], int]; void; null; endTag>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; parseTags[java.lang.String[], int]; void; null; aText[endTag.getLineNo()]>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser$Point; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; parseTags[java.lang.String[], int]; void; charAt[int]; endTag>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser$Point; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; parseTags[java.lang.String[], int]; void; null; endTag>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; add[com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; parseTags[java.lang.String[], int]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser$Point; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; parseTags[java.lang.String[], int]; void; null; position>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser$Point; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; parseTags[java.lang.String[], int]; void; null; position>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser$Point; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; parseTags[java.lang.String[], int]; void; null; position>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; findChar[java.lang.String[], char, com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; parseTags[java.lang.String[], int]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser$Point; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; isTag[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; boolean; null; aPos>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser$Point; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; isTag[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; boolean; null; aPos>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; isTag[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; boolean; null; text>
<java.lang.Character; isJavaIdentifierStart[char]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; isTag[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; boolean; null; Character>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; isTag[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; boolean; null; text>
<java.lang.Character; isJavaIdentifierPart[char]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; isTag[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; boolean; null; Character>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; isTag[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; boolean; null; text>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; isTag[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; boolean; null; text>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; isTag[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; boolean; null; text>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser$Point; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; getTagId[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; java.lang.String; null; aTagStart>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser$Point; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; getTagId[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; java.lang.String; null; aTagStart>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; getTagId[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; java.lang.String; null; text>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; getTagId[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; java.lang.String; null; text>
<java.lang.String; trim[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; getTagId[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; java.lang.String; null; text.substring(column)>
<java.lang.String; substring[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; getTagId[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; java.lang.String; trim[]; text>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; getTagId[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; java.lang.String; null; text>
<java.lang.Character; isJavaIdentifierStart[char]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; getTagId[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; java.lang.String; null; Character>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; getTagId[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; java.lang.String; null; text>
<java.lang.Character; isJavaIdentifierPart[char]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; getTagId[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; java.lang.String; null; Character>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; getTagId[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; java.lang.String; null; text>
<java.lang.String; substring[int, int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; getTagId[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; java.lang.String; null; text>
<java.lang.String; startsWith[java.lang.String, int]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; isCommentTag[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; boolean; null; aText[aPos.getLineNo()]>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser$Point; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; isCommentTag[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; boolean; startsWith[java.lang.String, int]; aPos>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser$Point; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; isCommentTag[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; boolean; null; aPos>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; findChar[java.lang.String[], char, com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; skipHtmlComment[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser$Point; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; skipHtmlComment[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point; null; to>
<java.lang.String; endsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; skipHtmlComment[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point; null; aText[to.getLineNo()].substring(0,to.getColumnNo())>
<java.lang.String; substring[int, int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; skipHtmlComment[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point; endsWith[java.lang.String]; aText[to.getLineNo()]>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser$Point; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; skipHtmlComment[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point; substring[int, int]; to>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser$Point; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; skipHtmlComment[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point; null; to>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; findChar[java.lang.String[], char, com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; skipHtmlComment[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; getNextCharPos[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; skipHtmlComment[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser$Point; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; findChar[java.lang.String[], char, com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point; null; aFrom>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser$Point; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; findChar[java.lang.String[], char, com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point; null; aFrom>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser$Point; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; findChar[java.lang.String[], char, com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point; null; curr>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; findChar[java.lang.String[], char, com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point; null; aText[curr.getLineNo()]>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser$Point; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; findChar[java.lang.String[], char, com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point; charAt[int]; curr>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser$Point; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; findChar[java.lang.String[], char, com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point; null; curr>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; getNextCharPos[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; findChar[java.lang.String[], char, com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser$Point; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; getNextCharPos[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point; null; aFrom>
<com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser$Point; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; getNextCharPos[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point; null; aFrom>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; getNextCharPos[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point; null; aText[line]>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; getNextCharPos[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point; null; currentLine>
<java.lang.Character; isWhitespace[char]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; getNextCharPos[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point; null; Character>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; getNextCharPos[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point; null; currentLine>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; getNextCharPos[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point; null; currentLine>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; getNextCharPos[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point; null; currentLine>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; getNextCharPos[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point; null; currentLine>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; getNextCharPos[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point; null; currentLine>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; getNextCharPos[java.lang.String[], com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point]; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser.Point; null; currentLine>
<com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheck; setTag[java.lang.String]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheck; setTagFormat[java.lang.String]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.api.SeverityLevel; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.SeverityLevel; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheck; setTagSeverity[java.lang.String]; void; null; SeverityLevel>
<com.puppycrawl.tools.checkstyle.api.Check; getFileContents[]; com.puppycrawl.tools.checkstyle.api.FileContents; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.FileContents; getJavadocBefore[int]; com.puppycrawl.tools.checkstyle.api.TextBlock; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; contents>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheck; checkTag[int, java.lang.String[], java.lang.String, java.util.regex.Pattern, java.util.regex.Pattern, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.TextBlock; getText[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; cmt>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheck; checkTag[int, java.lang.String[], java.lang.String, java.util.regex.Pattern, java.util.regex.Pattern, java.lang.String]; void; null; aTagRE>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheck; checkTag[int, java.lang.String[], java.lang.String, java.util.regex.Pattern, java.util.regex.Pattern, java.lang.String]; void; null; matcher>
<java.util.regex.Matcher; start[int]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheck; checkTag[int, java.lang.String[], java.lang.String, java.util.regex.Pattern, java.util.regex.Pattern, java.lang.String]; void; null; matcher>
<java.lang.String; substring[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheck; checkTag[int, java.lang.String[], java.lang.String, java.util.regex.Pattern, java.util.regex.Pattern, java.lang.String]; void; null; s>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheck; checkTag[int, java.lang.String[], java.lang.String, java.util.regex.Pattern, java.util.regex.Pattern, java.lang.String]; void; null; aFormatRE.matcher(content)>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheck; checkTag[int, java.lang.String[], java.lang.String, java.util.regex.Pattern, java.util.regex.Pattern, java.lang.String]; void; find[]; aFormatRE>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheck; checkTag[int, java.lang.String[], java.lang.String, java.util.regex.Pattern, java.util.regex.Pattern, java.lang.String]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheck; logTag[int, java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheck; checkTag[int, java.lang.String[], java.lang.String, java.util.regex.Pattern, java.util.regex.Pattern, java.lang.String]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheck; checkTag[int, java.lang.String[], java.lang.String, java.util.regex.Pattern, java.util.regex.Pattern, java.lang.String]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; getSeverity[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheck; logTag[int, java.lang.String, java.lang.String]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; setSeverity[java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheck; logTag[int, java.lang.String, java.lang.String]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.SeverityLevel; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheck; logTag[int, java.lang.String, java.lang.String]; void; null; mTagSeverityLevel>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheck; logTag[int, java.lang.String, java.lang.String]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; setSeverity[java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheck; logTag[int, java.lang.String, java.lang.String]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Utils; createPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheck; logTag[int, java.lang.String, java.lang.String]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.api.Utils; createPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheck; logTag[int, java.lang.String, java.lang.String]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.api.Utils; createPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheck; logTag[int, java.lang.String, java.lang.String]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.api.Utils; createPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheck; logTag[int, java.lang.String, java.lang.String]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.api.Utils; createPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheck; logTag[int, java.lang.String, java.lang.String]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.api.Utils; createPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheck; logTag[int, java.lang.String, java.lang.String]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.api.Scope; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; setScope[java.lang.String]; void; null; Scope>
<com.puppycrawl.tools.checkstyle.api.Scope; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; setExcludeScope[java.lang.String]; void; null; Scope>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; calculateScope[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; processAST[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; processAST[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; getFileContents[]; com.puppycrawl.tools.checkstyle.api.FileContents; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; processAST[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FileContents; getJavadocBefore[int]; com.puppycrawl.tools.checkstyle.api.TextBlock; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; processAST[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; contents>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; processAST[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isMissingJavadocAllowed[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; processAST[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; processAST[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.api.Scope]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; processAST[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; logLoadErrorImpl[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; logLoadError[com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.Token]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$Token; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; logLoadError[com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.Token]; void; null; aIdent>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$Token; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; logLoadError[com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.Token]; void; null; aIdent>
<com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; logLoadError[com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.Token]; void; null; JavadocTagInfo.THROWS>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$Token; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; logLoadError[com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.Token]; void; null; aIdent>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isOverrideMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isMissingJavadocAllowed[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isSetterMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isMissingJavadocAllowed[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isGetterMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isMissingJavadocAllowed[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; getSurroundingScope[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.Scope]; boolean; null; ScopeUtils>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.Scope]; boolean; null; aScope>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.Scope]; boolean; null; surroundingScope>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.Scope]; boolean; null; aScope>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; shouldCheck[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.Scope]; boolean; null; surroundingScope>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.api.Scope]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; hasShortCircuitTag[com.puppycrawl.tools.checkstyle.api.DetailAST, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.api.Scope]; void; null; this>
<java.util.List; iterator[]; java.util.Iterator<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.api.Scope]; void; null; tags>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.api.Scope]; void; null; aAST>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.api.Scope]; void; null; it>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; isInheritDocTag[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.api.Scope]; void; null; (it.next())>
<java.util.Iterator; next[]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.api.Scope]; void; isInheritDocTag[]; it>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.api.Scope]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.api.Scope]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getThrows[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.api.Scope]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isFunction[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.api.Scope]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkReturnTag[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, int, boolean]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.api.Scope]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.api.Scope]; void; null; aAST>
<java.util.List; iterator[]; java.util.Iterator<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.api.Scope]; void; null; tags>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.api.Scope]; void; null; it>
<java.util.Iterator; next[]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.api.Scope]; void; null; it>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; isSeeOrInheritDocTag[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.api.Scope]; void; null; jt>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.api.Scope]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.api.Scope]; void; null; jt>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; hasShortCircuitTag[com.puppycrawl.tools.checkstyle.api.DetailAST, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.Scope]; boolean; null; aTags>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; isInheritDocTag[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; hasShortCircuitTag[com.puppycrawl.tools.checkstyle.api.DetailAST, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.Scope]; boolean; null; (aTags.get(0))>
<java.util.List; get[int]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; hasShortCircuitTag[com.puppycrawl.tools.checkstyle.api.DetailAST, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.Scope]; boolean; isInheritDocTag[]; aTags>
<com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; hasShortCircuitTag[com.puppycrawl.tools.checkstyle.api.DetailAST, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.Scope]; boolean; null; JavadocTagInfo.INHERIT_DOC>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; hasShortCircuitTag[com.puppycrawl.tools.checkstyle.api.DetailAST, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.Scope]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; calculateScope[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.Scope; null; aAST>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; getScopeFromMods[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; calculateScope[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.Scope; null; ScopeUtils>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; inInterfaceOrAnnotationBlock[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; calculateScope[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.Scope; null; ScopeUtils>
<com.puppycrawl.tools.checkstyle.api.TextBlock; getText[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; aComment>
<not found; newArrayList[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; Lists>
<com.puppycrawl.tools.checkstyle.api.TextBlock; getStartLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; aComment>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; MATCH_JAVADOC_ARG>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; MATCH_JAVADOC_NOARG>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; MATCH_JAVADOC_NOARG_CURLY>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; MATCH_JAVADOC_ARG_MULTILINE_START>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; MATCH_JAVADOC_NOARG_MULTILINE_START>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; javadocArgMatcher>
<java.util.regex.Matcher; start[int]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; javadocArgMatcher>
<com.puppycrawl.tools.checkstyle.api.TextBlock; getStartColNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; aComment>
<java.util.List; add[com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; tags>
<java.util.regex.Matcher; group[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; javadocArgMatcher>
<java.util.regex.Matcher; group[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; javadocArgMatcher>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; javadocNoargMatcher>
<java.util.regex.Matcher; start[int]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; javadocNoargMatcher>
<com.puppycrawl.tools.checkstyle.api.TextBlock; getStartColNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; aComment>
<java.util.List; add[com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; tags>
<java.util.regex.Matcher; group[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; javadocNoargMatcher>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; noargCurlyMatcher>
<java.util.regex.Matcher; start[int]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; noargCurlyMatcher>
<com.puppycrawl.tools.checkstyle.api.TextBlock; getStartColNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; aComment>
<java.util.List; add[com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; tags>
<java.util.regex.Matcher; group[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; noargCurlyMatcher>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; argMultilineStart>
<java.util.regex.Matcher; group[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; argMultilineStart>
<java.util.regex.Matcher; group[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; argMultilineStart>
<java.util.regex.Matcher; start[int]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; argMultilineStart>
<com.puppycrawl.tools.checkstyle.api.TextBlock; getStartColNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; aComment>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; MATCH_JAVADOC_MULTILINE_CONT>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; multilineCont>
<java.util.regex.Matcher; group[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; multilineCont>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; lFin>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; lFin>
<java.util.List; add[com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; tags>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; noargMultilineStart>
<java.util.regex.Matcher; group[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; noargMultilineStart>
<java.util.regex.Matcher; start[int]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; noargMultilineStart>
<com.puppycrawl.tools.checkstyle.api.TextBlock; getStartColNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; aComment>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; MATCH_JAVADOC_MULTILINE_CONT>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; multilineCont>
<java.util.regex.Matcher; group[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; multilineCont>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; lFin>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; lFin>
<java.util.List; add[com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; tags>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getParameters[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<com.puppycrawl.tools.checkstyle.api.DetailAST>; null; aAST>
<not found; newArrayList[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getParameters[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<com.puppycrawl.tools.checkstyle.api.DetailAST>; null; Lists>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getParameters[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<com.puppycrawl.tools.checkstyle.api.DetailAST>; null; params>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getParameters[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<com.puppycrawl.tools.checkstyle.api.DetailAST>; null; child>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getParameters[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<com.puppycrawl.tools.checkstyle.api.DetailAST>; null; child>
<java.util.List; add[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getParameters[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<com.puppycrawl.tools.checkstyle.api.DetailAST>; null; retVal>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getParameters[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<com.puppycrawl.tools.checkstyle.api.DetailAST>; null; child>
<not found; newArrayList[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getThrows[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>; null; Lists>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getThrows[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getThrows[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>; null; throwsAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getThrows[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>; null; child>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getThrows[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>; null; child>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getThrows[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>; null; FullIdent>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; getCurrentClassName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getThrows[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>; null; this>
<java.util.List; add[com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getThrows[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>; null; retVal>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getThrows[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>; null; child>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getParameters[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<com.puppycrawl.tools.checkstyle.api.DetailAST>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.CheckUtils; getTypeParameters[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<com.puppycrawl.tools.checkstyle.api.DetailAST>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; CheckUtils>
<java.util.List; listIterator[]; java.util.ListIterator<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; aTags>
<java.util.ListIterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; tagIt>
<java.util.ListIterator; next[]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; tagIt>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; isParamTag[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; tag>
<java.util.ListIterator; remove[]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; tagIt>
<java.util.List; iterator[]; java.util.Iterator<com.puppycrawl.tools.checkstyle.api.DetailAST>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; params>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; paramIt>
<java.util.Iterator; next[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; paramIt>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; param.getText()>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; equals[]; param>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getArg1[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; tag>
<java.util.Iterator; remove[]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; paramIt>
<java.lang.String; startsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; tag.getArg1()>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getArg1[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; startsWith[java.lang.String]; tag>
<java.lang.String; endsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; tag.getArg1()>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getArg1[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; endsWith[java.lang.String]; tag>
<java.util.List; iterator[]; java.util.Iterator<com.puppycrawl.tools.checkstyle.api.DetailAST>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; typeParams>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; typeParamsIt>
<java.util.Iterator; next[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; typeParamsIt>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; typeParam.findFirstToken(TokenTypes.IDENT).getText()>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; equals[]; typeParam.findFirstToken(TokenTypes.IDENT)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; getText[]; typeParam>
<java.lang.String; substring[int, int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; tag.getArg1()>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getArg1[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; substring[int, int]; tag>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; tag.getArg1()>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getArg1[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; length[]; tag>
<java.util.Iterator; remove[]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; typeParamsIt>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; tag>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; tag>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getArg1[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; tag>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; JavadocTagInfo.PARAM>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; param>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; JavadocTagInfo.PARAM>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; typeParam.findFirstToken(TokenTypes.IDENT)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; getText[]; typeParam>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isFunction[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isFunction[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isFunction[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; typeAST>
<java.util.List; listIterator[]; java.util.ListIterator<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkReturnTag[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, int, boolean]; void; null; aTags>
<java.util.ListIterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkReturnTag[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, int, boolean]; void; null; it>
<java.util.ListIterator; next[]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkReturnTag[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, int, boolean]; void; null; it>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; isReturnTag[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkReturnTag[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, int, boolean]; void; null; jt>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkReturnTag[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, int, boolean]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkReturnTag[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, int, boolean]; void; null; jt>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkReturnTag[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, int, boolean]; void; null; jt>
<com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkReturnTag[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, int, boolean]; void; null; JavadocTagInfo.RETURN>
<java.util.ListIterator; remove[]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkReturnTag[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, int, boolean]; void; null; it>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkReturnTag[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, int, boolean]; void; null; this>
<not found; newHashSet[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; Sets>
<java.util.List; listIterator[]; java.util.ListIterator<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; aTags>
<java.util.ListIterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; tagIt>
<java.util.ListIterator; next[]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; tagIt>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; isThrowsTag[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; tag>
<java.util.ListIterator; remove[]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; tagIt>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getArg1[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; tag>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getArg1[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; tag>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; tag>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; tag>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; createClassInfo[com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.Token, java.lang.String]; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; getCurrentClassName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; this>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; foundThrows>
<java.util.List; listIterator[]; java.util.ListIterator<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; aThrows>
<java.util.ListIterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; throwIt>
<java.util.ListIterator; next[]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; throwIt>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; ei.getName().getText()>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$Token; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; equals[java.lang.Object]; ei.getName()>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck$ExceptionInfo; getName[]; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.Token; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; getText[]; ei>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$Token; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; documentedCI.getName()>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$ClassInfo; getName[]; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.Token; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; getText[]; documentedCI>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck$ExceptionInfo; setFound[]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; ei>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; foundThrows>
<java.util.List; listIterator[]; java.util.ListIterator<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; aThrows>
<java.util.ListIterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; throwIt>
<java.util.ListIterator; next[]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; throwIt>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$ClassInfo; getClazz[]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; documentedCI>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck$ExceptionInfo; getClazz[]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; ei>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck$ExceptionInfo; setFound[]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; ei>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; foundThrows>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; isSubclass[java.lang.Class<?>, java.lang.Class<?>]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$ClassInfo; getClazz[]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; documentedCI>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck$ExceptionInfo; getClazz[]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; ei>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; isUnchecked[java.lang.Class<?>]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$ClassInfo; getClazz[]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; documentedCI>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; tag>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; tag>
<com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; JavadocTagInfo.THROWS>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getArg1[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; tag>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck$ExceptionInfo; isFound[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; ei>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck$ExceptionInfo; getName[]; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.Token; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; ei>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$Token; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; fi>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$Token; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; fi>
<com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; JavadocTagInfo.THROWS>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$Token; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; fi>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isSetterMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isSetterMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isSetterMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isSetterMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; type.getNextSibling()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isSetterMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; getText[]; type>
<java.lang.String; matches[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isSetterMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; name>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[int]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isSetterMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; type>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isSetterMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[int]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isSetterMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; params>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isSetterMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isSetterMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; slist>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isSetterMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; slist>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isSetterMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; expr>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isSetterMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; expr.getFirstChild()>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isSetterMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; getType[]; expr>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isGetterMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isGetterMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isGetterMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isGetterMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; type.getNextSibling()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isGetterMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; getText[]; type>
<java.lang.String; matches[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isGetterMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; name>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[int]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isGetterMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; type>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isGetterMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[int]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isGetterMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; params>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isGetterMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isGetterMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; slist>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isGetterMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; slist>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isGetterMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; expr>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isGetterMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; expr.getFirstChild()>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isGetterMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; getType[]; expr>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isOverrideMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isOverrideMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST.getFirstChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isOverrideMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; getType[]; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isOverrideMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST.getFirstChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isOverrideMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; getFirstChild[]; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isOverrideMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; node>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isOverrideMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; node.getFirstChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isOverrideMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; getType[]; node>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isOverrideMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; node.getFirstChild().getNextSibling()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isOverrideMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; getType[]; node.getFirstChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isOverrideMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; getNextSibling[]; node>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isOverrideMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; "Override">
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isOverrideMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; node.getFirstChild().getNextSibling()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isOverrideMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; getText[]; node.getFirstChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isOverrideMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; getNextSibling[]; node>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; isOverrideMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; node>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; createClassInfo[com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.Token, java.lang.String]; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo; ExceptionInfo[com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.Token, java.lang.String]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$ClassInfo; getName[]; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.Token; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo; getName[]; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.Token; null; mClassInfo>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$ClassInfo; getClazz[]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo; getClazz[]; java.lang.Class<?>; null; mClassInfo>
<com.puppycrawl.tools.checkstyle.api.TextBlock; getText[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; aCmt>
<not found; newArrayList[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; Lists>
<not found; newArrayList[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; Lists>
<com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; Utils>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; blockTagPattern>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; aTagType>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; aTagType>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; blockTagMatcher>
<java.util.regex.Matcher; group[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; blockTagMatcher>
<java.lang.String; substring[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; s>
<java.util.regex.Matcher; end[int]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; blockTagMatcher>
<java.lang.String; endsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; content>
<java.lang.String; substring[int, int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; content>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; content>
<com.puppycrawl.tools.checkstyle.api.TextBlock; getStartLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; aCmt>
<java.util.regex.Matcher; start[int]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; blockTagMatcher>
<com.puppycrawl.tools.checkstyle.api.TextBlock; getStartColNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; aCmt>
<com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidName[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; JavadocTagInfo>
<java.util.List; add[com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; tags>
<java.lang.String; trim[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; content>
<java.util.List; add[com.puppycrawl.tools.checkstyle.checks.javadoc.InvalidJavadocTag]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; invalidTags>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; aTagType>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; aTagType>
<com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; Utils>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; commentPattern>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; commentMatcher>
<java.util.regex.Matcher; group[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; commentMatcher>
<java.util.regex.Matcher; start[int]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; commentMatcher>
<com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; Utils>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; tagPattern>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; tagMatcher>
<java.util.regex.Matcher; groupCount[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; tagMatcher>
<java.util.regex.Matcher; group[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; tagMatcher>
<java.lang.String; trim[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; tagMatcher.group(2)>
<java.util.regex.Matcher; group[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; trim[]; tagMatcher>
<com.puppycrawl.tools.checkstyle.api.TextBlock; getStartLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; aCmt>
<java.util.regex.Matcher; start[int]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; tagMatcher>
<com.puppycrawl.tools.checkstyle.api.TextBlock; getStartColNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; aCmt>
<com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidName[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; JavadocTagInfo>
<java.util.List; add[com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; tags>
<java.util.List; add[com.puppycrawl.tools.checkstyle.checks.javadoc.InvalidJavadocTag]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; invalidTags>
<com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; Utils>
<com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; processLines[com.puppycrawl.tools.checkstyle.api.FileText]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; mDetector>
<com.puppycrawl.tools.checkstyle.api.FileText; fromLines[java.io.File, java.util.List<java.lang.String>]; com.puppycrawl.tools.checkstyle.api.FileText; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; FileText>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; setFormat[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheck; setFormat[java.lang.String]; void; null; mOptions>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; setMessage[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheck; setMessage[java.lang.String]; void; null; mOptions>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; setMinimum[int]; com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheck; setMinimum[int]; void; null; mOptions>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; setMaximum[int]; com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheck; setMaximum[int]; void; null; mOptions>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; setIgnoreCase[boolean]; com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheck; setIgnoreCase[boolean]; void; null; mOptions>
<com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; resetState[]; void; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; processLines[com.puppycrawl.tools.checkstyle.api.FileText]; void; null; this>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; processLines[com.puppycrawl.tools.checkstyle.api.FileText]; void; null; mOptions.getPattern()>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; getPattern[]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; processLines[com.puppycrawl.tools.checkstyle.api.FileText]; void; matcher[java.lang.CharSequence]; mOptions>
<com.puppycrawl.tools.checkstyle.api.FileText; getFullText[]; java.lang.CharSequence; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; processLines[com.puppycrawl.tools.checkstyle.api.FileText]; void; null; mText>
<com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; findMatch[]; void; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; processLines[com.puppycrawl.tools.checkstyle.api.FileText]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; finish[]; void; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; processLines[com.puppycrawl.tools.checkstyle.api.FileText]; void; null; this>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; findMatch[]; void; null; mMatcher>
<com.puppycrawl.tools.checkstyle.api.FileText; lineColumn[int]; com.puppycrawl.tools.checkstyle.api.LineColumn; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; findMatch[]; void; null; mText>
<java.util.regex.Matcher; start[]; int; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; findMatch[]; void; null; mMatcher>
<com.puppycrawl.tools.checkstyle.api.FileText; lineColumn[int]; com.puppycrawl.tools.checkstyle.api.LineColumn; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; findMatch[]; void; null; mText>
<java.util.regex.Matcher; end[]; int; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; findMatch[]; void; null; mMatcher>
<com.puppycrawl.tools.checkstyle.checks.regexp.MatchSuppressor; shouldSuppress[int, int, int, int]; boolean; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; findMatch[]; void; null; mOptions.getSuppressor()>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; getSuppressor[]; com.puppycrawl.tools.checkstyle.checks.regexp.MatchSuppressor; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; findMatch[]; void; shouldSuppress[int, int, int, int]; mOptions>
<com.puppycrawl.tools.checkstyle.api.LineColumn; getLine[]; int; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; findMatch[]; void; null; start>
<com.puppycrawl.tools.checkstyle.api.LineColumn; getColumn[]; int; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; findMatch[]; void; null; start>
<com.puppycrawl.tools.checkstyle.api.LineColumn; getLine[]; int; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; findMatch[]; void; null; end>
<com.puppycrawl.tools.checkstyle.api.LineColumn; getColumn[]; int; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; findMatch[]; void; null; end>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; getMaximum[]; int; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; findMatch[]; void; null; mOptions>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; findMatch[]; void; null; "">
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; findMatch[]; void; null; mOptions>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; findMatch[]; void; null; mOptions.getReporter()>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; getReporter[]; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; findMatch[]; void; log[int, java.lang.String, java.lang.Object[]]; mOptions>
<com.puppycrawl.tools.checkstyle.api.LineColumn; getLine[]; int; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; findMatch[]; void; null; start>
<java.util.regex.Pattern; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; findMatch[]; void; null; mMatcher.pattern()>
<java.util.regex.Matcher; pattern[]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; findMatch[]; void; toString[]; mMatcher>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; findMatch[]; void; null; mOptions.getReporter()>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; getReporter[]; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; findMatch[]; void; log[int, java.lang.String, java.lang.Object[]]; mOptions>
<com.puppycrawl.tools.checkstyle.api.LineColumn; getLine[]; int; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; findMatch[]; void; null; start>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; findMatch[]; void; null; mOptions>
<com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; findMatch[]; void; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; findMatch[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; getMinimum[]; int; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; finish[]; void; null; mOptions>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; finish[]; void; null; "">
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; finish[]; void; null; mOptions>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; finish[]; void; null; mOptions.getReporter()>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; getReporter[]; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; finish[]; void; log[int, java.lang.String, java.lang.Object[]]; mOptions>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; getMinimum[]; int; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; finish[]; void; null; mOptions>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; getFormat[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; finish[]; void; null; mOptions>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; finish[]; void; null; mOptions.getReporter()>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; getReporter[]; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; finish[]; void; log[int, java.lang.String, java.lang.Object[]]; mOptions>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.regexp.MultilineDetector; finish[]; void; null; mOptions>
<com.puppycrawl.tools.checkstyle.checks.regexp.SinglelineDetector; resetState[]; void; com.puppycrawl.tools.checkstyle.checks.regexp.SinglelineDetector; processLines[java.util.List<java.lang.String>]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.regexp.SinglelineDetector; checkLine[int, java.lang.String, java.util.regex.Matcher, int]; void; com.puppycrawl.tools.checkstyle.checks.regexp.SinglelineDetector; processLines[java.util.List<java.lang.String>]; void; null; this>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.regexp.SinglelineDetector; processLines[java.util.List<java.lang.String>]; void; null; mOptions.getPattern()>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; getPattern[]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.regexp.SinglelineDetector; processLines[java.util.List<java.lang.String>]; void; matcher[java.lang.CharSequence]; mOptions>
<com.puppycrawl.tools.checkstyle.checks.regexp.SinglelineDetector; finish[]; void; com.puppycrawl.tools.checkstyle.checks.regexp.SinglelineDetector; processLines[java.util.List<java.lang.String>]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; getMinimum[]; int; com.puppycrawl.tools.checkstyle.checks.regexp.SinglelineDetector; finish[]; void; null; mOptions>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.regexp.SinglelineDetector; finish[]; void; null; "">
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.regexp.SinglelineDetector; finish[]; void; null; mOptions>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.regexp.SinglelineDetector; finish[]; void; null; mOptions.getReporter()>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; getReporter[]; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; com.puppycrawl.tools.checkstyle.checks.regexp.SinglelineDetector; finish[]; void; log[int, java.lang.String, java.lang.Object[]]; mOptions>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; getMinimum[]; int; com.puppycrawl.tools.checkstyle.checks.regexp.SinglelineDetector; finish[]; void; null; mOptions>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; getFormat[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.regexp.SinglelineDetector; finish[]; void; null; mOptions>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.regexp.SinglelineDetector; finish[]; void; null; mOptions.getReporter()>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; getReporter[]; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; com.puppycrawl.tools.checkstyle.checks.regexp.SinglelineDetector; finish[]; void; log[int, java.lang.String, java.lang.Object[]]; mOptions>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.regexp.SinglelineDetector; finish[]; void; null; mOptions>
<java.util.regex.Matcher; find[int]; boolean; com.puppycrawl.tools.checkstyle.checks.regexp.SinglelineDetector; checkLine[int, java.lang.String, java.util.regex.Matcher, int]; void; null; aMatcher>
<java.util.regex.Matcher; start[int]; int; com.puppycrawl.tools.checkstyle.checks.regexp.SinglelineDetector; checkLine[int, java.lang.String, java.util.regex.Matcher, int]; void; null; aMatcher>
<java.util.regex.Matcher; end[int]; int; com.puppycrawl.tools.checkstyle.checks.regexp.SinglelineDetector; checkLine[int, java.lang.String, java.util.regex.Matcher, int]; void; null; aMatcher>
<com.puppycrawl.tools.checkstyle.checks.regexp.MatchSuppressor; shouldSuppress[int, int, int, int]; boolean; com.puppycrawl.tools.checkstyle.checks.regexp.SinglelineDetector; checkLine[int, java.lang.String, java.util.regex.Matcher, int]; void; null; mOptions.getSuppressor()>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; getSuppressor[]; com.puppycrawl.tools.checkstyle.checks.regexp.MatchSuppressor; com.puppycrawl.tools.checkstyle.checks.regexp.SinglelineDetector; checkLine[int, java.lang.String, java.util.regex.Matcher, int]; void; shouldSuppress[int, int, int, int]; mOptions>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.regexp.SinglelineDetector; checkLine[int, java.lang.String, java.util.regex.Matcher, int]; void; null; aLine>
<com.puppycrawl.tools.checkstyle.checks.regexp.SinglelineDetector; checkLine[int, java.lang.String, java.util.regex.Matcher, int]; void; com.puppycrawl.tools.checkstyle.checks.regexp.SinglelineDetector; checkLine[int, java.lang.String, java.util.regex.Matcher, int]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; getMaximum[]; int; com.puppycrawl.tools.checkstyle.checks.regexp.SinglelineDetector; checkLine[int, java.lang.String, java.util.regex.Matcher, int]; void; null; mOptions>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.regexp.SinglelineDetector; checkLine[int, java.lang.String, java.util.regex.Matcher, int]; void; null; "">
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.regexp.SinglelineDetector; checkLine[int, java.lang.String, java.util.regex.Matcher, int]; void; null; mOptions>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.regexp.SinglelineDetector; checkLine[int, java.lang.String, java.util.regex.Matcher, int]; void; null; mOptions.getReporter()>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; getReporter[]; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; com.puppycrawl.tools.checkstyle.checks.regexp.SinglelineDetector; checkLine[int, java.lang.String, java.util.regex.Matcher, int]; void; log[int, java.lang.String, java.lang.Object[]]; mOptions>
<java.util.regex.Pattern; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.regexp.SinglelineDetector; checkLine[int, java.lang.String, java.util.regex.Matcher, int]; void; null; aMatcher.pattern()>
<java.util.regex.Matcher; pattern[]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.regexp.SinglelineDetector; checkLine[int, java.lang.String, java.util.regex.Matcher, int]; void; toString[]; aMatcher>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.regexp.SinglelineDetector; checkLine[int, java.lang.String, java.util.regex.Matcher, int]; void; null; mOptions.getReporter()>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; getReporter[]; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; com.puppycrawl.tools.checkstyle.checks.regexp.SinglelineDetector; checkLine[int, java.lang.String, java.util.regex.Matcher, int]; void; log[int, java.lang.String, java.lang.Object[]]; mOptions>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.regexp.SinglelineDetector; checkLine[int, java.lang.String, java.util.regex.Matcher, int]; void; null; mOptions>
<com.puppycrawl.tools.checkstyle.checks.regexp.CommentSuppressor; setCurrentContents[com.puppycrawl.tools.checkstyle.api.FileContents]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mSuppressor>
<com.puppycrawl.tools.checkstyle.api.Check; getFileContents[]; com.puppycrawl.tools.checkstyle.api.FileContents; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.regexp.SinglelineDetector; processLines[java.util.List<java.lang.String>]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mDetector>
<java.util.Arrays; asList[java.lang.String[]]; java.util.List<java.lang.String>; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Arrays>
<com.puppycrawl.tools.checkstyle.api.Check; getLines[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; setFormat[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck; setFormat[java.lang.String]; void; null; mOptions>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; setMessage[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck; setMessage[java.lang.String]; void; null; mOptions>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; setMinimum[int]; com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck; setMinimum[int]; void; null; mOptions>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; setMaximum[int]; com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck; setMaximum[int]; void; null; mOptions>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; setIgnoreCase[boolean]; com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck; setIgnoreCase[boolean]; void; null; mOptions>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; setSuppressor[com.puppycrawl.tools.checkstyle.checks.regexp.MatchSuppressor]; com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck; setIgnoreComments[boolean]; void; null; mOptions>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; setSuppressor[com.puppycrawl.tools.checkstyle.checks.regexp.MatchSuppressor]; com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck; setIgnoreComments[boolean]; void; null; mOptions>
<com.puppycrawl.tools.checkstyle.checks.regexp.SinglelineDetector; processLines[java.util.List<java.lang.String>]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; mDetector>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; setFormat[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck; setFormat[java.lang.String]; void; null; mOptions>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; setMessage[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck; setMessage[java.lang.String]; void; null; mOptions>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; setMinimum[int]; com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck; setMinimum[int]; void; null; mOptions>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; setMaximum[int]; com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck; setMaximum[int]; void; null; mOptions>
<com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; setIgnoreCase[boolean]; com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck; setIgnoreCase[boolean]; void; null; mOptions>
<com.puppycrawl.tools.checkstyle.api.FileContents; hasIntersectionWithComment[int, int, int, int]; boolean; com.puppycrawl.tools.checkstyle.checks.regexp.CommentSuppressor; shouldSuppress[int, int, int, int]; boolean; null; mCurrentContents>
<com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String, int]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions; getPattern[]; java.util.regex.Pattern; null; Utils>
<java.lang.Enum; valueOf[java.lang.Class<T>, java.lang.String]; T; com.puppycrawl.tools.checkstyle.checks.AbstractOptionCheck; setOption[java.lang.String]; void; null; Enum>
<java.lang.String; toUpperCase[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.AbstractOptionCheck; setOption[java.lang.String]; void; null; aOption.trim()>
<java.lang.String; trim[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.AbstractOptionCheck; setOption[java.lang.String]; void; toUpperCase[]; aOption>
<not found; newHashSet[]; not found; com.puppycrawl.tools.checkstyle.checks.AbstractOptionCheck; getAbstractOption[]; T; null; Sets>
<com.puppycrawl.tools.checkstyle.api.FastStack; newInstance[]; com.puppycrawl.tools.checkstyle.api.FastStack<java.util.Map<java.lang.String,com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>>; com.puppycrawl.tools.checkstyle.checks.AbstractOptionCheck; getAbstractOption[]; T; null; FastStack>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; FullIdent>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mImports>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mImports>
<com.puppycrawl.tools.checkstyle.api.FastStack; clear[]; void; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mTypeParams>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; processPackage[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; processImport[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; processClass[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; processTypeParams[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; processAST[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<java.lang.String; lastIndexOf[java.lang.String]; int; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mCurrentClass>
<java.lang.String; lastIndexOf[java.lang.String]; int; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mCurrentClass>
<java.lang.String; substring[int, int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mCurrentClass>
<com.puppycrawl.tools.checkstyle.api.FastStack; pop[]; java.util.Map<java.lang.String,com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mTypeParams>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.FastStack; pop[]; java.util.Map<java.lang.String,com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mTypeParams>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; leaveAST[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; isSubclass[java.lang.Class<?>, java.lang.Class<?>]; boolean; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; isUnchecked[java.lang.Class<?>]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; isSubclass[java.lang.Class<?>, java.lang.Class<?>]; boolean; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; isUnchecked[java.lang.Class<?>]; boolean; null; this>
<java.lang.Class; isAssignableFrom[java.lang.Class<?>]; boolean; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; isSubclass[java.lang.Class<?>, java.lang.Class<?>]; boolean; null; aParent>
<com.puppycrawl.tools.checkstyle.api.Check; getClassLoader[]; java.lang.ClassLoader; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; getClassResolver[]; com.puppycrawl.tools.checkstyle.checks.ClassResolver; null; this>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; getClassResolver[]; com.puppycrawl.tools.checkstyle.checks.ClassResolver; null; mPackageFullIdent>
<com.puppycrawl.tools.checkstyle.checks.ClassResolver; resolve[java.lang.String, java.lang.String]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; resolveClass[java.lang.String, java.lang.String]; java.lang.Class<?>; null; getClassResolver()>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; getClassResolver[]; com.puppycrawl.tools.checkstyle.checks.ClassResolver; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; resolveClass[java.lang.String, java.lang.String]; java.lang.Class<?>; resolve[java.lang.String, java.lang.String]; this>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; resolveClass[java.lang.String, java.lang.String]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; tryLoadClass[com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.Token, java.lang.String]; java.lang.Class<?>; null; this>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$Token; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; tryLoadClass[com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.Token, java.lang.String]; java.lang.Class<?>; null; aIdent>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; logLoadError[com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.Token]; void; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; tryLoadClass[com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.Token, java.lang.String]; java.lang.Class<?>; null; this>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; getMessageBundle[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; logLoadErrorImpl[int, int, java.lang.String, java.lang.Object[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; getSeverityLevel[]; com.puppycrawl.tools.checkstyle.api.SeverityLevel; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; logLoadErrorImpl[int, int, java.lang.String, java.lang.Object[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; getId[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; logLoadErrorImpl[int, int, java.lang.String, java.lang.Object[]]; void; null; this>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck>; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; logLoadErrorImpl[int, int, java.lang.String, java.lang.Object[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessage; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; logLoadErrorImpl[int, int, java.lang.String, java.lang.Object[]]; void; null; msg>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; logLoadErrorImpl[int, int, java.lang.String, java.lang.Object[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getPreviousSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; processPackage[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getLastChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLastChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; processPackage[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getPreviousSibling[]; aAST>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; processPackage[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; FullIdent>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdentBelow[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; processImport[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; FullIdent>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; processImport[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mImports>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; processImport[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; name>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; processTypeParams[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; newHashMap[]; not found; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; processTypeParams[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Maps>
<com.puppycrawl.tools.checkstyle.api.FastStack; push[java.util.Map<java.lang.String,com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; processTypeParams[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mTypeParams>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; processTypeParams[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; typeParams>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; processTypeParams[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; child>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; processTypeParams[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; child>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; processTypeParams[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; param.findFirstToken(TokenTypes.IDENT)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; processTypeParams[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getText[]; param>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; processTypeParams[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; param>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdentBelow[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; processTypeParams[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; FullIdent>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; createClassInfo[com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.Token, java.lang.String]; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; processTypeParams[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; getCurrentClassName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; processTypeParams[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<java.util.Map; put[java.lang.String, com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo]; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; processTypeParams[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; paramsMap>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; processClass[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; processClass[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; "">
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; processClass[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ident>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; processTypeParams[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; processClass[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; findClassAlias[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; createClassInfo[com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.Token, java.lang.String]; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo; null; this>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$Token; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; createClassInfo[com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.Token, java.lang.String]; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo; null; aName>
<com.puppycrawl.tools.checkstyle.api.FastStack; size[]; int; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; findClassAlias[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo; null; mTypeParams>
<com.puppycrawl.tools.checkstyle.api.FastStack; peek[int]; java.util.Map<java.lang.String,com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; findClassAlias[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo; null; mTypeParams>
<java.util.Map; get[java.lang.Object]; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; findClassAlias[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo; null; paramMap>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$RegularClass; isLoadable[]; boolean; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.RegularClass; getClazz[]; java.lang.Class<?>; null; this>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$RegularClass; setClazz[java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.RegularClass; getClazz[]; java.lang.Class<?>; null; this>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; tryLoadClass[com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.Token, java.lang.String]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.RegularClass; getClazz[]; java.lang.Class<?>; null; mCheck>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$ClassInfo; getName[]; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.Token; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.RegularClass; getClazz[]; java.lang.Class<?>; null; this>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$ClassInfo; getName[]; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.Token; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.RegularClass; toString[]; java.lang.String; null; this>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$ClassInfo; getClazz[]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassAlias; getClazz[]; java.lang.Class<?>; null; mClassInfo>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$ClassInfo; getName[]; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.Token; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassAlias; toString[]; java.lang.String; null; this>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.Token; Token[com.puppycrawl.tools.checkstyle.api.FullIdent]; void; null; aFullIdent>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.Token; Token[com.puppycrawl.tools.checkstyle.api.FullIdent]; void; null; aFullIdent>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.Token; Token[com.puppycrawl.tools.checkstyle.api.FullIdent]; void; null; aFullIdent>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$Token; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.Token; toString[]; java.lang.String; null; this>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$Token; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.Token; toString[]; java.lang.String; null; this>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$Token; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.Token; toString[]; java.lang.String; null; this>
<com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck$TextfileChecksumGenerator; calcChecksum[java.lang.String]; int; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck.TextfileChecksumGenerator; convertLines[java.lang.String[]]; int[]; null; this>
<java.lang.Math; max[int, int]; int; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck.TextfileChecksumGenerator; convertLines[java.lang.String[]]; int[]; null; Math>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck.TextfileChecksumGenerator; convertLines[java.lang.String[]]; int[]; null; aOriginalLines[i + j]>
<java.lang.String; hashCode[]; int; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck.TextfileChecksumGenerator; calcChecksum[java.lang.String]; int; null; aLine>
<java.lang.String; startsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck.JavaChecksumGenerator; calcChecksum[java.lang.String]; int; null; aLine>
<not found; getLog[]; not found; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck.JavaChecksumGenerator; calcChecksum[java.lang.String]; int; null; LogFactory>
<not found; newArrayList[]; not found; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck.JavaChecksumGenerator; calcChecksum[java.lang.String]; int; null; Lists>
<not found; makeMap[]; not found; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck.JavaChecksumGenerator; calcChecksum[java.lang.String]; int; null; new MapMaker().softValues()>
<not found; softValues[]; not found; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck.JavaChecksumGenerator; calcChecksum[java.lang.String]; int; makeMap[]; new MapMaker()>
<java.util.List; clear[]; void; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; beginProcessing[java.lang.String]; void; null; mFiles>
<java.util.List; add[java.io.File]; boolean; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; mFiles>
<java.lang.System; currentTimeMillis[]; long; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; finishProcessing[]; void; null; System>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; finishProcessing[]; void; null; mFiles>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; finishProcessing[]; void; null; mFiles>
<not found; isDebugEnabled[]; not found; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; finishProcessing[]; void; null; LOG>
<not found; debug[]; not found; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; finishProcessing[]; void; null; LOG>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; finishProcessing[]; void; null; mFiles>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; finishProcessing[]; void; null; mFiles>
<java.util.List; get[int]; java.io.File; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; finishProcessing[]; void; null; mFiles>
<com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; getTrimmedLines[java.io.File]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; finishProcessing[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; findChecksumGenerator[java.io.File]; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck.ChecksumGenerator; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; finishProcessing[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck$ChecksumGenerator; convertLines[java.lang.String[]]; int[]; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; finishProcessing[]; void; null; transformer>
<not found; error[]; not found; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; finishProcessing[]; void; null; LOG>
<java.lang.Throwable; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; finishProcessing[]; void; null; ex>
<com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; fillSortedRelevantChecksums[]; void; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; finishProcessing[]; void; null; this>
<java.lang.System; currentTimeMillis[]; long; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; finishProcessing[]; void; null; System>
<com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; findDuplicates[]; void; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; finishProcessing[]; void; null; this>
<java.lang.System; currentTimeMillis[]; long; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; finishProcessing[]; void; null; System>
<com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; dumpStats[long, long, long]; void; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; finishProcessing[]; void; null; this>
<java.lang.String; endsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; findChecksumGenerator[java.io.File]; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck.ChecksumGenerator; null; aFile.getName()>
<java.io.File; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; findChecksumGenerator[java.io.File]; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck.ChecksumGenerator; endsWith[java.lang.String]; aFile>
<not found; isDebugEnabled[]; not found; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; dumpStats[long, long, long]; void; null; LOG>
<not found; debug[]; not found; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; dumpStats[long, long, long]; void; null; LOG>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; dumpStats[long, long, long]; void; null; mFiles>
<not found; debug[]; not found; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; dumpStats[long, long, long]; void; null; LOG>
<not found; debug[]; not found; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; dumpStats[long, long, long]; void; null; LOG>
<not found; isDebugEnabled[]; not found; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; findDuplicates[]; void; null; LOG>
<not found; debug[]; not found; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; findDuplicates[]; void; null; LOG>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; findDuplicates[]; void; null; mFiles>
<java.io.File; getPath[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; findDuplicates[]; void; null; mFiles.get(i)>
<java.util.List; get[int]; java.io.File; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; findDuplicates[]; void; getPath[]; mFiles>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessages; reset[]; void; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; findDuplicates[]; void; null; getMessageCollector()>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; getMessageCollector[]; com.puppycrawl.tools.checkstyle.api.LocalizedMessages; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; findDuplicates[]; void; reset[]; this>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; getMessageDispatcher[]; com.puppycrawl.tools.checkstyle.api.MessageDispatcher; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; findDuplicates[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.MessageDispatcher; fireFileStarted[java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; findDuplicates[]; void; null; dispatcher>
<com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; findDuplicatesInFiles[int, int]; void; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; findDuplicates[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; fireErrors[java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; findDuplicates[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.MessageDispatcher; fireFileFinished[java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; findDuplicates[]; void; null; dispatcher>
<com.puppycrawl.tools.checkstyle.checks.duplicates.ChecksumInfo; hasChecksumOverlapsWith[com.puppycrawl.tools.checkstyle.checks.duplicates.ChecksumInfo]; boolean; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; findDuplicatesInFiles[int, int]; void; null; iChecksumInfo>
<not found; create[]; not found; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; findDuplicatesInFiles[int, int]; void; null; ArrayListMultimap>
<com.puppycrawl.tools.checkstyle.checks.duplicates.ChecksumInfo; findLinesWithChecksum[int]; int[]; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; findDuplicatesInFiles[int, int]; void; null; jChecksumInfo>
<com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; findDuplicateFromLine[int, int, int, int[], com.puppycrawl.tools.checkstyle.checks.duplicates.Multimap<java.lang.Integer,java.lang.Integer>]; void; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; findDuplicatesInFiles[int, int]; void; null; this>
<not found; get[]; not found; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; findDuplicateFromLine[int, int, int, int[], com.puppycrawl.tools.checkstyle.checks.duplicates.Multimap<java.lang.Integer,java.lang.Integer>]; void; null; aIgnore>
<java.util.Collection; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; findDuplicateFromLine[int, int, int, int[], com.puppycrawl.tools.checkstyle.checks.duplicates.Multimap<java.lang.Integer,java.lang.Integer>]; void; null; ignoreEntries>
<com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; verifiyDuplicateLines[int, int, int, int]; int; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; findDuplicateFromLine[int, int, int, int[], com.puppycrawl.tools.checkstyle.checks.duplicates.Multimap<java.lang.Integer,java.lang.Integer>]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; reportDuplicate[int, int, java.io.File, int]; void; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; findDuplicateFromLine[int, int, int, int[], com.puppycrawl.tools.checkstyle.checks.duplicates.Multimap<java.lang.Integer,java.lang.Integer>]; void; null; this>
<java.util.List; get[int]; java.io.File; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; findDuplicateFromLine[int, int, int, int[], com.puppycrawl.tools.checkstyle.checks.duplicates.Multimap<java.lang.Integer,java.lang.Integer>]; void; null; mFiles>
<not found; put[]; not found; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; findDuplicateFromLine[int, int, int, int[], com.puppycrawl.tools.checkstyle.checks.duplicates.Multimap<java.lang.Integer,java.lang.Integer>]; void; null; aIgnore>
<java.util.List; get[int]; java.io.File; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; verifiyDuplicateLines[int, int, int, int]; int; null; mFiles>
<java.util.List; get[int]; java.io.File; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; verifiyDuplicateLines[int, int, int, int]; int; null; mFiles>
<com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; getTrimmedLines[java.io.File]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; verifiyDuplicateLines[int, int, int, int]; int; null; this>
<com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; getTrimmedLines[java.io.File]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; verifiyDuplicateLines[int, int, int, int]; int; null; this>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; verifiyDuplicateLines[int, int, int, int]; int; null; iLines[i++]>
<not found; error[]; not found; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; verifiyDuplicateLines[int, int, int, int]; int; null; LOG>
<java.io.File; getPath[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; getTrimmedLines[java.io.File]; java.lang.String[]; null; aFile>
<java.util.Map; get[java.lang.Object]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; getTrimmedLines[java.io.File]; java.lang.String[]; null; mTrimmedLineCache>
<com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; getTrimmed[java.lang.String[]]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; getTrimmedLines[java.io.File]; java.lang.String[]; null; this>
<com.puppycrawl.tools.checkstyle.api.FileText; toLinesArray[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; getTrimmedLines[java.io.File]; java.lang.String[]; null; text>
<java.util.Map; put[java.lang.String, java.lang.String[]]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; getTrimmedLines[java.io.File]; java.lang.String[]; null; mTrimmedLineCache>
<java.lang.String; trim[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; getTrimmed[java.lang.String[]]; java.lang.String[]; null; aLines[i]>
<com.puppycrawl.tools.checkstyle.api.Utils; getStrippedFileName[java.lang.String, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; reportDuplicate[int, int, java.io.File, int]; void; null; Utils>
<java.io.File; getPath[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; reportDuplicate[int, int, java.io.File, int]; void; null; aJFile>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; reportDuplicate[int, int, java.io.File, int]; void; null; this>
<java.lang.System; arraycopy[java.lang.Object, int, java.lang.Object, int, int]; void; com.puppycrawl.tools.checkstyle.checks.duplicates.ChecksumInfo; ChecksumInfo[int[]]; void; null; System>
<java.lang.System; arraycopy[java.lang.Object, int, java.lang.Object, int, int]; void; com.puppycrawl.tools.checkstyle.checks.duplicates.ChecksumInfo; ChecksumInfo[int[]]; void; null; System>
<com.puppycrawl.tools.checkstyle.checks.duplicates.ChecksumInfo; sort[]; void; com.puppycrawl.tools.checkstyle.checks.duplicates.ChecksumInfo; ChecksumInfo[int[]]; void; null; this>
<java.util.Arrays; binarySearch[int[], int]; int; com.puppycrawl.tools.checkstyle.checks.duplicates.ChecksumInfo; findLinesWithChecksum[int]; int[]; null; Arrays>
<java.util.Arrays; sort[int[]]; void; com.puppycrawl.tools.checkstyle.checks.duplicates.ChecksumInfo; findLinesWithChecksum[int]; int[]; null; Arrays>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.duplicates.ChecksumInfo; findLinesWithChecksum[int]; int[]; null; System>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.LineSeparatorOption; matches[byte[]]; boolean; null; s>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.LineSeparatorOption; length[]; int; null; mLineSeparator>
<com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; setLegalComment[java.lang.String]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.checks.AbstractFormatCheck; getRegexp[]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FileContents; getCppComments[]; com.puppycrawl.tools.checkstyle.api.ImmutableMap<java.lang.Integer,com.puppycrawl.tools.checkstyle.api.TextBlock>; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; getFileContents()>
<com.puppycrawl.tools.checkstyle.api.Check; getFileContents[]; com.puppycrawl.tools.checkstyle.api.FileContents; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getCppComments[]; this>
<com.puppycrawl.tools.checkstyle.api.FileContents; getCComments[]; com.puppycrawl.tools.checkstyle.api.ImmutableMap<java.lang.Integer,java.util.List<com.puppycrawl.tools.checkstyle.api.TextBlock>>; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; getFileContents()>
<com.puppycrawl.tools.checkstyle.api.Check; getFileContents[]; com.puppycrawl.tools.checkstyle.api.FileContents; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getCComments[]; this>
<not found; newHashSet[]; not found; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Sets>
<java.util.Set; addAll[java.util.Collection<? extends java.lang.Integer>]; boolean; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; lines>
<java.util.Map; keySet[]; java.util.Set<java.lang.Integer>; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; cppComments>
<java.util.Set; addAll[java.util.Collection<? extends java.lang.Integer>]; boolean; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; lines>
<java.util.Map; keySet[]; java.util.Set<java.lang.Integer>; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; cComments>
<com.puppycrawl.tools.checkstyle.api.Check; getLines[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<java.lang.Integer; intValue[]; int; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; lineNo>
<java.util.Map; containsKey[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; cppComments>
<java.util.Map; get[java.lang.Object]; com.puppycrawl.tools.checkstyle.api.TextBlock; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; cppComments>
<java.lang.String; substring[int, int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; line>
<com.puppycrawl.tools.checkstyle.api.TextBlock; getStartColNo[]; int; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; comment>
<java.util.Map; containsKey[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; cComments>
<java.util.Map; get[java.lang.Object]; java.util.List<com.puppycrawl.tools.checkstyle.api.TextBlock>; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; cComments>
<java.util.List; get[int]; com.puppycrawl.tools.checkstyle.api.TextBlock; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; commentList>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; commentList>
<java.lang.String; substring[int, int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; line>
<com.puppycrawl.tools.checkstyle.api.TextBlock; getStartColNo[]; int; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; comment>
<com.puppycrawl.tools.checkstyle.api.TextBlock; getText[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; comment>
<java.lang.String; trim[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; line.substring(comment.getEndColNo() + 1)>
<java.lang.String; substring[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; trim[]; line>
<com.puppycrawl.tools.checkstyle.api.TextBlock; getEndColNo[]; int; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; comment>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; "">
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; blankLinePattern.matcher(lineBefore)>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; find[]; blankLinePattern>
<com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; isLegalComment[com.puppycrawl.tools.checkstyle.api.TextBlock]; boolean; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<java.lang.Integer; intValue[]; int; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; lineNo>
<com.puppycrawl.tools.checkstyle.api.TextBlock; getStartLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; isLegalComment[com.puppycrawl.tools.checkstyle.api.TextBlock]; boolean; null; aComment>
<com.puppycrawl.tools.checkstyle.api.TextBlock; getEndLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; isLegalComment[com.puppycrawl.tools.checkstyle.api.TextBlock]; boolean; null; aComment>
<com.puppycrawl.tools.checkstyle.api.TextBlock; getText[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; isLegalComment[com.puppycrawl.tools.checkstyle.api.TextBlock]; boolean; null; aComment>
<java.lang.String; substring[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; isLegalComment[com.puppycrawl.tools.checkstyle.api.TextBlock]; boolean; null; commentText>
<java.lang.String; endsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; isLegalComment[com.puppycrawl.tools.checkstyle.api.TextBlock]; boolean; null; commentText>
<java.lang.String; substring[int, int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; isLegalComment[com.puppycrawl.tools.checkstyle.api.TextBlock]; boolean; null; commentText>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; isLegalComment[com.puppycrawl.tools.checkstyle.api.TextBlock]; boolean; null; commentText>
<java.lang.String; trim[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; isLegalComment[com.puppycrawl.tools.checkstyle.api.TextBlock]; boolean; null; commentText>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; isLegalComment[com.puppycrawl.tools.checkstyle.api.TextBlock]; boolean; null; mLegalComment.matcher(commentText)>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; isLegalComment[com.puppycrawl.tools.checkstyle.api.TextBlock]; boolean; find[]; mLegalComment>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.ArrayTypeStyleCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.ArrayTypeStyleCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; typeAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.ArrayTypeStyleCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; typeAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.ArrayTypeStyleCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; declAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.ArrayTypeStyleCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; typeAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.ArrayTypeStyleCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; variableAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.ArrayTypeStyleCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.ArrayTypeStyleCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; variableAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.ArrayTypeStyleCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.ArrayTypeStyleCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.ArrayTypeStyleCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.ArrayTypeStyleCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; targetAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; targetAST>
<com.puppycrawl.tools.checkstyle.api.Check; getLines[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; targetAST>
<not found; length[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; targetAST.getText()>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; length[]; targetAST>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; line>
<java.lang.Character; isWhitespace[char]; boolean; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Character>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; line>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; line>
<java.lang.Character; isWhitespace[char]; boolean; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Character>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; line>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; targetAST>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; targetAST>
<java.lang.String; indexOf[int]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; line>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parent>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parent>
<com.puppycrawl.tools.checkstyle.checks.AbstractOptionCheck; getAbstractOption[]; com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapOption; com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.Check; getLines[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; text>
<java.lang.String; trim[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; currentLine>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; currentLine.substring(colNo + text.length()).trim()>
<java.lang.String; trim[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; length[]; currentLine.substring(colNo + text.length())>
<java.lang.String; substring[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; trim[]; currentLine>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; text>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Utils; whitespaceBefore[int, java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForIteratorPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getPreviousSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForIteratorPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.Check; getLines[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForIteratorPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForIteratorPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; semi>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForIteratorPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; semi>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForIteratorPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; line>
<com.puppycrawl.tools.checkstyle.checks.AbstractOptionCheck; getAbstractOption[]; com.puppycrawl.tools.checkstyle.checks.whitespace.PadOption; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForIteratorPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<java.lang.Character; isWhitespace[char]; boolean; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForIteratorPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Character>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForIteratorPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; line>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForIteratorPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForIteratorPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; semi>
<com.puppycrawl.tools.checkstyle.checks.AbstractOptionCheck; getAbstractOption[]; com.puppycrawl.tools.checkstyle.checks.whitespace.PadOption; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForIteratorPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<java.lang.Character; isWhitespace[char]; boolean; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForIteratorPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Character>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForIteratorPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; line>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForIteratorPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForIteratorPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; semi>
<com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck; getRequiredTokens[]; int[]; com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck; getDefaultTokens[]; int[]; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck; processLeft[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getType[]; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; findFirstToken[int]; aAST>
<com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck; processRight[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; getLines[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<java.lang.Character; isWhitespace[char]; boolean; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Character>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; line>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getPreviousSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; sibling>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; sibling>
<java.lang.Character; isWhitespace[char]; boolean; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Character>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; line>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processStart[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processEnd[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; getLines[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processEnd[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processEnd[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processEnd[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processEnd[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<java.lang.Character; isWhitespace[char]; boolean; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processEnd[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Character>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processEnd[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; line>
<com.puppycrawl.tools.checkstyle.api.Utils; whitespaceBefore[int, java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processEnd[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processEnd[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processEnd[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processEnd[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; line>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processEnd[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; line>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processEnd[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processEnd[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getType[]; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processEnd[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getParent().getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processEnd[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getType[]; aAST.getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processEnd[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getParent[]; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processEnd[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getParent().getParent().getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processEnd[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getType[]; aAST.getParent().getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processEnd[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getParent[]; aAST.getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processEnd[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getParent[]; aAST>
<java.lang.Character; isWhitespace[char]; boolean; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processEnd[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Character>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processEnd[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processEnd[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<java.lang.Character; isWhitespace[char]; boolean; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processEnd[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Character>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processEnd[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processEnd[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processEnd[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; line>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processEnd[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; line>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processEnd[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processEnd[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.Check; getLines[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processStart[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processStart[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processStart[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processStart[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processStart[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processStart[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parent>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processStart[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parent>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processStart[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; grandparent>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processStart[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; grandparent>
<java.lang.Character; isWhitespace[char]; boolean; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processStart[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Character>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processStart[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; line>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processStart[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processStart[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<java.lang.Character; isWhitespace[char]; boolean; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processStart[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Character>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processStart[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; line>
<com.puppycrawl.tools.checkstyle.api.Utils; whitespaceBefore[int, java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processStart[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processStart[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processStart[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processStart[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; line>
<java.lang.Character; isWhitespace[char]; boolean; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processStart[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Character>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processStart[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; line>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processStart[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck; processStart[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.Check; getLines[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck; processLeft[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck; processLeft[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck; processLeft[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck; processLeft[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; line>
<com.puppycrawl.tools.checkstyle.checks.AbstractOptionCheck; getAbstractOption[]; com.puppycrawl.tools.checkstyle.checks.whitespace.PadOption; com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck; processLeft[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<java.lang.Character; isWhitespace[char]; boolean; com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck; processLeft[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Character>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck; processLeft[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; line>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck; processLeft[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck; processLeft[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.AbstractOptionCheck; getAbstractOption[]; com.puppycrawl.tools.checkstyle.checks.whitespace.PadOption; com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck; processLeft[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<java.lang.Character; isWhitespace[char]; boolean; com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck; processLeft[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Character>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck; processLeft[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; line>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck; processLeft[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; line>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck; processLeft[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck; processLeft[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.Check; getLines[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck; processRight[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck; processRight[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck; processRight[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.AbstractOptionCheck; getAbstractOption[]; com.puppycrawl.tools.checkstyle.checks.whitespace.PadOption; com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck; processRight[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<java.lang.Character; isWhitespace[char]; boolean; com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck; processRight[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Character>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck; processRight[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; line>
<com.puppycrawl.tools.checkstyle.api.Utils; whitespaceBefore[int, java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck; processRight[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck; processRight[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck; processRight[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.AbstractOptionCheck; getAbstractOption[]; com.puppycrawl.tools.checkstyle.checks.whitespace.PadOption; com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck; processRight[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<java.lang.Character; isWhitespace[char]; boolean; com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck; processRight[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Character>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck; processRight[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; line>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck; processRight[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; line>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck; processRight[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck; processRight[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck; processRight[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.Check; getLines[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; targetAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; targetAST>
<not found; length[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; targetAST.getText()>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; length[]; targetAST>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; line>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; line>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; targetAST>
<java.lang.Character; isWhitespace[char]; boolean; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Character>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; targetAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; targetAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; sibling>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; sibling>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; targetAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; targetAST>
<not found; length[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; targetAST.getText()>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; length[]; targetAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; theAst>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; theAst>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; theAst>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; theAst>
<com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck; isPreceedsEmptyForInit[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck; processLeft[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; theAst>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; theAst.getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getType[]; theAst>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; theAst.getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; findFirstToken[int]; theAst>
<com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck; isFollowsEmptyForIterator[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.whitespace.AbstractParenPadCheck; processRight[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck; isFollowsEmptyForIterator[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck; isFollowsEmptyForIterator[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; parent>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck; isFollowsEmptyForIterator[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; parent>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck; isFollowsEmptyForIterator[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; parent>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck; isFollowsEmptyForIterator[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; forIterator>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck; isFollowsEmptyForIterator[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; forIterator>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck; isPreceedsEmptyForInit[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck; isPreceedsEmptyForInit[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; parent>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck; isPreceedsEmptyForInit[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; parent>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck; isPreceedsEmptyForInit[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; parent>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck; isPreceedsEmptyForInit[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; forIterator>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getPreviousSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck; isPreceedsEmptyForInit[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; forIterator>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.Check; getLines[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parenAST>
<com.puppycrawl.tools.checkstyle.api.Utils; whitespaceBefore[int, java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parenAST>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parenAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parenAST>
<com.puppycrawl.tools.checkstyle.checks.AbstractOptionCheck; getAbstractOption[]; com.puppycrawl.tools.checkstyle.checks.whitespace.PadOption; com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<java.lang.Character; isWhitespace[char]; boolean; com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Character>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; line>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parenAST>
<com.puppycrawl.tools.checkstyle.checks.AbstractOptionCheck; getAbstractOption[]; com.puppycrawl.tools.checkstyle.checks.whitespace.PadOption; com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<java.lang.Character; isWhitespace[char]; boolean; com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Character>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; line>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parenAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForInitializerPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForInitializerPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForInitializerPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; semi>
<com.puppycrawl.tools.checkstyle.api.Check; getLines[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForInitializerPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForInitializerPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; semi>
<com.puppycrawl.tools.checkstyle.api.Utils; whitespaceBefore[int, java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForInitializerPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.checks.AbstractOptionCheck; getAbstractOption[]; com.puppycrawl.tools.checkstyle.checks.whitespace.PadOption; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForInitializerPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<java.lang.Character; isWhitespace[char]; boolean; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForInitializerPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Character>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForInitializerPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; line>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForInitializerPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForInitializerPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; semi>
<java.lang.Character; isWhitespace[char]; boolean; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForInitializerPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Character>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForInitializerPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; line>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForInitializerPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForInitializerPadCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; semi>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getType[]; aAST>
<com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; emptyMethodBlockCheck[com.puppycrawl.tools.checkstyle.api.DetailAST, int]; boolean; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; emptyCtorBlockCheck[com.puppycrawl.tools.checkstyle.api.DetailAST, int]; boolean; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; getLines[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; length[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getText()>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; length[]; aAST>
<java.lang.Character; isWhitespace[char]; boolean; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Character>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; line>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; line>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; line>
<java.lang.Character; isWhitespace[char]; boolean; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Character>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getFirstChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getType[]; aAST>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; length[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getText()>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; length[]; aAST>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; emptyBlockCheck[com.puppycrawl.tools.checkstyle.api.DetailAST, int, int]; boolean; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; emptyMethodBlockCheck[com.puppycrawl.tools.checkstyle.api.DetailAST, int]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; emptyBlockCheck[com.puppycrawl.tools.checkstyle.api.DetailAST, int, int]; boolean; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; emptyCtorBlockCheck[com.puppycrawl.tools.checkstyle.api.DetailAST, int]; boolean; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; emptyBlockCheck[com.puppycrawl.tools.checkstyle.api.DetailAST, int, int]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; emptyBlockCheck[com.puppycrawl.tools.checkstyle.api.DetailAST, int, int]; boolean; null; aAST.getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; emptyBlockCheck[com.puppycrawl.tools.checkstyle.api.DetailAST, int, int]; boolean; getParent[]; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; emptyBlockCheck[com.puppycrawl.tools.checkstyle.api.DetailAST, int, int]; boolean; null; grandParent>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; emptyBlockCheck[com.puppycrawl.tools.checkstyle.api.DetailAST, int, int]; boolean; null; aAST.getFirstChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck; emptyBlockCheck[com.puppycrawl.tools.checkstyle.api.DetailAST, int, int]; boolean; getType[]; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getParent[]; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; container>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck; visitCatch[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck; visitForEachClause[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck; visitMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck; visitMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aMethod>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck; visitMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aMethod>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck; visitMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; modifiers>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck; visitMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aMethod>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck; visitMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parameters>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck; visitMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; child>
<com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck; checkParam[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck; visitMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck; visitMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; child>
<com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck; checkParam[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck; visitCatch[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck; visitCatch[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aCatch>
<com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck; checkParam[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck; visitForEachClause[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck; visitForEachClause[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aForEachClause>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck; checkParam[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aParam>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck; checkParam[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aParam>
<com.puppycrawl.tools.checkstyle.checks.CheckUtils; getFirstNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck; checkParam[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; CheckUtils>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck; checkParam[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck; checkParam[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; firstNode>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck; checkParam[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; firstNode>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck; checkParam[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; paramName>
<not found; newArrayList[]; not found; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck; checkParam[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Lists>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; setFileExtensions[java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; TranslationCheck[]; void; null; this>
<java.util.List; clear[]; void; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; beginProcessing[java.lang.String]; void; null; mPropertyFiles>
<java.util.List; add[java.io.File]; boolean; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; mPropertyFiles>
<com.puppycrawl.tools.checkstyle.checks.TranslationCheck; arrangePropertyFiles[java.util.List<java.io.File>]; java.util.Map<java.lang.String,java.util.Set<java.io.File>>; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; finishProcessing[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.TranslationCheck; checkPropertyFileSets[java.util.Map<java.lang.String,java.util.Set<java.io.File>>]; void; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; finishProcessing[]; void; null; this>
<java.io.File; getPath[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; extractPropertyIdentifier[java.io.File]; java.lang.String; null; aFile>
<java.lang.String; lastIndexOf[int]; int; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; extractPropertyIdentifier[java.io.File]; java.lang.String; null; filePath>
<java.lang.String; indexOf[int, int]; int; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; extractPropertyIdentifier[java.io.File]; java.lang.String; null; filePath>
<java.lang.String; indexOf[int, int]; int; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; extractPropertyIdentifier[java.io.File]; java.lang.String; null; filePath>
<java.lang.String; substring[int, int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; extractPropertyIdentifier[java.io.File]; java.lang.String; null; filePath>
<not found; newHashMap[]; not found; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; arrangePropertyFiles[java.util.List<java.io.File>]; java.util.Map<java.lang.String,java.util.Set<java.io.File>>; null; Maps>
<com.puppycrawl.tools.checkstyle.checks.TranslationCheck; extractPropertyIdentifier[java.io.File]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; arrangePropertyFiles[java.util.List<java.io.File>]; java.util.Map<java.lang.String,java.util.Set<java.io.File>>; null; this>
<java.util.Map; get[java.lang.Object]; java.util.Set<java.io.File>; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; arrangePropertyFiles[java.util.List<java.io.File>]; java.util.Map<java.lang.String,java.util.Set<java.io.File>>; null; propFileMap>
<not found; newHashSet[]; not found; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; arrangePropertyFiles[java.util.List<java.io.File>]; java.util.Map<java.lang.String,java.util.Set<java.io.File>>; null; Sets>
<java.util.Map; put[java.lang.String, java.util.Set<java.io.File>]; java.util.Set<java.io.File>; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; arrangePropertyFiles[java.util.List<java.io.File>]; java.util.Map<java.lang.String,java.util.Set<java.io.File>>; null; propFileMap>
<java.util.Set; add[java.io.File]; boolean; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; arrangePropertyFiles[java.util.List<java.io.File>]; java.util.Map<java.lang.String,java.util.Set<java.io.File>>; null; fileSet>
<not found; newHashSet[]; not found; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; loadKeys[java.io.File]; java.util.Set<java.lang.Object>; null; Sets>
<java.util.Properties; load[java.io.InputStream]; void; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; loadKeys[java.io.File]; java.util.Set<java.lang.Object>; null; props>
<java.util.Properties; propertyNames[]; java.util.Enumeration<?>; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; loadKeys[java.io.File]; java.util.Set<java.lang.Object>; null; props>
<java.util.Enumeration; hasMoreElements[]; boolean; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; loadKeys[java.io.File]; java.util.Set<java.lang.Object>; null; e>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; loadKeys[java.io.File]; java.util.Set<java.lang.Object>; null; keys>
<java.util.Enumeration; nextElement[]; ; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; loadKeys[java.io.File]; java.util.Set<java.lang.Object>; null; e>
<com.puppycrawl.tools.checkstyle.checks.TranslationCheck; logIOException[java.io.IOException, java.io.File]; void; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; loadKeys[java.io.File]; java.util.Set<java.lang.Object>; null; this>
<com.puppycrawl.tools.checkstyle.api.Utils; closeQuietly[java.io.Closeable]; void; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; loadKeys[java.io.File]; java.util.Set<java.lang.Object>; null; Utils>
<java.lang.Throwable; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; logIOException[java.io.IOException, java.io.File]; void; null; aEx>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; getId[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; logIOException[java.io.IOException, java.io.File]; void; null; this>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.checks.TranslationCheck>; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; logIOException[java.io.IOException, java.io.File]; void; null; this>
<not found; newTreeSet[]; not found; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; logIOException[java.io.IOException, java.io.File]; void; null; Sets>
<java.util.TreeSet; add[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; boolean; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; logIOException[java.io.IOException, java.io.File]; void; null; messages>
<com.puppycrawl.tools.checkstyle.api.MessageDispatcher; fireErrors[java.lang.String, java.util.TreeSet<com.puppycrawl.tools.checkstyle.api.LocalizedMessage>]; void; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; logIOException[java.io.IOException, java.io.File]; void; null; getMessageDispatcher()>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; getMessageDispatcher[]; com.puppycrawl.tools.checkstyle.api.MessageDispatcher; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; logIOException[java.io.IOException, java.io.File]; void; fireErrors[java.lang.String, java.util.TreeSet<com.puppycrawl.tools.checkstyle.api.LocalizedMessage>]; this>
<java.io.File; getPath[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; logIOException[java.io.IOException, java.io.File]; void; null; aFile>
<not found; debug[]; not found; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; logIOException[java.io.IOException, java.io.File]; void; null; Utils.getExceptionLogger()>
<com.puppycrawl.tools.checkstyle.api.Utils; getExceptionLogger[]; com.puppycrawl.tools.checkstyle.api.Log; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; logIOException[java.io.IOException, java.io.File]; void; debug[]; Utils>
<java.util.Map; entrySet[]; java.util.Set<java.util.Map.Entry<java.io.File,java.util.Set<java.lang.Object>>>; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; compareKeySets[java.util.Set<java.lang.Object>, java.util.Map<java.io.File,java.util.Set<java.lang.Object>>]; void; null; aFileMap>
<java.util.Map$Entry; getKey[]; java.io.File; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; compareKeySets[java.util.Set<java.lang.Object>, java.util.Map<java.io.File,java.util.Set<java.lang.Object>>]; void; null; entry>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; getMessageDispatcher[]; com.puppycrawl.tools.checkstyle.api.MessageDispatcher; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; compareKeySets[java.util.Set<java.lang.Object>, java.util.Map<java.io.File,java.util.Set<java.lang.Object>>]; void; null; this>
<java.io.File; getPath[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; compareKeySets[java.util.Set<java.lang.Object>, java.util.Map<java.io.File,java.util.Set<java.lang.Object>>]; void; null; currentFile>
<com.puppycrawl.tools.checkstyle.api.MessageDispatcher; fireFileStarted[java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; compareKeySets[java.util.Set<java.lang.Object>, java.util.Map<java.io.File,java.util.Set<java.lang.Object>>]; void; null; dispatcher>
<java.util.Map$Entry; getValue[]; java.util.Set<java.lang.Object>; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; compareKeySets[java.util.Set<java.lang.Object>, java.util.Map<java.io.File,java.util.Set<java.lang.Object>>]; void; null; entry>
<not found; newHashSet[]; not found; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; compareKeySets[java.util.Set<java.lang.Object>, java.util.Map<java.io.File,java.util.Set<java.lang.Object>>]; void; null; Sets>
<java.util.Set; removeAll[java.util.Collection<?>]; boolean; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; compareKeySets[java.util.Set<java.lang.Object>, java.util.Map<java.io.File,java.util.Set<java.lang.Object>>]; void; null; keysClone>
<java.util.Set; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; compareKeySets[java.util.Set<java.lang.Object>, java.util.Map<java.io.File,java.util.Set<java.lang.Object>>]; void; null; keysClone>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; compareKeySets[java.util.Set<java.lang.Object>, java.util.Map<java.io.File,java.util.Set<java.lang.Object>>]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; fireErrors[java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; compareKeySets[java.util.Set<java.lang.Object>, java.util.Map<java.io.File,java.util.Set<java.lang.Object>>]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.MessageDispatcher; fireFileFinished[java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; compareKeySets[java.util.Set<java.lang.Object>, java.util.Map<java.io.File,java.util.Set<java.lang.Object>>]; void; null; dispatcher>
<java.util.Map; entrySet[]; java.util.Set<java.util.Map.Entry<java.lang.String,java.util.Set<java.io.File>>>; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; checkPropertyFileSets[java.util.Map<java.lang.String,java.util.Set<java.io.File>>]; void; null; aPropFiles>
<java.util.Map$Entry; getValue[]; java.util.Set<java.io.File>; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; checkPropertyFileSets[java.util.Map<java.lang.String,java.util.Set<java.io.File>>]; void; null; entry>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; checkPropertyFileSets[java.util.Map<java.lang.String,java.util.Set<java.io.File>>]; void; null; files>
<not found; newHashSet[]; not found; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; checkPropertyFileSets[java.util.Map<java.lang.String,java.util.Set<java.io.File>>]; void; null; Sets>
<not found; newHashMap[]; not found; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; checkPropertyFileSets[java.util.Map<java.lang.String,java.util.Set<java.io.File>>]; void; null; Maps>
<com.puppycrawl.tools.checkstyle.checks.TranslationCheck; loadKeys[java.io.File]; java.util.Set<java.lang.Object>; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; checkPropertyFileSets[java.util.Map<java.lang.String,java.util.Set<java.io.File>>]; void; null; this>
<java.util.Set; addAll[java.util.Collection<? extends java.lang.Object>]; boolean; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; checkPropertyFileSets[java.util.Map<java.lang.String,java.util.Set<java.io.File>>]; void; null; keys>
<java.util.Map; put[java.io.File, java.util.Set<java.lang.Object>]; java.util.Set<java.lang.Object>; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; checkPropertyFileSets[java.util.Map<java.lang.String,java.util.Set<java.io.File>>]; void; null; fileMap>
<com.puppycrawl.tools.checkstyle.checks.TranslationCheck; compareKeySets[java.util.Set<java.lang.Object>, java.util.Map<java.io.File,java.util.Set<java.lang.Object>>]; void; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; checkPropertyFileSets[java.util.Map<java.lang.String,java.util.Set<java.io.File>>]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.PackageDeclarationCheck; getDefaultTokens[]; int[]; com.puppycrawl.tools.checkstyle.checks.coding.PackageDeclarationCheck; getRequiredTokens[]; int[]; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.PackageDeclarationCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.PackageDeclarationCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.FileContents; getFilename[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.PackageDeclarationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; getFileContents()>
<com.puppycrawl.tools.checkstyle.api.Check; getFileContents[]; com.puppycrawl.tools.checkstyle.api.FileContents; com.puppycrawl.tools.checkstyle.checks.coding.PackageDeclarationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getFilename[]; this>
<java.lang.String; lastIndexOf[int]; int; com.puppycrawl.tools.checkstyle.checks.coding.PackageDeclarationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; fname>
<java.lang.String; substring[int, int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.PackageDeclarationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; fname>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getPreviousSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.PackageDeclarationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getLastChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLastChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.PackageDeclarationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getPreviousSibling[]; aAST>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.coding.PackageDeclarationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; FullIdent>
<java.lang.String; replace[char, char]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.PackageDeclarationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; full.getText()>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.PackageDeclarationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; replace[char, char]; full>
<java.lang.String; endsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.PackageDeclarationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; dirname>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.PackageDeclarationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.PackageDeclarationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; full>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.PackageDeclarationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; full>
<com.puppycrawl.tools.checkstyle.checks.coding.DefaultComesLastCheck; getDefaultTokens[]; int[]; com.puppycrawl.tools.checkstyle.checks.coding.DefaultComesLastCheck; getAcceptableTokens[]; int[]; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.DefaultComesLastCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.DefaultComesLastCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; defaultGroupAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.DefaultComesLastCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; defaultGroupAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getPreviousSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.DefaultComesLastCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; switchAST.getLastChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLastChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.DefaultComesLastCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getPreviousSibling[]; switchAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.DefaultComesLastCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; defaultGroupAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.DefaultComesLastCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; lastGroupAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.DefaultComesLastCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; defaultGroupAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.DefaultComesLastCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; lastGroupAST>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.DefaultComesLastCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck; getDefaultTokens[]; int[]; com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck; getRequiredTokens[]; int[]; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.NestedTryDepthCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.coding.NestedTryDepthCheck; visitLiteralTry[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.coding.NestedTryDepthCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.NestedTryDepthCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.NestedTryDepthCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.coding.NestedTryDepthCheck; leaveLiteralTry[]; void; com.puppycrawl.tools.checkstyle.checks.coding.NestedTryDepthCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.NestedTryDepthCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.coding.AbstractNestedDepthCheck; nestIn[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.NestedTryDepthCheck; visitLiteralTry[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.AbstractNestedDepthCheck; nestOut[]; void; com.puppycrawl.tools.checkstyle.checks.coding.NestedTryDepthCheck; leaveLiteralTry[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aMethodCall>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; dot>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; dot>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; objCalledOn>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; objCalledOn>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; objCalledOn>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; objCalledOn>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; dot.getNextSibling()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getFirstChild[]; dot>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; "equals">
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; method>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; "equalsIgnoreCase">
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; method>
<com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck; containsOneArg[com.puppycrawl.tools.checkstyle.checks.coding.AST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck; containsAllSafeTokens[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aMethodCall>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aMethodCall>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; "equals">
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; method>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck; containsMultiArgs[com.puppycrawl.tools.checkstyle.checks.coding.AST]; boolean; null; aExpr>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck; containsMultiArgs[com.puppycrawl.tools.checkstyle.checks.coding.AST]; boolean; null; comma>
<com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck; containsNoArgs[com.puppycrawl.tools.checkstyle.checks.coding.AST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck; containsOneArg[com.puppycrawl.tools.checkstyle.checks.coding.AST]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck; containsMultiArgs[com.puppycrawl.tools.checkstyle.checks.coding.AST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck; containsOneArg[com.puppycrawl.tools.checkstyle.checks.coding.AST]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck; containsAllSafeTokens[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aExpr>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck; containsAllSafeTokens[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; arg>
<com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck; skipVariableAssign[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck; containsAllSafeTokens[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck; containsAllSafeTokens[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; (arg)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck; containsAllSafeTokens[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; (arg)>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck; skipVariableAssign[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; aCurrentAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck; skipVariableAssign[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; aCurrentAST.getFirstChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck; skipVariableAssign[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; getType[]; aCurrentAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck; skipVariableAssign[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; aCurrentAST.getFirstChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck; skipVariableAssign[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; aCurrentAST>
<com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; getDefaultTokens[]; int[]; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; getRequiredTokens[]; int[]; null; this>
<com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; init[]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; nextGroup>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; isTerminated[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean, boolean]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; hasFallTruComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; isTerminated[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean, boolean]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; checkSlist[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean, boolean]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; isTerminated[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean, boolean]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; checkIf[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean, boolean]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; isTerminated[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean, boolean]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; checkLoop[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; isTerminated[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean, boolean]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; checkTry[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean, boolean]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; isTerminated[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean, boolean]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; checkSwitch[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; isTerminated[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean, boolean]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLastChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; checkSlist[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean, boolean]; boolean; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; checkSlist[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean, boolean]; boolean; null; lastStmt>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getPreviousSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; checkSlist[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean, boolean]; boolean; null; lastStmt>
<com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; isTerminated[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean, boolean]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; checkSlist[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean, boolean]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; checkIf[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean, boolean]; boolean; null; aAST.findFirstToken(TokenTypes.RPAREN)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; checkIf[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean, boolean]; boolean; getNextSibling[]; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; checkIf[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean, boolean]; boolean; null; thenStmt>
<com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; isTerminated[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean, boolean]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; checkIf[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean, boolean]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; isTerminated[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean, boolean]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; checkIf[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean, boolean]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; checkIf[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean, boolean]; boolean; null; elseStmt>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; checkLoop[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; checkLoop[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getPreviousSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; checkLoop[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; lparen>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; checkLoop[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; checkLoop[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; rparen>
<com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; isTerminated[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean, boolean]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; checkLoop[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLastChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; checkTry[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean, boolean]; boolean; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; checkTry[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean, boolean]; boolean; null; finalStmt>
<com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; isTerminated[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean, boolean]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; checkTry[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean, boolean]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; checkTry[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean, boolean]; boolean; null; finalStmt>
<com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; isTerminated[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean, boolean]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; checkTry[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean, boolean]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; checkTry[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean, boolean]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; checkTry[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean, boolean]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; checkTry[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean, boolean]; boolean; null; catchStmt>
<com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; isTerminated[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean, boolean]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; checkTry[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean, boolean]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; checkTry[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean, boolean]; boolean; null; catchStmt>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; checkSwitch[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; boolean; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; checkSwitch[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; boolean; null; caseGroup>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; checkSwitch[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; boolean; null; caseGroup>
<com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; isTerminated[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean, boolean]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; checkSwitch[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; checkSwitch[com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; boolean; null; caseGroup>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; hasFallTruComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aCurrentCase>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; hasFallTruComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aNextCase>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; hasFallTruComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aNextCase>
<com.puppycrawl.tools.checkstyle.api.Check; getLines[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; hasFallTruComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; this>
<java.lang.String; substring[int, int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; hasFallTruComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; lines[endLineNo - 1]>
<com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; commentMatch[java.util.regex.Pattern, java.lang.String, int]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; hasFallTruComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; this>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; hasFallTruComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; lines[i].trim()>
<java.lang.String; trim[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; hasFallTruComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; length[]; lines[i]>
<com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; commentMatch[java.util.regex.Pattern, java.lang.String, int]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; hasFallTruComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; this>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; commentMatch[java.util.regex.Pattern, java.lang.String, int]; boolean; null; aPattern>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; commentMatch[java.util.regex.Pattern, java.lang.String, int]; boolean; null; matcher>
<java.util.regex.Matcher; start[]; int; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; commentMatch[java.util.regex.Pattern, java.lang.String, int]; boolean; null; matcher>
<java.util.regex.Matcher; end[]; int; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; commentMatch[java.util.regex.Pattern, java.lang.String, int]; boolean; null; matcher>
<com.puppycrawl.tools.checkstyle.api.FileContents; hasIntersectionWithComment[int, int, int, int]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; commentMatch[java.util.regex.Pattern, java.lang.String, int]; boolean; null; getFileContents()>
<com.puppycrawl.tools.checkstyle.api.Check; getFileContents[]; com.puppycrawl.tools.checkstyle.api.FileContents; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck; commentMatch[java.util.regex.Pattern, java.lang.String, int]; boolean; hasIntersectionWithComment[int, int, int, int]; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; isSurrounded[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parent>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; inTokenList[int, int[]]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; chopString[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; inTokenList[int, int[]]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLastChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; last>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parent>
<com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; exprSurrounded[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getType[]; aAST>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; inTokenList[int, int[]]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getPreviousSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; isSurrounded[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; isSurrounded[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; isSurrounded[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; prev>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; isSurrounded[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; next>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; exprSurrounded[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; exprSurrounded[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; exprSurrounded[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLastChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; exprSurrounded[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; exprSurrounded[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; n1>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; exprSurrounded[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; nn>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; chopString[java.lang.String]; java.lang.String; null; aString>
<java.lang.String; substring[int, int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck; chopString[java.lang.String]; java.lang.String; null; aString>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.NestedForDepthCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.coding.AbstractNestedDepthCheck; nestIn[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.NestedForDepthCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.NestedForDepthCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.coding.AbstractNestedDepthCheck; nestOut[]; void; com.puppycrawl.tools.checkstyle.checks.coding.NestedForDepthCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; newLinkedList[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; processAST[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Lists>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; processAST[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; processAST[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; throwsAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; processAST[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; child>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; processAST[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; child>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; processAST[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; FullIdent>
<com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; checkException[com.puppycrawl.tools.checkstyle.api.FullIdent, java.util.List<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; processAST[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; processAST[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; child>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; logLoadErrorImpl[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; logLoadError[com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.Token]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$Token; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; logLoadError[com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.Token]; void; null; aIdent>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$Token; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; logLoadError[com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.Token]; void; null; aIdent>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$Token; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; logLoadError[com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.Token]; void; null; aIdent>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; createClassInfo[com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.Token, java.lang.String]; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; checkException[com.puppycrawl.tools.checkstyle.api.FullIdent, java.util.List<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; getCurrentClassName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; checkException[com.puppycrawl.tools.checkstyle.api.FullIdent, java.util.List<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; isUnchecked[java.lang.Class<?>]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; checkException[com.puppycrawl.tools.checkstyle.api.FullIdent, java.util.List<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$ClassInfo; getClazz[]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; checkException[com.puppycrawl.tools.checkstyle.api.FullIdent, java.util.List<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; null; newClassInfo>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; checkException[com.puppycrawl.tools.checkstyle.api.FullIdent, java.util.List<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; checkException[com.puppycrawl.tools.checkstyle.api.FullIdent, java.util.List<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; null; aExc>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; checkException[com.puppycrawl.tools.checkstyle.api.FullIdent, java.util.List<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; null; aExc>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; checkException[com.puppycrawl.tools.checkstyle.api.FullIdent, java.util.List<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; null; aExc>
<java.util.List; iterator[]; java.util.Iterator<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; checkException[com.puppycrawl.tools.checkstyle.api.FullIdent, java.util.List<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; null; aKnownExcs>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; checkException[com.puppycrawl.tools.checkstyle.api.FullIdent, java.util.List<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; null; known>
<java.util.Iterator; next[]; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; checkException[com.puppycrawl.tools.checkstyle.api.FullIdent, java.util.List<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; null; known>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$ClassInfo; getName[]; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.Token; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; checkException[com.puppycrawl.tools.checkstyle.api.FullIdent, java.util.List<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; null; ci>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$ClassInfo; getClazz[]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; checkException[com.puppycrawl.tools.checkstyle.api.FullIdent, java.util.List<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; null; ci>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$ClassInfo; getClazz[]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; checkException[com.puppycrawl.tools.checkstyle.api.FullIdent, java.util.List<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; null; newClassInfo>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; checkException[com.puppycrawl.tools.checkstyle.api.FullIdent, java.util.List<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; checkException[com.puppycrawl.tools.checkstyle.api.FullIdent, java.util.List<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; null; aExc>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; checkException[com.puppycrawl.tools.checkstyle.api.FullIdent, java.util.List<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; null; aExc>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; checkException[com.puppycrawl.tools.checkstyle.api.FullIdent, java.util.List<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; null; aExc>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; isSubclass[java.lang.Class<?>, java.lang.Class<?>]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; checkException[com.puppycrawl.tools.checkstyle.api.FullIdent, java.util.List<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$ClassInfo; getClazz[]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; checkException[com.puppycrawl.tools.checkstyle.api.FullIdent, java.util.List<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; null; ci>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$ClassInfo; getClazz[]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; checkException[com.puppycrawl.tools.checkstyle.api.FullIdent, java.util.List<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; null; newClassInfo>
<java.util.Iterator; remove[]; void; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; checkException[com.puppycrawl.tools.checkstyle.api.FullIdent, java.util.List<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; null; known>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; checkException[com.puppycrawl.tools.checkstyle.api.FullIdent, java.util.List<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$Token; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; checkException[com.puppycrawl.tools.checkstyle.api.FullIdent, java.util.List<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; null; fi>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$Token; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; checkException[com.puppycrawl.tools.checkstyle.api.FullIdent, java.util.List<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; null; fi>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$Token; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; checkException[com.puppycrawl.tools.checkstyle.api.FullIdent, java.util.List<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; null; fi>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; checkException[com.puppycrawl.tools.checkstyle.api.FullIdent, java.util.List<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; null; aExc>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; isSubclass[java.lang.Class<?>, java.lang.Class<?>]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; checkException[com.puppycrawl.tools.checkstyle.api.FullIdent, java.util.List<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$ClassInfo; getClazz[]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; checkException[com.puppycrawl.tools.checkstyle.api.FullIdent, java.util.List<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; null; newClassInfo>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$ClassInfo; getClazz[]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; checkException[com.puppycrawl.tools.checkstyle.api.FullIdent, java.util.List<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; null; ci>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; checkException[com.puppycrawl.tools.checkstyle.api.FullIdent, java.util.List<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; checkException[com.puppycrawl.tools.checkstyle.api.FullIdent, java.util.List<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; null; aExc>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; checkException[com.puppycrawl.tools.checkstyle.api.FullIdent, java.util.List<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; null; aExc>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; checkException[com.puppycrawl.tools.checkstyle.api.FullIdent, java.util.List<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; null; aExc>
<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck$Token; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; checkException[com.puppycrawl.tools.checkstyle.api.FullIdent, java.util.List<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; null; fi>
<java.util.List; add[com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; checkException[com.puppycrawl.tools.checkstyle.api.FullIdent, java.util.List<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; null; aKnownExcs>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.StringLiteralEqualityCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.StringLiteralEqualityCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; firstChild>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.StringLiteralEqualityCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; firstChild>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.StringLiteralEqualityCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; secondChild>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.StringLiteralEqualityCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.StringLiteralEqualityCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.StringLiteralEqualityCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.StringLiteralEqualityCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; setLimitedTokens[java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.MissingSwitchDefaultCheck; MissingSwitchDefaultCheck[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.TokenTypes; getTokenName[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.MissingSwitchDefaultCheck; MissingSwitchDefaultCheck[]; void; null; TokenTypes>
<com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; setMinimumNumber[int]; void; com.puppycrawl.tools.checkstyle.checks.coding.MissingSwitchDefaultCheck; MissingSwitchDefaultCheck[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; setMaximumDepth[int]; void; com.puppycrawl.tools.checkstyle.checks.coding.MissingSwitchDefaultCheck; MissingSwitchDefaultCheck[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; setMinimumMessage[java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.MissingSwitchDefaultCheck; MissingSwitchDefaultCheck[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.MissingSwitchDefaultCheck; getDefaultTokens[]; int[]; com.puppycrawl.tools.checkstyle.checks.coding.MissingSwitchDefaultCheck; getAcceptableTokens[]; int[]; null; this>
<not found; newHashSet[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MissingSwitchDefaultCheck; getAcceptableTokens[]; int[]; null; Sets>
<com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheck; setIgnoredMethodNames[java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheck; IllegalThrowsCheck[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheck; getDefaultTokens[]; int[]; com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheck; getRequiredTokens[]; int[]; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aDetailAST>
<com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheck; shouldIgnoreMethod[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aDetailAST.getParent().findFirstToken(TokenTypes.IDENT)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getText[]; aDetailAST.getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; findFirstToken[int]; aDetailAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; token>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; FullIdent>
<com.puppycrawl.tools.checkstyle.checks.coding.AbstractIllegalCheck; isIllegalClassName[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ident>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ident>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; token>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheck; shouldIgnoreMethod[java.lang.String]; boolean; null; mIgnoredMethodNames>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheck; setIgnoredMethodNames[java.lang.String[]]; void; null; mIgnoredMethodNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheck; setIgnoredMethodNames[java.lang.String[]]; void; null; mIgnoredMethodNames>
<not found; newHashSet[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheck; setIgnoredMethodNames[java.lang.String[]]; void; null; Sets>
<com.puppycrawl.tools.checkstyle.checks.coding.AbstractIllegalCheck; setIllegalClassNames[java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.AbstractIllegalCheck; AbstractIllegalCheck[java.lang.String[]]; void; null; this>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.AbstractIllegalCheck; isIllegalClassName[java.lang.String]; boolean; null; mIllegalClassNames>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.checks.coding.AbstractIllegalCheck; setIllegalClassNames[java.lang.String[]]; void; null; mIllegalClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.AbstractIllegalCheck; setIllegalClassNames[java.lang.String[]]; void; null; mIllegalClassNames>
<java.lang.String; lastIndexOf[java.lang.String]; int; com.puppycrawl.tools.checkstyle.checks.coding.AbstractIllegalCheck; setIllegalClassNames[java.lang.String[]]; void; null; name>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.coding.AbstractIllegalCheck; setIllegalClassNames[java.lang.String[]]; void; null; name>
<java.lang.String; substring[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.AbstractIllegalCheck; setIllegalClassNames[java.lang.String[]]; void; null; name>
<java.lang.String; lastIndexOf[java.lang.String]; int; com.puppycrawl.tools.checkstyle.checks.coding.AbstractIllegalCheck; setIllegalClassNames[java.lang.String[]]; void; null; name>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.AbstractIllegalCheck; setIllegalClassNames[java.lang.String[]]; void; null; mIllegalClassNames>
<com.puppycrawl.tools.checkstyle.api.FastStack; newInstance[]; com.puppycrawl.tools.checkstyle.api.FastStack<com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheck.Context>; com.puppycrawl.tools.checkstyle.checks.coding.AbstractIllegalCheck; setIllegalClassNames[java.lang.String[]]; void; null; FastStack>
<com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheck; setMax[int]; void; com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheck; ReturnCountCheck[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FastStack; clear[]; void; com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mContextStack>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheck; visitMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheck$Context; visitLiteralReturn[]; void; com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mContext>
<com.puppycrawl.tools.checkstyle.api.DetailAST; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheck; leaveMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.FastStack; push[com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheck.Context]; void; com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheck; visitMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mContextStack>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheck; visitMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; find[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheck; visitMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; getRegexp().matcher(methodNameAST.getText())>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheck; visitMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; find[]; getRegexp()>
<com.puppycrawl.tools.checkstyle.checks.AbstractFormatCheck; getRegexp[]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheck; visitMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; matcher[java.lang.CharSequence]; this>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheck; visitMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; methodNameAST>
<com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheck$Context; checkCount[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheck; leaveMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mContext>
<com.puppycrawl.tools.checkstyle.api.FastStack; pop[]; com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheck.Context; com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheck; leaveMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mContextStack>
<com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheck; getMax[]; int; com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheck.Context; checkCount[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheck.Context; checkCount[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheck.Context; checkCount[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheck.Context; checkCount[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheck; getMax[]; int; com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheck.Context; checkCount[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; setLimitedTokens[java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.MissingCtorCheck; MissingCtorCheck[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.TokenTypes; getTokenName[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.MissingCtorCheck; MissingCtorCheck[]; void; null; TokenTypes>
<com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; setMinimumNumber[int]; void; com.puppycrawl.tools.checkstyle.checks.coding.MissingCtorCheck; MissingCtorCheck[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; setMaximumDepth[int]; void; com.puppycrawl.tools.checkstyle.checks.coding.MissingCtorCheck; MissingCtorCheck[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; setMinimumMessage[java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.MissingCtorCheck; MissingCtorCheck[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.MissingCtorCheck; getDefaultTokens[]; int[]; com.puppycrawl.tools.checkstyle.checks.coding.MissingCtorCheck; getAcceptableTokens[]; int[]; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.MissingCtorCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.MissingCtorCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; modifiers>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanExpressionCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanExpressionCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parent>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanExpressionCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanExpressionCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parent>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanExpressionCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parent>
<com.puppycrawl.tools.checkstyle.api.FastStack; newInstance[]; com.puppycrawl.tools.checkstyle.api.FastStack<java.lang.String>; com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanExpressionCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; FastStack>
<com.puppycrawl.tools.checkstyle.api.FastStack; newInstance[]; com.puppycrawl.tools.checkstyle.api.FastStack<com.puppycrawl.tools.checkstyle.api.FastStack<java.lang.String>>; com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanExpressionCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; FastStack>
<com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; getDefaultTokens[]; int[]; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; getRequiredTokens[]; int[]; null; this>
<com.puppycrawl.tools.checkstyle.api.FastStack; clear[]; void; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mCurrentVariables>
<com.puppycrawl.tools.checkstyle.api.FastStack; clear[]; void; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mVariableStack>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; enterBlock[]; void; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; checkIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; leaveForIter[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; leaveForEach[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; leaveForDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; exitBlock[]; void; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.FastStack; push[com.puppycrawl.tools.checkstyle.api.FastStack<java.lang.String>]; void; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; enterBlock[]; void; null; mVariableStack>
<com.puppycrawl.tools.checkstyle.api.FastStack; newInstance[]; com.puppycrawl.tools.checkstyle.api.FastStack<java.lang.String>; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; enterBlock[]; void; null; FastStack>
<com.puppycrawl.tools.checkstyle.api.FastStack; pop[]; com.puppycrawl.tools.checkstyle.api.FastStack<java.lang.String>; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; exitBlock[]; void; null; mVariableStack>
<com.puppycrawl.tools.checkstyle.api.FastStack; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; checkIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mCurrentVariables>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; checkIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; checkIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; identAST>
<com.puppycrawl.tools.checkstyle.api.FastStack; contains[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; checkIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mCurrentVariables>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; checkIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; identAST>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; checkIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; checkIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; checkIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; checkIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; identAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; leaveForIter[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; leaveForIter[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; forInitAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; leaveForIter[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parameterDefAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; leaveForIter[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parameterDefAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; leaveForIter[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parameterDefAST>
<com.puppycrawl.tools.checkstyle.api.FastStack; push[java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; leaveForIter[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mCurrentVariables>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; leaveForIter[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; param>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; leaveForEach[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aForEach>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; leaveForEach[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; paramDef>
<com.puppycrawl.tools.checkstyle.api.FastStack; push[java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; leaveForEach[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mCurrentVariables>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; leaveForEach[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; paramName>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; leaveForDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; leaveForDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; forInitAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; leaveForDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parameterDefAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; leaveForDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parameterDefAST>
<com.puppycrawl.tools.checkstyle.api.FastStack; pop[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; leaveForDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mCurrentVariables>
<com.puppycrawl.tools.checkstyle.api.FastStack; pop[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheck; leaveForDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mCurrentVariables>
<com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheck; getDefaultTokens[]; int[]; com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheck; getRequiredTokens[]; int[]; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheck; processIDENT[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheck; processIDENT[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheck; processIDENT[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getType[]; aAST>
<com.puppycrawl.tools.checkstyle.checks.DeclarationCollector; isClassField[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheck; processIDENT[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheck; processIDENT[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheck; processIDENT[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheck; processIDENT[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; getSurroundingScope[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheck; processIDENT[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ScopeUtils>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getPreviousSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheck; processIDENT[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheck; processIDENT[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.DeclarationCollector; isClassField[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheck; processIDENT[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheck; processIDENT[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FastStack; newInstance[]; com.puppycrawl.tools.checkstyle.api.FastStack<java.util.Set<java.lang.String>>; com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheck; processIDENT[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; FastStack>
<com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; getDefaultTokens[]; int[]; com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; getRequiredTokens[]; int[]; null; this>
<com.puppycrawl.tools.checkstyle.api.FastStack; clear[]; void; com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mParameterNamesStack>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; visitMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; visitAssign[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; visitIncDec[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; leaveMethodDef[]; void; com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; checkIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; visitAssign[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; checkIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; visitIncDec[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<java.util.Set; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; checkIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mParameterNames>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; checkIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; checkIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; identAST>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; checkIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mParameterNames>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; checkIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; identAST>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; checkIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; checkIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; checkIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; checkIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; identAST>
<com.puppycrawl.tools.checkstyle.api.FastStack; push[java.util.Set<java.lang.String>]; void; com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; visitMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mParameterNamesStack>
<not found; newHashSet[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; visitMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Sets>
<com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; visitMethodParameters[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; visitMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; visitMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.FastStack; pop[]; java.util.Set<java.lang.String>; com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; leaveMethodDef[]; void; null; mParameterNamesStack>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; visitMethodParameters[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; visitMethodParameters[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parameterDefAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; visitMethodParameters[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parameterDefAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; visitMethodParameters[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parameterDefAST>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; visitMethodParameters[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mParameterNames>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; visitMethodParameters[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; param>
<not found; newHashSet[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; visitMethodParameters[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Sets>
<com.puppycrawl.tools.checkstyle.checks.coding.CovariantEqualsCheck; getDefaultTokens[]; int[]; com.puppycrawl.tools.checkstyle.checks.coding.CovariantEqualsCheck; getRequiredTokens[]; int[]; null; this>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.checks.coding.CovariantEqualsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mEqualsMethods>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.CovariantEqualsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.CovariantEqualsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; objBlock>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.CovariantEqualsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; child>
<com.puppycrawl.tools.checkstyle.checks.CheckUtils; isEqualsMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.CovariantEqualsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; CheckUtils>
<com.puppycrawl.tools.checkstyle.checks.coding.CovariantEqualsCheck; hasObjectParameter[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.CovariantEqualsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<java.util.Set; add[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.CovariantEqualsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mEqualsMethods>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.CovariantEqualsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; child>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.CovariantEqualsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; equalsAST>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.CovariantEqualsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.CovariantEqualsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; nameNode>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.CovariantEqualsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; nameNode>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.CovariantEqualsCheck; hasObjectParameter[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; com.puppycrawl.tools.checkstyle.checks.coding.CovariantEqualsCheck; hasObjectParameter[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; paramsNode>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.CovariantEqualsCheck; hasObjectParameter[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; paramsNode>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.CovariantEqualsCheck; hasObjectParameter[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; paramNode>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdentBelow[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.coding.CovariantEqualsCheck; hasObjectParameter[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; FullIdent>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.CovariantEqualsCheck; hasObjectParameter[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; fullIdent>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.CovariantEqualsCheck; hasObjectParameter[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; "Object">
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.CovariantEqualsCheck; hasObjectParameter[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; "java.lang.Object">
<not found; newHashMap[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.CovariantEqualsCheck; hasObjectParameter[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; Maps>
<com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; setIgnoreStringsRegexp[java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; MultipleStringLiteralsCheck[]; void; null; this>
<java.util.BitSet; set[int]; void; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; MultipleStringLiteralsCheck[]; void; null; mIgnoreOccurrenceContext>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; setIgnoreStringsRegexp[java.lang.String]; void; null; aIgnoreStringsRegexp>
<com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; setIgnoreStringsRegexp[java.lang.String]; void; null; Utils>
<java.util.BitSet; clear[]; void; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; setIgnoreOccurrenceContext[java.lang.String[]]; void; null; mIgnoreOccurrenceContext>
<com.puppycrawl.tools.checkstyle.api.TokenTypes; getTokenId[java.lang.String]; int; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; setIgnoreOccurrenceContext[java.lang.String[]]; void; null; TokenTypes>
<java.util.BitSet; set[int]; void; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; setIgnoreOccurrenceContext[java.lang.String[]]; void; null; mIgnoreOccurrenceContext>
<com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; isInIgnoreOccurrenceContext[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mPattern.matcher(currentString)>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; find[]; mPattern>
<java.util.Map; get[java.lang.Object]; java.util.List<com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck.StringInfo>; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mStringMap>
<not found; newArrayList[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Lists>
<java.util.Map; put[java.lang.String, java.util.List<com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck.StringInfo>]; java.util.List<com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck.StringInfo>; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mStringMap>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<java.util.List; add[com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck.StringInfo]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; hitList>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; isInIgnoreOccurrenceContext[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; token>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; isInIgnoreOccurrenceContext[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; token>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; isInIgnoreOccurrenceContext[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; token>
<java.util.BitSet; get[int]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; isInIgnoreOccurrenceContext[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; mIgnoreOccurrenceContext>
<java.util.Map; clear[]; void; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mStringMap>
<java.util.Map; keySet[]; java.util.Set<java.lang.String>; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mStringMap>
<java.util.Map; get[java.lang.Object]; java.util.List<com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck.StringInfo>; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mStringMap>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; hits>
<java.util.List; get[int]; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck.StringInfo; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; hits>
<com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck$StringInfo; getLine[]; int; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; firstFinding>
<com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck$StringInfo; getCol[]; int; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; firstFinding>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; hits>
<com.puppycrawl.tools.checkstyle.api.FastStack; newInstance[]; com.puppycrawl.tools.checkstyle.api.FastStack<java.util.Map<java.lang.String,com.puppycrawl.tools.checkstyle.api.DetailAST>>; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck.StringInfo; getCol[]; int; null; FastStack>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.FastStack; push[java.util.Map<java.lang.String,com.puppycrawl.tools.checkstyle.api.DetailAST>]; void; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mScopeStack>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; inInterfaceBlock[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ScopeUtils>
<com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; inAbstractMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getType[]; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getType[]; aAST>
<com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; insertVariable[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getType[]; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getFirstChild[]; aAST>
<com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; removeVariable[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; inAbstractMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; inAbstractMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; parent>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; inAbstractMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; parent>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; inAbstractMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; modifiers>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; inAbstractMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; parent>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; insertVariable[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.FastStack; peek[]; java.util.Map<java.lang.String,com.puppycrawl.tools.checkstyle.api.DetailAST>; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; insertVariable[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mScopeStack>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; insertVariable[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<java.util.Map; put[java.lang.String, com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; insertVariable[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; state>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; insertVariable[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ast>
<com.puppycrawl.tools.checkstyle.api.FastStack; size[]; int; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; removeVariable[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mScopeStack>
<com.puppycrawl.tools.checkstyle.api.FastStack; peek[int]; java.util.Map<java.lang.String,com.puppycrawl.tools.checkstyle.api.DetailAST>; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; removeVariable[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mScopeStack>
<java.util.Map; remove[java.lang.Object]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; removeVariable[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; state>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; removeVariable[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.FastStack; pop[]; java.util.Map<java.lang.String,com.puppycrawl.tools.checkstyle.api.DetailAST>; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mScopeStack>
<java.util.Map; values[]; java.util.Collection<com.puppycrawl.tools.checkstyle.api.DetailAST>; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; state>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; var>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; var>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; var>
<java.util.Arrays; sort[int[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Arrays>
<com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; isInAnnotation[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; inIgnoreList[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; isInHashCodeMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; findContainingConstantDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; reportMagicNumber[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ast>
<java.util.Arrays; binarySearch[int[], int]; int; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Arrays>
<com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; reportMagicNumber[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ast>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; findContainingConstantDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; varDefAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; findContainingConstantDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; varDefAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; findContainingConstantDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; varDefAST>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; inInterfaceOrAnnotationBlock[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; findContainingConstantDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; ScopeUtils>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; findContainingConstantDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; varDefAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; findContainingConstantDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; varDefAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; findContainingConstantDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; modifiersAST>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; reportMagicNumber[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; reportMagicNumber[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; reportMagicNumber[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parent>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; reportMagicNumber[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parent>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; reportMagicNumber[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; reportMagicNumber[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; reportAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; reportMagicNumber[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; reportAST>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; inCodeBlock[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; isInHashCodeMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ScopeUtils>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; isInHashCodeMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; isInHashCodeMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; methodDefAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; isInHashCodeMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; methodDefAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; isInHashCodeMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; methodDefAST>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; isInHashCodeMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; "hashCode">
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; isInHashCodeMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; identAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; isInHashCodeMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; methodDefAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; isInHashCodeMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; paramAST>
<com.puppycrawl.tools.checkstyle.checks.CheckUtils; parseDouble[java.lang.String, int]; double; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; inIgnoreList[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; CheckUtils>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; inIgnoreList[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; inIgnoreList[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; inIgnoreList[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; inIgnoreList[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; parent>
<java.util.Arrays; binarySearch[double[], double]; int; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; inIgnoreList[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; Arrays>
<java.lang.System; arraycopy[java.lang.Object, int, java.lang.Object, int, int]; void; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; setIgnoreNumbers[double[]]; void; null; System>
<java.util.Arrays; sort[double[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; setIgnoreNumbers[double[]]; void; null; Arrays>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; isInAnnotation[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; isInAnnotation[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST.getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; isInAnnotation[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; getParent[]; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; isInAnnotation[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST.getParent().getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; isInAnnotation[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; getType[]; aAST.getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; isInAnnotation[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; getParent[]; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; isInAnnotation[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST.getParent().getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; isInAnnotation[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; getType[]; aAST.getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck; isInAnnotation[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; getParent[]; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.MultipleVariableDeclarationsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MultipleVariableDeclarationsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; nextNode>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MultipleVariableDeclarationsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; nextNode>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MultipleVariableDeclarationsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; nextNode>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.MultipleVariableDeclarationsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; nextNode>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MultipleVariableDeclarationsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; nextNode>
<com.puppycrawl.tools.checkstyle.checks.CheckUtils; getFirstNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.MultipleVariableDeclarationsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; CheckUtils>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MultipleVariableDeclarationsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.MultipleVariableDeclarationsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getType[]; aAST>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.MultipleVariableDeclarationsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.MultipleVariableDeclarationsCheck; getLastNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.MultipleVariableDeclarationsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.CheckUtils; getFirstNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.MultipleVariableDeclarationsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; CheckUtils>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.MultipleVariableDeclarationsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; firstNextNode>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.MultipleVariableDeclarationsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; lastNode>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.MultipleVariableDeclarationsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.MultipleVariableDeclarationsCheck; getLastNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; aNode>
<com.puppycrawl.tools.checkstyle.checks.coding.MultipleVariableDeclarationsCheck; getLastNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.MultipleVariableDeclarationsCheck; getLastNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.MultipleVariableDeclarationsCheck; getLastNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; newNode>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.MultipleVariableDeclarationsCheck; getLastNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; currentNode>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.MultipleVariableDeclarationsCheck; getLastNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; newNode>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.MultipleVariableDeclarationsCheck; getLastNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; currentNode>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.MultipleVariableDeclarationsCheck; getLastNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; newNode>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.MultipleVariableDeclarationsCheck; getLastNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; currentNode>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.MultipleVariableDeclarationsCheck; getLastNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; child>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.NestedIfDepthCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.coding.NestedIfDepthCheck; visitLiteralIf[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.coding.NestedIfDepthCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.NestedIfDepthCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.NestedIfDepthCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.coding.NestedIfDepthCheck; leaveLiteralIf[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.coding.NestedIfDepthCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.NestedIfDepthCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.CheckUtils; isElseIf[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.NestedIfDepthCheck; visitLiteralIf[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; CheckUtils>
<com.puppycrawl.tools.checkstyle.checks.coding.AbstractNestedDepthCheck; nestIn[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.NestedIfDepthCheck; visitLiteralIf[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.CheckUtils; isElseIf[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.NestedIfDepthCheck; leaveLiteralIf[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; CheckUtils>
<com.puppycrawl.tools.checkstyle.checks.coding.AbstractNestedDepthCheck; nestOut[]; void; com.puppycrawl.tools.checkstyle.checks.coding.NestedIfDepthCheck; leaveLiteralIf[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; getTokenNames[]; java.util.Set<java.lang.String>; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenTextCheck; getAcceptableTokens[]; int[]; null; this>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenTextCheck; getAcceptableTokens[]; int[]; null; tokenNames>
<com.puppycrawl.tools.checkstyle.api.TokenTypes; getTokenId[java.lang.String]; int; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenTextCheck; getAcceptableTokens[]; int[]; null; TokenTypes>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenTextCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenTextCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; getRegexp().matcher(text)>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenTextCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; find[]; getRegexp()>
<com.puppycrawl.tools.checkstyle.checks.AbstractFormatCheck; getRegexp[]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenTextCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; matcher[java.lang.CharSequence]; this>
<com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenTextCheck; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenTextCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenTextCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; "">
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenTextCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenTextCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenTextCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.AbstractFormatCheck; getFormat[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenTextCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.AbstractFormatCheck; setCompileFlags[int]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenTextCheck; setIgnoreCase[boolean]; void; null; this>
<not found; newHashMap[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenTextCheck; setIgnoreCase[boolean]; void; null; Maps>
<not found; newHashSet[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenTextCheck; setIgnoreCase[boolean]; void; null; Sets>
<java.util.Map; clear[]; void; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mObjBlockEquals>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mObjBlockWithHashCode>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; type.getFirstChild()>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getType[]; type>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; "equals">
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; methodName>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; modifiers>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parameters>
<com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; isObjectParam[com.puppycrawl.tools.checkstyle.checks.coding.AST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parameters>
<java.util.Map; put[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mObjBlockEquals>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; type.getFirstChild()>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getType[]; type>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; "hashCode">
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; methodName>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; modifiers>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parameters>
<java.util.Set; add[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mObjBlockWithHashCode>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; isObjectParam[com.puppycrawl.tools.checkstyle.checks.coding.AST]; boolean; null; aFirstChild>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; isObjectParam[com.puppycrawl.tools.checkstyle.checks.coding.AST]; boolean; null; modifiers>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; isObjectParam[com.puppycrawl.tools.checkstyle.checks.coding.AST]; boolean; null; type.getFirstChild()>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; isObjectParam[com.puppycrawl.tools.checkstyle.checks.coding.AST]; boolean; getType[]; type>
<java.util.Map; keySet[]; java.util.Set<com.puppycrawl.tools.checkstyle.api.DetailAST>; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mObjBlockEquals>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mObjBlockWithHashCode>
<java.util.Map; get[java.lang.Object]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mObjBlockEquals>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; equalsAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; equalsAST>
<java.util.Map; clear[]; void; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mObjBlockEquals>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mObjBlockWithHashCode>
<com.puppycrawl.tools.checkstyle.checks.coding.AbstractNestedDepthCheck; setMax[int]; void; com.puppycrawl.tools.checkstyle.checks.coding.AbstractNestedDepthCheck; AbstractNestedDepthCheck[int]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; getDefaultTokens[]; int[]; com.puppycrawl.tools.checkstyle.checks.coding.AbstractNestedDepthCheck; getRequiredTokens[]; int[]; null; this>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.AbstractNestedDepthCheck; nestIn[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; void; null; this>
<java.util.Arrays; sort[int[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.AbstractNestedDepthCheck; nestOut[]; void; null; Arrays>
<com.puppycrawl.tools.checkstyle.checks.coding.InnerAssignmentCheck; isInContext[com.puppycrawl.tools.checkstyle.api.DetailAST, int[][]]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.InnerAssignmentCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.InnerAssignmentCheck; isInNoBraceControlStatement[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.InnerAssignmentCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.InnerAssignmentCheck; isInWhileIdiom[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.InnerAssignmentCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.InnerAssignmentCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.InnerAssignmentCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.InnerAssignmentCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.coding.InnerAssignmentCheck; isInContext[com.puppycrawl.tools.checkstyle.api.DetailAST, int[][]]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.InnerAssignmentCheck; isInNoBraceControlStatement[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.InnerAssignmentCheck; isInNoBraceControlStatement[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.InnerAssignmentCheck; isInNoBraceControlStatement[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; expr>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.InnerAssignmentCheck; isInNoBraceControlStatement[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; exprNext>
<com.puppycrawl.tools.checkstyle.checks.coding.InnerAssignmentCheck; isComparison[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.InnerAssignmentCheck; isInWhileIdiom[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.InnerAssignmentCheck; isInWhileIdiom[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.coding.InnerAssignmentCheck; isInContext[com.puppycrawl.tools.checkstyle.api.DetailAST, int[][]]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.InnerAssignmentCheck; isInWhileIdiom[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.InnerAssignmentCheck; isInWhileIdiom[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.InnerAssignmentCheck; isComparison[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<java.util.Arrays; binarySearch[int[], int]; int; com.puppycrawl.tools.checkstyle.checks.coding.InnerAssignmentCheck; isComparison[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; Arrays>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.InnerAssignmentCheck; isInContext[com.puppycrawl.tools.checkstyle.api.DetailAST, int[][]]; boolean; null; current>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.InnerAssignmentCheck; isInContext[com.puppycrawl.tools.checkstyle.api.DetailAST, int[][]]; boolean; null; current>
<not found; newHashSet[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.InnerAssignmentCheck; isInContext[com.puppycrawl.tools.checkstyle.api.DetailAST, int[][]]; boolean; null; Sets>
<not found; newHashSet[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.InnerAssignmentCheck; isInContext[com.puppycrawl.tools.checkstyle.api.DetailAST, int[][]]; boolean; null; Sets>
<not found; newHashSet[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.InnerAssignmentCheck; isInContext[com.puppycrawl.tools.checkstyle.api.DetailAST, int[][]]; boolean; null; Sets>
<not found; newHashSet[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.InnerAssignmentCheck; isInContext[com.puppycrawl.tools.checkstyle.api.DetailAST, int[][]]; boolean; null; Sets>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mImports>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mInstantiations>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mClassNames>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; processLiteralNew[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; processPackageDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; processImport[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; processClassDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; postprocessLiteralNew[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; processClassDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; processClassDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; identToken>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; processClassDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mClassNames>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdentBelow[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; processImport[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; FullIdent>
<java.util.Set; add[com.puppycrawl.tools.checkstyle.api.FullIdent]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; processImport[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mImports>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getPreviousSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; processPackageDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getLastChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLastChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; processPackageDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getPreviousSibling[]; aAST>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; processPackageDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; FullIdent>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; processPackageDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; packageIdent>
<java.util.Set; add[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; processLiteralNew[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mInstantiations>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; postprocessLiteralNew[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; postprocessLiteralNew[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; typeNameAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; postprocessLiteralNew[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; nameSibling>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; postprocessLiteralNew[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; FullIdent>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; postprocessLiteralNew[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; typeIdent>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; postprocessLiteralNew[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; postprocessLiteralNew[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; getIllegalInstantiation[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; postprocessLiteralNew[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; postprocessLiteralNew[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; getIllegalInstantiation[java.lang.String]; java.lang.String; null; mIllegalClasses>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; getIllegalInstantiation[java.lang.String]; java.lang.String; null; aClassName>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; getIllegalInstantiation[java.lang.String]; java.lang.String; null; mPkgName>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; getIllegalInstantiation[java.lang.String]; java.lang.String; null; illegal>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; getIllegalInstantiation[java.lang.String]; java.lang.String; null; javaLang>
<java.lang.String; endsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; getIllegalInstantiation[java.lang.String]; java.lang.String; null; illegal>
<java.lang.String; startsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; getIllegalInstantiation[java.lang.String]; java.lang.String; null; illegal>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; getIllegalInstantiation[java.lang.String]; java.lang.String; null; mClassNames>
<com.puppycrawl.tools.checkstyle.api.Check; getClassLoader[]; java.lang.ClassLoader; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; getIllegalInstantiation[java.lang.String]; java.lang.String; null; this>
<java.lang.ClassLoader; loadClass[java.lang.String]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; getIllegalInstantiation[java.lang.String]; java.lang.String; null; classLoader>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; getIllegalInstantiation[java.lang.String]; java.lang.String; null; illegal>
<java.lang.String; endsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; getIllegalInstantiation[java.lang.String]; java.lang.String; null; illegal>
<java.lang.String; startsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; getIllegalInstantiation[java.lang.String]; java.lang.String; null; illegal>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; getIllegalInstantiation[java.lang.String]; java.lang.String; null; importLineText>
<java.lang.String; endsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; getIllegalInstantiation[java.lang.String]; java.lang.String; null; importArg>
<java.lang.String; substring[int, int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; getIllegalInstantiation[java.lang.String]; java.lang.String; null; importArg>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; getIllegalInstantiation[java.lang.String]; java.lang.String; null; importArg>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; getIllegalInstantiation[java.lang.String]; java.lang.String; null; mIllegalClasses>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; getIllegalInstantiation[java.lang.String]; java.lang.String; null; Utils.baseClassname(importArg)>
<com.puppycrawl.tools.checkstyle.api.Utils; baseClassname[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; getIllegalInstantiation[java.lang.String]; java.lang.String; equals[java.lang.Object]; Utils>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; getIllegalInstantiation[java.lang.String]; java.lang.String; null; mIllegalClasses>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; setClasses[java.lang.String]; void; null; mIllegalClasses>
<java.util.StringTokenizer; hasMoreTokens[]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; setClasses[java.lang.String]; void; null; tok>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; setClasses[java.lang.String]; void; null; mIllegalClasses>
<java.util.StringTokenizer; nextToken[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; setClasses[java.lang.String]; void; null; tok>
<com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; getDefaultTokens[]; int[]; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; getRequiredTokens[]; int[]; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; visitMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; visitMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.findFirstToken(TokenTypes.IDENT)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; visitMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getText[]; aAST>
<java.lang.String; equalsIgnoreCase[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; visitMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; name>
<com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; checkSetUpTearDownMethod[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; visitMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<java.lang.String; equalsIgnoreCase[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; visitMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; name>
<com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; checkSetUpTearDownMethod[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; visitMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<java.lang.String; equalsIgnoreCase[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; visitMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; name>
<com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; checkSuiteMethod[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; visitMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; checkSuiteMethod[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; void; null; aActualName>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; checkSuiteMethod[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; isPublicAndStatic[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; checkSuiteMethod[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; checkSuiteMethod[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; checkSuiteMethod[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; checkSuiteMethod[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; void; null; typeAST>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; checkSuiteMethod[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; void; null; CheckUtils.createFullType(typeAST)>
<com.puppycrawl.tools.checkstyle.checks.CheckUtils; createFullType[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; checkSuiteMethod[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; void; getText[]; CheckUtils>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; checkSuiteMethod[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; void; null; "Test">
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; checkSuiteMethod[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; void; null; "junit.framework.Test">
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; checkSuiteMethod[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; checkParameters[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; checkSuiteMethod[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; void; null; this>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; checkSetUpTearDownMethod[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.String]; void; null; aActualName>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; checkSetUpTearDownMethod[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.String]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; isPublicOrProtected[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; checkSetUpTearDownMethod[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.String]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; checkSetUpTearDownMethod[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.String]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; isStatic[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; checkSetUpTearDownMethod[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.String]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; checkSetUpTearDownMethod[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.String]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; checkReturnValue[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; checkSetUpTearDownMethod[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.String]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; checkParameters[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; checkSetUpTearDownMethod[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.String]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; checkReturnValue[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; checkReturnValue[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; void; null; returnValueAST>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; checkReturnValue[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; checkParameters[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; checkParameters[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; void; null; parametersAST>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; checkParameters[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; isPublicOrProtected[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; isPublicOrProtected[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; modifiersAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; isPublicOrProtected[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; modifiersAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; isPublicAndStatic[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; isPublicAndStatic[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; modifiersAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; isPublicAndStatic[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; modifiersAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; isStatic[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheck; isStatic[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; modifiersAST>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.EmptyStatementCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.EmptyStatementCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.EmptyStatementCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; newHashSet[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.EmptyStatementCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Sets>
<not found; newHashSet[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.EmptyStatementCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Sets>
<not found; newHashSet[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.EmptyStatementCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Sets>
<com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; setIllegalClassNames[java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; IllegalTypeCheck[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; setLegalAbstractClassNames[java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; IllegalTypeCheck[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; setIgnoredMethodNames[java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; IllegalTypeCheck[]; void; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; visitMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; visitVariableDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; visitParameterDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; isCheckedMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; visitMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; checkClassName[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; visitMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; visitParameterDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; visitParameterDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getParent[]; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; visitParameterDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; grandParentAST>
<com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; isCheckedMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; visitParameterDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; checkClassName[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; visitParameterDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; checkClassName[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; visitVariableDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; checkClassName[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.CheckUtils; createFullType[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; checkClassName[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; CheckUtils>
<com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; isMatchingClassName[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; checkClassName[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; checkClassName[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ident>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; checkClassName[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; checkClassName[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ident>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; checkClassName[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ident>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; checkClassName[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ident>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; isMatchingClassName[java.lang.String]; boolean; null; mIllegalClassNames>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; isMatchingClassName[java.lang.String]; boolean; null; mLegalAbstractClassNames>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; isMatchingClassName[java.lang.String]; boolean; null; getRegexp().matcher(aClassName)>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; isMatchingClassName[java.lang.String]; boolean; find[]; getRegexp()>
<com.puppycrawl.tools.checkstyle.checks.AbstractFormatCheck; getRegexp[]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; isMatchingClassName[java.lang.String]; boolean; matcher[java.lang.CharSequence]; this>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; isCheckedMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST.findFirstToken(TokenTypes.IDENT)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; isCheckedMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; getText[]; aAST>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; isCheckedMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; mIgnoredMethodNames>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; setIllegalClassNames[java.lang.String[]]; void; null; mIllegalClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; setIllegalClassNames[java.lang.String[]]; void; null; mIllegalClassNames>
<java.lang.String; lastIndexOf[java.lang.String]; int; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; setIllegalClassNames[java.lang.String[]]; void; null; name>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; setIllegalClassNames[java.lang.String[]]; void; null; name>
<java.lang.String; substring[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; setIllegalClassNames[java.lang.String[]]; void; null; name>
<java.lang.String; lastIndexOf[java.lang.String]; int; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; setIllegalClassNames[java.lang.String[]]; void; null; name>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; setIllegalClassNames[java.lang.String[]]; void; null; mIllegalClassNames>
<java.util.Set; toArray[java.lang.String[]]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; getIllegalClassNames[]; java.lang.String[]; null; mIllegalClassNames>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; getIllegalClassNames[]; java.lang.String[]; null; mIllegalClassNames>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; setIgnoredMethodNames[java.lang.String[]]; void; null; mIgnoredMethodNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; setIgnoredMethodNames[java.lang.String[]]; void; null; mIgnoredMethodNames>
<java.util.Set; toArray[java.lang.String[]]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; getIgnoredMethodNames[]; java.lang.String[]; null; mIgnoredMethodNames>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; getIgnoredMethodNames[]; java.lang.String[]; null; mIgnoredMethodNames>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; setLegalAbstractClassNames[java.lang.String[]]; void; null; mLegalAbstractClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; setLegalAbstractClassNames[java.lang.String[]]; void; null; mLegalAbstractClassNames>
<java.util.Set; toArray[java.lang.String[]]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; getLegalAbstractClassNames[]; java.lang.String[]; null; mLegalAbstractClassNames>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; getLegalAbstractClassNames[]; java.lang.String[]; null; mLegalAbstractClassNames>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanReturnCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanReturnCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; elseLiteral>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanReturnCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getFirstChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanReturnCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getNextSibling[]; aAST>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanReturnCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; condition.getNextSibling()>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanReturnCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getNextSibling[]; condition>
<com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanReturnCheck; returnsOnlyBooleanLiteral[com.puppycrawl.tools.checkstyle.checks.coding.AST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanReturnCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanReturnCheck; returnsOnlyBooleanLiteral[com.puppycrawl.tools.checkstyle.checks.coding.AST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanReturnCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanReturnCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanReturnCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanReturnCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanReturnCheck; isBooleanLiteralReturnStatement[com.puppycrawl.tools.checkstyle.checks.coding.AST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanReturnCheck; returnsOnlyBooleanLiteral[com.puppycrawl.tools.checkstyle.checks.coding.AST]; boolean; null; this>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanReturnCheck; returnsOnlyBooleanLiteral[com.puppycrawl.tools.checkstyle.checks.coding.AST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanReturnCheck; isBooleanLiteralReturnStatement[com.puppycrawl.tools.checkstyle.checks.coding.AST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanReturnCheck; returnsOnlyBooleanLiteral[com.puppycrawl.tools.checkstyle.checks.coding.AST]; boolean; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanReturnCheck; isBooleanLiteralReturnStatement[com.puppycrawl.tools.checkstyle.checks.coding.AST]; boolean; null; aAST>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanReturnCheck; isBooleanLiteralReturnStatement[com.puppycrawl.tools.checkstyle.checks.coding.AST]; boolean; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanReturnCheck; isBooleanLiteralReturnStatement[com.puppycrawl.tools.checkstyle.checks.coding.AST]; boolean; null; expr>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanReturnCheck; isBooleanLiteralReturnStatement[com.puppycrawl.tools.checkstyle.checks.coding.AST]; boolean; null; expr>
<com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanReturnCheck; isBooleanLiteralType[int]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanReturnCheck; isBooleanLiteralReturnStatement[com.puppycrawl.tools.checkstyle.checks.coding.AST]; boolean; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanReturnCheck; isBooleanLiteralReturnStatement[com.puppycrawl.tools.checkstyle.checks.coding.AST]; boolean; null; value>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; processVariable[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; typeMods>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; objBlock>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; child>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; child.findFirstToken(TokenTypes.IDENT)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getText[]; child>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; child>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mods>
<com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck$FieldFrame; addStaticField[java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; frame>
<com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck$FieldFrame; addInstanceField[java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; frame>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; child>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck$FieldFrame; getParent[]; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck.FieldFrame; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mCurrentFrame>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; inInterfaceOrAnnotationBlock[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; processVariable[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ScopeUtils>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; isLocalVariableDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; processVariable[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ScopeUtils>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; processVariable[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; processVariable[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; processVariable[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; nameAST>
<com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck$FieldFrame; containsStaticField[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; processVariable[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mCurrentFrame>
<com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; inStatic[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; processVariable[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck$FieldFrame; containsInstanceField[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; processVariable[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mCurrentFrame>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; processVariable[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; getRegexp().matcher(name)>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; processVariable[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; find[]; getRegexp()>
<com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; getRegexp[]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; processVariable[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; matcher[java.lang.CharSequence]; this>
<com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; isIgnoredSetterParam[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; processVariable[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; isIgnoredConstructorParam[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; processVariable[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; isIgnoredParamOfAbstractMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; processVariable[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; processVariable[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; inStatic[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; inStatic[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; parent>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; inStatic[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; parent>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; inStatic[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; mods>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; inStatic[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; parent>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; isIgnoredSetterParam[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; isIgnoredSetterParam[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; isIgnoredSetterParam[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; boolean; null; parametersAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; isIgnoredSetterParam[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; boolean; null; parametersAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; isIgnoredSetterParam[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; boolean; null; methodAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; isIgnoredSetterParam[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; boolean; null; methodAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; isIgnoredSetterParam[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; boolean; null; typeAST>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; isIgnoredSetterParam[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; boolean; null; methodAST.findFirstToken(TokenTypes.IDENT)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; isIgnoredSetterParam[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; boolean; getText[]; methodAST>
<com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; capitalize[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; isIgnoredSetterParam[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; boolean; null; this>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; isIgnoredSetterParam[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; boolean; null; methodName>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; capitalize[java.lang.String]; java.lang.String; null; aName>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; capitalize[java.lang.String]; java.lang.String; null; aName>
<java.lang.Character; isUpperCase[char]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; capitalize[java.lang.String]; java.lang.String; null; Character>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; capitalize[java.lang.String]; java.lang.String; null; aName>
<java.lang.String; toUpperCase[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; capitalize[java.lang.String]; java.lang.String; null; aName.substring(0,1)>
<java.lang.String; substring[int, int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; capitalize[java.lang.String]; java.lang.String; toUpperCase[]; aName>
<java.lang.String; substring[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; capitalize[java.lang.String]; java.lang.String; null; aName>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; isIgnoredConstructorParam[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; isIgnoredConstructorParam[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; isIgnoredConstructorParam[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; parametersAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; isIgnoredConstructorParam[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; constructorAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; isIgnoredParamOfAbstractMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; isIgnoredParamOfAbstractMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST.getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; isIgnoredParamOfAbstractMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; getParent[]; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; isIgnoredParamOfAbstractMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; method>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; isIgnoredParamOfAbstractMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; method>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; isIgnoredParamOfAbstractMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; mods>
<com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; setIgnoreFormat[java.lang.String]; void; null; Utils>
<not found; newHashSet[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; getRegexp[]; java.util.regex.Pattern; null; Sets>
<not found; newHashSet[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck; getRegexp[]; java.util.regex.Pattern; null; Sets>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck.FieldFrame; addInstanceField[java.lang.String]; void; null; mInstanceFields>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck.FieldFrame; addStaticField[java.lang.String]; void; null; mStaticFields>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck.FieldFrame; containsInstanceField[java.lang.String]; boolean; null; mInstanceFields>
<com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck$FieldFrame; isStaticType[]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck.FieldFrame; containsInstanceField[java.lang.String]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck$FieldFrame; containsInstanceField[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck.FieldFrame; containsInstanceField[java.lang.String]; boolean; null; mParent>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck.FieldFrame; containsStaticField[java.lang.String]; boolean; null; mStaticFields>
<com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck$FieldFrame; containsStaticField[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck.FieldFrame; containsStaticField[java.lang.String]; boolean; null; mParent>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAst>
<com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck; visitExpr[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck; visitSemi[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAst>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck; visitExpr[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAst>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck; visitExpr[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck; visitSemi[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAst>
<not found; newLinkedList[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck.MethodNode; getMethod[]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; Lists>
<java.util.LinkedList; clear[]; void; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mMethodStack>
<com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; isOverridingMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<java.util.LinkedList; add[com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck.MethodNode]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mMethodStack>
<com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; isSuperCall[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<java.util.LinkedList; getLast[]; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck.MethodNode; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mMethodStack>
<com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck$MethodNode; setCallsSuper[]; void; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; methodNode>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; isSuperCall[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; isSuperCall[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; isSuperCall[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; parent>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; isSuperCall[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; isSuperCall[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; sibling>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; isSuperCall[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; sibling>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; isSuperCall[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; sibling>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; isSuperCall[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; sibling>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; isSuperCall[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; getMethodName()>
<com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; getMethodName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; isSuperCall[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; equals[java.lang.Object]; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; isSuperCall[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; parent>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; isSuperCall[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; args>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; isSuperCall[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; args>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; isSuperCall[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; parent>
<com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; isOverridingMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; isSuperCall[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; isSuperCall[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; parent>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; isSuperCall[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; parent>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; isSuperCall[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; parent>
<com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; isOverridingMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<java.util.LinkedList; removeLast[]; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck.MethodNode; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mMethodStack>
<com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck$MethodNode; getCallsSuper[]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; methodNode>
<com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck$MethodNode; getMethod[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; methodNode>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; methodAST>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; nameAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; nameAST>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; nameAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; isOverridingMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; inInterfaceOrAnnotationBlock[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; isOverridingMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ScopeUtils>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; isOverridingMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; isOverridingMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; nameAST>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; isOverridingMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; getMethodName()>
<com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; getMethodName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; isOverridingMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; equals[java.lang.Object]; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; isOverridingMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; isOverridingMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; params>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.AbstractIllegalMethodCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.AbstractIllegalMethodCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mid>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.AbstractIllegalMethodCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mMethodName>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.AbstractIllegalMethodCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.AbstractIllegalMethodCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; params>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.AbstractIllegalMethodCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.AbstractIllegalMethodCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.ArrayTrailingCommaCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aArrayInit>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.ArrayTrailingCommaCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aArrayInit>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.ArrayTrailingCommaCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; rcurly>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; com.puppycrawl.tools.checkstyle.checks.coding.ArrayTrailingCommaCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aArrayInit>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getPreviousSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.ArrayTrailingCommaCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; rcurly>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ArrayTrailingCommaCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; prev>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.ArrayTrailingCommaCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.ArrayTrailingCommaCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; rcurly>
<com.puppycrawl.tools.checkstyle.checks.coding.IllegalCatchCheck; getDefaultTokens[]; int[]; com.puppycrawl.tools.checkstyle.checks.coding.IllegalCatchCheck; getRequiredTokens[]; int[]; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.IllegalCatchCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aDetailAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.IllegalCatchCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; paramDef>
<com.puppycrawl.tools.checkstyle.checks.CheckUtils; createFullType[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.coding.IllegalCatchCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; CheckUtils>
<com.puppycrawl.tools.checkstyle.checks.coding.AbstractIllegalCheck; isIllegalClassName[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalCatchCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.IllegalCatchCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ident>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalCatchCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.IllegalCatchCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ident>
<com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenCheck; getDefaultTokens[]; int[]; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenCheck; getAcceptableTokens[]; int[]; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; getTokenNames[]; java.util.Set<java.lang.String>; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenCheck; getAcceptableTokens[]; int[]; null; this>
<java.util.Set; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenCheck; getAcceptableTokens[]; int[]; null; tokenNames>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenCheck; getAcceptableTokens[]; int[]; null; tokenNames>
<com.puppycrawl.tools.checkstyle.api.TokenTypes; getTokenId[java.lang.String]; int; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenCheck; getAcceptableTokens[]; int[]; null; TokenTypes>
<java.lang.System; arraycopy[java.lang.Object, int, java.lang.Object, int, int]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenCheck; getAcceptableTokens[]; int[]; null; System>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; getDefaultTokens[]; int[]; com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; getRequiredTokens[]; int[]; null; this>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; isLocalVariableDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ScopeUtils>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; inInterfaceOrAnnotationBlock[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ScopeUtils>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; modifiers>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; assign.getFirstChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getFirstChild[]; assign>
<com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; isObjectType[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; exprStart>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ident>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; type.getFirstChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getType[]; type>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; exprStart>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ident>
<com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; isNumericType[int]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; isZero[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ident>
<com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; isZero[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; exprStart>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; "'\\0'">
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; exprStart>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ident>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; isObjectType[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aType.getFirstChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; isObjectType[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; getType[]; aType>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; isZero[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aExpr>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; isZero[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aExpr>
<com.puppycrawl.tools.checkstyle.checks.CheckUtils; parseFloat[java.lang.String, int]; double; com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; isZero[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; CheckUtils>
<com.puppycrawl.tools.checkstyle.api.FastStack; newInstance[]; com.puppycrawl.tools.checkstyle.api.FastStack<com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheck.ScopeState>; com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck; isZero[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; FastStack>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getType[]; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.FastStack; push[com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheck.ScopeState]; void; com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mScopeStates>
<com.puppycrawl.tools.checkstyle.api.FastStack; peek[]; com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheck.ScopeState; com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mScopeStates>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FastStack; peek[]; com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheck.ScopeState; com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mScopeStates>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getParent().getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getType[]; aAST.getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getParent[]; aAST>
<com.puppycrawl.tools.checkstyle.api.FastStack; peek[]; com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheck.ScopeState; com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mScopeStates>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; getScopeFromMods[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ScopeUtils>
<java.lang.Enum; compareTo[com.puppycrawl.tools.checkstyle.api.Scope]; int; com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; state.mDeclarationAccess>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.FastStack; pop[]; com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheck.ScopeState; com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mScopeStates>
<com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheck; endsWithNewline[java.io.RandomAccessFile]; boolean; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; this>
<java.io.File; getPath[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; aFile>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; this>
<java.io.File; getPath[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; aFile>
<com.puppycrawl.tools.checkstyle.api.Utils; closeQuietly[java.io.Closeable]; void; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; Utils>
<java.lang.Enum; valueOf[java.lang.Class<com.puppycrawl.tools.checkstyle.checks.LineSeparatorOption>, java.lang.String]; com.puppycrawl.tools.checkstyle.checks.LineSeparatorOption; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheck; setLineSeparator[java.lang.String]; void; null; Enum>
<java.lang.String; toUpperCase[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheck; setLineSeparator[java.lang.String]; void; null; aLineSeparator.trim()>
<java.lang.String; trim[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheck; setLineSeparator[java.lang.String]; void; toUpperCase[]; aLineSeparator>
<com.puppycrawl.tools.checkstyle.checks.LineSeparatorOption; length[]; int; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheck; endsWithNewline[java.io.RandomAccessFile]; boolean; null; mLineSeparator>
<java.io.RandomAccessFile; length[]; long; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheck; endsWithNewline[java.io.RandomAccessFile]; boolean; null; aRandomAccessFile>
<java.io.RandomAccessFile; seek[long]; void; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheck; endsWithNewline[java.io.RandomAccessFile]; boolean; null; aRandomAccessFile>
<java.io.RandomAccessFile; length[]; long; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheck; endsWithNewline[java.io.RandomAccessFile]; boolean; null; aRandomAccessFile>
<java.io.RandomAccessFile; read[byte[]]; int; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheck; endsWithNewline[java.io.RandomAccessFile]; boolean; null; aRandomAccessFile>
<com.puppycrawl.tools.checkstyle.checks.LineSeparatorOption; matches[byte[]]; boolean; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheck; endsWithNewline[java.io.RandomAccessFile]; boolean; null; mLineSeparator>
<com.puppycrawl.tools.checkstyle.api.FastStack; newInstance[]; com.puppycrawl.tools.checkstyle.api.FastStack<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl>; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheck; endsWithNewline[java.io.RandomAccessFile]; boolean; null; FastStack>
<java.util.Map; put[java.lang.String, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheck; endsWithNewline[java.io.RandomAccessFile]; boolean; null; DTD_RESOURCE_BY_ID>
<java.util.Map; put[java.lang.String, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheck; endsWithNewline[java.io.RandomAccessFile]; boolean; null; DTD_RESOURCE_BY_ID>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; "import-control">
<com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader; safeGet[org.xml.sax.Attributes, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FastStack; push[com.puppycrawl.tools.checkstyle.checks.imports.PkgControl]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; mStack>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; "subpackage">
<com.puppycrawl.tools.checkstyle.api.FastStack; size[]; int; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; mStack>
<com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader; safeGet[org.xml.sax.Attributes, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FastStack; push[com.puppycrawl.tools.checkstyle.checks.imports.PkgControl]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; mStack>
<com.puppycrawl.tools.checkstyle.api.FastStack; peek[]; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; mStack>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; "allow">
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; "disallow">
<com.puppycrawl.tools.checkstyle.api.FastStack; size[]; int; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; mStack>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; "allow">
<org.xml.sax.Attributes; getValue[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; aAtts>
<org.xml.sax.Attributes; getValue[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; aAtts>
<org.xml.sax.Attributes; getValue[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; aAtts>
<org.xml.sax.Attributes; getValue[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; aAtts>
<com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader; safeGet[org.xml.sax.Attributes, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FastStack; peek[]; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; mStack>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; addGuard[com.puppycrawl.tools.checkstyle.checks.imports.Guard]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; pc>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader; endElement[java.lang.String, java.lang.String, java.lang.String]; void; null; "subpackage">
<com.puppycrawl.tools.checkstyle.api.FastStack; size[]; int; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader; endElement[java.lang.String, java.lang.String, java.lang.String]; void; null; mStack>
<com.puppycrawl.tools.checkstyle.api.FastStack; pop[]; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader; endElement[java.lang.String, java.lang.String, java.lang.String]; void; null; mStack>
<java.net.URL; openStream[]; java.io.InputStream; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader; load[java.net.URI]; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; null; aUri.toURL()>
<java.net.URI; toURL[]; java.net.URL; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader; load[java.net.URI]; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; openStream[]; aUri>
<com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader; load[org.xml.sax.InputSource, java.net.URI]; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader; load[java.net.URI]; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; null; this>
<com.puppycrawl.tools.checkstyle.api.AbstractLoader; parseInputSource[org.xml.sax.InputSource]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader; load[org.xml.sax.InputSource, java.net.URI]; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; null; loader>
<com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader; getRoot[]; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader; load[org.xml.sax.InputSource, java.net.URI]; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; null; loader>
<org.xml.sax.SAXException; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader; load[org.xml.sax.InputSource, java.net.URI]; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; null; e>
<com.puppycrawl.tools.checkstyle.api.FastStack; size[]; int; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader; getRoot[]; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; null; mStack>
<com.puppycrawl.tools.checkstyle.api.FastStack; peek[]; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader; getRoot[]; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; null; mStack>
<org.xml.sax.Attributes; getValue[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader; safeGet[org.xml.sax.Attributes, java.lang.String]; java.lang.String; null; aAtts>
<com.puppycrawl.tools.checkstyle.checks.imports.IllegalImportCheck; setIllegalPkgs[java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.checks.imports.IllegalImportCheck; IllegalImportCheck[]; void; null; this>
<java.lang.Object; clone[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.imports.IllegalImportCheck; setIllegalPkgs[java.lang.String[]]; void; null; aFrom>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.IllegalImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdentBelow[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.imports.IllegalImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; FullIdent>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.imports.IllegalImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; FullIdent>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.imports.IllegalImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getFirstChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.imports.IllegalImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getNextSibling[]; aAST>
<com.puppycrawl.tools.checkstyle.checks.imports.IllegalImportCheck; isIllegalImport[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.IllegalImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.IllegalImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; imp>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.imports.IllegalImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.imports.IllegalImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.imports.IllegalImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.IllegalImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; imp>
<java.lang.String; startsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.IllegalImportCheck; isIllegalImport[java.lang.String]; boolean; null; aImportText>
<not found; newArrayList[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.IllegalImportCheck; isIllegalImport[java.lang.String]; boolean; null; Lists>
<java.util.List; clear[]; void; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck; setExcludes[java.lang.String[]]; void; null; mExcludes>
<java.util.List; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck; setExcludes[java.lang.String[]]; void; null; mExcludes>
<java.lang.String; endsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck; setExcludes[java.lang.String[]]; void; null; exclude>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck; logsStarredImportViolation[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getFirstChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getNextSibling[]; aAST>
<com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck; logsStarredImportViolation[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck; logsStarredImportViolation[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; FullIdent>
<com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck; isStaredImport[com.puppycrawl.tools.checkstyle.api.FullIdent]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck; logsStarredImportViolation[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<java.util.List; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck; logsStarredImportViolation[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mExcludes>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck; logsStarredImportViolation[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; name>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck; logsStarredImportViolation[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck; logsStarredImportViolation[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aStartingDot>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck; logsStarredImportViolation[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; name>
<java.lang.String; endsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck; isStaredImport[com.puppycrawl.tools.checkstyle.api.FullIdent]; boolean; null; aImportIdent.getText()>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck; isStaredImport[com.puppycrawl.tools.checkstyle.api.FullIdent]; boolean; endsWith[java.lang.String]; aImportIdent>
<not found; newLinkedList[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck; isStaredImport[com.puppycrawl.tools.checkstyle.api.FullIdent]; boolean; null; Lists>
<not found; newArrayList[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck; isStaredImport[com.puppycrawl.tools.checkstyle.api.FullIdent]; boolean; null; Lists>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; getFullPackage[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; PkgControl[com.puppycrawl.tools.checkstyle.checks.imports.PkgControl, java.lang.String]; void; null; aParent>
<java.util.List; add[com.puppycrawl.tools.checkstyle.checks.imports.PkgControl]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; PkgControl[com.puppycrawl.tools.checkstyle.checks.imports.PkgControl, java.lang.String]; void; null; mParent.mChildren>
<java.util.LinkedList; addFirst[com.puppycrawl.tools.checkstyle.checks.imports.Guard]; void; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; addGuard[com.puppycrawl.tools.checkstyle.checks.imports.Guard]; void; null; mGuards>
<java.lang.String; startsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; locateFinest[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; null; aForPkg>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; getFullPackage[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; locateFinest[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; locateFinest[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; locateFinest[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; null; pc>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; localCheckAccess[java.lang.String, java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; checkAccess[java.lang.String, java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; checkAccess[java.lang.String, java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; checkAccess[java.lang.String, java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; null; mParent>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; isLocalOnly[]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; localCheckAccess[java.lang.String, java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; null; g>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; localCheckAccess[java.lang.String, java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; null; mFullPackage>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; localCheckAccess[java.lang.String, java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; null; g>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; setGroups[java.lang.String[]]; void; null; WILDCARD_GROUP_NAME>
<java.util.regex.Pattern; compile[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; setGroups[java.lang.String[]]; void; null; Pattern>
<java.lang.String; startsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; setGroups[java.lang.String[]]; void; null; pkg>
<java.lang.String; endsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; setGroups[java.lang.String[]]; void; null; pkg>
<java.lang.String; substring[int, int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; setGroups[java.lang.String[]]; void; null; pkg>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; setGroups[java.lang.String[]]; void; null; pkg>
<java.util.regex.Pattern; compile[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; setGroups[java.lang.String[]]; void; null; Pattern>
<java.lang.String; endsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; setGroups[java.lang.String[]]; void; null; pkg>
<java.util.regex.Pattern; compile[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; setGroups[java.lang.String[]]; void; null; Pattern>
<java.util.regex.Pattern; quote[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; setGroups[java.lang.String[]]; void; null; Pattern>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdentBelow[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; FullIdent>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; FullIdent>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getFirstChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getNextSibling[]; aAST>
<com.puppycrawl.tools.checkstyle.checks.AbstractOptionCheck; getAbstractOption[]; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderOption; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; doVisitToken[com.puppycrawl.tools.checkstyle.api.FullIdent, boolean, boolean]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; doVisitToken[com.puppycrawl.tools.checkstyle.api.FullIdent, boolean, boolean]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; doVisitToken[com.puppycrawl.tools.checkstyle.api.FullIdent, boolean, boolean]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.findFirstToken(TokenTypes.SEMI)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getLineNo[]; aAST>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; doVisitToken[com.puppycrawl.tools.checkstyle.api.FullIdent, boolean, boolean]; void; null; aIdent>
<com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; getGroupNumber[java.lang.String]; int; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; doVisitToken[com.puppycrawl.tools.checkstyle.api.FullIdent, boolean, boolean]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; doVisitToken[com.puppycrawl.tools.checkstyle.api.FullIdent, boolean, boolean]; void; null; aIdent>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; doVisitToken[com.puppycrawl.tools.checkstyle.api.FullIdent, boolean, boolean]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; doVisitTokenInSameGroup[com.puppycrawl.tools.checkstyle.api.FullIdent, boolean, boolean, java.lang.String, int]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; doVisitToken[com.puppycrawl.tools.checkstyle.api.FullIdent, boolean, boolean]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; doVisitToken[com.puppycrawl.tools.checkstyle.api.FullIdent, boolean, boolean]; void; null; this>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; doVisitTokenInSameGroup[com.puppycrawl.tools.checkstyle.api.FullIdent, boolean, boolean, java.lang.String, int]; void; null; getAbstractOption()>
<com.puppycrawl.tools.checkstyle.checks.AbstractOptionCheck; getAbstractOption[]; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderOption; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; doVisitTokenInSameGroup[com.puppycrawl.tools.checkstyle.api.FullIdent, boolean, boolean, java.lang.String, int]; void; equals[java.lang.Object]; this>
<com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; compare[java.lang.String, java.lang.String, boolean]; int; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; doVisitTokenInSameGroup[com.puppycrawl.tools.checkstyle.api.FullIdent, boolean, boolean, java.lang.String, int]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; doVisitTokenInSameGroup[com.puppycrawl.tools.checkstyle.api.FullIdent, boolean, boolean, java.lang.String, int]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; compare[java.lang.String, java.lang.String, boolean]; int; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; doVisitTokenInSameGroup[com.puppycrawl.tools.checkstyle.api.FullIdent, boolean, boolean, java.lang.String, int]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; doVisitTokenInSameGroup[com.puppycrawl.tools.checkstyle.api.FullIdent, boolean, boolean, java.lang.String, int]; void; null; this>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; getGroupNumber[java.lang.String]; int; null; mGroups[i]>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; getGroupNumber[java.lang.String]; int; null; matcher>
<java.util.regex.Matcher; end[]; int; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; getGroupNumber[java.lang.String]; int; null; matcher>
<java.util.regex.Matcher; start[]; int; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; getGroupNumber[java.lang.String]; int; null; matcher>
<java.util.regex.Matcher; start[]; int; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; getGroupNumber[java.lang.String]; int; null; matcher>
<java.util.regex.Matcher; start[]; int; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; getGroupNumber[java.lang.String]; int; null; matcher>
<java.lang.String; compareTo[java.lang.String]; int; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; compare[java.lang.String, java.lang.String, boolean]; int; null; aString1>
<java.lang.String; compareToIgnoreCase[java.lang.String]; int; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; compare[java.lang.String, java.lang.String, boolean]; int; null; aString1>
<not found; newHashSet[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; compare[java.lang.String, java.lang.String, boolean]; int; null; Sets>
<not found; newHashSet[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck; compare[java.lang.String, java.lang.String, boolean]; int; null; Sets>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mImports>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mStaticImports>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; FullIdent.createFullIdent(aAST.getLastChild().getPreviousSibling())>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getText[]; FullIdent>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getPreviousSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getLastChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLastChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getPreviousSibling[]; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdentBelow[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; FullIdent>
<com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; fromPackage[java.lang.String, java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; imp>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; imp>
<com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; fromPackage[java.lang.String, java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; imp>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; imp>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; imp.getText()>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; equals[java.lang.Object]; imp>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; full>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; full>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; imp>
<java.util.Set; add[com.puppycrawl.tools.checkstyle.api.FullIdent]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mImports>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; FullIdent>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getPreviousSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getLastChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLastChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getPreviousSibling[]; aAST>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; imp.getText()>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; equals[java.lang.Object]; imp>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; full>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; full>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; imp>
<java.util.Set; add[com.puppycrawl.tools.checkstyle.api.FullIdent]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mStaticImports>
<java.lang.String; indexOf[int]; int; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; fromPackage[java.lang.String, java.lang.String]; boolean; null; aImport>
<java.lang.String; lastIndexOf[int]; int; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; fromPackage[java.lang.String, java.lang.String]; boolean; null; aImport>
<java.lang.String; substring[int, int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; fromPackage[java.lang.String, java.lang.String]; boolean; null; aImport>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; fromPackage[java.lang.String, java.lang.String]; boolean; null; front>
<java.lang.String; matches[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; null; aForImport>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; null; aForImport>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; calculateResult[boolean]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; null; this>
<java.lang.String; matches[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; null; aForImport>
<java.lang.String; matches[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; null; aForImport>
<java.lang.String; startsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; null; aForImport>
<java.lang.String; indexOf[int, int]; int; com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; null; aForImport>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; null; mPkgName>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; calculateResult[boolean]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; null; this>
<java.lang.Object; clone[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStaticImportCheck; setExcludes[java.lang.String[]]; void; null; aExcludes>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStaticImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getFirstChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStaticImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getNextSibling[]; aAST>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStaticImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; FullIdent>
<com.puppycrawl.tools.checkstyle.checks.imports.AvoidStaticImportCheck; isExempt[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStaticImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStaticImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; name>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStaticImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStaticImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; startingDot>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStaticImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; name>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStaticImportCheck; isExempt[java.lang.String]; boolean; null; aClassOrStaticMember>
<java.lang.String; endsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStaticImportCheck; isExempt[java.lang.String]; boolean; null; exclude>
<java.lang.String; substring[int, int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStaticImportCheck; isExempt[java.lang.String]; boolean; null; exclude>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStaticImportCheck; isExempt[java.lang.String]; boolean; null; exclude>
<java.lang.String; startsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStaticImportCheck; isExempt[java.lang.String]; boolean; null; aClassOrStaticMember>
<java.lang.String; substring[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStaticImportCheck; isExempt[java.lang.String]; boolean; null; aClassOrStaticMember>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStaticImportCheck; isExempt[java.lang.String]; boolean; null; excludeMinusDotStar>
<java.lang.String; indexOf[int]; int; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStaticImportCheck; isExempt[java.lang.String]; boolean; null; member>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getPreviousSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getLastChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLastChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getPreviousSibling[]; aAST>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; FullIdent>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; full>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; locateFinest[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mRoot>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdentBelow[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; FullIdent>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; FullIdent>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getFirstChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getNextSibling[]; aAST>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; checkAccess[java.lang.String, java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mCurrentLeaf>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; imp>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; AccessResult.ALLOWED>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; imp>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheck; setUrl[java.lang.String]; void; null; aUrl.trim()>
<java.lang.String; trim[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheck; setUrl[java.lang.String]; void; length[]; aUrl>
<java.net.URI; create[java.lang.String]; java.net.URI; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheck; setUrl[java.lang.String]; void; null; URI>
<com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader; load[java.net.URI]; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheck; setUrl[java.lang.String]; void; null; ImportControlLoader>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheck; setFile[java.lang.String]; void; null; aName.trim()>
<java.lang.String; trim[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheck; setFile[java.lang.String]; void; length[]; aName>
<com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader; load[java.net.URI]; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheck; setFile[java.lang.String]; void; null; ImportControlLoader>
<java.io.File; toURI[]; java.net.URI; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheck; setFile[java.lang.String]; void; null; new File(aName)>
<not found; newHashSet[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheck; setFile[java.lang.String]; void; null; Sets>
<not found; newHashSet[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheck; setFile[java.lang.String]; void; null; Sets>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mImports>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mReferenced>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mReferenced>
<com.puppycrawl.tools.checkstyle.api.Utils; baseClassname[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; imp>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; imp>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; imp>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; imp>
<com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; getDefaultTokens[]; int[]; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; getRequiredTokens[]; int[]; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; processIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; processImport[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; processStaticImport[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; processJavadoc[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; processIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; processIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parent>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; processIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; processIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mReferenced>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; processIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdentBelow[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; processImport[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; FullIdent>
<java.lang.String; endsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; processImport[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; name.getText()>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; processImport[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; endsWith[java.lang.String]; name>
<java.util.Set; add[com.puppycrawl.tools.checkstyle.api.FullIdent]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; processImport[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mImports>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; processStaticImport[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; FullIdent>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; processStaticImport[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getFirstChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; processStaticImport[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getNextSibling[]; aAST>
<java.lang.String; endsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; processStaticImport[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; name.getText()>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; processStaticImport[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; endsWith[java.lang.String]; name>
<java.util.Set; add[com.puppycrawl.tools.checkstyle.api.FullIdent]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; processStaticImport[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mImports>
<com.puppycrawl.tools.checkstyle.api.Check; getFileContents[]; com.puppycrawl.tools.checkstyle.api.FileContents; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; processJavadoc[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; processJavadoc[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.FileContents; getJavadocBefore[int]; com.puppycrawl.tools.checkstyle.api.TextBlock; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; processJavadoc[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; contents>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; processJavadoc[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; JavadocUtils>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; getValidTags[]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; processJavadoc[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; tags>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; canReferenceImports[]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; processJavadoc[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; tag>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getArg1[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; processJavadoc[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; tag>
<com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; processJavadoc[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Utils>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; processJavadoc[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; pattern>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; processJavadoc[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; matcher>
<java.util.regex.Matcher; group[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; processJavadoc[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; matcher>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; processJavadoc[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mReferenced>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; modifiers>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; modifier>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; modifier>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; modifier>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; inInterfaceOrAnnotationBlock[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ScopeUtils>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; modifiers>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; modifier>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; modifier>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; modifier>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; modifier>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; modifier>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; modifiers>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parent>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parent>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; classModifiers>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parent>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; modifiers>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; modifier>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; modifier>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; modifier>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; modifier>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; modifier>
<not found; newArrayList[]; not found; com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Lists>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<java.util.List; add[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mods>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; modifier>
<java.util.List; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mods>
<com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck; checkOrderSuggestedByJLS[java.util.List<com.puppycrawl.tools.checkstyle.api.DetailAST>]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; error>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; error>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; error>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; error.getFirstChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getText[]; error>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; error.getFirstChild().getNextSibling()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getText[]; error.getFirstChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getNextSibling[]; error>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; error>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; error>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; error>
<java.util.List; iterator[]; java.util.Iterator<com.puppycrawl.tools.checkstyle.api.DetailAST>; com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck; checkOrderSuggestedByJLS[java.util.List<com.puppycrawl.tools.checkstyle.api.DetailAST>]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; aModifiers>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck; checkOrderSuggestedByJLS[java.util.List<com.puppycrawl.tools.checkstyle.api.DetailAST>]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; it>
<java.util.Iterator; next[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck; checkOrderSuggestedByJLS[java.util.List<com.puppycrawl.tools.checkstyle.api.DetailAST>]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; it>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck; checkOrderSuggestedByJLS[java.util.List<com.puppycrawl.tools.checkstyle.api.DetailAST>]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; it>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck; checkOrderSuggestedByJLS[java.util.List<com.puppycrawl.tools.checkstyle.api.DetailAST>]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; modifier>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck; checkOrderSuggestedByJLS[java.util.List<com.puppycrawl.tools.checkstyle.api.DetailAST>]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; modifier>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck; checkOrderSuggestedByJLS[java.util.List<com.puppycrawl.tools.checkstyle.api.DetailAST>]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; modifier>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck; checkOrderSuggestedByJLS[java.util.List<com.puppycrawl.tools.checkstyle.api.DetailAST>]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; JLS_ORDER[i]>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck; checkOrderSuggestedByJLS[java.util.List<com.puppycrawl.tools.checkstyle.api.DetailAST>]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; modifier>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck; checkOrderSuggestedByJLS[java.util.List<com.puppycrawl.tools.checkstyle.api.DetailAST>]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; it>
<java.util.Iterator; next[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck; checkOrderSuggestedByJLS[java.util.List<com.puppycrawl.tools.checkstyle.api.DetailAST>]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; it>
<com.puppycrawl.tools.checkstyle.api.Utils; createPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck; checkOrderSuggestedByJLS[java.util.List<com.puppycrawl.tools.checkstyle.api.DetailAST>]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; Utils>
<com.puppycrawl.tools.checkstyle.api.Utils; createPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck; checkOrderSuggestedByJLS[java.util.List<com.puppycrawl.tools.checkstyle.api.DetailAST>]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; Utils>
<com.puppycrawl.tools.checkstyle.api.Utils; createPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck; checkOrderSuggestedByJLS[java.util.List<com.puppycrawl.tools.checkstyle.api.DetailAST>]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; Utils>
<com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedCheck; getAcceptableTokens[]; int[]; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedCheck; getDefaultTokens[]; int[]; null; this>
<com.puppycrawl.tools.checkstyle.api.FileContents; getJavadocBefore[int]; com.puppycrawl.tools.checkstyle.api.TextBlock; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this.getFileContents()>
<com.puppycrawl.tools.checkstyle.api.Check; getFileContents[]; com.puppycrawl.tools.checkstyle.api.FileContents; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getJavadocBefore[int]; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.AnnotationUtility; containsAnnotation[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; AnnotationUtility>
<com.puppycrawl.tools.checkstyle.api.AnnotationUtility; containsAnnotation[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; AnnotationUtility>
<com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedCheck; containsJavadocTag[com.puppycrawl.tools.checkstyle.api.TextBlock]; boolean; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.TextBlock; getText[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedCheck; containsJavadocTag[com.puppycrawl.tools.checkstyle.api.TextBlock]; boolean; null; aJavadoc>
<com.puppycrawl.tools.checkstyle.api.TextBlock; getStartLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedCheck; containsJavadocTag[com.puppycrawl.tools.checkstyle.api.TextBlock]; boolean; null; aJavadoc>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedCheck; containsJavadocTag[com.puppycrawl.tools.checkstyle.api.TextBlock]; boolean; null; MissingDeprecatedCheck.MATCH_DEPRECATED>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedCheck; containsJavadocTag[com.puppycrawl.tools.checkstyle.api.TextBlock]; boolean; null; MissingDeprecatedCheck.MATCH_DEPRECATED_MULTILINE_START>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedCheck; containsJavadocTag[com.puppycrawl.tools.checkstyle.api.TextBlock]; boolean; null; javadocNoargMatcher>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedCheck; containsJavadocTag[com.puppycrawl.tools.checkstyle.api.TextBlock]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedCheck; containsJavadocTag[com.puppycrawl.tools.checkstyle.api.TextBlock]; boolean; null; JavadocTagInfo.DEPRECATED>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedCheck; containsJavadocTag[com.puppycrawl.tools.checkstyle.api.TextBlock]; boolean; null; noargMultilineStart>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedCheck; containsJavadocTag[com.puppycrawl.tools.checkstyle.api.TextBlock]; boolean; null; MissingDeprecatedCheck.MATCH_DEPRECATED_MULTILINE_CONT>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedCheck; containsJavadocTag[com.puppycrawl.tools.checkstyle.api.TextBlock]; boolean; null; multilineCont>
<java.util.regex.Matcher; group[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedCheck; containsJavadocTag[com.puppycrawl.tools.checkstyle.api.TextBlock]; boolean; null; multilineCont>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedCheck; containsJavadocTag[com.puppycrawl.tools.checkstyle.api.TextBlock]; boolean; null; lFin>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedCheck; containsJavadocTag[com.puppycrawl.tools.checkstyle.api.TextBlock]; boolean; null; lFin>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedCheck; containsJavadocTag[com.puppycrawl.tools.checkstyle.api.TextBlock]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedCheck; containsJavadocTag[com.puppycrawl.tools.checkstyle.api.TextBlock]; boolean; null; JavadocTagInfo.DEPRECATED>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedCheck; containsJavadocTag[com.puppycrawl.tools.checkstyle.api.TextBlock]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedCheck; containsJavadocTag[com.puppycrawl.tools.checkstyle.api.TextBlock]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedCheck; containsJavadocTag[com.puppycrawl.tools.checkstyle.api.TextBlock]; boolean; null; JavadocTagInfo.DEPRECATED>
<com.puppycrawl.tools.checkstyle.api.Utils; createPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedCheck; containsJavadocTag[com.puppycrawl.tools.checkstyle.api.TextBlock]; boolean; null; Utils>
<com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheck; getRequiredTokens[]; int[]; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheck; getDefaultTokens[]; int[]; null; this>
<com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheck; getRequiredTokens[]; int[]; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheck; getAcceptableTokens[]; int[]; null; this>
<com.puppycrawl.tools.checkstyle.api.FileContents; getJavadocBefore[int]; com.puppycrawl.tools.checkstyle.api.TextBlock; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this.getFileContents()>
<com.puppycrawl.tools.checkstyle.api.Check; getFileContents[]; com.puppycrawl.tools.checkstyle.api.FileContents; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getJavadocBefore[int]; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheck; containsJavadocTag[com.puppycrawl.tools.checkstyle.api.TextBlock]; boolean; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidOn[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; JavadocTagInfo.INHERIT_DOC>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; JavadocTagInfo.INHERIT_DOC>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getParent[]; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; defOrNew>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; defOrNew>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; defOrNew>
<com.puppycrawl.tools.checkstyle.api.AnnotationUtility; containsAnnotation[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; AnnotationUtility>
<com.puppycrawl.tools.checkstyle.api.AnnotationUtility; containsAnnotation[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; AnnotationUtility>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.TextBlock; getText[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheck; containsJavadocTag[com.puppycrawl.tools.checkstyle.api.TextBlock]; boolean; null; aJavadoc>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheck; containsJavadocTag[com.puppycrawl.tools.checkstyle.api.TextBlock]; boolean; null; MissingOverrideCheck.MATCH_INHERITDOC>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheck; containsJavadocTag[com.puppycrawl.tools.checkstyle.api.TextBlock]; boolean; null; matchInheritDoc>
<com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; getOption[java.lang.Class<com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck.ElementStyle>, java.lang.String]; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck.ElementStyle; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; setElementStyle[java.lang.String]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; getOption[java.lang.Class<com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck.TrailingArrayComma>, java.lang.String]; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck.TrailingArrayComma; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; setTrailingArrayComma[java.lang.String]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; getOption[java.lang.Class<com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck.ClosingParens>, java.lang.String]; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck.ClosingParens; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; setClosingParens[java.lang.String]; void; null; this>
<java.lang.Enum; valueOf[java.lang.Class<T>, java.lang.String]; T; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; getOption[java.lang.Class<T>, java.lang.String]; T; null; Enum>
<java.lang.String; toUpperCase[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; getOption[java.lang.Class<T>, java.lang.String]; T; null; aString.trim()>
<java.lang.String; trim[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; getOption[java.lang.Class<T>, java.lang.String]; T; toUpperCase[]; aString>
<com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; getRequiredTokens[]; int[]; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; getDefaultTokens[]; int[]; null; this>
<com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; getRequiredTokens[]; int[]; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; getAcceptableTokens[]; int[]; null; this>
<com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkStyleType[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkCheckClosingParens[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkTrailingComma[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkStyleType[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ElementStyle.IGNORE>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkStyleType[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ElementStyle.COMPACT_NO_ARRAY>
<com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkCompactNoArrayStyle[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkStyleType[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkStyleType[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ElementStyle.COMPACT>
<com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkCompactStyle[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkStyleType[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkStyleType[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ElementStyle.EXPANDED>
<com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkExpandedStyle[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkStyleType[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[int]; int; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkExpandedStyle[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAnnotation>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkExpandedStyle[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAnnotation>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkExpandedStyle[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkExpandedStyle[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAnnotation>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[int]; int; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkCompactStyle[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAnnotation>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkCompactStyle[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAnnotation>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkCompactStyle[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; AnnotationUseStyleCheck.ANNOTATION_ELEMENT_SINGLE_NAME>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkCompactStyle[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; valuePair.getFirstChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkCompactStyle[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getText[]; valuePair>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkCompactStyle[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkCompactStyle[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAnnotation>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkCompactNoArrayStyle[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAnnotation>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[int]; int; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkCompactNoArrayStyle[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAnnotation>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkCompactNoArrayStyle[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAnnotation>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[int]; int; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkCompactNoArrayStyle[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; arrayInit>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkCompactNoArrayStyle[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkCompactNoArrayStyle[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAnnotation>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkCompactNoArrayStyle[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; valuePair>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkCompactNoArrayStyle[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; AnnotationUseStyleCheck.ANNOTATION_ELEMENT_SINGLE_NAME>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkCompactNoArrayStyle[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; valuePair.getFirstChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkCompactNoArrayStyle[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getText[]; valuePair>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[int]; int; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkCompactNoArrayStyle[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; nestedArrayInit>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkCompactNoArrayStyle[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkCompactNoArrayStyle[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAnnotation>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkTrailingComma[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; TrailingArrayComma.IGNORE>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkTrailingComma[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAnnotation>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkTrailingComma[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; child>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkTrailingComma[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; child>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkTrailingComma[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; child>
<com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; logCommaViolation[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkTrailingComma[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkTrailingComma[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; child>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; logCommaViolation[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getPreviousSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; logCommaViolation[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; rCurly>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; logCommaViolation[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; TrailingArrayComma.ALWAYS>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; logCommaViolation[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; comma>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; logCommaViolation[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; logCommaViolation[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; rCurly>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; logCommaViolation[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; rCurly>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; logCommaViolation[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; TrailingArrayComma.NEVER>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; logCommaViolation[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; comma>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; logCommaViolation[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; logCommaViolation[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; comma>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; logCommaViolation[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; comma>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkCheckClosingParens[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ClosingParens.IGNORE>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLastChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkCheckClosingParens[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkCheckClosingParens[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; paren>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkCheckClosingParens[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ClosingParens.ALWAYS>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkCheckClosingParens[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkCheckClosingParens[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkCheckClosingParens[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ClosingParens.NEVER>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkCheckClosingParens[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkCheckClosingParens[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleCheck; checkCheckClosingParens[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; getAcceptableTokens[]; int[]; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; getDefaultTokens[]; int[]; null; this>
<com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; getSuppressWarnings[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; findWarningsHolder[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; warningHolder>
<com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; logMatch[int, int, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; warningHolder>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; warningHolder>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; warning>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; warning>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; fChild>
<com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; removeQuotes[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; warning.getFirstChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getText[]; warning>
<com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; logMatch[int, int, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; warning>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; warning>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; fChild>
<com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; walkConditional[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; fChild>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; fChild>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; warning>
<com.puppycrawl.tools.checkstyle.api.AnnotationUtility; getAnnotation[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; getSuppressWarnings[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; AnnotationUtility>
<com.puppycrawl.tools.checkstyle.api.AnnotationUtility; getAnnotation[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; getSuppressWarnings[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; AnnotationUtility>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; logMatch[int, int, java.lang.String]; void; null; this.getRegexp()>
<com.puppycrawl.tools.checkstyle.checks.AbstractFormatCheck; getRegexp[]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; logMatch[int, int, java.lang.String]; void; matcher[java.lang.CharSequence]; this>
<java.util.regex.Matcher; matches[]; boolean; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; logMatch[int, int, java.lang.String]; void; null; matcher>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; logMatch[int, int, java.lang.String]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; findWarningsHolder[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; aAnnotation>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; findWarningsHolder[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; annValuePair>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; findWarningsHolder[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; aAnnotation>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; removeQuotes[java.lang.String]; java.lang.String; null; aWarning>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; removeQuotes[java.lang.String]; java.lang.String; null; aWarning>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; removeQuotes[java.lang.String]; java.lang.String; null; aWarning>
<java.lang.String; substring[int, int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; removeQuotes[java.lang.String]; java.lang.String; null; aWarning>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; removeQuotes[java.lang.String]; java.lang.String; null; aWarning>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; walkConditional[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aCond>
<com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; removeQuotes[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; walkConditional[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; walkConditional[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aCond>
<com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; logMatch[int, int, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; walkConditional[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; walkConditional[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aCond>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; walkConditional[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aCond>
<com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; walkConditional[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; walkConditional[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; getCondLeft[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; walkConditional[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; walkConditional[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; walkConditional[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; getCondRight[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; walkConditional[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; getCondLeft[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; aCond>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getPreviousSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; getCondLeft[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; colon>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; getCondRight[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; aCond>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsCheck; getCondRight[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; colon>
<com.puppycrawl.tools.checkstyle.checks.annotation.PackageAnnotationCheck; getRequiredTokens[]; int[]; com.puppycrawl.tools.checkstyle.checks.annotation.PackageAnnotationCheck; getDefaultTokens[]; int[]; null; this>
<com.puppycrawl.tools.checkstyle.checks.annotation.PackageAnnotationCheck; getRequiredTokens[]; int[]; com.puppycrawl.tools.checkstyle.checks.annotation.PackageAnnotationCheck; getAcceptableTokens[]; int[]; null; this>
<com.puppycrawl.tools.checkstyle.api.AnnotationUtility; containsAnnotation[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.annotation.PackageAnnotationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; AnnotationUtility>
<com.puppycrawl.tools.checkstyle.api.FileContents; inPackageInfo[]; boolean; com.puppycrawl.tools.checkstyle.checks.annotation.PackageAnnotationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this.getFileContents()>
<com.puppycrawl.tools.checkstyle.api.Check; getFileContents[]; com.puppycrawl.tools.checkstyle.api.FileContents; com.puppycrawl.tools.checkstyle.checks.annotation.PackageAnnotationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; inPackageInfo[]; this>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.annotation.PackageAnnotationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getLine[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.PackageAnnotationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.CheckUtils; isEqualsMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.CheckUtils; isEqualsMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.CheckUtils; isEqualsMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; modifiers>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.CheckUtils; isEqualsMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; modifiers>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.CheckUtils; isEqualsMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.CheckUtils; isEqualsMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; nameNode>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.CheckUtils; isEqualsMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; "equals">
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.CheckUtils; isEqualsMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; com.puppycrawl.tools.checkstyle.checks.CheckUtils; isEqualsMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; paramsNode>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.CheckUtils; isElseIf[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.CheckUtils; isElseIf[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.CheckUtils; isElse[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.CheckUtils; isElseIf[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.CheckUtils; isElseWithCurlyBraces[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.CheckUtils; isElseIf[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.CheckUtils; isElse[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.CheckUtils; isElseWithCurlyBraces[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; com.puppycrawl.tools.checkstyle.checks.CheckUtils; isElseWithCurlyBraces[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.CheckUtils; isElse[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.CheckUtils; isElseWithCurlyBraces[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.CheckUtils; isElseWithCurlyBraces[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.CheckUtils; createFullType[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; null; aTypeAST>
<com.puppycrawl.tools.checkstyle.checks.CheckUtils; createFullTypeNoArrays[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.CheckUtils; createFullType[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; null; this>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.CheckUtils; createFullTypeNoArrays[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; null; FullIdent>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.CheckUtils; createFullTypeNoArrays[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; null; aTypeAST>
<java.lang.Double; parseDouble[java.lang.String]; double; com.puppycrawl.tools.checkstyle.checks.CheckUtils; parseDouble[java.lang.String, int]; double; null; Double>
<java.lang.String; startsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.CheckUtils; parseDouble[java.lang.String, int]; double; null; txt>
<java.lang.String; startsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.CheckUtils; parseDouble[java.lang.String, int]; double; null; txt>
<java.lang.String; substring[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.CheckUtils; parseDouble[java.lang.String, int]; double; null; txt>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.CheckUtils; parseDouble[java.lang.String, int]; double; null; txt>
<java.lang.String; substring[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.CheckUtils; parseDouble[java.lang.String, int]; double; null; txt>
<java.lang.String; endsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.CheckUtils; parseDouble[java.lang.String, int]; double; null; txt>
<java.lang.String; endsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.CheckUtils; parseDouble[java.lang.String, int]; double; null; txt>
<java.lang.String; substring[int, int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.CheckUtils; parseDouble[java.lang.String, int]; double; null; txt>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.CheckUtils; parseDouble[java.lang.String, int]; double; null; txt>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.CheckUtils; parseDouble[java.lang.String, int]; double; null; txt>
<com.puppycrawl.tools.checkstyle.checks.CheckUtils; parseInt[java.lang.String, int]; int; com.puppycrawl.tools.checkstyle.checks.CheckUtils; parseDouble[java.lang.String, int]; double; null; this>
<com.puppycrawl.tools.checkstyle.checks.CheckUtils; parseLong[java.lang.String, int]; long; com.puppycrawl.tools.checkstyle.checks.CheckUtils; parseDouble[java.lang.String, int]; double; null; this>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.CheckUtils; parseInt[java.lang.String, int]; int; null; aText>
<java.lang.Character; digit[char, int]; int; com.puppycrawl.tools.checkstyle.checks.CheckUtils; parseInt[java.lang.String, int]; int; null; Character>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.CheckUtils; parseInt[java.lang.String, int]; int; null; aText>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.CheckUtils; parseLong[java.lang.String, int]; long; null; aText>
<java.lang.Character; digit[char, int]; int; com.puppycrawl.tools.checkstyle.checks.CheckUtils; parseLong[java.lang.String, int]; long; null; Character>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.CheckUtils; parseLong[java.lang.String, int]; long; null; aText>
<com.puppycrawl.tools.checkstyle.checks.CheckUtils; parseDouble[java.lang.String, int]; double; com.puppycrawl.tools.checkstyle.checks.CheckUtils; parseFloat[java.lang.String, int]; double; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.CheckUtils; getFirstNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; aNode>
<com.puppycrawl.tools.checkstyle.checks.CheckUtils; getFirstNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.CheckUtils; getFirstNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.CheckUtils; getFirstNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; newNode>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.CheckUtils; getFirstNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; currentNode>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.CheckUtils; getFirstNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; newNode>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.CheckUtils; getFirstNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; currentNode>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.CheckUtils; getFirstNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; newNode>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.CheckUtils; getFirstNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; currentNode>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.CheckUtils; getFirstNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; child>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.CheckUtils; getTypeParameterNames[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<java.lang.String>; null; aNode>
<not found; newArrayList[]; not found; com.puppycrawl.tools.checkstyle.checks.CheckUtils; getTypeParameterNames[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<java.lang.String>; null; Lists>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.CheckUtils; getTypeParameterNames[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<java.lang.String>; null; typeParameters>
<java.util.List; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.CheckUtils; getTypeParameterNames[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<java.lang.String>; null; typeParamNames>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.CheckUtils; getTypeParameterNames[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<java.lang.String>; null; typeParam.findFirstToken(TokenTypes.IDENT)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.CheckUtils; getTypeParameterNames[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<java.lang.String>; getText[]; typeParam>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.CheckUtils; getTypeParameterNames[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<java.lang.String>; null; typeParam>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.CheckUtils; getTypeParameterNames[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<java.lang.String>; null; sibling>
<java.util.List; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.CheckUtils; getTypeParameterNames[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<java.lang.String>; null; typeParamNames>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.CheckUtils; getTypeParameterNames[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<java.lang.String>; null; sibling.findFirstToken(TokenTypes.IDENT)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.CheckUtils; getTypeParameterNames[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<java.lang.String>; getText[]; sibling>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.CheckUtils; getTypeParameterNames[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<java.lang.String>; null; sibling>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.CheckUtils; getTypeParameters[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<com.puppycrawl.tools.checkstyle.api.DetailAST>; null; aNode>
<not found; newArrayList[]; not found; com.puppycrawl.tools.checkstyle.checks.CheckUtils; getTypeParameters[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<com.puppycrawl.tools.checkstyle.api.DetailAST>; null; Lists>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.CheckUtils; getTypeParameters[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<com.puppycrawl.tools.checkstyle.api.DetailAST>; null; typeParameters>
<java.util.List; add[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.CheckUtils; getTypeParameters[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<com.puppycrawl.tools.checkstyle.api.DetailAST>; null; typeParams>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.CheckUtils; getTypeParameters[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<com.puppycrawl.tools.checkstyle.api.DetailAST>; null; typeParam>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.CheckUtils; getTypeParameters[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<com.puppycrawl.tools.checkstyle.api.DetailAST>; null; sibling>
<java.util.List; add[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.CheckUtils; getTypeParameters[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<com.puppycrawl.tools.checkstyle.api.DetailAST>; null; typeParams>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.CheckUtils; getTypeParameters[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<com.puppycrawl.tools.checkstyle.api.DetailAST>; null; sibling>
<java.util.Arrays; fill[int[], int]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Arrays>
<com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; countTokens[com.puppycrawl.tools.checkstyle.checks.AST, int]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.TokenTypes; getTokenName[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; TokenTypes>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<java.lang.String; valueOf[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; String>
<java.lang.String; valueOf[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; String>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<java.lang.String; valueOf[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; String>
<java.lang.String; valueOf[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; String>
<com.puppycrawl.tools.checkstyle.api.TokenTypes; getTokenName[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; TokenTypes>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<java.lang.String; valueOf[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; String>
<java.lang.String; valueOf[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; String>
<com.puppycrawl.tools.checkstyle.api.TokenTypes; getTokenName[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; TokenTypes>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<java.lang.String; valueOf[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; String>
<java.lang.String; valueOf[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; String>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; countTokens[com.puppycrawl.tools.checkstyle.checks.AST, int]; void; null; aAST>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; countTokens[com.puppycrawl.tools.checkstyle.checks.AST, int]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; countTokens[com.puppycrawl.tools.checkstyle.checks.AST, int]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; countTokens[com.puppycrawl.tools.checkstyle.checks.AST, int]; void; null; this>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; countTokens[com.puppycrawl.tools.checkstyle.checks.AST, int]; void; null; child>
<com.puppycrawl.tools.checkstyle.api.Check; getTokenNames[]; java.util.Set<java.lang.String>; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; getAcceptableTokens[]; int[]; null; this>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; getAcceptableTokens[]; int[]; null; tokenNames>
<com.puppycrawl.tools.checkstyle.api.TokenTypes; getTokenId[java.lang.String]; int; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; getAcceptableTokens[]; int[]; null; TokenTypes>
<com.puppycrawl.tools.checkstyle.api.TokenTypes; getTokenId[java.lang.String]; int; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; setLimitedTokens[java.lang.String[]]; void; null; TokenTypes>
<com.puppycrawl.tools.checkstyle.api.Utils; createPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; setSumTokenCounts[boolean]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; setExcludedClasses[java.lang.String]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; getDefaultTokens[]; int[]; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; getRequiredTokens[]; int[]; null; this>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; FullIdent>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAst>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAst>
<com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; visitPackageDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; visitClassDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; visitMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAst>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; visitPackageDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; FullIdent>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getPreviousSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; visitPackageDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aPackage.getLastChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLastChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; visitPackageDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getPreviousSibling[]; aPackage>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; visitClassDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aClass>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; visitClassDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mPackage>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; visitClassDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ident>
<com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; checkClassName[]; boolean; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; visitMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; checkName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; visitMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; checkModifiers[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; visitMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; checkType[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; visitMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; checkParams[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; visitMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; visitMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; visitMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aMethod>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; checkClassName[]; boolean; null; mExcludedClassesPattern.matcher(mCurrentClass)>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; checkClassName[]; boolean; find[]; mExcludedClassesPattern>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; checkName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aMethod>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; checkName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; "main">
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; checkName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ident>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; checkModifiers[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aMethod>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; checkModifiers[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; modifiers>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; checkModifiers[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; modifiers>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; checkType[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aMethod.findFirstToken(TokenTypes.TYPE)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; checkType[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; getFirstChild[]; aMethod>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; checkType[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; type>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; checkParams[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aMethod>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; checkParams[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; params>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; checkParams[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; (params.getFirstChild())>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; checkParams[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; findFirstToken[int]; params>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; checkParams[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; paramType>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; checkParams[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; arrayDecl>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; checkParams[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; arrayType>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; checkParams[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; arrayType>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; checkParams[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; FullIdent>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; checkParams[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; "String">
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; checkParams[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; type>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; checkParams[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; "java.lang.String">
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheck; checkParams[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; type>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.ClassResolver; ClassResolver[java.lang.ClassLoader, java.lang.String, java.util.Set<java.lang.String>]; void; null; mImports>
<com.puppycrawl.tools.checkstyle.checks.ClassResolver; resolveQualifiedName[java.lang.String]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.ClassResolver; resolve[java.lang.String, java.lang.String]; java.lang.Class<?>; null; this>
<java.lang.String; endsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.ClassResolver; resolve[java.lang.String, java.lang.String]; java.lang.Class<?>; null; imp>
<com.puppycrawl.tools.checkstyle.checks.ClassResolver; resolveQualifiedName[java.lang.String]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.ClassResolver; resolve[java.lang.String, java.lang.String]; java.lang.Class<?>; null; this>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.ClassResolver; resolve[java.lang.String, java.lang.String]; java.lang.Class<?>; null; "">
<com.puppycrawl.tools.checkstyle.checks.ClassResolver; resolveQualifiedName[java.lang.String]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.ClassResolver; resolve[java.lang.String, java.lang.String]; java.lang.Class<?>; null; this>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.ClassResolver; resolve[java.lang.String, java.lang.String]; java.lang.Class<?>; null; "">
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.ClassResolver; resolve[java.lang.String, java.lang.String]; java.lang.Class<?>; null; "">
<com.puppycrawl.tools.checkstyle.checks.ClassResolver; isLoadable[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.ClassResolver; resolve[java.lang.String, java.lang.String]; java.lang.Class<?>; null; this>
<com.puppycrawl.tools.checkstyle.checks.ClassResolver; safeLoad[java.lang.String]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.ClassResolver; resolve[java.lang.String, java.lang.String]; java.lang.Class<?>; null; this>
<java.lang.String; endsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.ClassResolver; resolve[java.lang.String, java.lang.String]; java.lang.Class<?>; null; imp>
<java.lang.String; substring[int, int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.ClassResolver; resolve[java.lang.String, java.lang.String]; java.lang.Class<?>; null; imp>
<java.lang.String; lastIndexOf[int]; int; com.puppycrawl.tools.checkstyle.checks.ClassResolver; resolve[java.lang.String, java.lang.String]; java.lang.Class<?>; null; imp>
<com.puppycrawl.tools.checkstyle.checks.ClassResolver; resolveQualifiedName[java.lang.String]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.ClassResolver; resolve[java.lang.String, java.lang.String]; java.lang.Class<?>; null; this>
<com.puppycrawl.tools.checkstyle.checks.ClassResolver; safeLoad[java.lang.String]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.ClassResolver; resolve[java.lang.String, java.lang.String]; java.lang.Class<?>; null; this>
<com.puppycrawl.tools.checkstyle.checks.ClassResolver; safeLoad[java.lang.String]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.ClassResolver; isLoadable[java.lang.String]; boolean; null; this>
<java.lang.Class; forName[java.lang.String, boolean, java.lang.ClassLoader]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.ClassResolver; safeLoad[java.lang.String]; java.lang.Class<?>; null; Class>
<com.puppycrawl.tools.checkstyle.checks.ClassResolver; isLoadable[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.ClassResolver; resolveQualifiedName[java.lang.String]; java.lang.Class<?>; null; this>
<com.puppycrawl.tools.checkstyle.checks.ClassResolver; safeLoad[java.lang.String]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.ClassResolver; resolveQualifiedName[java.lang.String]; java.lang.Class<?>; null; this>
<java.lang.String; lastIndexOf[java.lang.String]; int; com.puppycrawl.tools.checkstyle.checks.ClassResolver; resolveQualifiedName[java.lang.String]; java.lang.Class<?>; null; aName>
<java.lang.String; substring[int, int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.ClassResolver; resolveQualifiedName[java.lang.String]; java.lang.Class<?>; null; aName>
<java.lang.String; substring[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.ClassResolver; resolveQualifiedName[java.lang.String]; java.lang.Class<?>; null; aName>
<com.puppycrawl.tools.checkstyle.checks.ClassResolver; isLoadable[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.ClassResolver; resolveQualifiedName[java.lang.String]; java.lang.Class<?>; null; this>
<com.puppycrawl.tools.checkstyle.checks.ClassResolver; safeLoad[java.lang.String]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.ClassResolver; resolveQualifiedName[java.lang.String]; java.lang.Class<?>; null; this>
<com.puppycrawl.tools.checkstyle.checks.DeclarationCollector$FrameStack; current[]; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.LexicalFrame; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this.mFrames>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.findFirstToken(TokenTypes.IDENT)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getText[]; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mods>
<com.puppycrawl.tools.checkstyle.checks.DeclarationCollector$ClassFrame; addStaticMember[java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ((ClassFrame)frame)>
<com.puppycrawl.tools.checkstyle.checks.DeclarationCollector$ClassFrame; addInstanceMember[java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ((ClassFrame)frame)>
<com.puppycrawl.tools.checkstyle.checks.DeclarationCollector$LexicalFrame; addName[java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; frame>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.DeclarationCollector$LexicalFrame; addName[java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; frame>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; nameAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.DeclarationCollector$LexicalFrame; addName[java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; frame>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; nameAST>
<com.puppycrawl.tools.checkstyle.checks.DeclarationCollector$FrameStack; enter[com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.LexicalFrame]; void; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this.mFrames>
<com.puppycrawl.tools.checkstyle.checks.DeclarationCollector$FrameStack; enter[com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.LexicalFrame]; void; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this.mFrames>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.findFirstToken(TokenTypes.IDENT)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getText[]; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mods>
<com.puppycrawl.tools.checkstyle.checks.DeclarationCollector$ClassFrame; addStaticMember[java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ((ClassFrame)frame)>
<com.puppycrawl.tools.checkstyle.checks.DeclarationCollector$ClassFrame; addInstanceMember[java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ((ClassFrame)frame)>
<com.puppycrawl.tools.checkstyle.checks.DeclarationCollector$FrameStack; enter[com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.LexicalFrame]; void; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this.mFrames>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.DeclarationCollector$FrameStack; leave[]; void; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this.mFrames>
<com.puppycrawl.tools.checkstyle.checks.DeclarationCollector$FrameStack; findFrame[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.LexicalFrame; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector; isClassField[java.lang.String]; boolean; null; mFrames>
<com.puppycrawl.tools.checkstyle.checks.DeclarationCollector$ClassFrame; hasInstanceMember[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector; isClassField[java.lang.String]; boolean; null; ((ClassFrame)frame)>
<not found; newHashSet[]; not found; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.LexicalFrame; LexicalFrame[]; void; null; Sets>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.LexicalFrame; addName[java.lang.String]; void; null; mVarNames>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.LexicalFrame; contains[java.lang.String]; boolean; null; mVarNames>
<not found; newHashSet[]; not found; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.ClassFrame; ClassFrame[]; void; null; Sets>
<not found; newHashSet[]; not found; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.ClassFrame; ClassFrame[]; void; null; Sets>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.ClassFrame; addStaticMember[java.lang.String]; void; null; mStaticMembers>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.ClassFrame; addInstanceMember[java.lang.String]; void; null; mInstanceMembers>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.ClassFrame; hasInstanceMember[java.lang.String]; boolean; null; mInstanceMembers>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.ClassFrame; contains[java.lang.String]; boolean; null; mInstanceMembers>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.ClassFrame; contains[java.lang.String]; boolean; null; mStaticMembers>
<not found; newLinkedList[]; not found; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.FrameStack; FrameStack[]; void; null; Lists>
<com.puppycrawl.tools.checkstyle.checks.DeclarationCollector$FrameStack; enter[com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.LexicalFrame]; void; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.FrameStack; FrameStack[]; void; null; this>
<java.util.LinkedList; addFirst[com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.LexicalFrame]; void; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.FrameStack; enter[com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.LexicalFrame]; void; null; mFrameList>
<java.util.LinkedList; removeFirst[]; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.LexicalFrame; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.FrameStack; leave[]; void; null; mFrameList>
<java.util.LinkedList; getFirst[]; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.LexicalFrame; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.FrameStack; current[]; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.LexicalFrame; null; mFrameList>
<com.puppycrawl.tools.checkstyle.checks.DeclarationCollector$LexicalFrame; contains[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.FrameStack; findFrame[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.LexicalFrame; null; thisFrame>
<java.lang.ThreadLocal; get[]; com.puppycrawl.tools.checkstyle.api.FileContents; com.puppycrawl.tools.checkstyle.checks.FileContentsHolder; getContents[]; com.puppycrawl.tools.checkstyle.api.FileContents; null; FILE_CONTENTS>
<java.lang.ThreadLocal; set[com.puppycrawl.tools.checkstyle.api.FileContents]; void; com.puppycrawl.tools.checkstyle.checks.FileContentsHolder; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; FILE_CONTENTS>
<com.puppycrawl.tools.checkstyle.api.Check; getFileContents[]; com.puppycrawl.tools.checkstyle.api.FileContents; com.puppycrawl.tools.checkstyle.checks.FileContentsHolder; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<java.lang.ThreadLocal; remove[]; void; com.puppycrawl.tools.checkstyle.checks.FileContentsHolder; destroy[]; void; null; FILE_CONTENTS>
<com.puppycrawl.tools.checkstyle.api.FastStack; push[com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck.Counter]; void; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mCounters>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.FastStack; push[com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck.Counter]; void; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mCounters>
<com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck; isCountable[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck$Counter; increment[]; void; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; c>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.FastStack; pop[]; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck.Counter; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mCounters>
<com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck$Counter; getCount[]; int; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; counter>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.FastStack; pop[]; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck.Counter; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mCounters>
<com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck$Counter; getCount[]; int; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; counter>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.FastStack; pop[]; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck.Counter; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mCounters>
<com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck$Counter; getCount[]; int; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; counter>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aRootAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aRootAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck; isCountable[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck; isExpressionCountable[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck; isCountable[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck; isVariableDefCountable[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck; isCountable[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck; isVariableDefCountable[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST.getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck; isVariableDefCountable[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; getType[]; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getPreviousSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck; isVariableDefCountable[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck; isVariableDefCountable[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; prevSibling>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck; isExpressionCountable[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST.getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck; isExpressionCountable[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; getType[]; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getPreviousSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck; isExpressionCountable[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck; isExpressionCountable[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; prevSibling>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.NPathComplexityCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.metrics.NPathComplexityCheck; visitMultiplyingConditional[]; void; com.puppycrawl.tools.checkstyle.checks.metrics.NPathComplexityCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.metrics.NPathComplexityCheck; visitAddingConditional[]; void; com.puppycrawl.tools.checkstyle.checks.metrics.NPathComplexityCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.NPathComplexityCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.metrics.NPathComplexityCheck; leaveMultiplyingConditional[]; void; com.puppycrawl.tools.checkstyle.checks.metrics.NPathComplexityCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.metrics.NPathComplexityCheck; leaveAddingConditional[]; void; com.puppycrawl.tools.checkstyle.checks.metrics.NPathComplexityCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractComplexityCheck; pushValue[]; void; com.puppycrawl.tools.checkstyle.checks.metrics.NPathComplexityCheck; visitAddingConditional[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractComplexityCheck; setCurrentValue[java.math.BigInteger]; void; com.puppycrawl.tools.checkstyle.checks.metrics.NPathComplexityCheck; leaveAddingConditional[]; void; null; this>
<java.math.BigInteger; add[java.math.BigInteger]; java.math.BigInteger; com.puppycrawl.tools.checkstyle.checks.metrics.NPathComplexityCheck; leaveAddingConditional[]; void; null; getCurrentValue().subtract(BigInteger.ONE)>
<java.math.BigInteger; subtract[java.math.BigInteger]; java.math.BigInteger; com.puppycrawl.tools.checkstyle.checks.metrics.NPathComplexityCheck; leaveAddingConditional[]; void; add[java.math.BigInteger]; getCurrentValue()>
<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractComplexityCheck; getCurrentValue[]; java.math.BigInteger; com.puppycrawl.tools.checkstyle.checks.metrics.NPathComplexityCheck; leaveAddingConditional[]; void; subtract[java.math.BigInteger]; this>
<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractComplexityCheck; popValue[]; java.math.BigInteger; com.puppycrawl.tools.checkstyle.checks.metrics.NPathComplexityCheck; leaveAddingConditional[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractComplexityCheck; pushValue[]; void; com.puppycrawl.tools.checkstyle.checks.metrics.NPathComplexityCheck; visitMultiplyingConditional[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractComplexityCheck; setCurrentValue[java.math.BigInteger]; void; com.puppycrawl.tools.checkstyle.checks.metrics.NPathComplexityCheck; leaveMultiplyingConditional[]; void; null; this>
<java.math.BigInteger; multiply[java.math.BigInteger]; java.math.BigInteger; com.puppycrawl.tools.checkstyle.checks.metrics.NPathComplexityCheck; leaveMultiplyingConditional[]; void; null; getCurrentValue().add(BigInteger.ONE)>
<java.math.BigInteger; add[java.math.BigInteger]; java.math.BigInteger; com.puppycrawl.tools.checkstyle.checks.metrics.NPathComplexityCheck; leaveMultiplyingConditional[]; void; multiply[java.math.BigInteger]; getCurrentValue()>
<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractComplexityCheck; getCurrentValue[]; java.math.BigInteger; com.puppycrawl.tools.checkstyle.checks.metrics.NPathComplexityCheck; leaveMultiplyingConditional[]; void; add[java.math.BigInteger]; this>
<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractComplexityCheck; popValue[]; java.math.BigInteger; com.puppycrawl.tools.checkstyle.checks.metrics.NPathComplexityCheck; leaveMultiplyingConditional[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractComplexityCheck; incrementCurrentValue[java.math.BigInteger]; void; com.puppycrawl.tools.checkstyle.checks.metrics.CyclomaticComplexityCheck; visitTokenHook[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; newHashSet[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.CyclomaticComplexityCheck; getMessageID[]; java.lang.String; null; Sets>
<com.puppycrawl.tools.checkstyle.api.FastStack; newInstance[]; com.puppycrawl.tools.checkstyle.api.FastStack<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck.Context>; com.puppycrawl.tools.checkstyle.checks.metrics.CyclomaticComplexityCheck; getMessageID[]; java.lang.String; null; FastStack>
<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; setMax[int]; void; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; this>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<com.puppycrawl.tools.checkstyle.api.Check; getRequiredTokens[]; int[]; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; getDefaultTokens[]; int[]; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; visitPackageDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; visitClassDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context; visitType[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mContext>
<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context; visitLiteralNew[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mContext>
<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context; visitLiteralThrows[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mContext>
<com.puppycrawl.tools.checkstyle.api.DetailAST; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; leaveClassDef[]; void; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; visitPackageDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; FullIdent>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getPreviousSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; visitPackageDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aPkg.getLastChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLastChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; visitPackageDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getPreviousSibling[]; aPkg>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; visitPackageDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ident>
<com.puppycrawl.tools.checkstyle.api.FastStack; push[com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck.Context]; void; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; visitClassDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mContextStack>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; visitClassDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aClassDef.findFirstToken(TokenTypes.IDENT)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; visitClassDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getText[]; aClassDef>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; visitClassDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aClassDef>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; visitClassDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aClassDef>
<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context; checkCoupling[]; void; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; leaveClassDef[]; void; null; mContext>
<com.puppycrawl.tools.checkstyle.api.FastStack; pop[]; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck.Context; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; leaveClassDef[]; void; null; mContextStack>
<not found; newTreeSet[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; leaveClassDef[]; void; null; Sets>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck.Context; visitLiteralThrows[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aThrows>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck.Context; visitLiteralThrows[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; childAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck.Context; visitLiteralThrows[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; childAST>
<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context; addReferencedClassName[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck.Context; visitLiteralThrows[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck.Context; visitType[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; CheckUtils.createFullType(aAST)>
<com.puppycrawl.tools.checkstyle.checks.CheckUtils; createFullType[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck.Context; visitType[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getText[]; CheckUtils>
<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context; addReferencedClassName[java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck.Context; visitType[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mContext>
<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context; addReferencedClassName[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck.Context; visitLiteralNew[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mContext>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck.Context; visitLiteralNew[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck.Context; addReferencedClassName[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; FullIdent.createFullIdent(aAST)>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck.Context; addReferencedClassName[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getText[]; FullIdent>
<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context; addReferencedClassName[java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck.Context; addReferencedClassName[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck$Context; isSignificant[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck.Context; addReferencedClassName[java.lang.String]; void; null; this>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck.Context; addReferencedClassName[java.lang.String]; void; null; mReferencedClassNames>
<java.util.Set; remove[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck.Context; checkCoupling[]; void; null; mReferencedClassNames>
<java.util.Set; remove[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck.Context; checkCoupling[]; void; null; mReferencedClassNames>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck.Context; checkCoupling[]; void; null; mReferencedClassNames>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck.Context; checkCoupling[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; getLogMessageId[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck.Context; checkCoupling[]; void; null; this>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck.Context; checkCoupling[]; void; null; mReferencedClassNames>
<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; getMax[]; int; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck.Context; checkCoupling[]; void; null; this>
<java.lang.Object; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck.Context; checkCoupling[]; void; null; mReferencedClassNames>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck.Context; isSignificant[java.lang.String]; boolean; null; aClassName>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck.Context; isSignificant[java.lang.String]; boolean; null; mIgnoredClassNames>
<java.lang.String; startsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck.Context; isSignificant[java.lang.String]; boolean; null; aClassName>
<com.puppycrawl.tools.checkstyle.api.FastStack; newInstance[]; com.puppycrawl.tools.checkstyle.api.FastStack<com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck.Context>; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck.Context; isSignificant[java.lang.String]; boolean; null; FastStack>
<com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck; setMax[int]; void; com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck; BooleanExpressionComplexityCheck[]; void; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck; visitMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck; visitExpr[]; void; com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck$Context; visitBooleanOperator[]; void; com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mContext>
<com.puppycrawl.tools.checkstyle.api.DetailAST; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck; leaveMethodDef[]; void; com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck; leaveExpr[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FastStack; push[com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck.Context]; void; com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck; visitMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mContextStack>
<com.puppycrawl.tools.checkstyle.checks.CheckUtils; isEqualsMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck; visitMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; CheckUtils>
<com.puppycrawl.tools.checkstyle.api.FastStack; pop[]; com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck.Context; com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck; leaveMethodDef[]; void; null; mContextStack>
<com.puppycrawl.tools.checkstyle.api.FastStack; push[com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck.Context]; void; com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck; visitExpr[]; void; null; mContextStack>
<com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck$Context; isChecking[]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck; visitExpr[]; void; null; mContext>
<com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck$Context; checkCount[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck; leaveExpr[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mContext>
<com.puppycrawl.tools.checkstyle.api.FastStack; pop[]; com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck.Context; com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck; leaveExpr[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mContextStack>
<com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck; getMax[]; int; com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck.Context; checkCount[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck.Context; checkCount[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck.Context; checkCount[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck.Context; checkCount[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parentAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck.Context; checkCount[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parentAST>
<com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck; getMax[]; int; com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck.Context; checkCount[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FastStack; newInstance[]; com.puppycrawl.tools.checkstyle.api.FastStack<java.math.BigInteger>; com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck.Context; checkCount[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; FastStack>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractComplexityCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractComplexityCheck; visitMethodDef[]; void; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractComplexityCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractComplexityCheck; visitTokenHook[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractComplexityCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractComplexityCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractComplexityCheck; leaveMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractComplexityCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractComplexityCheck; leaveTokenHook[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractComplexityCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractComplexityCheck; setCurrentValue[java.math.BigInteger]; void; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractComplexityCheck; incrementCurrentValue[java.math.BigInteger]; void; null; this>
<java.math.BigInteger; add[java.math.BigInteger]; java.math.BigInteger; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractComplexityCheck; incrementCurrentValue[java.math.BigInteger]; void; null; getCurrentValue()>
<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractComplexityCheck; getCurrentValue[]; java.math.BigInteger; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractComplexityCheck; incrementCurrentValue[java.math.BigInteger]; void; add[java.math.BigInteger]; this>
<com.puppycrawl.tools.checkstyle.api.FastStack; push[java.math.BigInteger]; void; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractComplexityCheck; pushValue[]; void; null; mValueStack>
<com.puppycrawl.tools.checkstyle.api.FastStack; pop[]; java.math.BigInteger; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractComplexityCheck; popValue[]; java.math.BigInteger; null; mValueStack>
<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractComplexityCheck; pushValue[]; void; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractComplexityCheck; visitMethodDef[]; void; null; this>
<java.math.BigInteger; valueOf[long]; java.math.BigInteger; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractComplexityCheck; leaveMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; BigInteger>
<java.math.BigInteger; compareTo[java.math.BigInteger]; int; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractComplexityCheck; leaveMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mCurrentValue>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractComplexityCheck; leaveMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractComplexityCheck; getMessageID[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractComplexityCheck; leaveMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.metrics.AbstractComplexityCheck; popValue[]; java.math.BigInteger; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractComplexityCheck; leaveMethodDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; setTokens[java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.checks.metrics.ClassDataAbstractionCouplingCheck; ClassDataAbstractionCouplingCheck[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.naming.LocalFinalVariableNameCheck; mustCheckName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.naming.LocalFinalVariableNameCheck; mustCheckName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; modifiersAST>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; isLocalVariableDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.naming.LocalFinalVariableNameCheck; mustCheckName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ScopeUtils>
<com.puppycrawl.tools.checkstyle.checks.naming.AbstractTypeParameterNameCheck; getLocation[]; int; com.puppycrawl.tools.checkstyle.checks.naming.AbstractTypeParameterNameCheck; init[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.naming.AbstractTypeParameterNameCheck; mustCheckName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST.getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.naming.AbstractTypeParameterNameCheck; mustCheckName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; getParent[]; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.AbstractTypeParameterNameCheck; mustCheckName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; location>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.naming.AbstractTypeParameterNameCheck; mustCheckName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; location>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.AbstractTypeParameterNameCheck; mustCheckName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; location>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheck; mustCheckName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheck; mustCheckName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; modifiersAST>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; inInterfaceOrAnnotationBlock[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheck; mustCheckName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ScopeUtils>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; isLocalVariableDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheck; mustCheckName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ScopeUtils>
<com.puppycrawl.tools.checkstyle.checks.naming.AbstractAccessControlNameCheck; shouldCheckInScope[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheck; mustCheckName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getPreviousSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.naming.PackageNameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getLastChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLastChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.naming.PackageNameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getPreviousSibling[]; aAST>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.naming.PackageNameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; FullIdent>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.checks.naming.PackageNameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; getRegexp().matcher(full.getText())>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.naming.PackageNameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; find[]; getRegexp()>
<com.puppycrawl.tools.checkstyle.checks.AbstractFormatCheck; getRegexp[]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.naming.PackageNameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; matcher[java.lang.CharSequence]; this>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.naming.PackageNameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; full>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.naming.PackageNameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.naming.PackageNameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; full>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.naming.PackageNameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; full>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.naming.PackageNameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; full>
<com.puppycrawl.tools.checkstyle.checks.AbstractFormatCheck; getFormat[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.naming.PackageNameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAst>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAst.getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getParent[]; aAst>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; classDefOrNew>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; method.getText()>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; equals[]; method>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; classIdent>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; method>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; method>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; method>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.naming.ConstantNameCheck; mustCheckName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.naming.ConstantNameCheck; mustCheckName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; modifiersAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.naming.ConstantNameCheck; mustCheckName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; modifiersAST>
<com.puppycrawl.tools.checkstyle.checks.naming.AbstractAccessControlNameCheck; shouldCheckInScope[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.naming.ConstantNameCheck; mustCheckName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; inInterfaceOrAnnotationBlock[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.naming.ConstantNameCheck; mustCheckName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ScopeUtils>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.naming.ConstantNameCheck; mustCheckName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.naming.ConstantNameCheck; mustCheckName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; "serialVersionUID">
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.ConstantNameCheck; mustCheckName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; nameAST>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.naming.ConstantNameCheck; mustCheckName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; "serialPersistentFields">
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.ConstantNameCheck; mustCheckName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; nameAST>
<com.puppycrawl.tools.checkstyle.checks.naming.AbstractNameCheck; mustCheckName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.naming.AbstractNameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.naming.AbstractNameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; find[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.AbstractNameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; getRegexp().matcher(nameAST.getText())>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.naming.AbstractNameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; find[]; getRegexp()>
<com.puppycrawl.tools.checkstyle.checks.AbstractFormatCheck; getRegexp[]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.naming.AbstractNameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; matcher[java.lang.CharSequence]; this>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.AbstractNameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; nameAST>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.naming.AbstractNameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.naming.AbstractNameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; nameAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.naming.AbstractNameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; nameAST>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.AbstractNameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; nameAST>
<com.puppycrawl.tools.checkstyle.checks.AbstractFormatCheck; getFormat[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.naming.AbstractNameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheck; mustCheckName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheck; mustCheckName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; modifiersAST>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; isLocalVariableDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheck; mustCheckName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ScopeUtils>
<com.puppycrawl.tools.checkstyle.checks.naming.AbstractAccessControlNameCheck; shouldCheckInScope[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.naming.AbstractAccessControlNameCheck; mustCheckName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.naming.AbstractAccessControlNameCheck; shouldCheckInScope[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aModifiers>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.naming.AbstractAccessControlNameCheck; shouldCheckInScope[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aModifiers>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.naming.AbstractAccessControlNameCheck; shouldCheckInScope[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aModifiers>
<com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheck; getDefaultTokens[]; int[]; com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheck; getRequiredTokens[]; int[]; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheck; visitClassDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheck; visitClassDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.findFirstToken(TokenTypes.IDENT)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheck; visitClassDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getText[]; aAST>
<com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheck; isAbstract[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheck; visitClassDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheck; isMatchingClassName[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheck; visitClassDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheck; visitClassDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheck; visitClassDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheck; visitClassDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.AbstractFormatCheck; getFormat[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheck; visitClassDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheck; isMatchingClassName[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheck; visitClassDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheck; visitClassDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheck; visitClassDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheck; visitClassDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheck; isAbstract[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST.findFirstToken(TokenTypes.MODIFIERS)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheck; isAbstract[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; findFirstToken[int]; aAST>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheck; isMatchingClassName[java.lang.String]; boolean; null; getRegexp().matcher(aClassName)>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheck; isMatchingClassName[java.lang.String]; boolean; find[]; getRegexp()>
<com.puppycrawl.tools.checkstyle.checks.AbstractFormatCheck; getRegexp[]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheck; isMatchingClassName[java.lang.String]; boolean; matcher[java.lang.CharSequence]; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.naming.StaticVariableNameCheck; mustCheckName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.naming.StaticVariableNameCheck; mustCheckName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; modifiersAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.naming.StaticVariableNameCheck; mustCheckName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; modifiersAST>
<com.puppycrawl.tools.checkstyle.checks.naming.AbstractAccessControlNameCheck; shouldCheckInScope[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.naming.StaticVariableNameCheck; mustCheckName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; inInterfaceOrAnnotationBlock[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.naming.StaticVariableNameCheck; mustCheckName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ScopeUtils>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.naming.ParameterNameCheck; mustCheckName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.ParameterNameCheck; mustCheckName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST.getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.naming.ParameterNameCheck; mustCheckName[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; getType[]; aAST>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.sizes.OuterTypeNumberCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck; setIgnorePattern[java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck; LineLengthCheck[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; getLines[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Utils; lengthExpandedTabs[java.lang.String, int, int]; int; com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Utils>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; line>
<com.puppycrawl.tools.checkstyle.api.Check; getTabWidth[]; int; com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mIgnorePattern.matcher(line)>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; find[]; mIgnorePattern>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck; setIgnorePattern[java.lang.String]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.api.FastStack; newInstance[]; com.puppycrawl.tools.checkstyle.api.FastStack<com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheck.Context>; com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck; setIgnorePattern[java.lang.String]; void; null; FastStack>
<com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheck; setMax[int]; void; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheck; ExecutableStatementCountCheck[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FastStack; clear[]; void; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mContextStack>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheck; visitMemberDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheck; visitSlist[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheck; leaveMemberDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.FastStack; push[com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheck.Context]; void; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheck; visitMemberDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mContextStack>
<com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheck$Context; getCount[]; int; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheck; leaveMemberDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mContext>
<com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheck; getMax[]; int; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheck; leaveMemberDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheck; leaveMemberDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheck; leaveMemberDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheck; leaveMemberDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheck; getMax[]; int; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheck; leaveMemberDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FastStack; pop[]; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheck.Context; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheck; leaveMemberDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mContextStack>
<com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheck$Context; getAST[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheck; visitSlist[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mContext>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheck; visitSlist[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheck; visitSlist[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parent>
<com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheck$Context; addCount[int]; void; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheck; visitSlist[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mContext>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheck; visitSlist[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheck; visitSlist[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parent>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.sizes.AnonInnerLengthCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.sizes.AnonInnerLengthCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; openingBrace>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.sizes.AnonInnerLengthCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; closingBrace>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.sizes.AnonInnerLengthCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; openingBrace>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.sizes.AnonInnerLengthCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.sizes.AnonInnerLengthCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.sizes.AnonInnerLengthCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<java.util.EnumMap; put[com.puppycrawl.tools.checkstyle.api.Scope, java.lang.Integer]; java.lang.Integer; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck.MethodCounter; increment[com.puppycrawl.tools.checkstyle.api.Scope]; void; null; mCounts>
<com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck$MethodCounter; value[com.puppycrawl.tools.checkstyle.api.Scope]; int; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck.MethodCounter; increment[com.puppycrawl.tools.checkstyle.api.Scope]; void; null; this>
<java.util.EnumMap; put[com.puppycrawl.tools.checkstyle.api.Scope, java.lang.Integer]; java.lang.Integer; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck.MethodCounter; increment[com.puppycrawl.tools.checkstyle.api.Scope]; void; null; mCounts>
<com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck$MethodCounter; value[com.puppycrawl.tools.checkstyle.api.Scope]; int; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck.MethodCounter; increment[com.puppycrawl.tools.checkstyle.api.Scope]; void; null; this>
<java.util.EnumMap; get[java.lang.Object]; java.lang.Integer; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck.MethodCounter; value[com.puppycrawl.tools.checkstyle.api.Scope]; int; null; mCounts>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.FastStack; push[com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck.MethodCounter]; void; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mCounters>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck; raiseCounter[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.FastStack; pop[]; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck.MethodCounter; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mCounters>
<com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck; checkCounters[com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck.MethodCounter, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FastStack; peek[]; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck.MethodCounter; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck; raiseCounter[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mCounters>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck; raiseCounter[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aMethod>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; getScopeFromMods[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck; raiseCounter[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ScopeUtils>
<com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck$MethodCounter; increment[com.puppycrawl.tools.checkstyle.api.Scope]; void; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck; raiseCounter[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; actualCounter>
<com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck; checkMax[int, int, java.lang.String, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck; checkCounters[com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck.MethodCounter, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck$MethodCounter; value[com.puppycrawl.tools.checkstyle.api.Scope]; int; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck; checkCounters[com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck.MethodCounter, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aCounter>
<com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck; checkMax[int, int, java.lang.String, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck; checkCounters[com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck.MethodCounter, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck$MethodCounter; value[com.puppycrawl.tools.checkstyle.api.Scope]; int; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck; checkCounters[com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck.MethodCounter, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aCounter>
<com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck; checkMax[int, int, java.lang.String, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck; checkCounters[com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck.MethodCounter, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck$MethodCounter; value[com.puppycrawl.tools.checkstyle.api.Scope]; int; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck; checkCounters[com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck.MethodCounter, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aCounter>
<com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck; checkMax[int, int, java.lang.String, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck; checkCounters[com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck.MethodCounter, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck$MethodCounter; value[com.puppycrawl.tools.checkstyle.api.Scope]; int; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck; checkCounters[com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck.MethodCounter, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aCounter>
<com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck; checkMax[int, int, java.lang.String, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck; checkCounters[com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck.MethodCounter, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck$MethodCounter; getTotal[]; int; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck; checkCounters[com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck.MethodCounter, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aCounter>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck; checkMax[int, int, java.lang.String, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck; checkMax[int, int, java.lang.String, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAst>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.sizes.MethodLengthCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.sizes.MethodLengthCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; openingBrace>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.sizes.MethodLengthCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; closingBrace>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.sizes.MethodLengthCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; openingBrace>
<com.puppycrawl.tools.checkstyle.api.Check; getFileContents[]; com.puppycrawl.tools.checkstyle.api.FileContents; com.puppycrawl.tools.checkstyle.checks.sizes.MethodLengthCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.sizes.MethodLengthCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; closingBrace>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.sizes.MethodLengthCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; openingBrace>
<com.puppycrawl.tools.checkstyle.api.FileContents; lineIsBlank[int]; boolean; com.puppycrawl.tools.checkstyle.checks.sizes.MethodLengthCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; contents>
<com.puppycrawl.tools.checkstyle.api.FileContents; lineIsComment[int]; boolean; com.puppycrawl.tools.checkstyle.checks.sizes.MethodLengthCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; contents>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.sizes.MethodLengthCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.sizes.MethodLengthCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.sizes.MethodLengthCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.sizes.ParameterNumberCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[int]; int; com.puppycrawl.tools.checkstyle.checks.sizes.ParameterNumberCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; params>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.sizes.ParameterNumberCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.sizes.ParameterNumberCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.sizes.ParameterNumberCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; name>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.sizes.ParameterNumberCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; name>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.sizes.FileLengthCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; aLines>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.sizes.FileLengthCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; this>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.sizes.FileLengthCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; aLines>
<not found; endsWith[]; not found; com.puppycrawl.tools.checkstyle.checks.UpperEllCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getText()>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.UpperEllCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; endsWith[]; aAST>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.UpperEllCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.UpperEllCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.UpperEllCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; length[]; not found; com.puppycrawl.tools.checkstyle.checks.UpperEllCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getText()>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.UpperEllCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; length[]; aAST>
<java.util.Arrays; binarySearch[int[], int]; int; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheck; isIgnoreLine[int]; boolean; null; Arrays>
<com.puppycrawl.tools.checkstyle.checks.header.HeaderCheck; isIgnoreLine[int]; boolean; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheck; isMatch[int, java.lang.String]; boolean; null; this>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheck; isMatch[int, java.lang.String]; boolean; null; getHeaderLines().get(aLineNumber)>
<not found; get[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheck; isMatch[int, java.lang.String]; boolean; equals[]; getHeaderLines()>
<com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck; getHeaderLines[]; com.puppycrawl.tools.checkstyle.checks.header.ImmutableList<java.lang.String>; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheck; isMatch[int, java.lang.String]; boolean; get[]; this>
<java.lang.System; arraycopy[java.lang.Object, int, java.lang.Object, int, int]; void; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheck; setIgnoreLines[int[]]; void; null; System>
<java.util.Arrays; sort[int[]]; void; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheck; setIgnoreLines[int[]]; void; null; Arrays>
<not found; size[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; getHeaderLines()>
<com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck; getHeaderLines[]; com.puppycrawl.tools.checkstyle.checks.header.ImmutableList<java.lang.String>; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; size[]; this>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; aLines>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; this>
<not found; size[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; getHeaderLines()>
<com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck; getHeaderLines[]; com.puppycrawl.tools.checkstyle.checks.header.ImmutableList<java.lang.String>; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; size[]; this>
<com.puppycrawl.tools.checkstyle.checks.header.HeaderCheck; isMatch[int, java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; this>
<java.util.List; get[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; aLines>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; this>
<not found; get[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; getHeaderLines()>
<com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck; getHeaderLines[]; com.puppycrawl.tools.checkstyle.checks.header.ImmutableList<java.lang.String>; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; get[]; this>
<not found; newArrayList[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; Lists>
<java.lang.System; arraycopy[java.lang.Object, int, java.lang.Object, int, int]; void; com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck; setMultiLines[int[]]; void; null; System>
<java.util.Arrays; sort[int[]]; void; com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck; setMultiLines[int[]]; void; null; Arrays>
<not found; size[]; not found; com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; getHeaderLines()>
<com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck; getHeaderLines[]; com.puppycrawl.tools.checkstyle.checks.header.ImmutableList<java.lang.String>; com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; size[]; this>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; aLines>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; this>
<java.util.List; get[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; aLines>
<com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck; isMatch[java.lang.String, int]; boolean; com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck; isMultiLine[int]; boolean; com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck; isMatch[java.lang.String, int]; boolean; com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; this>
<not found; get[]; not found; com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; getHeaderLines()>
<com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck; getHeaderLines[]; com.puppycrawl.tools.checkstyle.checks.header.ImmutableList<java.lang.String>; com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; get[]; this>
<com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck; isMultiLine[int]; boolean; com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck; isMultiLine[int]; boolean; com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; this>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck; isMatch[java.lang.String, int]; boolean; null; mHeaderRegexps.get(aHeaderLineNo).matcher(aLine)>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck; isMatch[java.lang.String, int]; boolean; find[]; mHeaderRegexps.get(aHeaderLineNo)>
<java.util.List; get[int]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck; isMatch[java.lang.String, int]; boolean; matcher[java.lang.CharSequence]; mHeaderRegexps>
<java.util.Arrays; binarySearch[int[], int]; int; com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck; isMultiLine[int]; boolean; null; Arrays>
<com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck; getHeaderLines[]; com.puppycrawl.tools.checkstyle.checks.header.ImmutableList<java.lang.String>; com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck; postprocessHeaderLines[]; void; null; this>
<java.util.List; clear[]; void; com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck; postprocessHeaderLines[]; void; null; mHeaderRegexps>
<java.util.List; add[java.util.regex.Pattern]; boolean; com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck; postprocessHeaderLines[]; void; null; mHeaderRegexps>
<com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck; postprocessHeaderLines[]; void; null; Utils>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck; postprocessHeaderLines[]; void; null; mHeaderRegexps>
<java.lang.System; getProperty[java.lang.String, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck; postprocessHeaderLines[]; void; null; System>
<not found; newArrayList[]; not found; com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck; postprocessHeaderLines[]; void; null; Lists>
<not found; copyOf[]; not found; com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck; getHeaderLines[]; com.puppycrawl.tools.checkstyle.checks.header.ImmutableList<java.lang.String>; null; ImmutableList>
<java.nio.charset.Charset; isSupported[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck; setCharset[java.lang.String]; void; null; Charset>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck; setHeaderFile[java.lang.String]; void; null; aFileName.trim()>
<java.lang.String; trim[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck; setHeaderFile[java.lang.String]; void; length[]; aFileName>
<com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck; checkHeaderNotInitialized[]; void; com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck; loadHeaderFile[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck; loadHeader[java.io.Reader]; void; com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck; loadHeaderFile[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Utils; closeQuietly[java.io.Closeable]; void; com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck; loadHeaderFile[]; void; null; Utils>
<java.util.List; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck; checkHeaderNotInitialized[]; void; null; mHeaderLines>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck; setHeader[java.lang.String]; void; null; aHeader.trim()>
<java.lang.String; trim[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck; setHeader[java.lang.String]; void; length[]; aHeader>
<com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck; checkHeaderNotInitialized[]; void; com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck; setHeader[java.lang.String]; void; null; this>
<java.lang.String; replaceAll[java.lang.String, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck; setHeader[java.lang.String]; void; null; aHeader>
<com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck; loadHeader[java.io.Reader]; void; com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck; setHeader[java.lang.String]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Utils; closeQuietly[java.io.Closeable]; void; com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck; setHeader[java.lang.String]; void; null; Utils>
<java.util.List; clear[]; void; com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck; loadHeader[java.io.Reader]; void; null; mHeaderLines>
<java.io.LineNumberReader; readLine[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck; loadHeader[java.io.Reader]; void; null; lnr>
<java.util.List; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck; loadHeader[java.io.Reader]; void; null; mHeaderLines>
<com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck; postprocessHeaderLines[]; void; com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck; loadHeader[java.io.Reader]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck; loadHeaderFile[]; void; com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck; finishLocalSetup[]; void; null; this>
<java.util.List; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck; finishLocalSetup[]; void; null; mHeaderLines>
<com.puppycrawl.tools.checkstyle.api.Configuration; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck; finishLocalSetup[]; void; null; getConfiguration()>
<com.puppycrawl.tools.checkstyle.api.AutomaticBean; getConfiguration[]; com.puppycrawl.tools.checkstyle.api.Configuration; com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck; finishLocalSetup[]; void; getName[]; this>
<com.puppycrawl.tools.checkstyle.checks.AbstractFormatCheck; updateRegexp[java.lang.String, int]; void; com.puppycrawl.tools.checkstyle.checks.AbstractFormatCheck; AbstractFormatCheck[java.lang.String, int]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.AbstractFormatCheck; updateRegexp[java.lang.String, int]; void; com.puppycrawl.tools.checkstyle.checks.AbstractFormatCheck; setFormat[java.lang.String]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.AbstractFormatCheck; updateRegexp[java.lang.String, int]; void; com.puppycrawl.tools.checkstyle.checks.AbstractFormatCheck; setCompileFlags[int]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String, int]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.AbstractFormatCheck; updateRegexp[java.lang.String, int]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.AvoidNestedBlocksCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.AvoidNestedBlocksCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parent>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.AvoidNestedBlocksCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parent.getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.AvoidNestedBlocksCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getType[]; parent>
<not found; getNumberOfChildren[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.AvoidNestedBlocksCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; parent>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.blocks.AvoidNestedBlocksCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.AvoidNestedBlocksCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.AvoidNestedBlocksCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; lcurly>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLastChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; lcurly>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLastChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLastChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; lcurly>
<com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; getNextToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getPreviousSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; nextToken>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLastChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; lcurly>
<com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; getNextToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLastChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLastChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; lcurly>
<com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; getNextToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLastChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; lcurly>
<com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; getNextToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLastChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; lcurly>
<com.puppycrawl.tools.checkstyle.api.TokenTypes; getTokenName[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; TokenTypes>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; rcurly>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; rcurly>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; nextToken>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.AbstractOptionCheck; getAbstractOption[]; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyOption; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; rcurly>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; nextToken>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.AbstractOptionCheck; getAbstractOption[]; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyOption; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; rcurly>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; nextToken>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Utils; whitespaceBefore[int, java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; rcurly>
<com.puppycrawl.tools.checkstyle.api.Check; getLines[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; rcurly>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; lcurly>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; rcurly>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; log[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; getNextToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; parent>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; getNextToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; parent>
<com.puppycrawl.tools.checkstyle.checks.CheckUtils; getFirstNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck; getNextToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; CheckUtils>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.AbstractOptionCheck; getAbstractOption[]; com.puppycrawl.tools.checkstyle.checks.blocks.BlockOption; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; slistAST>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; slistAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; slistAST>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.AbstractOptionCheck; getAbstractOption[]; com.puppycrawl.tools.checkstyle.checks.blocks.BlockOption; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck; hasText[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; slistAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; slistAST>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck; hasText[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aSlistAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck; hasText[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aSlistAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck; hasText[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aSlistAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck; hasText[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; rcurlyAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck; hasText[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; rcurlyAST>
<com.puppycrawl.tools.checkstyle.api.Check; getLines[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck; hasText[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; this>
<java.lang.String; substring[int, int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck; hasText[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; lines[slistLineNo - 1]>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck; hasText[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; txt.trim()>
<java.lang.String; trim[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck; hasText[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; length[]; txt>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck; hasText[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; lines[slistLineNo - 1].substring(slistColNo + 1).trim()>
<java.lang.String; trim[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck; hasText[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; length[]; lines[slistLineNo - 1].substring(slistColNo + 1)>
<java.lang.String; substring[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck; hasText[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; trim[]; lines[slistLineNo - 1]>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck; hasText[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; lines[rcurlyLineNo - 1].substring(0,rcurlyColNo).trim()>
<java.lang.String; trim[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck; hasText[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; length[]; lines[rcurlyLineNo - 1].substring(0,rcurlyColNo)>
<java.lang.String; substring[int, int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck; hasText[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; trim[]; lines[rcurlyLineNo - 1]>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck; hasText[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; lines[i].trim()>
<java.lang.String; trim[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck; hasText[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; length[]; lines[i]>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; skipAnnotationOnlyLines[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; skipAnnotationOnlyLines[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; objBlock>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; candidate>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; skipAnnotationOnlyLines[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; findLastAnnotation[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; skipAnnotationOnlyLines[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; skipAnnotationOnlyLines[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; lastAnnot>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; skipAnnotationOnlyLines[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; lastAnnot>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; skipAnnotationOnlyLines[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; modifiers>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; skipAnnotationOnlyLines[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; tokenAfterLast>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; skipAnnotationOnlyLines[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; lastAnnot>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; skipAnnotationOnlyLines[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; lastAnnot>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getPreviousSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; skipAnnotationOnlyLines[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; lastAnnot>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; skipAnnotationOnlyLines[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; lastAnnot.getPreviousSibling()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getPreviousSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; skipAnnotationOnlyLines[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; lastAnnot>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getPreviousSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; skipAnnotationOnlyLines[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; lastAnnot>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; findLastAnnotation[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; aModifiers>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; findLastAnnotation[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; aAnnot>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; findLastAnnotation[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; aAnnot.getNextSibling()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; findLastAnnotation[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; getType[]; aAnnot>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; findLastAnnotation[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; aAnnot>
<com.puppycrawl.tools.checkstyle.api.Check; getLines[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aBrace>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aBrace>
<com.puppycrawl.tools.checkstyle.api.Utils; lengthMinusTrailingWhitespace[java.lang.String]; int; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.api.Check; getLines[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aBrace>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; braceLine>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aBrace>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; braceLine>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aBrace>
<com.puppycrawl.tools.checkstyle.checks.AbstractOptionCheck; getAbstractOption[]; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyOption; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Utils; whitespaceBefore[int, java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aBrace>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aBrace>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aBrace>
<com.puppycrawl.tools.checkstyle.checks.AbstractOptionCheck; getAbstractOption[]; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyOption; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Utils; whitespaceBefore[int, java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aBrace>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aBrace>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aBrace>
<com.puppycrawl.tools.checkstyle.checks.AbstractOptionCheck; getAbstractOption[]; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyOption; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aStartToken>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aBrace>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aStartToken>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aBrace>
<com.puppycrawl.tools.checkstyle.api.Utils; whitespaceBefore[int, java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aBrace>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aBrace>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aBrace>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aBrace>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aBrace>
<com.puppycrawl.tools.checkstyle.api.Utils; whitespaceBefore[int, java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aBrace>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aBrace>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck; verifyBrace[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aBrace>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; newArrayList[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; Lists>
<java.util.List; clear[]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mCharacters>
<com.puppycrawl.tools.checkstyle.checks.AbstractFormatCheck; getRegexp[]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; getLines[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; sb>
<java.lang.StringBuffer; append[char]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; sb>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; lines[i]>
<java.util.List; add[java.lang.Integer[]]; boolean; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mCharacters>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; pattern>
<java.lang.StringBuffer; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; sb>
<com.puppycrawl.tools.checkstyle.checks.RegexpCheck; findMatch[]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; findMatch[]; void; null; mMatcher>
<com.puppycrawl.tools.checkstyle.checks.RegexpCheck; logMessage[int]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; findMatch[]; void; null; this>
<java.lang.Integer; intValue[]; int; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; findMatch[]; void; null; (mCharacters.get(mMatcher.start()))[0]>
<java.util.List; get[int]; java.lang.Integer[]; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; findMatch[]; void; intValue[]; mCharacters>
<java.util.regex.Matcher; start[]; int; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; findMatch[]; void; null; mMatcher>
<java.lang.Integer; intValue[]; int; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; findMatch[]; void; null; (mCharacters.get(mMatcher.start()))[1]>
<java.util.List; get[int]; java.lang.Integer[]; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; findMatch[]; void; intValue[]; mCharacters>
<java.util.regex.Matcher; start[]; int; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; findMatch[]; void; null; mMatcher>
<java.lang.Integer; intValue[]; int; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; findMatch[]; void; null; (mCharacters.get(mMatcher.end() - 1))[0]>
<java.util.List; get[int]; java.lang.Integer[]; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; findMatch[]; void; intValue[]; mCharacters>
<java.util.regex.Matcher; end[]; int; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; findMatch[]; void; null; mMatcher>
<java.lang.Integer; intValue[]; int; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; findMatch[]; void; null; (mCharacters.get(mMatcher.end() - 1))[1]>
<java.util.List; get[int]; java.lang.Integer[]; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; findMatch[]; void; intValue[]; mCharacters>
<java.util.regex.Matcher; end[]; int; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; findMatch[]; void; null; mMatcher>
<com.puppycrawl.tools.checkstyle.api.Check; getFileContents[]; com.puppycrawl.tools.checkstyle.api.FileContents; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; findMatch[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FileContents; hasIntersectionWithComment[int, int, int, int]; boolean; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; findMatch[]; void; null; theFileContents>
<com.puppycrawl.tools.checkstyle.checks.RegexpCheck; logMessage[int]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; findMatch[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.RegexpCheck; findMatch[]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; findMatch[]; void; null; this>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; logMessage[int]; void; null; "">
<com.puppycrawl.tools.checkstyle.checks.RegexpCheck; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; logMessage[int]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.AbstractFormatCheck; getFormat[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; logMessage[int]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; logMessage[int]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; logMessage[int]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; logMessage[int]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getParent[]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler; suggestedChildLevel[com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getParent[]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler; suggestedChildLevel[com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getParent[]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler; suggestedChildLevel[com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; suggestedChildLevel[com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler; suggestedChildLevel[com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; getParent()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getParent[]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler; suggestedChildLevel[com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; suggestedChildLevel[com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler; getListChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler; getLCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler; getRCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler; getRCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler; hasBlockParent[]; boolean; null; getMainAst().getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler; hasBlockParent[]; boolean; getType[]; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler; hasBlockParent[]; boolean; getParent[]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler; hasBlockParent[]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.SlistHandler; checkIndentation[]; void; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.ClassDefHandler; ClassDefHandler[com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; void; null; aAst>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.ClassDefHandler; ClassDefHandler[com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; void; null; aAst>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ClassDefHandler; getLCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; getMainAst().findFirstToken(TokenTypes.OBJBLOCK)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ClassDefHandler; getLCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ClassDefHandler; getLCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ClassDefHandler; getRCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; getMainAst().findFirstToken(TokenTypes.OBJBLOCK)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ClassDefHandler; getRCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ClassDefHandler; getRCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ClassDefHandler; getListChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ClassDefHandler; getListChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkModifiers[]; void; com.puppycrawl.tools.checkstyle.checks.indentation.ClassDefHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ClassDefHandler; checkIndentation[]; void; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ClassDefHandler; checkIndentation[]; void; findFirstToken[int]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLineStart[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ClassDefHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; accept[int]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.ClassDefHandler; checkIndentation[]; void; null; getLevel()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.ClassDefHandler; checkIndentation[]; void; accept[int]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; logError[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, int]; void; com.puppycrawl.tools.checkstyle.checks.indentation.ClassDefHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.LineSet; addLineAndCol[int, int]; void; com.puppycrawl.tools.checkstyle.checks.indentation.ClassDefHandler; checkIndentation[]; void; null; lines>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ClassDefHandler; checkIndentation[]; void; null; ident>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ClassDefHandler; checkIndentation[]; void; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ClassDefHandler; checkIndentation[]; void; findFirstToken[int]; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ClassDefHandler; checkIndentation[]; void; null; impl>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; findSubtreeLines[com.puppycrawl.tools.checkstyle.checks.indentation.LineSet, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; com.puppycrawl.tools.checkstyle.checks.indentation.ClassDefHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ClassDefHandler; checkIndentation[]; void; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ClassDefHandler; checkIndentation[]; void; findFirstToken[int]; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ClassDefHandler; checkIndentation[]; void; null; ext>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; findSubtreeLines[com.puppycrawl.tools.checkstyle.checks.indentation.LineSet, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; com.puppycrawl.tools.checkstyle.checks.indentation.ClassDefHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkLinesIndent[int, int, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel]; void; com.puppycrawl.tools.checkstyle.checks.indentation.ClassDefHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ClassDefHandler; checkIndentation[]; void; null; ident>
<com.puppycrawl.tools.checkstyle.checks.indentation.LineSet; lastLine[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ClassDefHandler; checkIndentation[]; void; null; lines>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.ClassDefHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MemberDefHandler; checkIdent[]; void; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MemberDefHandler; checkIdent[]; void; findFirstToken[int]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; expandedTabsColumnNo[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; com.puppycrawl.tools.checkstyle.checks.indentation.MemberDefHandler; checkIdent[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; startsLine[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.MemberDefHandler; checkIdent[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; accept[int]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.MemberDefHandler; checkIdent[]; void; null; getLevel()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.MemberDefHandler; checkIdent[]; void; accept[int]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; logError[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, int]; void; com.puppycrawl.tools.checkstyle.checks.indentation.MemberDefHandler; checkIdent[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MemberDefHandler; checkType[]; void; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MemberDefHandler; checkType[]; void; findFirstToken[int]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getFirstToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MemberDefHandler; checkType[]; void; null; ExpressionHandler>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; expandedTabsColumnNo[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; com.puppycrawl.tools.checkstyle.checks.indentation.MemberDefHandler; checkType[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; startsLine[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.MemberDefHandler; checkType[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; accept[int]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.MemberDefHandler; checkType[]; void; null; getLevel()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.MemberDefHandler; checkType[]; void; accept[int]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; logError[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, int]; void; com.puppycrawl.tools.checkstyle.checks.indentation.MemberDefHandler; checkType[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkModifiers[]; void; com.puppycrawl.tools.checkstyle.checks.indentation.MemberDefHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.MemberDefHandler; checkType[]; void; com.puppycrawl.tools.checkstyle.checks.indentation.MemberDefHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.MemberDefHandler; checkIdent[]; void; com.puppycrawl.tools.checkstyle.checks.indentation.MemberDefHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.MemberDefHandler; suggestedChildLevel[com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; MethodCallHandler[com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getParent[]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getParent[]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; areOnSameLine[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; container>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; container>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; main>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; dot>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; dot>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; target>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; target>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; dot1>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; dot1>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; target1>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; container>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; container>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getBasicOffset[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getParent[]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getParent[]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; p>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; suggestedChildLevel[com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; p>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; findSubtreeLines[com.puppycrawl.tools.checkstyle.checks.indentation.LineSet, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; getFirstChild[]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.LineSet; firstLineCol[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; lines>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLineStart[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; getFirstAst[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; getFirstAst[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; aAst>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; getFirstAst[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; ast>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; getFirstAst[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; ast>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; suggestedChildLevel[com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; suggestedChildLevel[com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; getFirstChild[]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLineStart[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; suggestedChildLevel[com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; areOnSameLine[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; suggestedChildLevel[com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; suggestedChildLevel[com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; aChild.getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; suggestedChildLevel[com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; getFirstChild[]; aChild>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; suggestedChildLevel[com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; suggestedChildLevel[com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; getFirstChild[]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getBasicOffset[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; suggestedChildLevel[com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; checkIndentation[]; void; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; checkIndentation[]; void; getFirstChild[]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkExpressionSubtree[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, boolean]; void; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; checkIndentation[]; void; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; checkIndentation[]; void; findFirstToken[int]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkLParen[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; checkIndentation[]; void; null; rparen>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; checkIndentation[]; void; null; lparen>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkExpressionSubtree[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, boolean]; void; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; checkIndentation[]; void; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; checkIndentation[]; void; findFirstToken[int]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getBasicOffset[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkRParen[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FastStack; newInstance[]; com.puppycrawl.tools.checkstyle.api.FastStack<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler>; com.puppycrawl.tools.checkstyle.checks.indentation.MethodCallHandler; shouldIncreaseIndent[]; boolean; null; FastStack>
<com.puppycrawl.tools.checkstyle.api.Check; getTabWidth[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck; getIndentationTabWidth[]; int; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; getHandledTypes[]; int[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck; getDefaultTokens[]; int[]; null; mHandlerFactory>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; clearCreatedHandlers[]; void; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mHandlerFactory>
<com.puppycrawl.tools.checkstyle.api.FastStack; clear[]; void; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mHandlers>
<com.puppycrawl.tools.checkstyle.api.FastStack; push[com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; void; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mHandlers>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; isLocalVariableDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ScopeUtils>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; getHandler[com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mHandlerFactory>
<com.puppycrawl.tools.checkstyle.api.FastStack; peek[]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mHandlers>
<com.puppycrawl.tools.checkstyle.api.FastStack; push[com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; void; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mHandlers>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkIndentation[]; void; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; handler>
<java.lang.Throwable; printStackTrace[]; void; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; npe>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; isLocalVariableDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ScopeUtils>
<com.puppycrawl.tools.checkstyle.api.FastStack; pop[]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mHandlers>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.DoWhileHandler; checkCondExpr[]; void; null; getMainAst().findFirstToken(TokenTypes.LPAREN)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.DoWhileHandler; checkCondExpr[]; void; getNextSibling[]; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.DoWhileHandler; checkCondExpr[]; void; findFirstToken[int]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkExpressionSubtree[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, boolean]; void; com.puppycrawl.tools.checkstyle.checks.indentation.DoWhileHandler; checkCondExpr[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.DoWhileHandler; checkCondExpr[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.DoWhileHandler; checkCondExpr[]; void; com.puppycrawl.tools.checkstyle.checks.indentation.DoWhileHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.CatchHandler; checkCondExpr[]; void; null; getMainAst().findFirstToken(TokenTypes.LPAREN)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.CatchHandler; checkCondExpr[]; void; getNextSibling[]; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.CatchHandler; checkCondExpr[]; void; findFirstToken[int]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkExpressionSubtree[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, boolean]; void; com.puppycrawl.tools.checkstyle.checks.indentation.CatchHandler; checkCondExpr[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.CatchHandler; checkCondExpr[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.CatchHandler; checkCondExpr[]; void; com.puppycrawl.tools.checkstyle.checks.indentation.CatchHandler; checkIndentation[]; void; null; this>
<not found; getLog[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.CatchHandler; checkIndentation[]; void; null; LogFactory>
<not found; newHashMap[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.CatchHandler; checkIndentation[]; void; null; Maps>
<java.lang.Class; getConstructor[java.lang.Class<?>[]]; java.lang.reflect.Constructor<>; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; null; aHandlerClass>
<java.util.Map; put[java.lang.Integer, java.lang.reflect.Constructor<?>]; java.lang.reflect.Constructor<?>; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; null; mTypeHandlers>
<not found; debug[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; null; LOG>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; HandlerFactory[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; HandlerFactory[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; HandlerFactory[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; HandlerFactory[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; HandlerFactory[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; HandlerFactory[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; HandlerFactory[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; HandlerFactory[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; HandlerFactory[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; HandlerFactory[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; HandlerFactory[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; HandlerFactory[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; HandlerFactory[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; HandlerFactory[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; HandlerFactory[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; HandlerFactory[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; HandlerFactory[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; HandlerFactory[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; HandlerFactory[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; HandlerFactory[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; HandlerFactory[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; HandlerFactory[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; HandlerFactory[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; HandlerFactory[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; HandlerFactory[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; HandlerFactory[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; HandlerFactory[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; HandlerFactory[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; HandlerFactory[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; HandlerFactory[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; HandlerFactory[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; HandlerFactory[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; HandlerFactory[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; HandlerFactory[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; HandlerFactory[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; HandlerFactory[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; HandlerFactory[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; HandlerFactory[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; HandlerFactory[]; void; null; this>
<java.util.Map; keySet[]; java.util.Set<java.lang.Integer>; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; isHandledType[int]; boolean; null; mTypeHandlers>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; isHandledType[int]; boolean; null; typeSet>
<java.util.Map; keySet[]; java.util.Set<java.lang.Integer>; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; getHandledTypes[]; int[]; null; mTypeHandlers>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; getHandledTypes[]; int[]; null; typeSet>
<java.util.Map; get[java.lang.Object]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; getHandler[com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; null; mCreatedHandlers>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; getHandler[com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; null; aAst>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; createMethodCallHandler[com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; getHandler[com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; null; this>
<java.util.Map; get[java.lang.Object]; java.lang.reflect.Constructor<?>; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; getHandler[com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; null; mTypeHandlers>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; getHandler[com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; null; aAst>
<java.lang.reflect.Constructor; newInstance[java.lang.Object[]]; ; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; getHandler[com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; null; handlerCtor>
<not found; debug[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; getHandler[com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; null; LOG>
<not found; debug[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; getHandler[com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; null; LOG>
<not found; debug[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; getHandler[com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; null; LOG>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; getHandler[com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; null; aAst>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; createMethodCallHandler[com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; null; aAst>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; createMethodCallHandler[com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; null; ast>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; createMethodCallHandler[com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; null; ast>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; isHandledType[int]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; createMethodCallHandler[com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; createMethodCallHandler[com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; null; ast>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; getHandler[com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; createMethodCallHandler[com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; null; this>
<java.util.Map; put[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; createMethodCallHandler[com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; null; mCreatedHandlers>
<java.util.Map; clear[]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; clearCreatedHandlers[]; void; null; mCreatedHandlers>
<not found; newHashMap[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; clearCreatedHandlers[]; void; null; Maps>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; expandedTabsColumnNo[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; com.puppycrawl.tools.checkstyle.checks.indentation.PackageDefHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.PackageDefHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; accept[int]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.PackageDefHandler; checkIndentation[]; void; null; getLevel()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.PackageDefHandler; checkIndentation[]; void; accept[int]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; logError[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, int]; void; com.puppycrawl.tools.checkstyle.checks.indentation.PackageDefHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.PackageDefHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkLinesIndent[int, int, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel]; void; com.puppycrawl.tools.checkstyle.checks.indentation.PackageDefHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.PackageDefHandler; checkIndentation[]; void; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.PackageDefHandler; checkIndentation[]; void; getLineNo[]; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.PackageDefHandler; checkIndentation[]; void; null; getMainAst().findFirstToken(TokenTypes.SEMI)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.PackageDefHandler; checkIndentation[]; void; getLineNo[]; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.PackageDefHandler; checkIndentation[]; void; findFirstToken[int]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.PackageDefHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.IfHandler; suggestedChildLevel[com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.IfHandler; isIfAfterElse[]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.IfHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.IfHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; getParent()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getParent[]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; com.puppycrawl.tools.checkstyle.checks.indentation.IfHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; getLevel[]; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.IfHandler; isIfAfterElse[]; boolean; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.IfHandler; isIfAfterElse[]; boolean; getParent[]; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IfHandler; isIfAfterElse[]; boolean; null; parent>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.IfHandler; isIfAfterElse[]; boolean; null; parent>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.IfHandler; isIfAfterElse[]; boolean; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.IfHandler; isIfAfterElse[]; boolean; getLineNo[]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.IfHandler; isIfAfterElse[]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.IfHandler; checkToplevelToken[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.IfHandler; checkCondExpr[]; void; null; getMainAst().findFirstToken(TokenTypes.LPAREN)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.IfHandler; checkCondExpr[]; void; getNextSibling[]; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.IfHandler; checkCondExpr[]; void; findFirstToken[int]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.IfHandler; checkCondExpr[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getBasicOffset[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.IfHandler; checkCondExpr[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkExpressionSubtree[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, boolean]; void; com.puppycrawl.tools.checkstyle.checks.indentation.IfHandler; checkCondExpr[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.IfHandler; checkCondExpr[]; void; com.puppycrawl.tools.checkstyle.checks.indentation.IfHandler; checkIndentation[]; void; null; this>
<not found; newTreeSet[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IfHandler; checkIndentation[]; void; null; Sets>
<java.util.Set; add[java.lang.Integer]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; IndentLevel[int]; void; null; mLevels>
<java.util.Set; add[java.lang.Integer]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; IndentLevel[com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, int]; void; null; mLevels>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; isMultiLevel[]; boolean; null; mLevels>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; accept[int]; boolean; null; mLevels>
<java.lang.Integer; intValue[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; gt[int]; boolean; null; (mLevels.first())>
<java.util.SortedSet; first[]; java.lang.Integer; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; gt[int]; boolean; intValue[]; mLevels>
<java.util.Set; add[java.lang.Integer]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; addAcceptedIndent[int]; void; null; mLevels>
<java.util.Set; addAll[java.util.Collection<? extends java.lang.Integer>]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; addAcceptedIndent[com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel]; void; null; mLevels>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; toString[]; java.lang.String; null; mLevels>
<java.lang.Integer; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; toString[]; java.lang.String; null; mLevels.first()>
<java.util.SortedSet; first[]; java.lang.Integer; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; toString[]; java.lang.String; toString[]; mLevels>
<java.lang.Object; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; toString[]; java.lang.String; null; mLevels>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.ForHandler; checkForParams[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getBasicOffset[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ForHandler; checkForParams[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ForHandler; checkForParams[]; void; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ForHandler; checkForParams[]; void; findFirstToken[int]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkExpressionSubtree[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, boolean]; void; com.puppycrawl.tools.checkstyle.checks.indentation.ForHandler; checkForParams[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ForHandler; checkForParams[]; void; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ForHandler; checkForParams[]; void; findFirstToken[int]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkExpressionSubtree[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, boolean]; void; com.puppycrawl.tools.checkstyle.checks.indentation.ForHandler; checkForParams[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ForHandler; checkForParams[]; void; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ForHandler; checkForParams[]; void; findFirstToken[int]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkExpressionSubtree[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, boolean]; void; com.puppycrawl.tools.checkstyle.checks.indentation.ForHandler; checkForParams[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ForHandler; checkForParams[]; void; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ForHandler; checkForParams[]; void; findFirstToken[int]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkExpressionSubtree[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, boolean]; void; com.puppycrawl.tools.checkstyle.checks.indentation.ForHandler; checkForParams[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ForHandler; checkForParams[]; void; com.puppycrawl.tools.checkstyle.checks.indentation.ForHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.ForHandler; suggestedChildLevel[com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.TryHandler; suggestedChildLevel[com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; suggestedChildLevel[com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; mParent>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; suggestedChildLevel[com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getBasicOffset[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; suggestedChildLevel[com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; logError[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, int, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel]; void; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; logError[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, int]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; logError[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, int]; void; null; this>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; logError[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, int, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel]; void; null; "">
<com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck; indentationLog[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; logError[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, int, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel]; void; null; mIndentCheck>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; logError[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, int, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel]; void; null; aAst>
<com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck; indentationLog[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; logChildError[int, int, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel]; void; null; mIndentCheck>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLineStart[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; startsLine[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; expandedTabsColumnNo[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; startsLine[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; areOnSameLine[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAst1>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; areOnSameLine[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAst2>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getFirstToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getFirstToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getFirstToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getFirstToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; toTest>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getFirstToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; first>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getFirstToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; toTest>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getFirstToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; first>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getFirstToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; toTest>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getFirstToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; first>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getFirstToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; child>
<com.puppycrawl.tools.checkstyle.api.Check; getLines[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLineStart[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; null; mIndentCheck>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLineStart[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; null; aAst>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLineStart[java.lang.String]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLineStart[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkSingleLine[int, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel]; void; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkLinesIndent[int, int, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getBasicOffset[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkLinesIndent[int, int, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkSingleLine[int, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel]; void; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkLinesIndent[int, int, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.LineSet; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkLinesIndent[com.puppycrawl.tools.checkstyle.checks.indentation.LineSet, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, int]; void; null; aLines>
<com.puppycrawl.tools.checkstyle.checks.indentation.LineSet; firstLine[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkLinesIndent[com.puppycrawl.tools.checkstyle.checks.indentation.LineSet, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, int]; void; null; aLines>
<com.puppycrawl.tools.checkstyle.checks.indentation.LineSet; lastLine[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkLinesIndent[com.puppycrawl.tools.checkstyle.checks.indentation.LineSet, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, int]; void; null; aLines>
<com.puppycrawl.tools.checkstyle.checks.indentation.LineSet; firstLineCol[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkLinesIndent[com.puppycrawl.tools.checkstyle.checks.indentation.LineSet, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, int]; void; null; aLines>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLineStart[java.lang.String]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkLinesIndent[com.puppycrawl.tools.checkstyle.checks.indentation.LineSet, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, int]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; getLines[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkLinesIndent[com.puppycrawl.tools.checkstyle.checks.indentation.LineSet, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, int]; void; null; mIndentCheck>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkSingleLine[int, int, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean]; void; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkLinesIndent[com.puppycrawl.tools.checkstyle.checks.indentation.LineSet, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, int]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkLinesIndent[com.puppycrawl.tools.checkstyle.checks.indentation.LineSet, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, int]; void; null; mMainAst>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; shouldIncreaseIndent[]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkLinesIndent[com.puppycrawl.tools.checkstyle.checks.indentation.LineSet, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, int]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getBasicOffset[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkLinesIndent[com.puppycrawl.tools.checkstyle.checks.indentation.LineSet, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, int]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.LineSet; getStartColumn[java.lang.Integer]; java.lang.Integer; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkLinesIndent[com.puppycrawl.tools.checkstyle.checks.indentation.LineSet, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, int]; void; null; aLines>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkSingleLine[int, int, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean]; void; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkLinesIndent[com.puppycrawl.tools.checkstyle.checks.indentation.LineSet, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, int]; void; null; this>
<java.lang.Integer; intValue[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkLinesIndent[com.puppycrawl.tools.checkstyle.checks.indentation.LineSet, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, int]; void; null; col>
<com.puppycrawl.tools.checkstyle.api.Check; getLines[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkSingleLine[int, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel]; void; null; mIndentCheck>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLineStart[java.lang.String]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkSingleLine[int, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; gt[int]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkSingleLine[int, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel]; void; null; aIndentLevel>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; logChildError[int, int, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel]; void; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkSingleLine[int, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; getLines[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkSingleLine[int, int, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean]; void; null; mIndentCheck>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLineStart[java.lang.String]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkSingleLine[int, int, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; accept[int]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkSingleLine[int, int, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean]; void; null; aIndentLevel>
<com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; gt[int]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkSingleLine[int, int, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean]; void; null; aIndentLevel>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; logChildError[int, int, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel]; void; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkSingleLine[int, int, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean]; void; null; this>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLineStart[java.lang.String]; int; null; aLine>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLineStart[java.lang.String]; int; null; aLine>
<java.lang.Character; isWhitespace[char]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLineStart[java.lang.String]; int; null; Character>
<com.puppycrawl.tools.checkstyle.api.Utils; lengthExpandedTabs[java.lang.String, int, int]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLineStart[java.lang.String]; int; null; Utils>
<com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck; getIndentationTabWidth[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLineStart[java.lang.String]; int; null; mIndentCheck>
<java.util.Arrays; sort[int[]]; void; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkChildren[com.puppycrawl.tools.checkstyle.api.DetailAST, int[], com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, boolean]; void; null; Arrays>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkChildren[com.puppycrawl.tools.checkstyle.api.DetailAST, int[], com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, boolean]; void; null; aParent>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkChildren[com.puppycrawl.tools.checkstyle.api.DetailAST, int[], com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, boolean]; void; null; child>
<java.util.Arrays; binarySearch[int[], int]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkChildren[com.puppycrawl.tools.checkstyle.api.DetailAST, int[], com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, boolean]; void; null; Arrays>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkChildren[com.puppycrawl.tools.checkstyle.api.DetailAST, int[], com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, boolean]; void; null; child>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkExpressionSubtree[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, boolean]; void; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkChildren[com.puppycrawl.tools.checkstyle.api.DetailAST, int[], com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, boolean]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getFirstLine[int, com.puppycrawl.tools.checkstyle.api.DetailAST]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkExpressionSubtree[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, boolean]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.LineSet; addLineAndCol[int, int]; void; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkExpressionSubtree[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, boolean]; void; null; subtreeLines>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLineStart[java.lang.String]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkExpressionSubtree[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, boolean]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; getLines[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkExpressionSubtree[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, boolean]; void; null; mIndentCheck>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; findSubtreeLines[com.puppycrawl.tools.checkstyle.checks.indentation.LineSet, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkExpressionSubtree[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, boolean]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkLinesIndent[com.puppycrawl.tools.checkstyle.checks.indentation.LineSet, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, int]; void; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkExpressionSubtree[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, boolean]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getFirstLine[int, com.puppycrawl.tools.checkstyle.api.DetailAST]; int; null; aTree>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getFirstLine[int, com.puppycrawl.tools.checkstyle.api.DetailAST]; int; null; aTree>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getFirstLine[int, com.puppycrawl.tools.checkstyle.api.DetailAST]; int; null; node>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getFirstLine[int, com.puppycrawl.tools.checkstyle.api.DetailAST]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getFirstLine[int, com.puppycrawl.tools.checkstyle.api.DetailAST]; int; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; getLines[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; expandedTabsColumnNo[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; null; mIndentCheck>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; expandedTabsColumnNo[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; null; aAST>
<com.puppycrawl.tools.checkstyle.api.Utils; lengthExpandedTabs[java.lang.String, int, int]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; expandedTabsColumnNo[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; null; Utils>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; expandedTabsColumnNo[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck; getIndentationTabWidth[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; expandedTabsColumnNo[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; null; mIndentCheck>
<com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; isHandledType[int]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; findSubtreeLines[com.puppycrawl.tools.checkstyle.checks.indentation.LineSet, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; getIndentCheck().getHandlerFactory()>
<com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck; getHandlerFactory[]; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; findSubtreeLines[com.puppycrawl.tools.checkstyle.checks.indentation.LineSet, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; isHandledType[int]; getIndentCheck()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getIndentCheck[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; findSubtreeLines[com.puppycrawl.tools.checkstyle.checks.indentation.LineSet, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; getHandlerFactory[]; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; findSubtreeLines[com.puppycrawl.tools.checkstyle.checks.indentation.LineSet, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; aTree>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; findSubtreeLines[com.puppycrawl.tools.checkstyle.checks.indentation.LineSet, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; aTree>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; findSubtreeLines[com.puppycrawl.tools.checkstyle.checks.indentation.LineSet, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; aTree>
<com.puppycrawl.tools.checkstyle.checks.indentation.LineSet; getStartColumn[java.lang.Integer]; java.lang.Integer; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; findSubtreeLines[com.puppycrawl.tools.checkstyle.checks.indentation.LineSet, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; aLines>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; expandedTabsColumnNo[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; findSubtreeLines[com.puppycrawl.tools.checkstyle.checks.indentation.LineSet, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; this>
<java.lang.Integer; intValue[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; findSubtreeLines[com.puppycrawl.tools.checkstyle.checks.indentation.LineSet, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; colNum>
<com.puppycrawl.tools.checkstyle.checks.indentation.LineSet; addLineAndCol[int, int]; void; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; findSubtreeLines[com.puppycrawl.tools.checkstyle.checks.indentation.LineSet, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; aLines>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; findSubtreeLines[com.puppycrawl.tools.checkstyle.checks.indentation.LineSet, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; aTree>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; findSubtreeLines[com.puppycrawl.tools.checkstyle.checks.indentation.LineSet, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; node>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; findSubtreeLines[com.puppycrawl.tools.checkstyle.checks.indentation.LineSet, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; findSubtreeLines[com.puppycrawl.tools.checkstyle.checks.indentation.LineSet, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkModifiers[]; void; null; mMainAst>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkModifiers[]; void; null; modifiers>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkModifiers[]; void; null; modifier>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; startsLine[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkModifiers[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; accept[int]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkModifiers[]; void; null; getLevel()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkModifiers[]; void; accept[int]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; expandedTabsColumnNo[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkModifiers[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; logError[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, int]; void; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkModifiers[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; expandedTabsColumnNo[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkModifiers[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck; getBasicOffset[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getBasicOffset[]; int; null; getIndentCheck()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getIndentCheck[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getBasicOffset[]; int; getBasicOffset[]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck; getBraceAdjustement[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getBraceAdjustement[]; int; null; getIndentCheck()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getIndentCheck[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getBraceAdjustement[]; int; getBraceAdjustement[]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; expandedTabsColumnNo[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkRParen[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; accept[int]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkRParen[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; getLevel()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkRParen[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; accept[int]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; startsLine[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkRParen[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; expandedTabsColumnNo[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkRParen[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; logError[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, int]; void; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkRParen[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; accept[int]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkLParen[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; getLevel()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkLParen[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; accept[int]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; expandedTabsColumnNo[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkLParen[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; startsLine[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkLParen[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; logError[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, int]; void; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkLParen[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; expandedTabsColumnNo[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkLParen[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.SwitchHandler; getLCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.SwitchHandler; getLCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.SwitchHandler; getRCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.SwitchHandler; getRCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkExpressionSubtree[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, boolean]; void; com.puppycrawl.tools.checkstyle.checks.indentation.SwitchHandler; checkSwitchExpr[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.SwitchHandler; checkSwitchExpr[]; void; null; getMainAst().findFirstToken(TokenTypes.LPAREN)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.SwitchHandler; checkSwitchExpr[]; void; getNextSibling[]; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.SwitchHandler; checkSwitchExpr[]; void; findFirstToken[int]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.SwitchHandler; checkSwitchExpr[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.SwitchHandler; checkSwitchExpr[]; void; com.puppycrawl.tools.checkstyle.checks.indentation.SwitchHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.CaseHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; getParent()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getParent[]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; com.puppycrawl.tools.checkstyle.checks.indentation.CaseHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; getLevel[]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck; getCaseIndent[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.CaseHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; getIndentCheck()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getIndentCheck[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck; com.puppycrawl.tools.checkstyle.checks.indentation.CaseHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; getCaseIndent[]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkChildren[com.puppycrawl.tools.checkstyle.api.DetailAST, int[], com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, boolean]; void; com.puppycrawl.tools.checkstyle.checks.indentation.CaseHandler; checkCase[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.CaseHandler; checkCase[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.CaseHandler; checkCase[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.CaseHandler; suggestedChildLevel[com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.CaseHandler; checkCase[]; void; com.puppycrawl.tools.checkstyle.checks.indentation.CaseHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getChildrenExpectedLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.AssignHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.AssignHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; startsLine[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.AssignHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; accept[int]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.AssignHandler; checkIndentation[]; void; null; expectedLevel>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; expandedTabsColumnNo[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; com.puppycrawl.tools.checkstyle.checks.indentation.AssignHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; logError[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, int, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel]; void; com.puppycrawl.tools.checkstyle.checks.indentation.AssignHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; expandedTabsColumnNo[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; com.puppycrawl.tools.checkstyle.checks.indentation.AssignHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.AssignHandler; checkIndentation[]; void; null; assign>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.AssignHandler; checkIndentation[]; void; null; assign>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.AssignHandler; checkIndentation[]; void; null; parent>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.AssignHandler; checkIndentation[]; void; null; child>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.AssignHandler; checkIndentation[]; void; null; parent>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.AssignHandler; checkIndentation[]; void; null; assign>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkExpressionSubtree[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, boolean]; void; com.puppycrawl.tools.checkstyle.checks.indentation.AssignHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.AssignHandler; suggestedChildLevel[com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.AssignHandler; suggestedChildLevel[com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; aChild>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.AssignHandler; suggestedChildLevel[com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; assign>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.AssignHandler; suggestedChildLevel[com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; startsLine[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.AssignHandler; suggestedChildLevel[com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; expandedTabsColumnNo[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; com.puppycrawl.tools.checkstyle.checks.indentation.AssignHandler; suggestedChildLevel[com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getBasicOffset[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.LabelHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkChildren[com.puppycrawl.tools.checkstyle.api.DetailAST, int[], com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, boolean]; void; com.puppycrawl.tools.checkstyle.checks.indentation.LabelHandler; checkLabel[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.LabelHandler; checkLabel[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.LabelHandler; checkLabel[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.LabelHandler; checkLabel[]; void; com.puppycrawl.tools.checkstyle.checks.indentation.LabelHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.LabelHandler; checkIndentation[]; void; null; getMainAst().getFirstChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.LabelHandler; checkIndentation[]; void; getNextSibling[]; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.LabelHandler; checkIndentation[]; void; getFirstChild[]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.LabelHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getBasicOffset[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.LabelHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkExpressionSubtree[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, boolean]; void; com.puppycrawl.tools.checkstyle.checks.indentation.LabelHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ObjectBlockHandler; getLCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ObjectBlockHandler; getLCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ObjectBlockHandler; getRCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ObjectBlockHandler; getRCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ObjectBlockHandler; getListChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ObjectBlockHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ObjectBlockHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; getParent[]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.ObjectBlockHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; getParent()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getParent[]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; com.puppycrawl.tools.checkstyle.checks.indentation.ObjectBlockHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; getLevel[]; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.ObjectBlockHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; parentAST>
<com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; addAcceptedIndent[com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel]; void; com.puppycrawl.tools.checkstyle.checks.indentation.ObjectBlockHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; indent>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.ObjectBlockHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; parentAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ObjectBlockHandler; checkIndentation[]; void; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ObjectBlockHandler; checkIndentation[]; void; getParent[]; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.ObjectBlockHandler; checkIndentation[]; void; null; parentAST>
<not found; newTreeMap[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.ObjectBlockHandler; checkIndentation[]; void; null; Maps>
<java.util.Map; get[java.lang.Object]; java.lang.Integer; com.puppycrawl.tools.checkstyle.checks.indentation.LineSet; getStartColumn[java.lang.Integer]; java.lang.Integer; null; mLines>
<java.util.SortedMap; firstKey[]; java.lang.Integer; com.puppycrawl.tools.checkstyle.checks.indentation.LineSet; firstLineCol[]; int; null; mLines>
<java.lang.Integer; intValue[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.LineSet; firstLineCol[]; int; null; (mLines.get(firstLineKey))>
<java.util.Map; get[java.lang.Object]; java.lang.Integer; com.puppycrawl.tools.checkstyle.checks.indentation.LineSet; firstLineCol[]; int; intValue[]; mLines>
<java.lang.Integer; intValue[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.LineSet; firstLine[]; int; null; (mLines.firstKey())>
<java.util.SortedMap; firstKey[]; java.lang.Integer; com.puppycrawl.tools.checkstyle.checks.indentation.LineSet; firstLine[]; int; intValue[]; mLines>
<java.lang.Integer; intValue[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.LineSet; lastLine[]; int; null; (mLines.lastKey())>
<java.util.SortedMap; lastKey[]; java.lang.Integer; com.puppycrawl.tools.checkstyle.checks.indentation.LineSet; lastLine[]; int; intValue[]; mLines>
<java.util.Map; put[java.lang.Integer, java.lang.Integer]; java.lang.Integer; com.puppycrawl.tools.checkstyle.checks.indentation.LineSet; addLineAndCol[int, int]; void; null; mLines>
<java.util.Map; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.LineSet; isEmpty[]; boolean; null; mLines>
<com.puppycrawl.tools.checkstyle.checks.indentation.LineSet; firstLine[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.LineSet; toString[]; java.lang.String; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.LineSet; lastLine[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.LineSet; toString[]; java.lang.String; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ArrayInitHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ArrayInitHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; getParent[]; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.ArrayInitHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; parentAST>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLineStart[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ArrayInitHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getParent[]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; com.puppycrawl.tools.checkstyle.checks.indentation.ArrayInitHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ArrayInitHandler; getChildrenExpectedLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.ArrayInitHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; ((ArrayInitHandler)getParent())>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getParent[]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; com.puppycrawl.tools.checkstyle.checks.indentation.ArrayInitHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; getChildrenExpectedLevel[]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.ArrayInitHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; getParent()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getParent[]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; com.puppycrawl.tools.checkstyle.checks.indentation.ArrayInitHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; getLevel[]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ArrayInitHandler; getLCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ArrayInitHandler; getRCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ArrayInitHandler; getRCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ArrayInitHandler; getListChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getFirstLine[int, com.puppycrawl.tools.checkstyle.api.DetailAST]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ArrayInitHandler; getChildrenExpectedLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ArrayInitHandler; getListChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ArrayInitHandler; getChildrenExpectedLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; hasCurlys[]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.ArrayInitHandler; getChildrenExpectedLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ArrayInitHandler; getChildrenExpectedLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; getLCurly()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ArrayInitHandler; getLCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ArrayInitHandler; getChildrenExpectedLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; getLineNo[]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; expandedTabsColumnNo[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ArrayInitHandler; getChildrenExpectedLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ArrayInitHandler; getLCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ArrayInitHandler; getChildrenExpectedLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ArrayInitHandler; getNextFirstNonblankOnLineAfter[int, int]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ArrayInitHandler; getChildrenExpectedLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; addAcceptedIndent[int]; void; com.puppycrawl.tools.checkstyle.checks.indentation.ArrayInitHandler; getChildrenExpectedLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; expectedIndent>
<com.puppycrawl.tools.checkstyle.api.Check; getLines[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.indentation.ArrayInitHandler; getNextFirstNonblankOnLineAfter[int, int]; int; null; getIndentCheck()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getIndentCheck[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck; com.puppycrawl.tools.checkstyle.checks.indentation.ArrayInitHandler; getNextFirstNonblankOnLineAfter[int, int]; int; getLines[]; this>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ArrayInitHandler; getNextFirstNonblankOnLineAfter[int, int]; int; null; line>
<java.lang.Character; isWhitespace[char]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.ArrayInitHandler; getNextFirstNonblankOnLineAfter[int, int]; int; null; Character>
<java.lang.String; charAt[int]; char; com.puppycrawl.tools.checkstyle.checks.indentation.ArrayInitHandler; getNextFirstNonblankOnLineAfter[int, int]; int; null; line>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ElseHandler; checkToplevelToken[]; void; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ElseHandler; checkToplevelToken[]; void; getParent[]; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ElseHandler; checkToplevelToken[]; void; null; ifAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLastChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ElseHandler; checkToplevelToken[]; void; null; slist>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ElseHandler; checkToplevelToken[]; void; null; lcurly>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ElseHandler; checkToplevelToken[]; void; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ElseHandler; checkToplevelToken[]; void; getLineNo[]; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ElseHandler; getNonlistChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ElseHandler; getNonlistChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ImportHandler; checkIndentation[]; void; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ImportHandler; checkIndentation[]; void; getLineNo[]; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ImportHandler; checkIndentation[]; void; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ImportHandler; checkIndentation[]; void; findFirstToken[int]; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ImportHandler; checkIndentation[]; void; null; semi>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.ImportHandler; checkIndentation[]; void; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.ImportHandler; checkIndentation[]; void; getLineNo[]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkLinesIndent[int, int, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel]; void; com.puppycrawl.tools.checkstyle.checks.indentation.ImportHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.ImportHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.NewHandler; checkIndentation[]; void; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.NewHandler; checkIndentation[]; void; getFirstChild[]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkExpressionSubtree[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, boolean]; void; com.puppycrawl.tools.checkstyle.checks.indentation.NewHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.NewHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.NewHandler; checkIndentation[]; void; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.NewHandler; checkIndentation[]; void; findFirstToken[int]; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.NewHandler; checkIndentation[]; void; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.NewHandler; checkIndentation[]; void; findFirstToken[int]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkLParen[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.indentation.NewHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.NewHandler; checkIndentation[]; void; null; rparen>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.NewHandler; checkIndentation[]; void; null; lparen>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkExpressionSubtree[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, boolean]; void; com.puppycrawl.tools.checkstyle.checks.indentation.NewHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.NewHandler; checkIndentation[]; void; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.NewHandler; checkIndentation[]; void; findFirstToken[int]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.NewHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getBasicOffset[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.NewHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkRParen[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.indentation.NewHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLineStart[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; com.puppycrawl.tools.checkstyle.checks.indentation.NewHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.NewHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.NewHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.NewHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; getColumnNo[]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLineStart[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; com.puppycrawl.tools.checkstyle.checks.indentation.NewHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.NewHandler; getLevelImpl[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; MethodDefHandler[com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; void; null; aAst>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; checkIdent[]; void; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; checkIdent[]; void; findFirstToken[int]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; expandedTabsColumnNo[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; checkIdent[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; startsLine[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; checkIdent[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; accept[int]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; checkIdent[]; void; null; getLevel()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; checkIdent[]; void; accept[int]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; logError[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, int]; void; com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; checkIdent[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; checkThrows[]; void; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; checkThrows[]; void; findFirstToken[int]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; expandedTabsColumnNo[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; checkThrows[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; checkThrows[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getBasicOffset[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; checkThrows[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; startsLine[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; checkThrows[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; accept[int]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; checkThrows[]; void; null; expectedColumnNo>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; logError[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, int, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel]; void; com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; checkThrows[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; checkType[]; void; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; checkType[]; void; findFirstToken[int]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getFirstToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; checkType[]; void; null; ExpressionHandler>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; expandedTabsColumnNo[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; checkType[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; startsLine[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; checkType[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; accept[int]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; checkType[]; void; null; getLevel()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; checkType[]; void; accept[int]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; logError[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, int]; void; com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; checkType[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; checkParameters[]; void; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; checkParameters[]; void; findFirstToken[int]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkExpressionSubtree[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, boolean]; void; com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; checkParameters[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; checkParameters[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkModifiers[]; void; com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; checkIdent[]; void; com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; checkThrows[]; void; com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; checkIndentation[]; void; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; checkIndentation[]; void; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; checkIndentation[]; void; getType[]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; checkType[]; void; com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; checkParameters[]; void; com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getLCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.WhileHandler; checkCondExpr[]; void; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.WhileHandler; checkCondExpr[]; void; findFirstToken[int]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.WhileHandler; checkCondExpr[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getBasicOffset[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.WhileHandler; checkCondExpr[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkExpressionSubtree[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, boolean]; void; com.puppycrawl.tools.checkstyle.checks.indentation.WhileHandler; checkCondExpr[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.WhileHandler; checkCondExpr[]; void; com.puppycrawl.tools.checkstyle.checks.indentation.WhileHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getToplevelAST[]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getToplevelAST[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkToplevelToken[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; accept[int]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkToplevelToken[]; void; null; getLevel()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkToplevelToken[]; void; accept[int]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; expandedTabsColumnNo[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkToplevelToken[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; toplevelMustStartLine[]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkToplevelToken[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; startsLine[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkToplevelToken[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; logError[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, int]; void; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkToplevelToken[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; expandedTabsColumnNo[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkToplevelToken[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getLCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; hasCurlys[]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getRCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; hasCurlys[]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getLCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getLCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getRCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getRCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getRCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; slist>
<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getLCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkLCurly[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; expandedTabsColumnNo[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkLCurly[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; accept[int]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkLCurly[]; void; null; curlyLevel()>
<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; curlyLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkLCurly[]; void; accept[int]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; startsLine[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkLCurly[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; logError[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, int]; void; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkLCurly[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; curlyLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getBraceAdjustement[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; curlyLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getLCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkRCurly[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getRCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkRCurly[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; expandedTabsColumnNo[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkRCurly[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; accept[int]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkRCurly[]; void; null; curlyLevel()>
<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; curlyLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkRCurly[]; void; accept[int]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; rcurlyMustStart[]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkRCurly[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; startsLine[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkRCurly[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; areOnSameLine[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkRCurly[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; logError[com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, int, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel]; void; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkRCurly[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; curlyLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkRCurly[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getNonlistChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; getMainAst().findFirstToken(TokenTypes.RPAREN)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getNonlistChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getNonlistChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getNonlistChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkNonlistChild[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkNonlistChild[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getBasicOffset[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkNonlistChild[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkExpressionSubtree[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, boolean]; void; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkNonlistChild[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getListChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getListChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getRParen[]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getRParen[]; com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getLParen[]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; getMainAst()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getMainAst[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getLParen[]; com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkToplevelToken[]; void; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkLParen[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getLParen[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkRParen[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getLParen[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getRParen[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; hasCurlys[]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkLCurly[]; void; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkRCurly[]; void; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getListChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; hasCurlys[]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; areOnSameLine[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getLCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getRCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; checkChildren[com.puppycrawl.tools.checkstyle.api.DetailAST, int[], com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, boolean, boolean]; void; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getCheckedChildren[]; int[]; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getChildrenExpectedLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; childrenMayNest[]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkNonlistChild[]; void; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; checkIndentation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; isMultiLevel[]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getChildrenExpectedLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; getLevel()>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getChildrenExpectedLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; isMultiLevel[]; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; hasCurlys[]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getChildrenExpectedLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; areOnSameLine[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getChildrenExpectedLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getLCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getChildrenExpectedLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getRCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getChildrenExpectedLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; startsLine[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getChildrenExpectedLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getLCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getChildrenExpectedLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; expandedTabsColumnNo[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getChildrenExpectedLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getLCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getChildrenExpectedLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getBasicOffset[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getChildrenExpectedLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; startsLine[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getChildrenExpectedLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getRCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getChildrenExpectedLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; expandedTabsColumnNo[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getChildrenExpectedLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getRCurly[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getChildrenExpectedLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getBasicOffset[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getChildrenExpectedLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getChildrenExpectedLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; getBasicOffset[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getChildrenExpectedLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; getChildrenExpectedLevel[]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler; suggestedChildLevel[com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; null; this>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.OuterTypeFilenameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.findFirstToken(TokenTypes.IDENT)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.OuterTypeFilenameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getText[]; aAST>
<com.puppycrawl.tools.checkstyle.api.FileContents; getFilename[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.OuterTypeFilenameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; getFileContents()>
<com.puppycrawl.tools.checkstyle.api.Check; getFileContents[]; com.puppycrawl.tools.checkstyle.api.FileContents; com.puppycrawl.tools.checkstyle.checks.OuterTypeFilenameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getFilename[]; this>
<java.lang.String; substring[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.OuterTypeFilenameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; fname>
<java.lang.String; lastIndexOf[int]; int; com.puppycrawl.tools.checkstyle.checks.OuterTypeFilenameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; fname>
<java.lang.String; replaceAll[java.lang.String, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.OuterTypeFilenameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; fname>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.OuterTypeFilenameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; fname>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.OuterTypeFilenameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.OuterTypeFilenameCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.design.InterfaceIsTypeCheck; getDefaultTokens[]; int[]; com.puppycrawl.tools.checkstyle.checks.design.InterfaceIsTypeCheck; getRequiredTokens[]; int[]; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.design.InterfaceIsTypeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.design.InterfaceIsTypeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; objBlock>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.design.InterfaceIsTypeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; objBlock>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.design.InterfaceIsTypeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.design.InterfaceIsTypeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; setPublicMemberPattern[java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; VisibilityModifierCheck[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; setPublicMemberPattern[java.lang.String]; void; null; Utils>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getType[]; aAST>
<com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; getVarNameAST[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; varNameAST>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; inInterfaceOrAnnotationBlock[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ScopeUtils>
<com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; getModifiers[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.Set<java.lang.String>; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; getVisibilityScope[java.util.Set<java.lang.String>]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; "private">
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mods>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mods>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; "package">
<com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; isPackageAllowed[]; boolean; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; "protected">
<com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; isProtectedAllowed[]; boolean; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; "public">
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; getPublicMemberRegexp().matcher(varName)>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; find[]; getPublicMemberRegexp()>
<com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; getPublicMemberRegexp[]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; matcher[java.lang.CharSequence]; this>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; varNameAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; varNameAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; getVarNameAST[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; aVariableDefAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; getVarNameAST[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; ast>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; getVarNameAST[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; ast>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; getModifiers[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.Set<java.lang.String>; null; aVariableDefAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; getModifiers[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.Set<java.lang.String>; null; modifiersAST>
<not found; newHashSet[]; not found; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; getModifiers[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.Set<java.lang.String>; null; Sets>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; getModifiers[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.Set<java.lang.String>; null; modifiersAST>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; getModifiers[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.Set<java.lang.String>; null; retVal>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; getModifiers[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.Set<java.lang.String>; null; modifier>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; getModifiers[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.Set<java.lang.String>; null; modifier>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; getVisibilityScope[java.util.Set<java.lang.String>]; java.lang.String; null; aModifiers>
<com.puppycrawl.tools.checkstyle.api.FastStack; newInstance[]; com.puppycrawl.tools.checkstyle.api.FastStack<com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheck.ClassDesc>; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; getVisibilityScope[java.util.Set<java.lang.String>]; java.lang.String; null; FastStack>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; modifiers>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; modifiers>
<com.puppycrawl.tools.checkstyle.api.FastStack; push[com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheck.ClassDesc]; void; com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mClasses>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; inEnumBlock[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ScopeUtils>
<com.puppycrawl.tools.checkstyle.api.FastStack; peek[]; com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheck.ClassDesc; com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mClasses>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; modifiers>
<com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheck$ClassDesc; reportPrivateCtor[]; void; com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; desc>
<com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheck$ClassDesc; reportNonPrivateCtor[]; void; com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; desc>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.FastStack; pop[]; com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheck.ClassDesc; com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mClasses>
<com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheck$ClassDesc; isDeclaredAsFinal[]; boolean; com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; desc>
<com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheck$ClassDesc; isDeclaredAsAbstract[]; boolean; com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; desc>
<com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheck$ClassDesc; hasPrivateCtor[]; boolean; com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; desc>
<com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheck$ClassDesc; hasNonPrivateCtor[]; boolean; com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; desc>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.findFirstToken(TokenTypes.IDENT)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getText[]; aAST>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<java.lang.Class; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheck.ClassDesc; toString[]; java.lang.String; null; this.getClass()>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheck.ClassDesc>; com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheck.ClassDesc; toString[]; java.lang.String; getName[]; this>
<com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheck; isAbstract[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; objBlock>
<com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheck; isStatic[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; child>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; child>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; modifiers>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; modifiers>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; child>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; modifiers>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; modifiers>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; child>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheck; isAbstract[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST.findFirstToken(TokenTypes.MODIFIERS)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheck; isAbstract[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; branchContains[int]; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheck; isStatic[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST.findFirstToken(TokenTypes.MODIFIERS)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheck; isStatic[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; branchContains[int]; aAST>
<com.puppycrawl.tools.checkstyle.api.FastStack; newInstance[]; com.puppycrawl.tools.checkstyle.api.FastStack<java.lang.Boolean>; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheck; isStatic[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; FastStack>
<com.puppycrawl.tools.checkstyle.checks.design.MutableExceptionCheck; getDefaultTokens[]; int[]; com.puppycrawl.tools.checkstyle.checks.design.MutableExceptionCheck; getRequiredTokens[]; int[]; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.design.MutableExceptionCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.design.MutableExceptionCheck; visitClassDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.design.MutableExceptionCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.design.MutableExceptionCheck; visitVariableDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.design.MutableExceptionCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.design.MutableExceptionCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.design.MutableExceptionCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.design.MutableExceptionCheck; leaveClassDef[]; void; com.puppycrawl.tools.checkstyle.checks.design.MutableExceptionCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FastStack; push[java.lang.Boolean]; void; com.puppycrawl.tools.checkstyle.checks.design.MutableExceptionCheck; visitClassDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mCheckingStack>
<com.puppycrawl.tools.checkstyle.checks.design.MutableExceptionCheck; isExceptionClass[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.design.MutableExceptionCheck; visitClassDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.design.MutableExceptionCheck; visitClassDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.findFirstToken(TokenTypes.IDENT)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.design.MutableExceptionCheck; visitClassDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getText[]; aAST>
<java.lang.Boolean; booleanValue[]; boolean; com.puppycrawl.tools.checkstyle.checks.design.MutableExceptionCheck; leaveClassDef[]; void; null; (mCheckingStack.pop())>
<com.puppycrawl.tools.checkstyle.api.FastStack; pop[]; java.lang.Boolean; com.puppycrawl.tools.checkstyle.checks.design.MutableExceptionCheck; leaveClassDef[]; void; booleanValue[]; mCheckingStack>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.design.MutableExceptionCheck; visitVariableDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.getParent()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.design.MutableExceptionCheck; visitVariableDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getType[]; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.design.MutableExceptionCheck; visitVariableDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.design.MutableExceptionCheck; visitVariableDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; modifiersAST>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.design.MutableExceptionCheck; visitVariableDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.design.MutableExceptionCheck; visitVariableDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.design.MutableExceptionCheck; visitVariableDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.design.MutableExceptionCheck; visitVariableDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.findFirstToken(TokenTypes.IDENT)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.design.MutableExceptionCheck; visitVariableDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getText[]; aAST>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.checks.design.MutableExceptionCheck; isExceptionClass[java.lang.String]; boolean; null; getRegexp().matcher(aClassName)>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.design.MutableExceptionCheck; isExceptionClass[java.lang.String]; boolean; find[]; getRegexp()>
<com.puppycrawl.tools.checkstyle.checks.AbstractFormatCheck; getRegexp[]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.design.MutableExceptionCheck; isExceptionClass[java.lang.String]; boolean; matcher[java.lang.CharSequence]; this>
<com.puppycrawl.tools.checkstyle.checks.design.ThrowsCountCheck; setMax[int]; void; com.puppycrawl.tools.checkstyle.checks.design.ThrowsCountCheck; ThrowsCountCheck[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.design.ThrowsCountCheck; getDefaultTokens[]; int[]; com.puppycrawl.tools.checkstyle.checks.design.ThrowsCountCheck; getRequiredTokens[]; int[]; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.design.ThrowsCountCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.design.ThrowsCountCheck; visitLiteralThrows[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.design.ThrowsCountCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.design.ThrowsCountCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; com.puppycrawl.tools.checkstyle.checks.design.ThrowsCountCheck; visitLiteralThrows[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.design.ThrowsCountCheck; getMax[]; int; com.puppycrawl.tools.checkstyle.checks.design.ThrowsCountCheck; visitLiteralThrows[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.design.ThrowsCountCheck; visitLiteralThrows[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.design.ThrowsCountCheck; visitLiteralThrows[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.design.ThrowsCountCheck; visitLiteralThrows[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.design.ThrowsCountCheck; getMax[]; int; com.puppycrawl.tools.checkstyle.checks.design.ThrowsCountCheck; visitLiteralThrows[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; inInterfaceOrAnnotationBlock[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ScopeUtils>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; modifiers>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; modifiers>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; modifiers>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; modifiers>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ScopeUtils.getSurroundingScope(aAST)>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; getSurroundingScope[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; ScopeUtils>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; implementation.getFirstChild()>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getType[]; implementation>
<com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck; findContainingClass[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; classDef>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; classDef>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; classMods>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; classDef>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; objBlock>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; candidate>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; candidate>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ctorMods>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; candidate>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST.findFirstToken(TokenTypes.IDENT)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getText[]; aAST>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck; findContainingClass[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; searchAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck; findContainingClass[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; searchAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck; findContainingClass[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; searchAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.design.InnerTypeLastCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.design.InnerTypeLastCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; nextSibling>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.design.InnerTypeLastCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; nextSibling>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.design.InnerTypeLastCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; nextSibling>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.design.InnerTypeLastCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; nextSibling>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.design.InnerTypeLastCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.design.InnerTypeLastCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; nextSibling>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.design.InnerTypeLastCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; nextSibling>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.design.InnerTypeLastCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; nextSibling>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.design.InnerTypeLastCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.api.Check; getFileContents[]; com.puppycrawl.tools.checkstyle.api.FileContents; com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck; checkCppComments[com.puppycrawl.tools.checkstyle.api.FileContents]; void; com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck; checkBadComments[com.puppycrawl.tools.checkstyle.api.FileContents]; void; com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FileContents; getCppComments[]; com.puppycrawl.tools.checkstyle.api.ImmutableMap<java.lang.Integer,com.puppycrawl.tools.checkstyle.api.TextBlock>; com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck; checkCppComments[com.puppycrawl.tools.checkstyle.api.FileContents]; void; null; aContents>
<java.util.Map; entrySet[]; java.util.Set<java.util.Map.Entry<java.lang.Integer,com.puppycrawl.tools.checkstyle.api.TextBlock>>; com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck; checkCppComments[com.puppycrawl.tools.checkstyle.api.FileContents]; void; null; comments>
<com.puppycrawl.tools.checkstyle.api.TextBlock; getText[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck; checkCppComments[com.puppycrawl.tools.checkstyle.api.FileContents]; void; null; entry.getValue()>
<java.util.Map$Entry; getValue[]; com.puppycrawl.tools.checkstyle.api.TextBlock; com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck; checkCppComments[com.puppycrawl.tools.checkstyle.api.FileContents]; void; getText[]; entry>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck; checkCppComments[com.puppycrawl.tools.checkstyle.api.FileContents]; void; null; getRegexp().matcher(cmt)>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck; checkCppComments[com.puppycrawl.tools.checkstyle.api.FileContents]; void; find[]; getRegexp()>
<com.puppycrawl.tools.checkstyle.checks.AbstractFormatCheck; getRegexp[]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck; checkCppComments[com.puppycrawl.tools.checkstyle.api.FileContents]; void; matcher[java.lang.CharSequence]; this>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck; checkCppComments[com.puppycrawl.tools.checkstyle.api.FileContents]; void; null; this>
<java.lang.Integer; intValue[]; int; com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck; checkCppComments[com.puppycrawl.tools.checkstyle.api.FileContents]; void; null; entry.getKey()>
<java.util.Map$Entry; getKey[]; java.lang.Integer; com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck; checkCppComments[com.puppycrawl.tools.checkstyle.api.FileContents]; void; intValue[]; entry>
<com.puppycrawl.tools.checkstyle.checks.AbstractFormatCheck; getFormat[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck; checkCppComments[com.puppycrawl.tools.checkstyle.api.FileContents]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FileContents; getCComments[]; com.puppycrawl.tools.checkstyle.api.ImmutableMap<java.lang.Integer,java.util.List<com.puppycrawl.tools.checkstyle.api.TextBlock>>; com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck; checkBadComments[com.puppycrawl.tools.checkstyle.api.FileContents]; void; null; aContents>
<java.util.Map; entrySet[]; java.util.Set<java.util.Map.Entry<java.lang.Integer,java.util.List<com.puppycrawl.tools.checkstyle.api.TextBlock>>>; com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck; checkBadComments[com.puppycrawl.tools.checkstyle.api.FileContents]; void; null; allComments>
<java.util.Map$Entry; getValue[]; java.util.List<com.puppycrawl.tools.checkstyle.api.TextBlock>; com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck; checkBadComments[com.puppycrawl.tools.checkstyle.api.FileContents]; void; null; entry>
<com.puppycrawl.tools.checkstyle.api.TextBlock; getText[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck; checkBadComments[com.puppycrawl.tools.checkstyle.api.FileContents]; void; null; line>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck; checkBadComments[com.puppycrawl.tools.checkstyle.api.FileContents]; void; null; getRegexp().matcher(cmt[i])>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck; checkBadComments[com.puppycrawl.tools.checkstyle.api.FileContents]; void; find[]; getRegexp()>
<com.puppycrawl.tools.checkstyle.checks.AbstractFormatCheck; getRegexp[]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck; checkBadComments[com.puppycrawl.tools.checkstyle.api.FileContents]; void; matcher[java.lang.CharSequence]; this>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck; checkBadComments[com.puppycrawl.tools.checkstyle.api.FileContents]; void; null; this>
<java.lang.Integer; intValue[]; int; com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck; checkBadComments[com.puppycrawl.tools.checkstyle.api.FileContents]; void; null; entry.getKey()>
<java.util.Map$Entry; getKey[]; java.lang.Integer; com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck; checkBadComments[com.puppycrawl.tools.checkstyle.api.FileContents]; void; intValue[]; entry>
<com.puppycrawl.tools.checkstyle.checks.AbstractFormatCheck; getFormat[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck; checkBadComments[com.puppycrawl.tools.checkstyle.api.FileContents]; void; null; this>
<not found; newHashMap[]; not found; com.puppycrawl.tools.checkstyle.Defn; Defn[]; void; null; Maps>
<java.util.Map; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.DefaultContext; get[java.lang.String]; java.lang.Object; null; mEntries>
<not found; copyOf[]; not found; com.puppycrawl.tools.checkstyle.DefaultContext; getAttributeNames[]; com.puppycrawl.tools.checkstyle.ImmutableCollection<java.lang.String>; null; ImmutableList>
<java.util.Map; keySet[]; java.util.Set<java.lang.String>; com.puppycrawl.tools.checkstyle.DefaultContext; getAttributeNames[]; com.puppycrawl.tools.checkstyle.ImmutableCollection<java.lang.String>; null; mEntries>
<java.util.Map; put[java.lang.String, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.DefaultContext; add[java.lang.String, java.lang.Object]; void; null; mEntries>
<not found; newLinkedHashSet[]; not found; com.puppycrawl.tools.checkstyle.PackageObjectFactory; PackageObjectFactory[java.util.Set<java.lang.String>, java.lang.ClassLoader]; void; null; Sets>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.PackageObjectFactory; addPackage[java.lang.String]; void; null; mPackages>
<com.puppycrawl.tools.checkstyle.PackageObjectFactory; createObject[java.lang.String]; java.lang.Object; com.puppycrawl.tools.checkstyle.PackageObjectFactory; doMakeObject[java.lang.String]; java.lang.Object; null; this>
<com.puppycrawl.tools.checkstyle.PackageObjectFactory; createObject[java.lang.String]; java.lang.Object; com.puppycrawl.tools.checkstyle.PackageObjectFactory; doMakeObject[java.lang.String]; java.lang.Object; null; this>
<java.lang.Class; forName[java.lang.String, boolean, java.lang.ClassLoader]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.PackageObjectFactory; createObject[java.lang.String]; java.lang.Object; null; Class>
<java.lang.Class; newInstance[]; ; com.puppycrawl.tools.checkstyle.PackageObjectFactory; createObject[java.lang.String]; java.lang.Object; null; clazz>
<com.puppycrawl.tools.checkstyle.PackageObjectFactory; doMakeObject[java.lang.String]; java.lang.Object; com.puppycrawl.tools.checkstyle.PackageObjectFactory; createModule[java.lang.String]; java.lang.Object; null; this>
<com.puppycrawl.tools.checkstyle.PackageObjectFactory; doMakeObject[java.lang.String]; java.lang.Object; com.puppycrawl.tools.checkstyle.PackageObjectFactory; createModule[java.lang.String]; java.lang.Object; null; this>
<com.puppycrawl.tools.checkstyle.PropertyCacheFile; getConfigHashCode[java.io.Serializable]; java.lang.String; com.puppycrawl.tools.checkstyle.PropertyCacheFile; PropertyCacheFile[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String]; void; null; this>
<java.util.Properties; load[java.io.InputStream]; void; com.puppycrawl.tools.checkstyle.PropertyCacheFile; PropertyCacheFile[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String]; void; null; mDetails>
<java.util.Properties; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.PropertyCacheFile; PropertyCacheFile[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String]; void; null; mDetails>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.PropertyCacheFile; PropertyCacheFile[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String]; void; null; cachedConfigHash>
<java.util.Properties; clear[]; void; com.puppycrawl.tools.checkstyle.PropertyCacheFile; PropertyCacheFile[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String]; void; null; mDetails>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.PropertyCacheFile; PropertyCacheFile[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String]; void; null; mDetails>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.PropertyCacheFile; PropertyCacheFile[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String]; void; null; mDetails>
<not found; debug[]; not found; com.puppycrawl.tools.checkstyle.PropertyCacheFile; PropertyCacheFile[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String]; void; null; Utils.getExceptionLogger()>
<com.puppycrawl.tools.checkstyle.api.Utils; getExceptionLogger[]; com.puppycrawl.tools.checkstyle.api.Log; com.puppycrawl.tools.checkstyle.PropertyCacheFile; PropertyCacheFile[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String]; void; debug[]; Utils>
<com.puppycrawl.tools.checkstyle.api.Utils; closeQuietly[java.io.Closeable]; void; com.puppycrawl.tools.checkstyle.PropertyCacheFile; PropertyCacheFile[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String]; void; null; Utils>
<java.util.Properties; store[java.io.OutputStream, java.lang.String]; void; com.puppycrawl.tools.checkstyle.PropertyCacheFile; destroy[]; void; null; mDetails>
<not found; debug[]; not found; com.puppycrawl.tools.checkstyle.PropertyCacheFile; destroy[]; void; null; Utils.getExceptionLogger()>
<com.puppycrawl.tools.checkstyle.api.Utils; getExceptionLogger[]; com.puppycrawl.tools.checkstyle.api.Log; com.puppycrawl.tools.checkstyle.PropertyCacheFile; destroy[]; void; debug[]; Utils>
<com.puppycrawl.tools.checkstyle.PropertyCacheFile; flushAndCloseOutStream[java.io.OutputStream]; void; com.puppycrawl.tools.checkstyle.PropertyCacheFile; destroy[]; void; null; this>
<java.io.OutputStream; flush[]; void; com.puppycrawl.tools.checkstyle.PropertyCacheFile; flushAndCloseOutStream[java.io.OutputStream]; void; null; aStream>
<not found; debug[]; not found; com.puppycrawl.tools.checkstyle.PropertyCacheFile; flushAndCloseOutStream[java.io.OutputStream]; void; null; Utils.getExceptionLogger()>
<com.puppycrawl.tools.checkstyle.api.Utils; getExceptionLogger[]; com.puppycrawl.tools.checkstyle.api.Log; com.puppycrawl.tools.checkstyle.PropertyCacheFile; flushAndCloseOutStream[java.io.OutputStream]; void; debug[]; Utils>
<com.puppycrawl.tools.checkstyle.api.Utils; closeQuietly[java.io.Closeable]; void; com.puppycrawl.tools.checkstyle.PropertyCacheFile; flushAndCloseOutStream[java.io.OutputStream]; void; null; Utils>
<java.util.Properties; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.PropertyCacheFile; alreadyChecked[java.lang.String, long]; boolean; null; mDetails>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.PropertyCacheFile; alreadyChecked[java.lang.String, long]; boolean; null; lastChecked>
<java.lang.Long; toString[long]; java.lang.String; com.puppycrawl.tools.checkstyle.PropertyCacheFile; alreadyChecked[java.lang.String, long]; boolean; null; Long>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.PropertyCacheFile; checkedOk[java.lang.String, long]; void; null; mDetails>
<java.lang.Long; toString[long]; java.lang.String; com.puppycrawl.tools.checkstyle.PropertyCacheFile; checkedOk[java.lang.String, long]; void; null; Long>
<java.io.ObjectOutputStream; writeObject[java.lang.Object]; void; com.puppycrawl.tools.checkstyle.PropertyCacheFile; getConfigHashCode[java.io.Serializable]; java.lang.String; null; oos>
<com.puppycrawl.tools.checkstyle.PropertyCacheFile; flushAndCloseOutStream[java.io.OutputStream]; void; com.puppycrawl.tools.checkstyle.PropertyCacheFile; getConfigHashCode[java.io.Serializable]; java.lang.String; null; this>
<java.security.MessageDigest; getInstance[java.lang.String]; java.security.MessageDigest; com.puppycrawl.tools.checkstyle.PropertyCacheFile; getConfigHashCode[java.io.Serializable]; java.lang.String; null; MessageDigest>
<java.security.MessageDigest; update[byte[]]; void; com.puppycrawl.tools.checkstyle.PropertyCacheFile; getConfigHashCode[java.io.Serializable]; java.lang.String; null; md>
<java.io.ByteArrayOutputStream; toByteArray[]; byte[]; com.puppycrawl.tools.checkstyle.PropertyCacheFile; getConfigHashCode[java.io.Serializable]; java.lang.String; null; baos>
<com.puppycrawl.tools.checkstyle.PropertyCacheFile; hexEncode[byte[]]; java.lang.String; com.puppycrawl.tools.checkstyle.PropertyCacheFile; getConfigHashCode[java.io.Serializable]; java.lang.String; null; this>
<java.security.MessageDigest; digest[]; byte[]; com.puppycrawl.tools.checkstyle.PropertyCacheFile; getConfigHashCode[java.io.Serializable]; java.lang.String; null; md>
<not found; debug[]; not found; com.puppycrawl.tools.checkstyle.PropertyCacheFile; getConfigHashCode[java.io.Serializable]; java.lang.String; null; Utils.getExceptionLogger()>
<com.puppycrawl.tools.checkstyle.api.Utils; getExceptionLogger[]; com.puppycrawl.tools.checkstyle.api.Log; com.puppycrawl.tools.checkstyle.PropertyCacheFile; getConfigHashCode[java.io.Serializable]; java.lang.String; debug[]; Utils>
<java.lang.System; currentTimeMillis[]; long; com.puppycrawl.tools.checkstyle.PropertyCacheFile; getConfigHashCode[java.io.Serializable]; java.lang.String; null; System>
<java.lang.StringBuffer; append[char]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.PropertyCacheFile; hexEncode[byte[]]; java.lang.String; null; buf>
<java.lang.StringBuffer; append[char]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.PropertyCacheFile; hexEncode[byte[]]; java.lang.String; null; buf>
<java.lang.StringBuffer; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.PropertyCacheFile; hexEncode[byte[]]; java.lang.String; null; buf>
<com.puppycrawl.tools.checkstyle.api.SeverityLevel; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.SeverityLevel; com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilter; setSeverity[java.lang.String]; void; null; SeverityLevel>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilter; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; mSeverityLevel>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getSeverityLevel[]; com.puppycrawl.tools.checkstyle.api.SeverityLevel; com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilter; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; aEvent>
<com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.filters.SuppressElement; SuppressElement[java.lang.String]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.filters.SuppressElement; setChecks[java.lang.String]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getFileName[]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressElement; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; aEvent>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressElement; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; mFileRegexp.matcher(aEvent.getFileName())>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.filters.SuppressElement; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; find[]; mFileRegexp>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getFileName[]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressElement; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; aEvent>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getLocalizedMessage[]; com.puppycrawl.tools.checkstyle.api.LocalizedMessage; com.puppycrawl.tools.checkstyle.filters.SuppressElement; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; aEvent>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressElement; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; mModuleId>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getModuleId[]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressElement; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; aEvent>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressElement; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; mCheckRegexp.matcher(aEvent.getSourceName())>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.filters.SuppressElement; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; find[]; mCheckRegexp>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getSourceName[]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressElement; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; aEvent>
<com.puppycrawl.tools.checkstyle.filters.CSVFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressElement; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; mLineFilter>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getLine[]; int; com.puppycrawl.tools.checkstyle.filters.SuppressElement; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; aEvent>
<com.puppycrawl.tools.checkstyle.filters.CSVFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressElement; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; mColumnFilter>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getColumn[]; int; com.puppycrawl.tools.checkstyle.filters.SuppressElement; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; aEvent>
<java.lang.String; hashCode[]; int; com.puppycrawl.tools.checkstyle.filters.SuppressElement; hashCode[]; int; null; mFilePattern>
<java.lang.String; hashCode[]; int; com.puppycrawl.tools.checkstyle.filters.SuppressElement; hashCode[]; int; null; mCheckPattern>
<java.lang.String; hashCode[]; int; com.puppycrawl.tools.checkstyle.filters.SuppressElement; hashCode[]; int; null; mModuleId>
<java.lang.String; hashCode[]; int; com.puppycrawl.tools.checkstyle.filters.SuppressElement; hashCode[]; int; null; mLinesCSV>
<java.lang.String; hashCode[]; int; com.puppycrawl.tools.checkstyle.filters.SuppressElement; hashCode[]; int; null; mColumnsCSV>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressElement; equals[java.lang.Object]; boolean; null; this.mFilePattern>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressElement; equals[java.lang.Object]; boolean; null; mCheckPattern>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressElement; equals[java.lang.Object]; boolean; null; mModuleId>
<com.puppycrawl.tools.checkstyle.filters.CSVFilter; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressElement; equals[java.lang.Object]; boolean; null; mLineFilter>
<com.puppycrawl.tools.checkstyle.filters.CSVFilter; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressElement; equals[java.lang.Object]; boolean; null; mColumnFilter>
<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter$Tag; expandFromComment[java.lang.String, java.lang.String, java.util.regex.Pattern]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter.Tag; Tag[java.lang.String, int]; void; null; this>
<java.util.regex.Pattern; compile[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter.Tag; Tag[java.lang.String, int]; void; null; Pattern>
<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter$Tag; expandFromComment[java.lang.String, java.lang.String, java.util.regex.Pattern]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter.Tag; Tag[java.lang.String, int]; void; null; this>
<java.util.regex.Pattern; compile[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter.Tag; Tag[java.lang.String, int]; void; null; Pattern>
<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter$Tag; expandFromComment[java.lang.String, java.lang.String, java.util.regex.Pattern]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter.Tag; Tag[java.lang.String, int]; void; null; this>
<java.lang.String; startsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter.Tag; Tag[java.lang.String, int]; void; null; format>
<java.lang.String; substring[int]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter.Tag; Tag[java.lang.String, int]; void; null; format>
<java.lang.Integer; parseInt[java.lang.String]; int; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter.Tag; Tag[java.lang.String, int]; void; null; Integer>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getLine[]; int; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter.Tag; isMatch[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; aEvent>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter.Tag; isMatch[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; mTagCheckRegexp>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getSourceName[]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter.Tag; isMatch[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; aEvent>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter.Tag; isMatch[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; tagMatcher>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter.Tag; isMatch[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; mTagMessageRegexp>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter.Tag; isMatch[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; aEvent>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter.Tag; isMatch[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; messageMatcher>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter.Tag; expandFromComment[java.lang.String, java.lang.String, java.util.regex.Pattern]; java.lang.String; null; aRegexp>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter.Tag; expandFromComment[java.lang.String, java.lang.String, java.util.regex.Pattern]; java.lang.String; null; matcher>
<java.util.regex.Matcher; groupCount[]; int; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter.Tag; expandFromComment[java.lang.String, java.lang.String, java.util.regex.Pattern]; java.lang.String; null; matcher>
<java.lang.String; replaceAll[java.lang.String, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter.Tag; expandFromComment[java.lang.String, java.lang.String, java.util.regex.Pattern]; java.lang.String; null; result>
<java.util.regex.Matcher; group[int]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter.Tag; expandFromComment[java.lang.String, java.lang.String, java.util.regex.Pattern]; java.lang.String; null; matcher>
<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter$Tag; getFirstLine[]; int; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter.Tag; toString[]; java.lang.String; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter$Tag; getLastLine[]; int; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter.Tag; toString[]; java.lang.String; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter$Tag; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter.Tag; toString[]; java.lang.String; null; this>
<not found; newArrayList[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter.Tag; toString[]; java.lang.String; null; Lists>
<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; setCommentFormat[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; SuppressWithNearbyCommentFilter[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; setCheckFormat[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; SuppressWithNearbyCommentFilter[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; setMessageFormat[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; SuppressWithNearbyCommentFilter[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; setInfluenceFormat[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; SuppressWithNearbyCommentFilter[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; setCommentFormat[java.lang.String]; void; null; Utils>
<java.lang.ref.Reference; get[]; com.puppycrawl.tools.checkstyle.api.FileContents; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; getFileContents[]; com.puppycrawl.tools.checkstyle.api.FileContents; null; mFileContentsReference>
<com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; setCheckFormat[java.lang.String]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; setMessageFormat[java.lang.String]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; setInfluenceFormat[java.lang.String]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getLocalizedMessage[]; com.puppycrawl.tools.checkstyle.api.LocalizedMessage; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; aEvent>
<com.puppycrawl.tools.checkstyle.checks.FileContentsHolder; getContents[]; com.puppycrawl.tools.checkstyle.api.FileContents; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; FileContentsHolder>
<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; getFileContents[]; com.puppycrawl.tools.checkstyle.api.FileContents; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; setFileContents[com.puppycrawl.tools.checkstyle.api.FileContents]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; tagSuppressions[]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; this>
<java.util.List; iterator[]; java.util.Iterator<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter.Tag>; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; mTags>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; iter>
<java.util.Iterator; next[]; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter.Tag; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; iter>
<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter$Tag; isMatch[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; tag>
<java.util.List; clear[]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; tagSuppressions[]; void; null; mTags>
<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; getFileContents[]; com.puppycrawl.tools.checkstyle.api.FileContents; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; tagSuppressions[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; tagSuppressions[java.util.Collection<com.puppycrawl.tools.checkstyle.api.TextBlock>]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; tagSuppressions[]; void; null; this>
<not found; values[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; tagSuppressions[]; void; null; contents.getCppComments()>
<com.puppycrawl.tools.checkstyle.api.FileContents; getCppComments[]; com.puppycrawl.tools.checkstyle.api.ImmutableMap<java.lang.Integer,com.puppycrawl.tools.checkstyle.api.TextBlock>; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; tagSuppressions[]; void; values[]; contents>
<not found; values[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; tagSuppressions[]; void; null; contents.getCComments()>
<com.puppycrawl.tools.checkstyle.api.FileContents; getCComments[]; com.puppycrawl.tools.checkstyle.api.ImmutableMap<java.lang.Integer,java.util.List<com.puppycrawl.tools.checkstyle.api.TextBlock>>; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; tagSuppressions[]; void; values[]; contents>
<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; tagSuppressions[java.util.Collection<com.puppycrawl.tools.checkstyle.api.TextBlock>]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; tagSuppressions[]; void; null; this>
<java.util.Collections; sort[java.util.List<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter.Tag>]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; tagSuppressions[]; void; null; Collections>
<com.puppycrawl.tools.checkstyle.api.TextBlock; getStartLineNo[]; int; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; tagSuppressions[java.util.Collection<com.puppycrawl.tools.checkstyle.api.TextBlock>]; void; null; comment>
<com.puppycrawl.tools.checkstyle.api.TextBlock; getText[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; tagSuppressions[java.util.Collection<com.puppycrawl.tools.checkstyle.api.TextBlock>]; void; null; comment>
<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; tagCommentLine[java.lang.String, int, int]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; tagSuppressions[java.util.Collection<com.puppycrawl.tools.checkstyle.api.TextBlock>]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.TextBlock; getStartColNo[]; int; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; tagSuppressions[java.util.Collection<com.puppycrawl.tools.checkstyle.api.TextBlock>]; void; null; comment>
<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; tagCommentLine[java.lang.String, int, int]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; tagSuppressions[java.util.Collection<com.puppycrawl.tools.checkstyle.api.TextBlock>]; void; null; this>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; tagCommentLine[java.lang.String, int, int]; void; null; mCommentRegexp>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; tagCommentLine[java.lang.String, int, int]; void; null; matcher>
<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; addTag[java.lang.String, int]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; tagCommentLine[java.lang.String, int, int]; void; null; this>
<java.util.regex.Matcher; group[int]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; tagCommentLine[java.lang.String, int, int]; void; null; matcher>
<java.util.List; add[com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter.Tag]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; addTag[java.lang.String, int]; void; null; mTags>
<java.lang.Integer; compareTo[java.lang.Integer]; int; com.puppycrawl.tools.checkstyle.filters.IntRangeFilter; accept[int]; boolean; null; mLowerBound>
<java.lang.Integer; compareTo[java.lang.Integer]; int; com.puppycrawl.tools.checkstyle.filters.IntRangeFilter; accept[int]; boolean; null; mUpperBound>
<java.lang.Integer; intValue[]; int; com.puppycrawl.tools.checkstyle.filters.IntRangeFilter; hashCode[]; int; null; mLowerBound>
<java.lang.Integer; intValue[]; int; com.puppycrawl.tools.checkstyle.filters.IntRangeFilter; hashCode[]; int; null; mUpperBound>
<java.lang.Integer; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.filters.IntRangeFilter; equals[java.lang.Object]; boolean; null; this.mLowerBound>
<java.lang.Integer; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.filters.IntRangeFilter; equals[java.lang.Object]; boolean; null; this.mUpperBound>
<not found; newHashSet[]; not found; com.puppycrawl.tools.checkstyle.filters.IntRangeFilter; toString[]; java.lang.String; null; Sets>
<java.util.Set; add[com.puppycrawl.tools.checkstyle.filters.IntFilter]; boolean; com.puppycrawl.tools.checkstyle.filters.CSVFilter; addFilter[com.puppycrawl.tools.checkstyle.filters.IntFilter]; void; null; mFilters>
<java.util.StringTokenizer; hasMoreTokens[]; boolean; com.puppycrawl.tools.checkstyle.filters.CSVFilter; CSVFilter[java.lang.String]; void; null; tokenizer>
<java.lang.String; trim[]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.CSVFilter; CSVFilter[java.lang.String]; void; null; tokenizer.nextToken()>
<java.util.StringTokenizer; nextToken[]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.CSVFilter; CSVFilter[java.lang.String]; void; trim[]; tokenizer>
<java.lang.String; indexOf[java.lang.String]; int; com.puppycrawl.tools.checkstyle.filters.CSVFilter; CSVFilter[java.lang.String]; void; null; token>
<java.lang.Integer; parseInt[java.lang.String]; int; com.puppycrawl.tools.checkstyle.filters.CSVFilter; CSVFilter[java.lang.String]; void; null; Integer>
<com.puppycrawl.tools.checkstyle.filters.CSVFilter; addFilter[com.puppycrawl.tools.checkstyle.filters.IntFilter]; void; com.puppycrawl.tools.checkstyle.filters.CSVFilter; CSVFilter[java.lang.String]; void; null; this>
<java.lang.Integer; parseInt[java.lang.String]; int; com.puppycrawl.tools.checkstyle.filters.CSVFilter; CSVFilter[java.lang.String]; void; null; Integer>
<java.lang.String; substring[int, int]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.CSVFilter; CSVFilter[java.lang.String]; void; null; token>
<java.lang.Integer; parseInt[java.lang.String]; int; com.puppycrawl.tools.checkstyle.filters.CSVFilter; CSVFilter[java.lang.String]; void; null; Integer>
<java.lang.String; substring[int]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.CSVFilter; CSVFilter[java.lang.String]; void; null; token>
<com.puppycrawl.tools.checkstyle.filters.CSVFilter; addFilter[com.puppycrawl.tools.checkstyle.filters.IntFilter]; void; com.puppycrawl.tools.checkstyle.filters.CSVFilter; CSVFilter[java.lang.String]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.CSVFilter; getFilters[]; java.util.Set<com.puppycrawl.tools.checkstyle.filters.IntFilter>; com.puppycrawl.tools.checkstyle.filters.CSVFilter; accept[int]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.CSVFilter; accept[int]; boolean; null; filter>
<java.lang.Object; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.CSVFilter; toString[]; java.lang.String; null; mFilters>
<java.util.Set; hashCode[]; int; com.puppycrawl.tools.checkstyle.filters.CSVFilter; hashCode[]; int; null; mFilters>
<java.util.Set; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.filters.CSVFilter; equals[java.lang.Object]; boolean; null; this.mFilters>
<com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader; createIdToResourceNameMap[]; java.util.Map<java.lang.String,java.lang.String>; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader; SuppressionsLoader[]; void; null; this>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; "suppress">
<org.xml.sax.Attributes; getValue[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; aAtts>
<org.xml.sax.Attributes; getValue[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; aAtts>
<org.xml.sax.Attributes; getValue[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; aAtts>
<com.puppycrawl.tools.checkstyle.filters.SuppressElement; setModuleId[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; suppress>
<com.puppycrawl.tools.checkstyle.filters.SuppressElement; setChecks[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; suppress>
<org.xml.sax.Attributes; getValue[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; aAtts>
<com.puppycrawl.tools.checkstyle.filters.SuppressElement; setLines[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; suppress>
<org.xml.sax.Attributes; getValue[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; aAtts>
<com.puppycrawl.tools.checkstyle.filters.SuppressElement; setColumns[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; suppress>
<com.puppycrawl.tools.checkstyle.api.FilterSet; addFilter[com.puppycrawl.tools.checkstyle.api.Filter]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader; startElement[java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes]; void; null; mFilterChain>
<java.lang.String; matches[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader; loadSuppressions[java.lang.String]; com.puppycrawl.tools.checkstyle.api.FilterSet; null; aFilename>
<java.net.URL; openStream[]; java.io.InputStream; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader; loadSuppressions[java.lang.String]; com.puppycrawl.tools.checkstyle.api.FilterSet; null; new URL(aFilename)>
<java.lang.Class; getResourceAsStream[java.lang.String]; java.io.InputStream; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader; loadSuppressions[java.lang.String]; com.puppycrawl.tools.checkstyle.api.FilterSet; null; SuppressionsLoader.class>
<com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader; loadSuppressions[org.xml.sax.InputSource, java.lang.String]; com.puppycrawl.tools.checkstyle.api.FilterSet; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader; loadSuppressions[java.lang.String]; com.puppycrawl.tools.checkstyle.api.FilterSet; null; this>
<com.puppycrawl.tools.checkstyle.api.AbstractLoader; parseInputSource[org.xml.sax.InputSource]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader; loadSuppressions[org.xml.sax.InputSource, java.lang.String]; com.puppycrawl.tools.checkstyle.api.FilterSet; null; suppressionsLoader>
<com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader; getFilterChain[]; com.puppycrawl.tools.checkstyle.api.FilterSet; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader; loadSuppressions[org.xml.sax.InputSource, java.lang.String]; com.puppycrawl.tools.checkstyle.api.FilterSet; null; suppressionsLoader>
<org.xml.sax.SAXException; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader; loadSuppressions[org.xml.sax.InputSource, java.lang.String]; com.puppycrawl.tools.checkstyle.api.FilterSet; null; e>
<java.lang.Throwable; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader; loadSuppressions[org.xml.sax.InputSource, java.lang.String]; com.puppycrawl.tools.checkstyle.api.FilterSet; null; e>
<not found; newHashMap[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader; createIdToResourceNameMap[]; java.util.Map<java.lang.String,java.lang.String>; null; Maps>
<java.util.Map; put[java.lang.String, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader; createIdToResourceNameMap[]; java.util.Map<java.lang.String,java.lang.String>; null; map>
<java.util.Map; put[java.lang.String, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader; createIdToResourceNameMap[]; java.util.Map<java.lang.String,java.lang.String>; null; map>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter$Tag; expandFromComment[java.lang.String, java.lang.String, java.util.regex.Pattern]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter.Tag; Tag[int, int, java.lang.String, boolean]; void; null; this>
<java.util.regex.Pattern; compile[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter.Tag; Tag[int, int, java.lang.String, boolean]; void; null; Pattern>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter$Tag; expandFromComment[java.lang.String, java.lang.String, java.util.regex.Pattern]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter.Tag; Tag[int, int, java.lang.String, boolean]; void; null; this>
<java.util.regex.Pattern; compile[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter.Tag; Tag[int, int, java.lang.String, boolean]; void; null; Pattern>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter$Tag; expandFromComment[java.lang.String, java.lang.String, java.util.regex.Pattern]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter.Tag; Tag[int, int, java.lang.String, boolean]; void; null; this>
<java.util.regex.Pattern; compile[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter.Tag; Tag[int, int, java.lang.String, boolean]; void; null; Pattern>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter$Tag; expandFromComment[java.lang.String, java.lang.String, java.util.regex.Pattern]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter.Tag; Tag[int, int, java.lang.String, boolean]; void; null; this>
<java.util.regex.Pattern; compile[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter.Tag; Tag[int, int, java.lang.String, boolean]; void; null; Pattern>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter.Tag; isMatch[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; mTagCheckRegexp>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getSourceName[]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter.Tag; isMatch[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; aEvent>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter.Tag; isMatch[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; tagMatcher>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter.Tag; isMatch[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; mTagMessageRegexp>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter.Tag; isMatch[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; aEvent>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter.Tag; isMatch[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; messageMatcher>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter.Tag; expandFromComment[java.lang.String, java.lang.String, java.util.regex.Pattern]; java.lang.String; null; aRegexp>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter.Tag; expandFromComment[java.lang.String, java.lang.String, java.util.regex.Pattern]; java.lang.String; null; matcher>
<java.util.regex.Matcher; groupCount[]; int; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter.Tag; expandFromComment[java.lang.String, java.lang.String, java.util.regex.Pattern]; java.lang.String; null; matcher>
<java.lang.String; replaceAll[java.lang.String, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter.Tag; expandFromComment[java.lang.String, java.lang.String, java.util.regex.Pattern]; java.lang.String; null; result>
<java.util.regex.Matcher; group[int]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter.Tag; expandFromComment[java.lang.String, java.lang.String, java.util.regex.Pattern]; java.lang.String; null; matcher>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter$Tag; getLine[]; int; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter.Tag; toString[]; java.lang.String; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter$Tag; getColumn[]; int; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter.Tag; toString[]; java.lang.String; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter$Tag; isOn[]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter.Tag; toString[]; java.lang.String; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter$Tag; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter.Tag; toString[]; java.lang.String; null; this>
<not found; newArrayList[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter.Tag; toString[]; java.lang.String; null; Lists>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; setOnCommentFormat[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; SuppressionCommentFilter[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; setOffCommentFormat[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; SuppressionCommentFilter[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; setCheckFormat[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; SuppressionCommentFilter[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; setOffCommentFormat[java.lang.String]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; setOnCommentFormat[java.lang.String]; void; null; Utils>
<java.lang.ref.Reference; get[]; com.puppycrawl.tools.checkstyle.api.FileContents; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; getFileContents[]; com.puppycrawl.tools.checkstyle.api.FileContents; null; mFileContentsReference>
<com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; setCheckFormat[java.lang.String]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; setMessageFormat[java.lang.String]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getLocalizedMessage[]; com.puppycrawl.tools.checkstyle.api.LocalizedMessage; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; aEvent>
<com.puppycrawl.tools.checkstyle.checks.FileContentsHolder; getContents[]; com.puppycrawl.tools.checkstyle.api.FileContents; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; FileContentsHolder>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; getFileContents[]; com.puppycrawl.tools.checkstyle.api.FileContents; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; setFileContents[com.puppycrawl.tools.checkstyle.api.FileContents]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; tagSuppressions[]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; findNearestMatch[com.puppycrawl.tools.checkstyle.api.AuditEvent]; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter.Tag; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter$Tag; isOn[]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; matchTag>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter$Tag; getLine[]; int; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; findNearestMatch[com.puppycrawl.tools.checkstyle.api.AuditEvent]; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter.Tag; null; tag>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getLine[]; int; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; findNearestMatch[com.puppycrawl.tools.checkstyle.api.AuditEvent]; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter.Tag; null; aEvent>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter$Tag; getLine[]; int; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; findNearestMatch[com.puppycrawl.tools.checkstyle.api.AuditEvent]; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter.Tag; null; tag>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getLine[]; int; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; findNearestMatch[com.puppycrawl.tools.checkstyle.api.AuditEvent]; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter.Tag; null; aEvent>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter$Tag; getColumn[]; int; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; findNearestMatch[com.puppycrawl.tools.checkstyle.api.AuditEvent]; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter.Tag; null; tag>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getColumn[]; int; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; findNearestMatch[com.puppycrawl.tools.checkstyle.api.AuditEvent]; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter.Tag; null; aEvent>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter$Tag; isMatch[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; findNearestMatch[com.puppycrawl.tools.checkstyle.api.AuditEvent]; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter.Tag; null; tag>
<java.util.List; clear[]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; tagSuppressions[]; void; null; mTags>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; getFileContents[]; com.puppycrawl.tools.checkstyle.api.FileContents; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; tagSuppressions[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; tagSuppressions[java.util.Collection<com.puppycrawl.tools.checkstyle.api.TextBlock>]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; tagSuppressions[]; void; null; this>
<not found; values[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; tagSuppressions[]; void; null; contents.getCppComments()>
<com.puppycrawl.tools.checkstyle.api.FileContents; getCppComments[]; com.puppycrawl.tools.checkstyle.api.ImmutableMap<java.lang.Integer,com.puppycrawl.tools.checkstyle.api.TextBlock>; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; tagSuppressions[]; void; values[]; contents>
<not found; values[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; tagSuppressions[]; void; null; contents.getCComments()>
<com.puppycrawl.tools.checkstyle.api.FileContents; getCComments[]; com.puppycrawl.tools.checkstyle.api.ImmutableMap<java.lang.Integer,java.util.List<com.puppycrawl.tools.checkstyle.api.TextBlock>>; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; tagSuppressions[]; void; values[]; contents>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; tagSuppressions[java.util.Collection<com.puppycrawl.tools.checkstyle.api.TextBlock>]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; tagSuppressions[]; void; null; this>
<java.util.Collections; sort[java.util.List<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter.Tag>]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; tagSuppressions[]; void; null; Collections>
<com.puppycrawl.tools.checkstyle.api.TextBlock; getStartLineNo[]; int; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; tagSuppressions[java.util.Collection<com.puppycrawl.tools.checkstyle.api.TextBlock>]; void; null; comment>
<com.puppycrawl.tools.checkstyle.api.TextBlock; getText[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; tagSuppressions[java.util.Collection<com.puppycrawl.tools.checkstyle.api.TextBlock>]; void; null; comment>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; tagCommentLine[java.lang.String, int, int]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; tagSuppressions[java.util.Collection<com.puppycrawl.tools.checkstyle.api.TextBlock>]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.TextBlock; getStartColNo[]; int; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; tagSuppressions[java.util.Collection<com.puppycrawl.tools.checkstyle.api.TextBlock>]; void; null; comment>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; tagCommentLine[java.lang.String, int, int]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; tagSuppressions[java.util.Collection<com.puppycrawl.tools.checkstyle.api.TextBlock>]; void; null; this>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; tagCommentLine[java.lang.String, int, int]; void; null; mOffRegexp>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; tagCommentLine[java.lang.String, int, int]; void; null; offMatcher>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; addTag[java.lang.String, int, int, boolean]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; tagCommentLine[java.lang.String, int, int]; void; null; this>
<java.util.regex.Matcher; group[int]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; tagCommentLine[java.lang.String, int, int]; void; null; offMatcher>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; tagCommentLine[java.lang.String, int, int]; void; null; mOnRegexp>
<java.util.regex.Matcher; find[]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; tagCommentLine[java.lang.String, int, int]; void; null; onMatcher>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; addTag[java.lang.String, int, int, boolean]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; tagCommentLine[java.lang.String, int, int]; void; null; this>
<java.util.regex.Matcher; group[int]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; tagCommentLine[java.lang.String, int, int]; void; null; onMatcher>
<java.util.List; add[com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter.Tag]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; addTag[java.lang.String, int, int, boolean]; void; null; mTags>
<com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader; loadSuppressions[java.lang.String]; com.puppycrawl.tools.checkstyle.api.FilterSet; com.puppycrawl.tools.checkstyle.filters.SuppressionFilter; setFile[java.lang.String]; void; null; SuppressionsLoader>
<com.puppycrawl.tools.checkstyle.api.FilterSet; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressionFilter; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; mFilters>
<com.puppycrawl.tools.checkstyle.api.FilterSet; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressionFilter; toString[]; java.lang.String; null; mFilters>
<com.puppycrawl.tools.checkstyle.api.FilterSet; hashCode[]; int; com.puppycrawl.tools.checkstyle.filters.SuppressionFilter; hashCode[]; int; null; mFilters>
<com.puppycrawl.tools.checkstyle.api.FilterSet; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressionFilter; equals[java.lang.Object]; boolean; null; this.mFilters>
<java.lang.Integer; hashCode[]; int; com.puppycrawl.tools.checkstyle.filters.IntMatchFilter; hashCode[]; int; null; Integer.valueOf(mMatchValue)>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.IntMatchFilter; hashCode[]; int; hashCode[]; Integer>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.api.TokenTypesTest; testGetShortDescription[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.TokenTypes; getShortDescription[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.api.TokenTypesTest; testGetShortDescription[]; void; null; TokenTypes>
<com.puppycrawl.tools.checkstyle.api.FastStack; peek[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.FastStackTest; testPeek[]; void; null; new FastStack<String>()>
<com.puppycrawl.tools.checkstyle.api.FastStack; pop[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.FastStackTest; testPop[]; void; null; new FastStack<String>()>
<com.puppycrawl.tools.checkstyle.api.FastStack; newInstance[]; com.puppycrawl.tools.checkstyle.api.FastStack<java.lang.Integer>; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; FastStack>
<not found; assertNotNull[]; not found; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; this>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FastStack; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; fs>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FastStack; size[]; int; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; fs>
<com.puppycrawl.tools.checkstyle.api.FastStack; push[java.lang.Integer]; void; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; fs>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FastStack; size[]; int; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; fs>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FastStack; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; fs>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; this>
<java.lang.Integer; intValue[]; int; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; fs.peek(1)>
<com.puppycrawl.tools.checkstyle.api.FastStack; peek[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; intValue[]; fs>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; this>
<java.lang.Integer; intValue[]; int; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; fs.peek()>
<com.puppycrawl.tools.checkstyle.api.FastStack; peek[]; java.lang.Integer; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; intValue[]; fs>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FastStack; size[]; int; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; fs>
<com.puppycrawl.tools.checkstyle.api.FastStack; pop[]; java.lang.Integer; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; fs>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FastStack; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; fs>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FastStack; size[]; int; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; fs>
<com.puppycrawl.tools.checkstyle.api.FastStack; push[java.lang.Integer]; void; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; fs>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FastStack; size[]; int; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; fs>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FastStack; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; fs>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FastStack; contains[java.lang.Integer]; boolean; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; fs>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FastStack; contains[java.lang.Integer]; boolean; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; fs>
<com.puppycrawl.tools.checkstyle.api.FastStack; clear[]; void; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; fs>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FastStack; contains[java.lang.Integer]; boolean; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; fs>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FastStack; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; fs>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FastStack; size[]; int; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; fs>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; this>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; null; fs.iterator()>
<com.puppycrawl.tools.checkstyle.api.FastStack; iterator[]; java.util.Iterator<java.lang.Integer>; com.puppycrawl.tools.checkstyle.api.FastStackTest; testNormal[]; void; hasNext[]; fs>
<com.puppycrawl.tools.checkstyle.api.DetailAST; setFirstChild[com.puppycrawl.tools.checkstyle.api.AST]; void; com.puppycrawl.tools.checkstyle.api.DetailASTTest; testGetChildCount[]; void; null; root>
<com.puppycrawl.tools.checkstyle.api.DetailAST; setParent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.api.DetailASTTest; testGetChildCount[]; void; null; firstLevelA>
<com.puppycrawl.tools.checkstyle.api.DetailAST; setFirstChild[com.puppycrawl.tools.checkstyle.api.AST]; void; com.puppycrawl.tools.checkstyle.api.DetailASTTest; testGetChildCount[]; void; null; firstLevelA>
<com.puppycrawl.tools.checkstyle.api.DetailAST; setNextSibling[com.puppycrawl.tools.checkstyle.api.AST]; void; com.puppycrawl.tools.checkstyle.api.DetailASTTest; testGetChildCount[]; void; null; firstLevelA>
<com.puppycrawl.tools.checkstyle.api.DetailAST; setParent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.api.DetailASTTest; testGetChildCount[]; void; null; firstLevelB>
<com.puppycrawl.tools.checkstyle.api.DetailAST; setParent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.api.DetailASTTest; testGetChildCount[]; void; null; secondLevelA>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.api.DetailASTTest; testGetChildCount[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; com.puppycrawl.tools.checkstyle.api.DetailASTTest; testGetChildCount[]; void; null; secondLevelA>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.api.DetailASTTest; testGetChildCount[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; com.puppycrawl.tools.checkstyle.api.DetailASTTest; testGetChildCount[]; void; null; firstLevelB>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.api.DetailASTTest; testGetChildCount[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; com.puppycrawl.tools.checkstyle.api.DetailASTTest; testGetChildCount[]; void; null; firstLevelA>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.api.DetailASTTest; testGetChildCount[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; com.puppycrawl.tools.checkstyle.api.DetailASTTest; testGetChildCount[]; void; null; root>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.api.DetailASTTest; testGetChildCount[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; com.puppycrawl.tools.checkstyle.api.DetailASTTest; testGetChildCount[]; void; null; root>
<not found; assertNull[]; not found; com.puppycrawl.tools.checkstyle.api.DetailASTTest; testGetChildCount[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getPreviousSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.DetailASTTest; testGetChildCount[]; void; null; root>
<not found; assertNull[]; not found; com.puppycrawl.tools.checkstyle.api.DetailASTTest; testGetChildCount[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getPreviousSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.DetailASTTest; testGetChildCount[]; void; null; firstLevelA>
<not found; assertNull[]; not found; com.puppycrawl.tools.checkstyle.api.DetailASTTest; testGetChildCount[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getPreviousSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.DetailASTTest; testGetChildCount[]; void; null; secondLevelA>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.api.DetailASTTest; testGetChildCount[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getPreviousSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.DetailASTTest; testGetChildCount[]; void; null; firstLevelB>
<com.puppycrawl.tools.checkstyle.api.DetailASTTest; checkDir[java.io.File]; void; com.puppycrawl.tools.checkstyle.api.DetailASTTest; testTreeStructure[]; void; null; this>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.api.DetailASTTest; testTreeStructure[]; void; null; System>
<java.io.File; listFiles[java.io.FileFilter]; java.io.File[]; com.puppycrawl.tools.checkstyle.api.DetailASTTest; checkDir[java.io.File]; void; null; dir>
<java.lang.String; endsWith[java.lang.String]; boolean; java.lang.Object; accept[java.io.File]; boolean; null; file.getName()>
<java.io.File; getName[]; java.lang.String; java.lang.Object; accept[java.io.File]; boolean; endsWith[java.lang.String]; file>
<java.io.File; isDirectory[]; boolean; java.lang.Object; accept[java.io.File]; boolean; null; file>
<java.lang.String; endsWith[java.lang.String]; boolean; java.lang.Object; accept[java.io.File]; boolean; null; file.getName()>
<java.io.File; getName[]; java.lang.String; java.lang.Object; accept[java.io.File]; boolean; endsWith[java.lang.String]; file>
<java.io.File; isFile[]; boolean; com.puppycrawl.tools.checkstyle.api.DetailASTTest; checkDir[java.io.File]; void; null; files[i]>
<com.puppycrawl.tools.checkstyle.api.DetailASTTest; checkFile[java.lang.String]; void; com.puppycrawl.tools.checkstyle.api.DetailASTTest; checkDir[java.io.File]; void; null; this>
<java.io.File; getCanonicalPath[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.DetailASTTest; checkDir[java.io.File]; void; null; files[i]>
<java.io.File; isDirectory[]; boolean; com.puppycrawl.tools.checkstyle.api.DetailASTTest; checkDir[java.io.File]; void; null; files[i]>
<com.puppycrawl.tools.checkstyle.api.DetailASTTest; checkDir[java.io.File]; void; com.puppycrawl.tools.checkstyle.api.DetailASTTest; checkDir[java.io.File]; void; null; this>
<java.lang.System; getProperty[java.lang.String, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.api.DetailASTTest; checkFile[java.lang.String]; void; null; System>
<com.puppycrawl.tools.checkstyle.TreeWalker; parse[com.puppycrawl.tools.checkstyle.api.FileContents]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.DetailASTTest; checkFile[java.lang.String]; void; null; TreeWalker>
<com.puppycrawl.tools.checkstyle.api.DetailASTTest; checkTree[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.api.DetailASTTest; checkFile[java.lang.String]; void; null; this>
<java.text.MessageFormat; format[java.lang.String, java.lang.Object[]]; java.lang.String; com.puppycrawl.tools.checkstyle.api.DetailASTTest; checkTree[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; MessageFormat>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.api.DetailASTTest; checkTree[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.DetailASTTest; checkTree[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; node>
<java.text.MessageFormat; format[java.lang.String, java.lang.Object[]]; java.lang.String; com.puppycrawl.tools.checkstyle.api.DetailASTTest; checkTree[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; MessageFormat>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.api.DetailASTTest; checkTree[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getPreviousSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.DetailASTTest; checkTree[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; node>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.DetailASTTest; checkTree[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; node>
<com.puppycrawl.tools.checkstyle.api.DetailASTTest; checkTree[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.api.DetailASTTest; checkTree[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.DetailASTTest; checkTree[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; node>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.DetailASTTest; checkTree[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; node>
<com.puppycrawl.tools.checkstyle.api.DetailASTTest; checkTree[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.api.DetailASTTest; checkTree[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.api.DetailASTTest; checkTree[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST, java.lang.String, com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; node>
<com.puppycrawl.tools.checkstyle.api.SeverityLevel; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.SeverityLevel; com.puppycrawl.tools.checkstyle.api.SeverityLevelTest; testMisc[]; void; null; SeverityLevel>
<not found; assertNotNull[]; not found; com.puppycrawl.tools.checkstyle.api.SeverityLevelTest; testMisc[]; void; null; this>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.api.SeverityLevelTest; testMisc[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.SeverityLevel; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.SeverityLevelTest; testMisc[]; void; null; o>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.api.SeverityLevelTest; testMisc[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.SeverityLevel; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.SeverityLevelTest; testMisc[]; void; null; o>
<com.puppycrawl.tools.checkstyle.api.SeverityLevel; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.SeverityLevel; com.puppycrawl.tools.checkstyle.api.SeverityLevelTest; testMisc[]; void; null; SeverityLevel>
<com.puppycrawl.tools.checkstyle.api.SeverityLevel; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.SeverityLevel; com.puppycrawl.tools.checkstyle.api.SeverityLevelTest; testMixedCaseSpaces[]; void; null; SeverityLevel>
<com.puppycrawl.tools.checkstyle.api.SeverityLevel; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.SeverityLevel; com.puppycrawl.tools.checkstyle.api.SeverityLevelTest; testMixedCaseSpaces[]; void; null; SeverityLevel>
<com.puppycrawl.tools.checkstyle.api.SeverityLevel; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.SeverityLevel; com.puppycrawl.tools.checkstyle.api.SeverityLevelTest; testMixedCaseSpaces[]; void; null; SeverityLevel>
<com.puppycrawl.tools.checkstyle.api.SeverityLevel; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.SeverityLevel; com.puppycrawl.tools.checkstyle.api.SeverityLevelTest; testMixedCaseSpaces[]; void; null; SeverityLevel>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testGetMessageBundleWithPackage[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; getMessageBundle[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testGetMessageBundleWithPackage[]; void; null; emptyCheck>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testGetMessageBundleWithoutPackage[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; getMessageBundle[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testGetMessageBundleWithoutPackage[]; void; null; emptyCheck>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessage[]; void; null; this>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.api.Check>; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessage[]; void; null; emptyCheck>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addMessage[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessage[]; void; null; config>
<com.puppycrawl.tools.checkstyle.api.AutomaticBean; configure[com.puppycrawl.tools.checkstyle.api.Configuration]; void; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessage[]; void; null; emptyCheck>
<com.puppycrawl.tools.checkstyle.api.Check; setMessages[com.puppycrawl.tools.checkstyle.api.LocalizedMessages]; void; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessage[]; void; null; emptyCheck>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessage[]; void; null; emptyCheck>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessages; getMessages[]; java.util.TreeSet<com.puppycrawl.tools.checkstyle.api.LocalizedMessage>; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessage[]; void; null; collector>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessage[]; void; null; Assert>
<java.util.TreeSet; size[]; int; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessage[]; void; null; messages>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessage[]; void; null; Assert>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessage; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessage[]; void; null; messages.first()>
<java.util.TreeSet; first[]; com.puppycrawl.tools.checkstyle.api.LocalizedMessage; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessage[]; void; getMessage[]; messages>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessageWithParameters[]; void; null; this>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.api.Check>; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessageWithParameters[]; void; null; emptyCheck>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addMessage[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessageWithParameters[]; void; null; config>
<com.puppycrawl.tools.checkstyle.api.AutomaticBean; configure[com.puppycrawl.tools.checkstyle.api.Configuration]; void; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessageWithParameters[]; void; null; emptyCheck>
<com.puppycrawl.tools.checkstyle.api.Check; setMessages[com.puppycrawl.tools.checkstyle.api.LocalizedMessages]; void; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessageWithParameters[]; void; null; emptyCheck>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessageWithParameters[]; void; null; emptyCheck>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessages; getMessages[]; java.util.TreeSet<com.puppycrawl.tools.checkstyle.api.LocalizedMessage>; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessageWithParameters[]; void; null; collector>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessageWithParameters[]; void; null; Assert>
<java.util.TreeSet; size[]; int; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessageWithParameters[]; void; null; messages>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessageWithParameters[]; void; null; Assert>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessage; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessageWithParameters[]; void; null; messages.first()>
<java.util.TreeSet; first[]; com.puppycrawl.tools.checkstyle.api.LocalizedMessage; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessageWithParameters[]; void; getMessage[]; messages>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessageWithParametersNegative[]; void; null; this>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.api.Check>; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessageWithParametersNegative[]; void; null; emptyCheck>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addMessage[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessageWithParametersNegative[]; void; null; config>
<com.puppycrawl.tools.checkstyle.api.AutomaticBean; configure[com.puppycrawl.tools.checkstyle.api.Configuration]; void; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessageWithParametersNegative[]; void; null; emptyCheck>
<com.puppycrawl.tools.checkstyle.api.Check; setMessages[com.puppycrawl.tools.checkstyle.api.LocalizedMessages]; void; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessageWithParametersNegative[]; void; null; emptyCheck>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessageWithParametersNegative[]; void; null; emptyCheck>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessages; getMessages[]; java.util.TreeSet<com.puppycrawl.tools.checkstyle.api.LocalizedMessage>; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessageWithParametersNegative[]; void; null; collector>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessageWithParametersNegative[]; void; null; Assert>
<java.util.TreeSet; size[]; int; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessageWithParametersNegative[]; void; null; messages>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessage; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessageWithParametersNegative[]; void; null; messages.first()>
<java.util.TreeSet; first[]; com.puppycrawl.tools.checkstyle.api.LocalizedMessage; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessageWithParametersNegative[]; void; getMessage[]; messages>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.api.AutomaticBeanTest; testNoSuchAttribute[]; void; null; mConf>
<com.puppycrawl.tools.checkstyle.api.AutomaticBean; configure[com.puppycrawl.tools.checkstyle.api.Configuration]; void; com.puppycrawl.tools.checkstyle.api.AutomaticBeanTest; testNoSuchAttribute[]; void; null; mTestBean>
<com.puppycrawl.tools.checkstyle.api.Scope; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.api.ScopeTest; testMisc[]; void; null; Scope>
<not found; assertNotNull[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeTest; testMisc[]; void; null; this>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeTest; testMisc[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Scope; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.ScopeTest; testMisc[]; void; null; o>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeTest; testMisc[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Scope; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.api.ScopeTest; testMisc[]; void; null; o>
<com.puppycrawl.tools.checkstyle.api.Scope; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.api.ScopeTest; testMisc[]; void; null; Scope>
<com.puppycrawl.tools.checkstyle.api.Scope; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.api.ScopeTest; testMixedCaseSpaces[]; void; null; Scope>
<com.puppycrawl.tools.checkstyle.api.Scope; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.api.ScopeTest; testMixedCaseSpaces[]; void; null; Scope>
<com.puppycrawl.tools.checkstyle.api.Scope; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.api.ScopeTest; testMixedCaseSpaces[]; void; null; Scope>
<com.puppycrawl.tools.checkstyle.api.Scope; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.api.ScopeTest; testMixedCaseSpaces[]; void; null; Scope>
<com.puppycrawl.tools.checkstyle.api.Scope; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.api.ScopeTest; testMixedCaseSpaces[]; void; null; Scope>
<com.puppycrawl.tools.checkstyle.api.Scope; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.api.ScopeTest; testMixedCaseSpaces[]; void; null; Scope>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInAnonInner[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInAnonInner[]; void; null; Scope.NOTHING>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInAnonInner[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInAnonInner[]; void; null; Scope.PUBLIC>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInAnonInner[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInAnonInner[]; void; null; Scope.PROTECTED>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInAnonInner[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInAnonInner[]; void; null; Scope.PACKAGE>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInAnonInner[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInAnonInner[]; void; null; Scope.PRIVATE>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInAnonInner[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInAnonInner[]; void; null; Scope.ANONINNER>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInPrivate[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInPrivate[]; void; null; Scope.NOTHING>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInPrivate[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInPrivate[]; void; null; Scope.PUBLIC>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInPrivate[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInPrivate[]; void; null; Scope.PROTECTED>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInPrivate[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInPrivate[]; void; null; Scope.PACKAGE>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInPrivate[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInPrivate[]; void; null; Scope.PRIVATE>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInPrivate[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInPrivate[]; void; null; Scope.ANONINNER>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInPackage[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInPackage[]; void; null; Scope.NOTHING>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInPackage[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInPackage[]; void; null; Scope.PUBLIC>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInPackage[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInPackage[]; void; null; Scope.PROTECTED>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInPackage[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInPackage[]; void; null; Scope.PACKAGE>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInPackage[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInPackage[]; void; null; Scope.PRIVATE>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInPackage[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInPackage[]; void; null; Scope.ANONINNER>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInProtected[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInProtected[]; void; null; Scope.NOTHING>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInProtected[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInProtected[]; void; null; Scope.PUBLIC>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInProtected[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInProtected[]; void; null; Scope.PROTECTED>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInProtected[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInProtected[]; void; null; Scope.PACKAGE>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInProtected[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInProtected[]; void; null; Scope.PRIVATE>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInProtected[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInProtected[]; void; null; Scope.ANONINNER>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInPublic[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInPublic[]; void; null; Scope.NOTHING>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInPublic[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInPublic[]; void; null; Scope.PUBLIC>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInPublic[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInPublic[]; void; null; Scope.PROTECTED>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInPublic[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInPublic[]; void; null; Scope.PACKAGE>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInPublic[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInPublic[]; void; null; Scope.PRIVATE>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInPublic[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInPublic[]; void; null; Scope.ANONINNER>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInNothing[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInNothing[]; void; null; Scope.NOTHING>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInNothing[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInNothing[]; void; null; Scope.PUBLIC>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInNothing[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInNothing[]; void; null; Scope.PROTECTED>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInNothing[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInNothing[]; void; null; Scope.PACKAGE>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInNothing[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInNothing[]; void; null; Scope.PRIVATE>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInNothing[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Scope; isIn[com.puppycrawl.tools.checkstyle.api.Scope]; boolean; com.puppycrawl.tools.checkstyle.api.ScopeTest; testIsInNothing[]; void; null; Scope.ANONINNER>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.UtilsTest; testLengthExpandedTabs[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Utils; lengthExpandedTabs[java.lang.String, int, int]; int; com.puppycrawl.tools.checkstyle.UtilsTest; testLengthExpandedTabs[]; void; null; Utils>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.UtilsTest; testLengthExpandedTabs[]; void; null; s1>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.UtilsTest; testLengthExpandedTabs[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Utils; lengthExpandedTabs[java.lang.String, int, int]; int; com.puppycrawl.tools.checkstyle.UtilsTest; testLengthExpandedTabs[]; void; null; Utils>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.UtilsTest; testLengthExpandedTabs[]; void; null; s2>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.UtilsTest; testLengthExpandedTabs[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Utils; lengthExpandedTabs[java.lang.String, int, int]; int; com.puppycrawl.tools.checkstyle.UtilsTest; testLengthExpandedTabs[]; void; null; Utils>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.UtilsTest; testLengthExpandedTabs[]; void; null; s3>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.UtilsTest; testLengthExpandedTabs[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Utils; lengthExpandedTabs[java.lang.String, int, int]; int; com.puppycrawl.tools.checkstyle.UtilsTest; testLengthExpandedTabs[]; void; null; Utils>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.UtilsTest; testLengthExpandedTabs[]; void; null; s4>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.UtilsTest; testLengthExpandedTabs[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Utils; lengthMinusTrailingWhitespace[java.lang.String]; int; com.puppycrawl.tools.checkstyle.UtilsTest; testLengthExpandedTabs[]; void; null; Utils>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.UtilsTest; testLengthExpandedTabs[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Utils; lengthMinusTrailingWhitespace[java.lang.String]; int; com.puppycrawl.tools.checkstyle.UtilsTest; testLengthExpandedTabs[]; void; null; Utils>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.UtilsTest; testLengthExpandedTabs[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Utils; lengthMinusTrailingWhitespace[java.lang.String]; int; com.puppycrawl.tools.checkstyle.UtilsTest; testLengthExpandedTabs[]; void; null; Utils>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.UtilsTest; testLengthExpandedTabs[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Utils; lengthMinusTrailingWhitespace[java.lang.String]; int; com.puppycrawl.tools.checkstyle.UtilsTest; testLengthExpandedTabs[]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.UtilsTest; testLengthExpandedTabs[]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.UtilsTest; testLengthExpandedTabs[]; void; null; Utils>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.UtilsTest; testLengthExpandedTabs[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Utils; createPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.UtilsTest; testBadRegex[]; void; null; Utils>
<java.lang.Class; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.BaseCheckTestSupport; createCheckConfig[java.lang.Class<?>]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; null; aClazz>
<com.puppycrawl.tools.checkstyle.BaseCheckTestSupport; createCheckerConfig[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; com.puppycrawl.tools.checkstyle.BaseCheckTestSupport; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; this>
<com.puppycrawl.tools.checkstyle.Checker; setLocaleCountry[java.lang.String]; void; com.puppycrawl.tools.checkstyle.BaseCheckTestSupport; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; c>
<java.util.Locale; getCountry[]; java.lang.String; com.puppycrawl.tools.checkstyle.BaseCheckTestSupport; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; locale>
<com.puppycrawl.tools.checkstyle.Checker; setLocaleLanguage[java.lang.String]; void; com.puppycrawl.tools.checkstyle.BaseCheckTestSupport; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; c>
<java.util.Locale; getLanguage[]; java.lang.String; com.puppycrawl.tools.checkstyle.BaseCheckTestSupport; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; locale>
<com.puppycrawl.tools.checkstyle.Checker; setModuleClassLoader[java.lang.ClassLoader]; void; com.puppycrawl.tools.checkstyle.BaseCheckTestSupport; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; c>
<java.lang.Thread; getContextClassLoader[]; java.lang.ClassLoader; com.puppycrawl.tools.checkstyle.BaseCheckTestSupport; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; Thread.currentThread()>
<java.lang.Thread; currentThread[]; java.lang.Thread; com.puppycrawl.tools.checkstyle.BaseCheckTestSupport; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; getContextClassLoader[]; Thread>
<com.puppycrawl.tools.checkstyle.api.AutomaticBean; configure[com.puppycrawl.tools.checkstyle.api.Configuration]; void; com.puppycrawl.tools.checkstyle.BaseCheckTestSupport; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; c>
<com.puppycrawl.tools.checkstyle.Checker; addListener[com.puppycrawl.tools.checkstyle.api.AuditListener]; void; com.puppycrawl.tools.checkstyle.BaseCheckTestSupport; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; c>
<com.puppycrawl.tools.checkstyle.BaseCheckTestSupport; createCheckConfig[java.lang.Class<?>]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; com.puppycrawl.tools.checkstyle.BaseCheckTestSupport; createCheckerConfig[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.BaseCheckTestSupport; createCheckerConfig[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; null; dc>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; com.puppycrawl.tools.checkstyle.BaseCheckTestSupport; createCheckerConfig[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; null; dc>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; com.puppycrawl.tools.checkstyle.BaseCheckTestSupport; createCheckerConfig[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; null; twConf>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.BaseCheckTestSupport; getPath[java.lang.String]; java.lang.String; null; System>
<java.io.File; getCanonicalPath[]; java.lang.String; com.puppycrawl.tools.checkstyle.BaseCheckTestSupport; getPath[java.lang.String]; java.lang.String; null; f>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.BaseCheckTestSupport; getSrcPath[java.lang.String]; java.lang.String; null; System>
<java.io.File; getCanonicalPath[]; java.lang.String; com.puppycrawl.tools.checkstyle.BaseCheckTestSupport; getSrcPath[java.lang.String]; java.lang.String; null; f>
<com.puppycrawl.tools.checkstyle.BaseCheckTestSupport; verify[com.puppycrawl.tools.checkstyle.Checker, java.lang.String, java.lang.String, java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.BaseCheckTestSupport; verify[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String, java.lang.String[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.BaseCheckTestSupport; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; com.puppycrawl.tools.checkstyle.BaseCheckTestSupport; verify[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String, java.lang.String[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.BaseCheckTestSupport; verify[com.puppycrawl.tools.checkstyle.Checker, java.lang.String, java.lang.String, java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.BaseCheckTestSupport; verify[com.puppycrawl.tools.checkstyle.Checker, java.lang.String, java.lang.String[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.BaseCheckTestSupport; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.BaseCheckTestSupport; verify[com.puppycrawl.tools.checkstyle.Checker, java.lang.String, java.lang.String, java.lang.String[]]; void; null; this>
<java.io.PrintStream; flush[]; void; com.puppycrawl.tools.checkstyle.BaseCheckTestSupport; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; null; mStream>
<not found; newArrayList[]; not found; com.puppycrawl.tools.checkstyle.BaseCheckTestSupport; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; null; Lists>
<java.util.Collections; addAll[java.util.Collection<? super java.io.File>, java.io.File[]]; boolean; com.puppycrawl.tools.checkstyle.BaseCheckTestSupport; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; null; Collections>
<com.puppycrawl.tools.checkstyle.Checker; process[java.util.List<java.io.File>]; int; com.puppycrawl.tools.checkstyle.BaseCheckTestSupport; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; null; aC>
<java.io.ByteArrayOutputStream; toByteArray[]; byte[]; com.puppycrawl.tools.checkstyle.BaseCheckTestSupport; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; null; mBAOS>
<java.io.LineNumberReader; readLine[]; java.lang.String; com.puppycrawl.tools.checkstyle.BaseCheckTestSupport; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; null; lnr>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.BaseCheckTestSupport; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; null; this>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.BaseCheckTestSupport; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; null; this>
<java.io.LineNumberReader; readLine[]; java.lang.String; com.puppycrawl.tools.checkstyle.BaseCheckTestSupport; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; null; lnr>
<com.puppycrawl.tools.checkstyle.Checker; destroy[]; void; com.puppycrawl.tools.checkstyle.BaseCheckTestSupport; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; null; aC>
<com.puppycrawl.tools.checkstyle.PackageNamesLoader; getPackageNames[java.lang.ClassLoader]; java.util.Set<java.lang.String>; com.puppycrawl.tools.checkstyle.PackageNamesLoaderTest; testDefault[]; void; null; PackageNamesLoader>
<java.lang.Thread; getContextClassLoader[]; java.lang.ClassLoader; com.puppycrawl.tools.checkstyle.PackageNamesLoaderTest; testDefault[]; void; null; Thread.currentThread()>
<java.lang.Thread; currentThread[]; java.lang.Thread; com.puppycrawl.tools.checkstyle.PackageNamesLoaderTest; testDefault[]; void; getContextClassLoader[]; Thread>
<com.puppycrawl.tools.checkstyle.PackageNamesLoaderTest; validatePackageNames[java.util.Set<java.lang.String>]; void; com.puppycrawl.tools.checkstyle.PackageNamesLoaderTest; testDefault[]; void; null; this>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.PackageNamesLoaderTest; validatePackageNames[java.util.Set<java.lang.String>]; void; null; this>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.PackageNamesLoaderTest; validatePackageNames[java.util.Set<java.lang.String>]; void; null; aPkgNames>
<not found; newHashSet[]; not found; com.puppycrawl.tools.checkstyle.PackageNamesLoaderTest; validatePackageNames[java.util.Set<java.lang.String>]; void; null; Sets>
<java.util.Arrays; asList[java.lang.String[]]; java.util.List<java.lang.String>; com.puppycrawl.tools.checkstyle.PackageNamesLoaderTest; validatePackageNames[java.util.Set<java.lang.String>]; void; null; Arrays>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.PackageNamesLoaderTest; validatePackageNames[java.util.Set<java.lang.String>]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.grammars.HexFloatsTest; testCanParse[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.grammars.HexFloatsTest; testCanParse[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.grammars.HexFloatsTest; testCanParse[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.grammars.Java7DiamondTest; testCanParse[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.grammars.Java7DiamondTest; testCanParse[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.grammars.Java7DiamondTest; testCanParse[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.grammars.GeneratedJava14LexerTest; testUnexpectedChar[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.grammars.GeneratedJava14LexerTest; testUnexpectedChar[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.grammars.GeneratedJava14LexerTest; testUnexpectedChar[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.grammars.Java7StringSwitchTest; testCanParse[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.grammars.Java7StringSwitchTest; testCanParse[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.grammars.Java7StringSwitchTest; testCanParse[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.grammars.Java7TryWithResourcesTest; testCanParse[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.grammars.Java7TryWithResourcesTest; testCanParse[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.grammars.Java7TryWithResourcesTest; testCanParse[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.grammars.VarargTest; testCanParse[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.grammars.VarargTest; testCanParse[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.grammars.VarargTest; testCanParse[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.grammars.EmbeddedNullCharTest; testCanParse[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.grammars.EmbeddedNullCharTest; testCanParse[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.grammars.EmbeddedNullCharTest; testCanParse[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.grammars.Java7NumericalLiteralsTest; testCanParse[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.grammars.Java7NumericalLiteralsTest; testCanParse[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.grammars.Java7NumericalLiteralsTest; testCanParse[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.grammars.LineCommentAtTheEndOfFileTest; testCanParse[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.grammars.LineCommentAtTheEndOfFileTest; testCanParse[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.grammars.LineCommentAtTheEndOfFileTest; testCanParse[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.grammars.Java7MultiCatchTest; testCanParse[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.grammars.Java7MultiCatchTest; testCanParse[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.grammars.Java7MultiCatchTest; testCanParse[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.grammars.UnicodeEscapeTest; testCanParse[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.grammars.UnicodeEscapeTest; testCanParse[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.grammars.UnicodeEscapeTest; testCanParse[]; void; null; this>
<com.puppycrawl.tools.checkstyle.XMLLogger; encode[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.XMLLoggerTest; testEncode[]; void; null; logger>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.XMLLoggerTest; testEncode[]; void; null; this>
<java.io.ByteArrayOutputStream; close[]; void; com.puppycrawl.tools.checkstyle.XMLLoggerTest; testEncode[]; void; null; outStream>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.XMLLoggerTest; testIsReference[]; void; null; this>
<com.puppycrawl.tools.checkstyle.XMLLogger; isReference[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.XMLLoggerTest; testIsReference[]; void; null; logger>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.XMLLoggerTest; testIsReference[]; void; null; this>
<com.puppycrawl.tools.checkstyle.XMLLogger; isReference[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.XMLLoggerTest; testIsReference[]; void; null; logger>
<java.io.ByteArrayOutputStream; close[]; void; com.puppycrawl.tools.checkstyle.XMLLoggerTest; testIsReference[]; void; null; outStream>
<com.puppycrawl.tools.checkstyle.XMLLogger; auditStarted[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; com.puppycrawl.tools.checkstyle.XMLLoggerTest; testCloseStream[]; void; null; logger>
<com.puppycrawl.tools.checkstyle.XMLLogger; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; com.puppycrawl.tools.checkstyle.XMLLoggerTest; testCloseStream[]; void; null; logger>
<com.puppycrawl.tools.checkstyle.XMLLoggerTest; verifyLines[java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.XMLLoggerTest; testCloseStream[]; void; null; this>
<com.puppycrawl.tools.checkstyle.XMLLogger; auditStarted[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; com.puppycrawl.tools.checkstyle.XMLLoggerTest; testNoCloseStream[]; void; null; logger>
<com.puppycrawl.tools.checkstyle.XMLLogger; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; com.puppycrawl.tools.checkstyle.XMLLoggerTest; testNoCloseStream[]; void; null; logger>
<java.io.ByteArrayOutputStream; close[]; void; com.puppycrawl.tools.checkstyle.XMLLoggerTest; testNoCloseStream[]; void; null; outStream>
<com.puppycrawl.tools.checkstyle.XMLLoggerTest; verifyLines[java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.XMLLoggerTest; testNoCloseStream[]; void; null; this>
<com.puppycrawl.tools.checkstyle.XMLLogger; auditStarted[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; com.puppycrawl.tools.checkstyle.XMLLoggerTest; testFileStarted[]; void; null; logger>
<com.puppycrawl.tools.checkstyle.XMLLogger; fileStarted[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; com.puppycrawl.tools.checkstyle.XMLLoggerTest; testFileStarted[]; void; null; logger>
<com.puppycrawl.tools.checkstyle.XMLLogger; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; com.puppycrawl.tools.checkstyle.XMLLoggerTest; testFileStarted[]; void; null; logger>
<com.puppycrawl.tools.checkstyle.XMLLoggerTest; verifyLines[java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.XMLLoggerTest; testFileStarted[]; void; null; this>
<com.puppycrawl.tools.checkstyle.XMLLogger; auditStarted[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; com.puppycrawl.tools.checkstyle.XMLLoggerTest; testFileFinished[]; void; null; logger>
<com.puppycrawl.tools.checkstyle.XMLLogger; fileFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; com.puppycrawl.tools.checkstyle.XMLLoggerTest; testFileFinished[]; void; null; logger>
<com.puppycrawl.tools.checkstyle.XMLLogger; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; com.puppycrawl.tools.checkstyle.XMLLoggerTest; testFileFinished[]; void; null; logger>
<com.puppycrawl.tools.checkstyle.XMLLoggerTest; verifyLines[java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.XMLLoggerTest; testFileFinished[]; void; null; this>
<com.puppycrawl.tools.checkstyle.XMLLogger; auditStarted[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; com.puppycrawl.tools.checkstyle.XMLLoggerTest; testAddError[]; void; null; logger>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.XMLLoggerTest>; com.puppycrawl.tools.checkstyle.XMLLoggerTest; testAddError[]; void; null; this>
<com.puppycrawl.tools.checkstyle.XMLLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; com.puppycrawl.tools.checkstyle.XMLLoggerTest; testAddError[]; void; null; logger>
<com.puppycrawl.tools.checkstyle.XMLLogger; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; com.puppycrawl.tools.checkstyle.XMLLoggerTest; testAddError[]; void; null; logger>
<com.puppycrawl.tools.checkstyle.XMLLoggerTest; verifyLines[java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.XMLLoggerTest; testAddError[]; void; null; this>
<com.puppycrawl.tools.checkstyle.XMLLogger; auditStarted[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; com.puppycrawl.tools.checkstyle.XMLLoggerTest; testAddException[]; void; null; logger>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.XMLLoggerTest>; com.puppycrawl.tools.checkstyle.XMLLoggerTest; testAddException[]; void; null; this>
<com.puppycrawl.tools.checkstyle.XMLLogger; addException[com.puppycrawl.tools.checkstyle.api.AuditEvent, java.lang.Throwable]; void; com.puppycrawl.tools.checkstyle.XMLLoggerTest; testAddException[]; void; null; logger>
<com.puppycrawl.tools.checkstyle.XMLLogger; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; com.puppycrawl.tools.checkstyle.XMLLoggerTest; testAddException[]; void; null; logger>
<com.puppycrawl.tools.checkstyle.XMLLoggerTest; verifyLines[java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.XMLLoggerTest; testAddException[]; void; null; this>
<java.io.ByteArrayOutputStream; toByteArray[]; byte[]; com.puppycrawl.tools.checkstyle.XMLLoggerTest; getOutStreamLines[]; java.lang.String[]; null; outStream>
<not found; newArrayList[]; not found; com.puppycrawl.tools.checkstyle.XMLLoggerTest; getOutStreamLines[]; java.lang.String[]; null; Lists>
<java.io.BufferedReader; readLine[]; java.lang.String; com.puppycrawl.tools.checkstyle.XMLLoggerTest; getOutStreamLines[]; java.lang.String[]; null; reader>
<java.util.List; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.XMLLoggerTest; getOutStreamLines[]; java.lang.String[]; null; lineList>
<java.io.BufferedReader; close[]; void; com.puppycrawl.tools.checkstyle.XMLLoggerTest; getOutStreamLines[]; java.lang.String[]; null; reader>
<java.util.List; toArray[java.lang.String[]]; java.lang.String[]; com.puppycrawl.tools.checkstyle.XMLLoggerTest; getOutStreamLines[]; java.lang.String[]; null; lineList>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.XMLLoggerTest; getOutStreamLines[]; java.lang.String[]; null; lineList>
<com.puppycrawl.tools.checkstyle.XMLLoggerTest; getOutStreamLines[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.XMLLoggerTest; verifyLines[java.lang.String[]]; void; null; this>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.XMLLoggerTest; verifyLines[java.lang.String[]]; void; null; this>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.XMLLoggerTest; verifyLines[java.lang.String[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.XMLLoggerTest; verifyLines[java.lang.String[]]; void; null; Utils>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.XMLLoggerTest; verifyLines[java.lang.String[]]; void; null; this>
<java.util.regex.Matcher; matches[]; boolean; com.puppycrawl.tools.checkstyle.XMLLoggerTest; verifyLines[java.lang.String[]]; void; null; checkstyleOpenTag.matcher(lines[1])>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.XMLLoggerTest; verifyLines[java.lang.String[]]; void; matches[]; checkstyleOpenTag>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.XMLLoggerTest; verifyLines[java.lang.String[]]; void; null; this>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.XMLLoggerTest; verifyLines[java.lang.String[]]; void; null; this>
<java.io.PrintWriter; print[java.lang.String]; void; com.puppycrawl.tools.checkstyle.XMLLoggerTest.TestThrowable; printStackTrace[java.io.PrintWriter]; void; null; s>
<com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; loadConfiguration[java.lang.String, java.util.Properties]; com.puppycrawl.tools.checkstyle.api.Configuration; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; loadConfiguration[java.lang.String]; com.puppycrawl.tools.checkstyle.api.Configuration; null; this>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; loadConfiguration[java.lang.String, java.util.Properties]; com.puppycrawl.tools.checkstyle.api.Configuration; null; System>
<com.puppycrawl.tools.checkstyle.ConfigurationLoader; loadConfiguration[java.lang.String, com.puppycrawl.tools.checkstyle.PropertyResolver]; com.puppycrawl.tools.checkstyle.api.Configuration; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; loadConfiguration[java.lang.String, java.util.Properties]; com.puppycrawl.tools.checkstyle.api.Configuration; null; ConfigurationLoader>
<com.puppycrawl.tools.checkstyle.ConfigurationLoader; loadConfiguration[java.lang.String, com.puppycrawl.tools.checkstyle.PropertyResolver]; com.puppycrawl.tools.checkstyle.api.Configuration; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testResourceLoadConfiguration[]; void; null; ConfigurationLoader>
<com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; verifyConfigNode[com.puppycrawl.tools.checkstyle.DefaultConfiguration, java.lang.String, int, java.util.Properties]; void; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testResourceLoadConfiguration[]; void; null; this>
<com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; loadConfiguration[java.lang.String]; com.puppycrawl.tools.checkstyle.api.Configuration; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testEmptyConfiguration[]; void; null; this>
<com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; verifyConfigNode[com.puppycrawl.tools.checkstyle.DefaultConfiguration, java.lang.String, int, java.util.Properties]; void; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testEmptyConfiguration[]; void; null; this>
<com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; loadConfiguration[java.lang.String]; com.puppycrawl.tools.checkstyle.api.Configuration; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testMissingPropertyName[]; void; null; this>
<not found; fail[]; not found; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testMissingPropertyName[]; void; null; this>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testMissingPropertyName[]; void; null; this>
<java.lang.String; endsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testMissingPropertyName[]; void; null; ex.getMessage()>
<java.lang.Throwable; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testMissingPropertyName[]; void; endsWith[java.lang.String]; ex>
<com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; loadConfiguration[java.lang.String]; com.puppycrawl.tools.checkstyle.api.Configuration; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testMissingPropertyValue[]; void; null; this>
<not found; fail[]; not found; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testMissingPropertyValue[]; void; null; this>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testMissingPropertyValue[]; void; null; this>
<java.lang.String; endsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testMissingPropertyValue[]; void; null; ex.getMessage()>
<java.lang.Throwable; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testMissingPropertyValue[]; void; endsWith[java.lang.String]; ex>
<com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; loadConfiguration[java.lang.String]; com.puppycrawl.tools.checkstyle.api.Configuration; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testMissingConfigName[]; void; null; this>
<not found; fail[]; not found; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testMissingConfigName[]; void; null; this>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testMissingConfigName[]; void; null; this>
<java.lang.String; endsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testMissingConfigName[]; void; null; ex.getMessage()>
<java.lang.Throwable; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testMissingConfigName[]; void; endsWith[java.lang.String]; ex>
<com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; loadConfiguration[java.lang.String]; com.puppycrawl.tools.checkstyle.api.Configuration; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testMissingConfigParent[]; void; null; this>
<not found; fail[]; not found; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testMissingConfigParent[]; void; null; this>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testMissingConfigParent[]; void; null; this>
<java.lang.String; endsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testMissingConfigParent[]; void; null; ex.getMessage()>
<java.lang.Throwable; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testMissingConfigParent[]; void; endsWith[java.lang.String]; ex>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testCheckstyleChecks[]; void; null; props>
<com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; loadConfiguration[java.lang.String, java.util.Properties]; com.puppycrawl.tools.checkstyle.api.Configuration; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testCheckstyleChecks[]; void; null; this>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testCheckstyleChecks[]; void; null; atts>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testCheckstyleChecks[]; void; null; atts>
<com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; verifyConfigNode[com.puppycrawl.tools.checkstyle.DefaultConfiguration, java.lang.String, int, java.util.Properties]; void; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testCheckstyleChecks[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; getChildren[]; com.puppycrawl.tools.checkstyle.api.Configuration[]; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testCheckstyleChecks[]; void; null; config>
<java.util.Properties; clear[]; void; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testCheckstyleChecks[]; void; null; atts>
<com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; verifyConfigNode[com.puppycrawl.tools.checkstyle.DefaultConfiguration, java.lang.String, int, java.util.Properties]; void; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testCheckstyleChecks[]; void; null; this>
<com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; verifyConfigNode[com.puppycrawl.tools.checkstyle.DefaultConfiguration, java.lang.String, int, java.util.Properties]; void; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testCheckstyleChecks[]; void; null; this>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testCheckstyleChecks[]; void; null; atts>
<com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; verifyConfigNode[com.puppycrawl.tools.checkstyle.DefaultConfiguration, java.lang.String, int, java.util.Properties]; void; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testCheckstyleChecks[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Configuration; getChildren[]; com.puppycrawl.tools.checkstyle.api.Configuration[]; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testCheckstyleChecks[]; void; null; children[0]>
<java.util.Properties; clear[]; void; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testCheckstyleChecks[]; void; null; atts>
<com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; verifyConfigNode[com.puppycrawl.tools.checkstyle.DefaultConfiguration, java.lang.String, int, java.util.Properties]; void; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testCheckstyleChecks[]; void; null; this>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testCheckstyleChecks[]; void; null; atts>
<com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; verifyConfigNode[com.puppycrawl.tools.checkstyle.DefaultConfiguration, java.lang.String, int, java.util.Properties]; void; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testCheckstyleChecks[]; void; null; this>
<java.util.Properties; clear[]; void; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testCheckstyleChecks[]; void; null; atts>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testCheckstyleChecks[]; void; null; atts>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testCheckstyleChecks[]; void; null; atts>
<com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; verifyConfigNode[com.puppycrawl.tools.checkstyle.DefaultConfiguration, java.lang.String, int, java.util.Properties]; void; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testCheckstyleChecks[]; void; null; this>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testCustomMessages[]; void; null; props>
<com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; loadConfiguration[java.lang.String, java.util.Properties]; com.puppycrawl.tools.checkstyle.api.Configuration; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testCustomMessages[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; getChildren[]; com.puppycrawl.tools.checkstyle.api.Configuration[]; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testCustomMessages[]; void; null; config>
<com.puppycrawl.tools.checkstyle.api.Configuration; getChildren[]; com.puppycrawl.tools.checkstyle.api.Configuration[]; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testCustomMessages[]; void; null; children[0]>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testCustomMessages[]; void; null; this>
<not found; containsKey[]; not found; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testCustomMessages[]; void; null; ((DefaultConfiguration)grandchildren[0]).getMessages()>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; getMessages[]; com.puppycrawl.tools.checkstyle.ImmutableMap<java.lang.String,java.lang.String>; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testCustomMessages[]; void; containsKey[]; ((DefaultConfiguration)grandchildren[0])>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; verifyConfigNode[com.puppycrawl.tools.checkstyle.DefaultConfiguration, java.lang.String, int, java.util.Properties]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; verifyConfigNode[com.puppycrawl.tools.checkstyle.DefaultConfiguration, java.lang.String, int, java.util.Properties]; void; null; aConfig>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; verifyConfigNode[com.puppycrawl.tools.checkstyle.DefaultConfiguration, java.lang.String, int, java.util.Properties]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; getChildren[]; com.puppycrawl.tools.checkstyle.api.Configuration[]; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; verifyConfigNode[com.puppycrawl.tools.checkstyle.DefaultConfiguration, java.lang.String, int, java.util.Properties]; void; null; aConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; getAttributeNames[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; verifyConfigNode[com.puppycrawl.tools.checkstyle.DefaultConfiguration, java.lang.String, int, java.util.Properties]; void; null; aConfig>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; verifyConfigNode[com.puppycrawl.tools.checkstyle.DefaultConfiguration, java.lang.String, int, java.util.Properties]; void; null; this>
<java.util.Properties; size[]; int; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; verifyConfigNode[com.puppycrawl.tools.checkstyle.DefaultConfiguration, java.lang.String, int, java.util.Properties]; void; null; atts>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; verifyConfigNode[com.puppycrawl.tools.checkstyle.DefaultConfiguration, java.lang.String, int, java.util.Properties]; void; null; this>
<java.util.Properties; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; verifyConfigNode[com.puppycrawl.tools.checkstyle.DefaultConfiguration, java.lang.String, int, java.util.Properties]; void; null; atts>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; getAttribute[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; verifyConfigNode[com.puppycrawl.tools.checkstyle.DefaultConfiguration, java.lang.String, int, java.util.Properties]; void; null; aConfig>
<com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; initProperties[]; java.util.Properties; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testReplacePropertiesNoReplace[]; void; null; this>
<com.puppycrawl.tools.checkstyle.ConfigurationLoader; replaceProperties[java.lang.String, com.puppycrawl.tools.checkstyle.PropertyResolver, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testReplacePropertiesNoReplace[]; void; null; ConfigurationLoader>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testReplacePropertiesNoReplace[]; void; null; this>
<com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; initProperties[]; java.util.Properties; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testReplacePropertiesSyntaxError[]; void; null; this>
<com.puppycrawl.tools.checkstyle.ConfigurationLoader; replaceProperties[java.lang.String, com.puppycrawl.tools.checkstyle.PropertyResolver, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testReplacePropertiesSyntaxError[]; void; null; ConfigurationLoader>
<not found; fail[]; not found; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testReplacePropertiesSyntaxError[]; void; null; this>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testReplacePropertiesSyntaxError[]; void; null; this>
<java.lang.Throwable; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testReplacePropertiesSyntaxError[]; void; null; ex>
<com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; initProperties[]; java.util.Properties; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testReplacePropertiesMissingProperty[]; void; null; this>
<com.puppycrawl.tools.checkstyle.ConfigurationLoader; replaceProperties[java.lang.String, com.puppycrawl.tools.checkstyle.PropertyResolver, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testReplacePropertiesMissingProperty[]; void; null; ConfigurationLoader>
<not found; fail[]; not found; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testReplacePropertiesMissingProperty[]; void; null; this>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testReplacePropertiesMissingProperty[]; void; null; this>
<java.lang.Throwable; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testReplacePropertiesMissingProperty[]; void; null; ex>
<com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; initProperties[]; java.util.Properties; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testReplacePropertiesReplace[]; void; null; this>
<com.puppycrawl.tools.checkstyle.ConfigurationLoader; replaceProperties[java.lang.String, com.puppycrawl.tools.checkstyle.PropertyResolver, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testReplacePropertiesReplace[]; void; null; ConfigurationLoader>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testReplacePropertiesReplace[]; void; null; this>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; initProperties[]; java.util.Properties; null; props>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; initProperties[]; java.util.Properties; null; props>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testExternalEntity[]; void; null; props>
<com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; loadConfiguration[java.lang.String, java.util.Properties]; com.puppycrawl.tools.checkstyle.api.Configuration; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testExternalEntity[]; void; null; this>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testExternalEntity[]; void; null; atts>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testExternalEntity[]; void; null; atts>
<com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; verifyConfigNode[com.puppycrawl.tools.checkstyle.DefaultConfiguration, java.lang.String, int, java.util.Properties]; void; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testExternalEntity[]; void; null; this>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testExternalEntitySubdir[]; void; null; props>
<com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; loadConfiguration[java.lang.String, java.util.Properties]; com.puppycrawl.tools.checkstyle.api.Configuration; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testExternalEntitySubdir[]; void; null; this>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testExternalEntitySubdir[]; void; null; atts>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testExternalEntitySubdir[]; void; null; atts>
<com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; verifyConfigNode[com.puppycrawl.tools.checkstyle.DefaultConfiguration, java.lang.String, int, java.util.Properties]; void; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testExternalEntitySubdir[]; void; null; this>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testExternalEntityFromURI[]; void; null; props>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testExternalEntityFromURI[]; void; null; System>
<com.puppycrawl.tools.checkstyle.ConfigurationLoader; loadConfiguration[java.lang.String, com.puppycrawl.tools.checkstyle.PropertyResolver]; com.puppycrawl.tools.checkstyle.api.Configuration; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testExternalEntityFromURI[]; void; null; ConfigurationLoader>
<java.net.URI; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testExternalEntityFromURI[]; void; null; file.toURI()>
<java.io.File; toURI[]; java.net.URI; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testExternalEntityFromURI[]; void; toString[]; file>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testExternalEntityFromURI[]; void; null; atts>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testExternalEntityFromURI[]; void; null; atts>
<com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; verifyConfigNode[com.puppycrawl.tools.checkstyle.DefaultConfiguration, java.lang.String, int, java.util.Properties]; void; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testExternalEntityFromURI[]; void; null; this>
<java.lang.Thread; getContextClassLoader[]; java.lang.ClassLoader; com.puppycrawl.tools.checkstyle.DebugFilter; resetFilter[]; void; null; Thread.currentThread()>
<java.lang.Thread; currentThread[]; java.lang.Thread; com.puppycrawl.tools.checkstyle.DebugFilter; resetFilter[]; void; getContextClassLoader[]; Thread>
<com.puppycrawl.tools.checkstyle.PackageObjectFactory; createModule[java.lang.String]; java.lang.Object; com.puppycrawl.tools.checkstyle.PackageObjectFactoryTest; testMakeObjectFromName[]; void; null; mFactory>
<not found; assertNotNull[]; not found; com.puppycrawl.tools.checkstyle.PackageObjectFactoryTest; testMakeObjectFromName[]; void; null; this>
<com.puppycrawl.tools.checkstyle.PackageObjectFactory; createModule[java.lang.String]; java.lang.Object; com.puppycrawl.tools.checkstyle.PackageObjectFactoryTest; testMakeCheckFromName[]; void; null; mFactory>
<not found; assertNotNull[]; not found; com.puppycrawl.tools.checkstyle.PackageObjectFactoryTest; testMakeCheckFromName[]; void; null; this>
<com.puppycrawl.tools.checkstyle.PackageObjectFactory; addPackage[java.lang.String]; void; com.puppycrawl.tools.checkstyle.PackageObjectFactoryTest; testMakeObectFromList[]; void; null; mFactory>
<com.puppycrawl.tools.checkstyle.PackageObjectFactory; createModule[java.lang.String]; java.lang.Object; com.puppycrawl.tools.checkstyle.PackageObjectFactoryTest; testMakeObectFromList[]; void; null; mFactory>
<not found; assertNotNull[]; not found; com.puppycrawl.tools.checkstyle.PackageObjectFactoryTest; testMakeObectFromList[]; void; null; this>
<com.puppycrawl.tools.checkstyle.PackageObjectFactory; createModule[java.lang.String]; java.lang.Object; com.puppycrawl.tools.checkstyle.PackageObjectFactoryTest; testMakeObectNoClass[]; void; null; mFactory>
<not found; fail[]; not found; com.puppycrawl.tools.checkstyle.PackageObjectFactoryTest; testMakeObectNoClass[]; void; null; this>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.PackageObjectFactoryTest; testMakeObectNoClass[]; void; null; this>
<java.lang.Throwable; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.PackageObjectFactoryTest; testMakeObectNoClass[]; void; null; ex>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheckTest; testDefault[]; void; null; this>
<not found; getSrcPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheckTest; testAnother[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheckTest; testAnother[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheckTest; testAnother[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheckTest; testAnother2[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheckTest; testAnother2[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.api.Scope; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheckTest; testAnother2[]; void; null; Scope.PUBLIC>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheckTest; testAnother2[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheckTest; testAnother2[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheckTest; testAnother3[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheckTest; testAnother3[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheckTest; testAnother3[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheckTest; testAnother4[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheckTest; testAnother4[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.api.Scope; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheckTest; testAnother4[]; void; null; Scope.PUBLIC>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheckTest; testAnother4[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheckTest; testAnother4[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheckTest; testScopes[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheckTest; testScopes[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheckTest; testScopes[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheckTest; testScopes2[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheckTest; testScopes2[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.api.Scope; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheckTest; testScopes2[]; void; null; Scope.PROTECTED>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheckTest; testScopes2[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheckTest; testScopes2[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheckTest; testExcludeScope[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheckTest; testExcludeScope[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.api.Scope; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheckTest; testExcludeScope[]; void; null; Scope.PRIVATE>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheckTest; testExcludeScope[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.api.Scope; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheckTest; testExcludeScope[]; void; null; Scope.PROTECTED>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheckTest; testExcludeScope[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheckTest; testExcludeScope[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testTags[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testTags[]; void; null; this>
<not found; getSrcPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testTags[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testInner[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testInner[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testInner[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testStrict[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testStrict[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testStrict[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testProtected[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testProtected[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.api.Scope; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testProtected[]; void; null; Scope.PROTECTED>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testProtected[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testProtected[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testPublic[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testPublic[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.api.Scope; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testPublic[]; void; null; Scope.PUBLIC>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testPublic[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testPublic[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testProtest[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testProtest[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.api.Scope; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testProtest[]; void; null; Scope.PROTECTED>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testProtest[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testProtest[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testPkg[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testPkg[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.api.Scope; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testPkg[]; void; null; Scope.getInstance("package")>
<com.puppycrawl.tools.checkstyle.api.Scope; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testPkg[]; void; getName[]; Scope>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testPkg[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testPkg[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testEclipse[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testEclipse[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.api.Scope; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testEclipse[]; void; null; Scope.getInstance("public")>
<com.puppycrawl.tools.checkstyle.api.Scope; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testEclipse[]; void; getName[]; Scope>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testEclipse[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testEclipse[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testAuthorRequired[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testAuthorRequired[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testAuthorRequired[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testAuthorRequired[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testAuthorRegularEx[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testAuthorRegularEx[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testAuthorRegularEx[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testAuthorRegularEx[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testAuthorRegularExError[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testAuthorRegularExError[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testAuthorRegularExError[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testAuthorRegularExError[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testVersionRequired[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testVersionRequired[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testVersionRequired[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testVersionRequired[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testVersionRegularEx[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testVersionRegularEx[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testVersionRegularEx[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testVersionRegularEx[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testVersionRegularExError[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testVersionRegularExError[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testVersionRegularExError[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testVersionRegularExError[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testScopes[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testScopes[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testScopes[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testScopes2[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testScopes2[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.api.Scope; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testScopes2[]; void; null; Scope.PROTECTED>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testScopes2[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testScopes2[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testExcludeScope[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testExcludeScope[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.api.Scope; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testExcludeScope[]; void; null; Scope.PRIVATE>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testExcludeScope[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.api.Scope; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testExcludeScope[]; void; null; Scope.PROTECTED>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testExcludeScope[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testExcludeScope[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testTypeParameters[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testTypeParameters[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testTypeParameters[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testAllowMissingTypeParameters[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testAllowMissingTypeParameters[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testAllowMissingTypeParameters[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testAllowMissingTypeParameters[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testBadTag[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testBadTag[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testBadTag[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testBadTagSuppress[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testBadTagSuppress[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testBadTagSuppress[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest; testBadTagSuppress[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; setUp[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testDefaultSettings[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testDefaultSettings[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testTag[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testTag[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testTag[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testTag[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testMissingFormat[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testMissingFormat[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testMissingFormat[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testTagSeverity[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testTagSeverity[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testTagSeverity[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testTagSeverity[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testTagSeverity[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testDoubleTag[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testDoubleTag[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testDoubleTag[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testDoubleTag[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testEmptyTag[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testEmptyTag[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testEmptyTag[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testEmptyTag[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testMissingTag[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testMissingTag[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testMissingTag[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testMethod[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testMethod[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testMethod[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testMethod[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testMethod[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testMethod[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testSeverity[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testSeverity[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testSeverity[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testSeverity[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testSeverity[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testIgnoreMissing[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testIgnoreMissing[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testIgnoreMissing[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testIgnoreMissing[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testIgnoreMissing[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testRegularEx[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testRegularEx[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testRegularEx[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testRegularEx[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testRegularExError[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testRegularExError[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testRegularExError[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testRegularExError[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testEnumsAndAnnotations[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testEnumsAndAnnotations[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testEnumsAndAnnotations[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testEnumsAndAnnotations[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testEnumsAndAnnotations[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testEnumsAndAnnotations[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; testEnumsAndAnnotations[]; void; null; this>
<not found; flush[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; null; mStream>
<not found; newArrayList[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; null; Lists>
<java.util.Collections; addAll[java.util.Collection<? super java.io.File>, java.io.File[]]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; null; Collections>
<com.puppycrawl.tools.checkstyle.Checker; process[java.util.List<java.io.File>]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; null; aC>
<not found; toByteArray[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; null; mBAOS>
<java.io.LineNumberReader; readLine[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; null; lnr>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; null; this>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; null; this>
<java.io.LineNumberReader; readLine[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; null; lnr>
<com.puppycrawl.tools.checkstyle.Checker; destroy[]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.WriteTagCheckTest; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; null; aC>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTags[]; void; null; text[3]>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTags[]; void; null; JavadocUtils>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTags[]; void; null; this>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTags[]; void; null; allTags.getValidTags()>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; getValidTags[]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTags[]; void; size[]; allTags>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTagType[]; void; null; text[1]>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTagType[]; void; null; JavadocUtils>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTagType[]; void; null; JavadocUtils>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTagType[]; void; null; this>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTagType[]; void; null; blockTags.getValidTags()>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; getValidTags[]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTagType[]; void; size[]; blockTags>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTagType[]; void; null; this>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTagType[]; void; null; inlineTags.getValidTags()>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; getValidTags[]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTagType[]; void; size[]; inlineTags>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testInlineTagLinkText[]; void; null; text[0]>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; getValidTags[]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testInlineTagLinkText[]; void; null; JavadocUtils.getJavadocTags(comment,JavadocUtils.JavadocTagType.ALL)>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testInlineTagLinkText[]; void; getValidTags[]; JavadocUtils>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testInlineTagLinkText[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getArg1[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testInlineTagLinkText[]; void; null; tags.get(0)>
<java.util.List; get[int]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testInlineTagLinkText[]; void; getArg1[]; tags>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testInlineTagMethodRef[]; void; null; text[0]>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; getValidTags[]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testInlineTagMethodRef[]; void; null; JavadocUtils.getJavadocTags(comment,JavadocUtils.JavadocTagType.ALL)>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testInlineTagMethodRef[]; void; getValidTags[]; JavadocUtils>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testInlineTagMethodRef[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getArg1[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testInlineTagMethodRef[]; void; null; tags.get(0)>
<java.util.List; get[int]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testInlineTagMethodRef[]; void; getArg1[]; tags>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTagPositions[]; void; null; text[1]>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; getValidTags[]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTagPositions[]; void; null; JavadocUtils.getJavadocTags(comment,JavadocUtils.JavadocTagType.ALL)>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTagPositions[]; void; getValidTags[]; JavadocUtils>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTagPositions[]; void; null; this>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTagPositions[]; void; null; tags>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTagPositions[]; void; null; JavadocTagInfo.SEE.getName()>
<com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTagPositions[]; void; equals[java.lang.Object]; JavadocTagInfo.SEE>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getTagName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTagPositions[]; void; null; tag>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTagPositions[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTagPositions[]; void; null; tag>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTagPositions[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTagPositions[]; void; null; tag>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTagPositions[]; void; null; JavadocTagInfo.LINK.getName()>
<com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTagPositions[]; void; equals[java.lang.Object]; JavadocTagInfo.LINK>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getTagName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTagPositions[]; void; null; tag>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTagPositions[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTagPositions[]; void; null; tag>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTagPositions[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTagPositions[]; void; null; tag>
<not found; fail[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTagPositions[]; void; null; this>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testInvalidTags[]; void; null; text[2]>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testInvalidTags[]; void; null; JavadocUtils>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testInvalidTags[]; void; null; this>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testInvalidTags[]; void; null; allTags.getInvalidTags()>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; getInvalidTags[]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.InvalidJavadocTag>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testInvalidTags[]; void; size[]; allTags>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testInvalidTags[]; void; null; this>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testInvalidTags[]; void; null; allTags.getValidTags()>
<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; getValidTags[]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testInvalidTags[]; void; size[]; allTags>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testDefaultSettings[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testDefaultSettings[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testDefaultSettings[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testFirstSentence[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testFirstSentence[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testFirstSentence[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testFirstSentence[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testFirstSentence[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testFirstSentenceFormat[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testFirstSentenceFormat[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testFirstSentenceFormat[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testFirstSentenceFormat[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testFirstSentenceFormat[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testFirstSentenceFormat[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testHtml[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testHtml[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testHtml[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testHtml[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testHtml[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testScopePublic[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testScopePublic[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testScopePublic[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testScopePublic[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testScopePublic[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testScopePublic[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testScopePublic[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testScopeProtected[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testScopeProtected[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testScopeProtected[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testScopeProtected[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testScopeProtected[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testScopeProtected[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testScopeProtected[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testScopePackage[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testScopePackage[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testScopePackage[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testScopePackage[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testScopePackage[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testScopePackage[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testScopePackage[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testEmptyJavadoc[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testEmptyJavadoc[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testEmptyJavadoc[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testEmptyJavadoc[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testEmptyJavadoc[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testEmptyJavadoc[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testExcludeScope[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testExcludeScope[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testExcludeScope[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testExcludeScope[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; testExcludeScope[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; packageInfoInheritDoc[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; packageInfoInheritDoc[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; packageInfoInheritDoc[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; packageInfoInheritDoc[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; packageInfoInvalid[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; packageInfoInvalid[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; packageInfoInvalid[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; packageInfoInvalid[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; packageInfoAnnotation[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; packageInfoAnnotation[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; packageInfoAnnotation[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; packageInfoAnnotation[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; packageInfoMissing[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; packageInfoMissing[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; packageInfoMissing[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; packageInfoMissing[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; packageInfoValid[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; packageInfoValid[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; packageInfoValid[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheckTest; packageInfoValid[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; setUp[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testTags[]; void; null; this>
<not found; getSrcPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testTags[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testTagsWithResolver[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testTagsWithResolver[]; void; null; this>
<not found; getSrcPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testTagsWithResolver[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testStrictJavadoc[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testStrictJavadoc[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testNoJavadoc[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.api.Scope; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testNoJavadoc[]; void; null; Scope.NOTHING>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testNoJavadoc[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testNoJavadoc[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testRelaxedJavadoc[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.api.Scope; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testRelaxedJavadoc[]; void; null; Scope.PROTECTED>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testRelaxedJavadoc[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testRelaxedJavadoc[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testScopeInnerInterfacesPublic[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.api.Scope; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testScopeInnerInterfacesPublic[]; void; null; Scope.PUBLIC>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testScopeInnerInterfacesPublic[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testScopeInnerInterfacesPublic[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testScopeAnonInnerPrivate[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.api.Scope; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testScopeAnonInnerPrivate[]; void; null; Scope.PRIVATE>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testScopeAnonInnerPrivate[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testScopeAnonInnerPrivate[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testScopeAnonInnerAnonInner[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.api.Scope; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testScopeAnonInnerAnonInner[]; void; null; Scope.ANONINNER>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testScopeAnonInnerAnonInner[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testScopeAnonInnerAnonInner[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testScopeAnonInnerWithResolver[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testScopeAnonInnerWithResolver[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testScopeAnonInnerWithResolver[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testTagsWithSubclassesAllowed[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testTagsWithSubclassesAllowed[]; void; null; this>
<not found; getSrcPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testTagsWithSubclassesAllowed[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testScopes[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testScopes[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testScopes2[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.api.Scope; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testScopes2[]; void; null; Scope.PROTECTED>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testScopes2[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testScopes2[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testExcludeScope[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.api.Scope; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testExcludeScope[]; void; null; Scope.PRIVATE>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testExcludeScope[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.api.Scope; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testExcludeScope[]; void; null; Scope.PROTECTED>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testExcludeScope[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testExcludeScope[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testAllowMissingJavadoc[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testAllowMissingJavadoc[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testAllowMissingJavadoc[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testSetterGetterOff[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testSetterGetterOff[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testSetterGetterOn[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testSetterGetterOn[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testSetterGetterOn[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testTypeParamsTags[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testTypeParamsTags[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; test_1168408_1[]; void; null; this>
<not found; getSrcPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; test_1168408_1[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; test_1168408_2[]; void; null; this>
<not found; getSrcPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; test_1168408_2[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; test_1168408_3[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; test_1168408_3[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; test_1168408_3[]; void; null; this>
<not found; getSrcPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; test_1168408_3[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; test_generics_1[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; test_generics_1[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; test_generics_1[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; test_generics_1[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; test_generics_2[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; test_generics_2[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; test_generics_2[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; test_generics_3[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; test_generics_3[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; test_1379666[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; test_1379666[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; test_1379666[]; void; null; this>
<not found; getSrcPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; test_1379666[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testInheritDoc[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheckTest; testInheritDoc[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.Input_03; doStuff2[]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.Input_03; doStuff1[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest; createCheckerConfig[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; null; dc>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest; testMissing[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest; testMissing[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest; testMissing[]; void; null; this>
<not found; getSrcPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest; testMissing[]; void; null; this>
<not found; getSrcPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest; testMissing[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest; testBoth[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest; testBoth[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest; testBoth[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest; testBoth[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest; testBoth[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest; testHtmlDisallowed[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest; testHtmlDisallowed[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest; testHtmlDisallowed[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest; testHtmlDisallowed[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest; testHtmlDisallowed[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest; testHtmlAllowed[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest; testHtmlAllowed[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest; testHtmlAllowed[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest; testHtmlAllowed[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest; testHtmlAllowed[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest; testHtmlAllowed[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest; testAnnotation[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest; testAnnotation[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest; testAnnotation[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest; testAnnotation[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheckTest; testAnnotation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.Input_01; doStuff2[]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.Input_01; doStuff1[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.javadoc.Input_02; doStuff2[]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.Input_02; doStuff1[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; setUp[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIt[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIt[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIt[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testMessageProperty[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testMessageProperty[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testMessageProperty[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testMessageProperty[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCaseTrue[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCaseTrue[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCaseTrue[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCaseTrue[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCaseFalse[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCaseFalse[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCaseFalse[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCaseFalse[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsCppStyle[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsCppStyle[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsCppStyle[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsCppStyle[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsFalseCppStyle[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsFalseCppStyle[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsFalseCppStyle[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsFalseCppStyle[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsCStyle[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsCStyle[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsCStyle[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsCStyle[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsFalseCStyle[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsFalseCStyle[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsFalseCStyle[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsFalseCStyle[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsMultipleCStyle[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsMultipleCStyle[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsMultipleCStyle[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsMultipleCStyle[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsMultiLine[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsMultiLine[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsMultiLine[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsMultiLine[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsInlineStart[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsInlineStart[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsInlineStart[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsInlineStart[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsInlineEnd[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsInlineEnd[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsInlineEnd[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsInlineEnd[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsInlineMiddle[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsInlineMiddle[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsInlineMiddle[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsInlineMiddle[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsNoSpaces[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsNoSpaces[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsNoSpaces[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testIgnoreCommentsNoSpaces[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; test1371588[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; test1371588[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; test1371588[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; test1371588[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testExistingInDoc[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testExistingInDoc[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testExistingInDoc[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testExistingInDoc[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testExistingInDoc[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testExistingInCode[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testExistingInCode[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testExistingInCode[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testExistingInCode[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testExistingInCode[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testMissing[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testMissing[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testMissing[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testMissing[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheckTest; testMissing[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheckTest; setUp[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheckTest; testIt[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheckTest; testIt[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheckTest; testIt[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheckTest; testMessageProperty[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheckTest; testMessageProperty[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheckTest; testMessageProperty[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheckTest; testMessageProperty[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheckTest; testIgnoreCaseTrue[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheckTest; testIgnoreCaseTrue[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheckTest; testIgnoreCaseTrue[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheckTest; testIgnoreCaseTrue[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheckTest; testIgnoreCaseFalse[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheckTest; testIgnoreCaseFalse[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheckTest; testIgnoreCaseFalse[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheckTest; testIgnoreCaseFalse[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheckTest; setUp[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheckTest; testIt[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheckTest; testIt[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheckTest; testIt[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheckTest; testMessageProperty[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheckTest; testMessageProperty[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheckTest; testMessageProperty[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheckTest; testMessageProperty[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheckTest; testIgnoreCaseTrue[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheckTest; testIgnoreCaseTrue[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheckTest; testIgnoreCaseTrue[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheckTest; testIgnoreCaseTrue[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheckTest; testIgnoreCaseFalse[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheckTest; testIgnoreCaseFalse[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheckTest; testIgnoreCaseFalse[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheckTest; testIgnoreCaseFalse[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheckTest; testIllegalFailBelowErrorLimit[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheckTest; testIllegalFailBelowErrorLimit[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheckTest; testIllegalFailBelowErrorLimit[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheckTest; testCarriageReturn[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheckTest; testCarriageReturn[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheckTest; testCarriageReturn[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheckTest; setUp[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheckTest; testDefaults[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheckTest; testDefaults[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheckTest; testLegalComment[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheckTest; testLegalComment[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheckTest; testLegalComment[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheckTest; createCheckerConfig[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; null; dc>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheckTest; testDefaultSettings[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheckTest; testDefaultSettings[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheckTest; testDefaultSettings[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheckTest; testDefaultSettings[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheckTest; testDefaultSettings[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheckTest; testSmallMin[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheckTest; testSmallMin[]; void; null; checkConfig>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheckTest; testSmallMin[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheckTest; testSmallMin[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheckTest; testSmallMin[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheckTest; testSmallMin[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheckTest; testOverlapping[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheckTest; testOverlapping[]; void; null; checkConfig>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheckTest; testOverlapping[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheckTest; testOverlapping[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheckTest; testOverlapping[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheckTest; testWhitespaceIsIgnored[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheckTest; testWhitespaceIsIgnored[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheckTest; testWhitespaceIsIgnored[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheckTest; testWhitespaceIsIgnored[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheckTest; testDefaults[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheckTest; testDefaults[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheckTest; testDefaults[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheckTest; testExcludedClasses[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheckTest; testExcludedClasses[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheckTest; testExcludedClasses[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.UncommentedMainCheckTest; testExcludedClasses[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheckTest; setUp[]; void; null; this>
<not found; newHashMap[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheckTest; setUp[]; void; null; Maps>
<java.util.Map; entrySet[]; java.util.Set<java.util.Map.Entry<java.lang.Class<?>,java.lang.Integer>>; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheckTest; setUp[]; void; null; x>
<java.util.Map$Entry; getValue[]; java.lang.Integer; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheckTest; setUp[]; void; null; entry>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheckTest; testDefault[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheckTest; createCheckerConfig[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; null; dc>
<com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheckTest; createConfig[boolean]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheckTest; testDefault[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheckTest; testDefault[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheckTest; createConfig[boolean]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheckTest; testVerbose[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheckTest; testVerbose[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheckTest; testVerbose[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheckTest; testVerbose[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheckTest; testVerbose[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheckTest; createConfig[boolean]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheckTest; testBadFile[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheckTest; testBadFile[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheckTest; testBadFile[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheckTest; testBadFile[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheckTest; createConfig[boolean]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheckTest; createConfig[boolean]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; null; checkConfig>
<java.lang.Boolean; toString[boolean]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheckTest; createConfig[boolean]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; null; Boolean>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForInitializerPadCheckTest; setUp[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForInitializerPadCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForInitializerPadCheckTest; testDefault[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForInitializerPadCheckTest; testSpaceOption[]; void; null; mCheckConfig>
<java.lang.Enum; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForInitializerPadCheckTest; testSpaceOption[]; void; null; PadOption.SPACE>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForInitializerPadCheckTest; testSpaceOption[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForInitializerPadCheckTest; testSpaceOption[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheckTest; setUp[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheckTest; testDefault[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheckTest; testDot[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheckTest; testDot[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheckTest; testDot[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheckTest; testDotAllowLineBreaks[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheckTest; testDotAllowLineBreaks[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheckTest; testDotAllowLineBreaks[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheckTest; testDotAllowLineBreaks[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheckTest; setUp[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheckTest; testCast[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheckTest; testCast[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheckTest; testSemi[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheckTest; testSemi[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheckTest; testEmptyForIterator[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheckTest; testEmptyForIterator[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheckTest; testTypeArgumentAndParameterCommas[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheckTest; testTypeArgumentAndParameterCommas[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheckTest; test1322879[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheckTest; test1322879[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheckTest; setUp[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheckTest; testDefault[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheckTest; testOpWrapEOL[]; void; null; checkConfig>
<java.lang.Enum; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheckTest; testOpWrapEOL[]; void; null; OperatorWrapOption.EOL>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheckTest; testOpWrapEOL[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheckTest; testOpWrapEOL[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheckTest; testAssignEOL[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheckTest; testAssignEOL[]; void; null; checkConfig>
<java.lang.Enum; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheckTest; testAssignEOL[]; void; null; OperatorWrapOption.EOL>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheckTest; testAssignEOL[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheckTest; testAssignEOL[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheckTest; setUp[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheckTest; testDefault[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheckTest; testAllowLineBreaks[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheckTest; testAllowLineBreaks[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheckTest; testAllowLineBreaks[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheckTest; testSpaceOption[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheckTest; testSpaceOption[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheckTest; testSpaceOption[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheckTest; test1322879[]; void; null; checkConfig>
<java.lang.Enum; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheckTest; test1322879[]; void; null; PadOption.SPACE>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheckTest; test1322879[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheckTest; test1322879[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheckTest; testSpace[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheckTest; testSpace[]; void; null; checkConfig>
<java.lang.Enum; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheckTest; testSpace[]; void; null; PadOption.SPACE>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheckTest; testSpace[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheckTest; testSpace[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheckTest; test1322879[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheckTest; test1322879[]; void; null; checkConfig>
<java.lang.Enum; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheckTest; test1322879[]; void; null; PadOption.SPACE>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheckTest; test1322879[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheckTest; test1322879[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundTest; setUp[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundTest; testIt[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundTest; testIt[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundTest; testIt2[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundTest; testIt2[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundTest; testIt3[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundTest; testIt3[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundTest; testIt4[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundTest; testIt4[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundTest; testIt4[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundTest; testIt4[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundTest; testGenericsTokensAreFlagged[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundTest; testGenericsTokensAreFlagged[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundTest; test1322879And1649038[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundTest; test1322879And1649038[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundTest; testIgnoreEnhancedForColon[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundTest; testIgnoreEnhancedForColon[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundTest; testIgnoreEnhancedForColon[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheckTest; testSpace[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheckTest; testSpace[]; void; null; checkConfig>
<java.lang.Enum; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheckTest; testSpace[]; void; null; PadOption.SPACE>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheckTest; testSpace[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheckTest; testSpace[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheckTest; testDefaultForIterator[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheckTest; testDefaultForIterator[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheckTest; testDefaultForIterator[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheckTest; testSpaceEmptyForIterator[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheckTest; testSpaceEmptyForIterator[]; void; null; checkConfig>
<java.lang.Enum; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheckTest; testSpaceEmptyForIterator[]; void; null; PadOption.SPACE>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheckTest; testSpaceEmptyForIterator[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheckTest; testSpaceEmptyForIterator[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheckTest; test1322879[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheckTest; test1322879[]; void; null; checkConfig>
<java.lang.Enum; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheckTest; test1322879[]; void; null; PadOption.SPACE>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheckTest; test1322879[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheckTest; test1322879[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheckTest; setUp[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheckTest; testDefault[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheckTest; testDefault[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheckTest; testDotAllowLineBreaks[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheckTest; testDotAllowLineBreaks[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheckTest; testDotAllowLineBreaks[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheckTest; testTypecast[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheckTest; testTypecast[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheckTest; testTypecast[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForIteratorPadCheckTest; setUp[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForIteratorPadCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForIteratorPadCheckTest; testDefault[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForIteratorPadCheckTest; testSpaceOption[]; void; null; mCheckConfig>
<java.lang.Enum; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForIteratorPadCheckTest; testSpaceOption[]; void; null; PadOption.SPACE>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForIteratorPadCheckTest; testSpaceOption[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForIteratorPadCheckTest; testSpaceOption[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMaximumNumber[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMaximumNumber[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMaximumNumber[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMaximumNumber[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMaximumNumber[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMaximumNumber[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMessage[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMessage[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMessage[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMessage[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMessage[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMessage[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMessage[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMinimumNumber[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMinimumNumber[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMinimumNumber[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMinimumNumber[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMinimumNumber[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMinimumNumber[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMinimumDepth[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMinimumDepth[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMinimumDepth[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMinimumDepth[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMinimumDepth[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMinimumDepth[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMinimumDepth[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMaximumDepth[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMaximumDepth[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMaximumDepth[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMaximumDepth[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMaximumDepth[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMaximumDepth[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMaximumDepth[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testEmptyStatements[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testEmptyStatements[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testEmptyStatements[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testEmptyStatements[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testEmptyStatements[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testEmptyStatements[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testEmptyStatements[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testEmptyStatements[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMissingSwitchDefault[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMissingSwitchDefault[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMissingSwitchDefault[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMissingSwitchDefault[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMissingSwitchDefault[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMissingSwitchDefault[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMissingSwitchDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testMissingSwitchDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testStringLiteralEquality[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testStringLiteralEquality[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testStringLiteralEquality[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testStringLiteralEquality[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testStringLiteralEquality[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testStringLiteralEquality[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testStringLiteralEquality[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testStringLiteralEquality[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testIllegalTokenDefault[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testIllegalTokenDefault[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testIllegalTokenDefault[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testIllegalTokenDefault[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testIllegalTokenDefault[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testIllegalTokenDefault[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testIllegalTokenDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testIllegalTokenDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testIllegalTokenNative[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testIllegalTokenNative[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testIllegalTokenNative[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testIllegalTokenNative[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testIllegalTokenNative[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testIllegalTokenNative[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testIllegalTokenNative[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testIllegalTokenNative[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testReturnFromCatch[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testReturnFromCatch[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testReturnFromCatch[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testReturnFromCatch[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testReturnFromCatch[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testReturnFromCatch[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testReturnFromCatch[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testReturnFromFinally[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testReturnFromFinally[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testReturnFromFinally[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testReturnFromFinally[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testReturnFromFinally[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testReturnFromFinally[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testReturnFromFinally[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testNoSum[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testNoSum[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testNoSum[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testNoSum[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testNoSum[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testNoSum[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testNoSum[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testWithSumCustomMsg[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testWithSumCustomMsg[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testWithSumCustomMsg[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testWithSumCustomMsg[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testWithSumCustomMsg[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testWithSumCustomMsg[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testWithSumCustomMsg[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testWithSumCustomMsg[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testWithSumCustomMsg[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testWithSumDefaultMsg[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testWithSumDefaultMsg[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testWithSumDefaultMsg[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testWithSumDefaultMsg[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testWithSumDefaultMsg[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testWithSumDefaultMsg[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testWithSumDefaultMsg[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheckTest; testWithSumDefaultMsg[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.UpperEllCheckTest; testWithChecker[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.UpperEllCheckTest; testWithChecker[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.UpperEllCheckTest; testWithChecker[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheckTest; testIgnoreSome[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheckTest; testIgnoreSome[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheckTest; testIgnoreSome[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheckTest; testIgnoreSome[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheckTest; testIgnoreSome[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheckTest; testIgnoreNone[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheckTest; testIgnoreNone[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheckTest; testIgnoreNone[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheckTest; testIgnoreNone[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheckTest; testIgnoreNone[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheckTest; testIntegersOnly[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheckTest; testIntegersOnly[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheckTest; testIntegersOnly[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheckTest; testIntegersOnly[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheckTest; testIntegersOnly[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheckTest; testIgnoreNegativeOctalHex[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheckTest; testIgnoreNegativeOctalHex[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheckTest; testIgnoreNegativeOctalHex[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheckTest; testIgnoreNegativeOctalHex[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheckTest; testIgnoreNegativeOctalHex[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheckTest; testIgnoreNegativeOctalHex[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheckTest; testIgnoreHashCodeMethod[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheckTest; testIgnoreHashCodeMethod[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheckTest; testIgnoreHashCodeMethod[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheckTest; testIgnoreHashCodeMethod[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheckTest; testIgnoreHashCodeMethod[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenTextCheckTest; testCaseSensitive[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenTextCheckTest; testCaseSensitive[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenTextCheckTest; testCaseSensitive[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenTextCheckTest; testCaseSensitive[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenTextCheckTest; testCaseSensitive[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenTextCheckTest; testCaseInSensitive[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenTextCheckTest; testCaseInSensitive[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenTextCheckTest; testCaseInSensitive[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenTextCheckTest; testCaseInSensitive[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenTextCheckTest; testCaseInSensitive[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenTextCheckTest; testCaseInSensitive[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.SuperFinalizeCheckTest; testIt[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.SuperFinalizeCheckTest; testIt[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.SuperFinalizeCheckTest; testIt[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ArrayTrailingCommaCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ArrayTrailingCommaCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ArrayTrailingCommaCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheckTest; test15Extensions[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheckTest; test15Extensions[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheckTest; test15Extensions[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheckTest; testLastCaseGroup[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheckTest; testLastCaseGroup[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheckTest; testLastCaseGroup[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheckTest; testLastCaseGroup[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheckTest; testOwnPattern[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheckTest; testOwnPattern[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheckTest; testOwnPattern[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheckTest; testOwnPattern[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheckTest; testIt[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheckTest; testIt[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheckTest; testIt[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheckTest; testIt[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheckTest; testIt[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheckTest; testItIgnoreEmpty[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheckTest; testItIgnoreEmpty[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheckTest; testItIgnoreEmpty[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheckTest; testItIgnoreEmpty[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheckTest; testItIgnoreEmptyAndComaSpace[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheckTest; testItIgnoreEmptyAndComaSpace[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheckTest; testItIgnoreEmptyAndComaSpace[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheckTest; testItIgnoreEmptyAndComaSpace[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheckTest; testItIgnoreEmptyAndComaSpace[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheckTest; testItWithoutIgnoringAnnotations[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheckTest; testItWithoutIgnoringAnnotations[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheckTest; testItWithoutIgnoringAnnotations[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheckTest; testItWithoutIgnoringAnnotations[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheckTest; testItWithoutIgnoringAnnotations[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheckTest; setUp[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheckTest; testDefaults[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheckTest; testDefaults[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheckTest; testAllowUnchecked[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheckTest; testAllowUnchecked[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheckTest; testAllowUnchecked[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheckTest; testAllowSubclasses[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheckTest; testAllowSubclasses[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheckTest; testAllowSubclasses[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheckTest; testRejectDuplicatesOnly[]; void; null; mCheckConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheckTest; testRejectDuplicatesOnly[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheckTest; testRejectDuplicatesOnly[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheckTest; testRejectDuplicatesOnly[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheckTest; test_1168408_1[]; void; null; this>
<not found; getSrcPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheckTest; test_1168408_1[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheckTest; test_1168408_2[]; void; null; this>
<not found; getSrcPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheckTest; test_1168408_2[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheckTest; test_1168408_3[]; void; null; this>
<not found; getSrcPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheckTest; test_1168408_3[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheckTest; test_1220726[]; void; null; this>
<not found; getSrcPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheckTest; test_1220726[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheckTest; test_generics_params[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheckTest; test_generics_params[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheckTest; test_1379666[]; void; null; this>
<not found; getSrcPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheckTest; test_1379666[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheckTest; testIt[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheckTest; testIt[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheckTest; testIt[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MultipleVariableDeclarationsCheckTest; testIt[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MultipleVariableDeclarationsCheckTest; testIt[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MultipleVariableDeclarationsCheckTest; testIt[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.NestedIfDepthCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.NestedIfDepthCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.NestedIfDepthCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.NestedIfDepthCheckTest; testCustomNestingDepth[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.NestedIfDepthCheckTest; testCustomNestingDepth[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.NestedIfDepthCheckTest; testCustomNestingDepth[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.NestedIfDepthCheckTest; testCustomNestingDepth[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.NoCloneCheckTest; testHasClone[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.NoCloneCheckTest; testHasClone[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.NoCloneCheckTest; testHasClone[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MissingCtorCheckTest; testMissingSwitchDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MissingCtorCheckTest; testMissingSwitchDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MissingCtorCheckTest; testMissingSwitchDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheckTest; testIllegalClassNames[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheckTest; testIllegalClassNames[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheckTest; testIllegalClassNames[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheckTest; testIllegalClassNames[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheckTest; testIgnoreMethodNames[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheckTest; testIgnoreMethodNames[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheckTest; testIgnoreMethodNames[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheckTest; testIgnoreMethodNames[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheckTest; testIllegalClassNamesWithIgnoreMethodNames[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheckTest; testIllegalClassNamesWithIgnoreMethodNames[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheckTest; testIllegalClassNamesWithIgnoreMethodNames[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheckTest; testIllegalClassNamesWithIgnoreMethodNames[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheckTest; testIllegalClassNamesWithIgnoreMethodNames[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanExpressionCheckTest; testIt[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanExpressionCheckTest; testIt[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanExpressionCheckTest; testIt[]; void; null; this>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheckInput; doLegalString[]; void; null; System.out>
<com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheckInput$SmallTalkStyle; doSomething3[]; com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheckInput.SmallTalkStyle; com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheckInput; doIllegalSmallTalk[]; void; null; smalltalker.doSomething1().doSomething2()>
<com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheckInput$SmallTalkStyle; doSomething2[]; com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheckInput.SmallTalkStyle; com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheckInput; doIllegalSmallTalk[]; void; doSomething3[]; smalltalker.doSomething1()>
<com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheckInput$SmallTalkStyle; doSomething1[]; com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheckInput.SmallTalkStyle; com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheckInput; doIllegalSmallTalk[]; void; doSomething2[]; smalltalker>
<com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheckInput$SmallTalkStyle; doSomething3[]; com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheckInput.SmallTalkStyle; com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheckInput; doIllegalSmallTalk2[]; void; null; smalltalker.doSomething1().doSomething2()>
<com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheckInput$SmallTalkStyle; doSomething2[]; com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheckInput.SmallTalkStyle; com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheckInput; doIllegalSmallTalk2[]; void; doSomething3[]; smalltalker.doSomething1()>
<com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheckInput$SmallTalkStyle; doSomething1[]; com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheckInput.SmallTalkStyle; com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheckInput; doIllegalSmallTalk2[]; void; doSomething2[]; smalltalker>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheckInput; doStringBuffer[]; void; null; sb>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheckInput; doStringBuffer[]; void; null; sb.append("test2 ")>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheckInput; doStringBuffer[]; void; append[java.lang.String]; sb>
<com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheckInput; appendToSpringBuffer[java.lang.StringBuffer, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheckInput; doStringBuffer[]; void; null; this>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheckInput; appendToSpringBuffer[java.lang.StringBuffer, java.lang.String]; void; null; sb>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.InnerAssignmentCheckTest; testIt[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.InnerAssignmentCheckTest; testIt[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.InnerAssignmentCheckTest; testIt[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalCatchCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalCatchCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalCatchCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalCatchCheckTest; testIllegalClassNames[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalCatchCheckTest; testIllegalClassNames[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalCatchCheckTest; testIllegalClassNames[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalCatchCheckTest; testIllegalClassNames[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.JUnitTestCaseCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.DefaultComesLastCheckTest; testIt[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.DefaultComesLastCheckTest; testIt[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.DefaultComesLastCheckTest; testIt[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.StringLiteralEqualityCheckTest; testIt[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.StringLiteralEqualityCheckTest; testIt[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.StringLiteralEqualityCheckTest; testIt[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheckTest; testOnlyConstructors[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheckTest; testOnlyConstructors[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheckTest; testOnlyConstructors[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheckTest; testOnlyConstructors[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheckTest; testOnlyConstructors[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheckTest; testOnlyConstructors[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheckTest; testOnlyModifiers[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheckTest; testOnlyModifiers[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheckTest; testOnlyModifiers[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheckTest; testOnlyModifiers[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheckTest; testOnlyModifiers[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheckTest; testOnlyModifiers[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheckTest; testIt[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheckTest; testIt[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheckTest; testIt[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheckTest; testMethodsOnly[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheckTest; testMethodsOnly[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheckTest; testMethodsOnly[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheckTest; testMethodsOnly[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheckTest; testFieldsOnly[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheckTest; testFieldsOnly[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheckTest; testFieldsOnly[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheckTest; testFieldsOnly[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheckTest; testGenerics[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheckTest; testGenerics[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheckTest; testGenerics[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheckTest; testMultiCaseClass[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheckTest; testMultiCaseClass[]; void; null; this>
<not found; getSrcPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheckTest; testMultiCaseClass[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.EmptyStatementCheckTest; testEmptyStatements[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.EmptyStatementCheckTest; testEmptyStatements[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.EmptyStatementCheckTest; testEmptyStatements[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.NoFinalizerCheckTest; testHasFinalizer[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.NoFinalizerCheckTest; testHasFinalizer[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.NoFinalizerCheckTest; testHasFinalizer[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.NoFinalizerCheckTest; testHasNoFinalizer[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.NoFinalizerCheckTest; testHasNoFinalizer[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.NoFinalizerCheckTest; testHasNoFinalizer[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenCheckTest; testNative[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenCheckTest; testNative[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenCheckTest; testNative[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenCheckTest; testNative[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheckTest; testFormat[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheckTest; testFormat[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheckTest; testFormat[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheckTest; testFormat[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.PackageDeclarationCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.PackageDeclarationCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.PackageDeclarationCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.PackageDeclarationCheckTest; testDefault1[]; void; null; this>
<java.lang.String; replace[char, char]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.coding.PackageDeclarationCheckTest; testDefault1[]; void; null; "com/puppycrawl/tools/checkstyle/checks/coding">
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.PackageDeclarationCheckTest; testDefault1[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.PackageDeclarationCheckTest; testDefault1[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.PackageDeclarationCheckTest; testQuiet[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.PackageDeclarationCheckTest; testQuiet[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.PackageDeclarationCheckTest; testQuiet[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.PackageDeclarationCheckTest; testQuiet[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheckTest; testModifiedControlVariable[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheckTest; testModifiedControlVariable[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.ModifiedControlVariableCheckTest; testModifiedControlVariable[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.NestedForDepthCheckTest; testNestedTooDeep[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.NestedForDepthCheckTest; testNestedTooDeep[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.NestedForDepthCheckTest; testNestedTooDeep[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.NestedForDepthCheckTest; testNestedTooDeep[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.NestedForDepthCheckTest; testNestedOk[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.NestedForDepthCheckTest; testNestedOk[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.NestedForDepthCheckTest; testNestedOk[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.NestedForDepthCheckTest; testNestedOk[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheckTest; testIt[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheckTest; testIt[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheckTest; testIt[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheckTest; testIt[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest; setUp[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest; testDefaults[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest; testDefaults[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest; testIgnoreMethodNames[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest; testIgnoreMethodNames[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest; testIgnoreMethodNames[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest; testFormat[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest; testFormat[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest; testFormat[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest; testLegalAbstractClassNames[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest; testLegalAbstractClassNames[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheckTest; testLegalAbstractClassNames[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MissingSwitchDefaultCheckTest; setUp[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MissingSwitchDefaultCheckTest; testMissingSwitchDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.MissingSwitchDefaultCheckTest; testMissingSwitchDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanReturnCheckTest; testIt[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanReturnCheckTest; testIt[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanReturnCheckTest; testIt[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheckTest; testParameter[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheckTest; testParameter[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheckTest; testParameter[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheckTest; testParameter[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.CovariantEqualsCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.CovariantEqualsCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.CovariantEqualsCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheckTest; testNoParameters[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheckTest; testNoParameters[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheckTest; testNoParameters[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheckTest; testNoParameters[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheckTest; testIgnoreFormat[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheckTest; testIgnoreFormat[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheckTest; testIgnoreFormat[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheckTest; testIgnoreFormat[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheckTest; testIgnoreSetter[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheckTest; testIgnoreSetter[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheckTest; testIgnoreSetter[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheckTest; testIgnoreSetter[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheckTest; testIgnoreConstructorParameter[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheckTest; testIgnoreConstructorParameter[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheckTest; testIgnoreConstructorParameter[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheckTest; testIgnoreConstructorParameter[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheckTest; testReordered[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheckTest; testReordered[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheckTest; testReordered[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheckTest; testIgnoreAbstractMethods[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheckTest; testIgnoreAbstractMethods[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheckTest; testIgnoreAbstractMethods[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheckTest; testIgnoreAbstractMethods[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheckTest; testIt[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheckTest; testIt[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheckTest; testIt[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.NestedTryDepthCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.NestedTryDepthCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.NestedTryDepthCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.NestedTryDepthCheckTest; testCustomNestingDepth[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.NestedTryDepthCheckTest; testCustomNestingDepth[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.NestedTryDepthCheckTest; testCustomNestingDepth[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.NestedTryDepthCheckTest; testCustomNestingDepth[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.SuperCloneCheckTest; testIt[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.SuperCloneCheckTest; testIt[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.SuperCloneCheckTest; testIt[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullTest; testEqualsWithDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullTest; testEqualsWithDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullTest; testEqualsWithDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullTest; testEqualsWithoutEqualsIgnoreCase[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullTest; testEqualsWithoutEqualsIgnoreCase[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullTest; testEqualsWithoutEqualsIgnoreCase[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullTest; testEqualsWithoutEqualsIgnoreCase[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoader; load[java.net.URI]; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoaderTest; testLoad[]; void; null; ImportControlLoader>
<java.io.File; toURI[]; java.net.URI; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoaderTest; testLoad[]; void; null; new File(System.getProperty("testinputs.dir") + "/import-control_complete.xml")>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoaderTest; testLoad[]; void; toURI[]; System>
<not found; assertNotNull[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlLoaderTest; testLoad[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckTest; testOne[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckTest; testOne[]; void; null; checkConfig>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckTest; testOne[]; void; null; System>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckTest; testOne[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckTest; testOne[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckTest; testTwo[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckTest; testTwo[]; void; null; checkConfig>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckTest; testTwo[]; void; null; System>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckTest; testTwo[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckTest; testTwo[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckTest; testWrong[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckTest; testWrong[]; void; null; checkConfig>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckTest; testWrong[]; void; null; System>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckTest; testWrong[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckTest; testWrong[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckTest; testMissing[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckTest; testMissing[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckTest; testMissing[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckTest; testEmpty[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckTest; testEmpty[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckTest; testEmpty[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckTest; testEmpty[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckTest; testUnknown[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckTest; testUnknown[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckTest; testUnknown[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckTest; testUnknown[]; void; null; this>
<not found; fail[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckTest; testUnknown[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckTest; testBroken[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckTest; testBroken[]; void; null; checkConfig>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckTest; testBroken[]; void; null; System>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckTest; testBroken[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckTest; testBroken[]; void; null; this>
<not found; fail[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckTest; testBroken[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.IllegalImportCheckTest; testWithSupplied[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.imports.IllegalImportCheckTest; testWithSupplied[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.IllegalImportCheckTest; testWithSupplied[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.IllegalImportCheckTest; testWithSupplied[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.IllegalImportCheckTest; testWithDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.IllegalImportCheckTest; testWithDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.IllegalImportCheckTest; testWithDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheckTest; testWithChecker[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheckTest; testWithChecker[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheckTest; testWithChecker[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckRegExTest; testOne[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckRegExTest; testOne[]; void; null; checkConfig>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckRegExTest; testOne[]; void; null; System>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckRegExTest; testOne[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckRegExTest; testOne[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckRegExTest; testTwo[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckRegExTest; testTwo[]; void; null; checkConfig>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckRegExTest; testTwo[]; void; null; System>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckRegExTest; testTwo[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheckRegExTest; testTwo[]; void; null; this>
<not found; assertNotNull[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1[]; void; null; this>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1[]; void; null; g>
<not found; assertNotNull[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard2[]; void; null; this>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard2[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard2[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard2[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard2[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard2[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard2[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard2[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard2[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard2[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard2[]; void; null; g>
<not found; assertNotNull[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuard[]; void; null; this>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuard[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuard[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuard[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuard[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuard[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuard[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuard[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuard[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuard[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuard[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuard[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuard[]; void; null; g>
<not found; assertNotNull[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1re[]; void; null; this>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1re[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1re[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1re[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1re[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1re[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1re[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1re[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1re[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1re[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1re[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1re[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1re[]; void; null; g>
<not found; assertNotNull[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard2re[]; void; null; this>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard2re[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard2re[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard2re[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard2re[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard2re[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard2re[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard2re[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard2re[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard2re[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard2re[]; void; null; g>
<not found; assertNotNull[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuardre[]; void; null; this>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuardre[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuardre[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuardre[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuardre[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuardre[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuardre[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuardre[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuardre[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuardre[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuardre[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuardre[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuardre[]; void; null; g>
<not found; assertNotNull[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1re2[]; void; null; this>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1re2[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1re2[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1re2[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1re2[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1re2[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1re2[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1re2[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1re2[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1re2[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1re2[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1re2[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1re2[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1re2[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1re2[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1re2[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1re2[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1re2[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1re2[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1re2[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard1re2[]; void; null; g>
<not found; assertNotNull[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard2re2[]; void; null; this>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard2re2[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard2re2[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard2re2[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard2re2[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard2re2[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard2re2[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard2re2[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard2re2[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard2re2[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard2re2[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard2re2[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard2re2[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard2re2[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard2re2[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard2re2[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testPkgGuard2re2[]; void; null; g>
<not found; assertNotNull[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuardre2[]; void; null; this>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuardre2[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuardre2[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuardre2[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuardre2[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuardre2[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuardre2[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuardre2[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuardre2[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuardre2[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuardre2[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuardre2[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuardre2[]; void; null; g>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuardre2[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.Guard; verifyImport[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.GuardTest; testClassGuardre2[]; void; null; g>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportTest; testDefaultOperation[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportTest; testDefaultOperation[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportTest; testDefaultOperation[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportTest; testExcludes[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportTest; testExcludes[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportTest; testExcludes[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportTest; testExcludes[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportTest; testAllowClassImports[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportTest; testAllowClassImports[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportTest; testAllowClassImports[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportTest; testAllowClassImports[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStaticImportTest; testDefaultOperation[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStaticImportTest; testDefaultOperation[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStaticImportTest; testDefaultOperation[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStaticImportTest; testStarExcludes[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStaticImportTest; testStarExcludes[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStaticImportTest; testStarExcludes[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStaticImportTest; testStarExcludes[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStaticImportTest; testMemberExcludes[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStaticImportTest; testMemberExcludes[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStaticImportTest; testMemberExcludes[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStaticImportTest; testMemberExcludes[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStaticImportTest; testBogusMemberExcludes[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStaticImportTest; testBogusMemberExcludes[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStaticImportTest; testBogusMemberExcludes[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStaticImportTest; testBogusMemberExcludes[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheckTest; testProcessJavadoc[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheckTest; testProcessJavadoc[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheckTest; testProcessJavadoc[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheckTest; testProcessJavadoc[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheckTest; testAnnotations[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheckTest; testAnnotations[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheckTest; testAnnotations[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheckTest; testBug[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheckTest; testBug[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheckTest; testBug[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; addGuard[com.puppycrawl.tools.checkstyle.checks.imports.Guard]; void; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlRegExpTest; setUp[]; void; null; pcRoot>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; addGuard[com.puppycrawl.tools.checkstyle.checks.imports.Guard]; void; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlRegExpTest; setUp[]; void; null; pcRoot>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; addGuard[com.puppycrawl.tools.checkstyle.checks.imports.Guard]; void; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlRegExpTest; setUp[]; void; null; pcRoot>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; addGuard[com.puppycrawl.tools.checkstyle.checks.imports.Guard]; void; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlRegExpTest; setUp[]; void; null; pcCommon>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlRegExpTest; testFullPkg[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; getFullPackage[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlRegExpTest; testFullPkg[]; void; null; pcRoot>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlRegExpTest; testFullPkg[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; getFullPackage[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlRegExpTest; testFullPkg[]; void; null; pcCommon>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlRegExpTest; testLocateFinest[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; locateFinest[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlRegExpTest; testLocateFinest[]; void; null; pcRoot>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlRegExpTest; testLocateFinest[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; locateFinest[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlRegExpTest; testLocateFinest[]; void; null; pcRoot>
<not found; assertNull[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlRegExpTest; testLocateFinest[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; locateFinest[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlRegExpTest; testLocateFinest[]; void; null; pcRoot>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlRegExpTest; testCheckAccess[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; checkAccess[java.lang.String, java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlRegExpTest; testCheckAccess[]; void; null; pcCommon>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlRegExpTest; testCheckAccess[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; checkAccess[java.lang.String, java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlRegExpTest; testCheckAccess[]; void; null; pcCommon>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlRegExpTest; testCheckAccess[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; checkAccess[java.lang.String, java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlRegExpTest; testCheckAccess[]; void; null; pcCommon>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlRegExpTest; testCheckAccess[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; checkAccess[java.lang.String, java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlRegExpTest; testCheckAccess[]; void; null; pcCommon>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlRegExpTest; testCheckAccess[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; checkAccess[java.lang.String, java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlRegExpTest; testCheckAccess[]; void; null; pcCommon>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlRegExpTest; testCheckAccess[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; checkAccess[java.lang.String, java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlRegExpTest; testCheckAccess[]; void; null; pcCommon>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlRegExpTest; testCheckAccess[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; checkAccess[java.lang.String, java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlRegExpTest; testCheckAccess[]; void; null; pcCommon>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlRegExpTest; testCheckAccess[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; checkAccess[java.lang.String, java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlRegExpTest; testCheckAccess[]; void; null; pcCommon>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlRegExpTest; testCheckAccess[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; checkAccess[java.lang.String, java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlRegExpTest; testCheckAccess[]; void; null; pcCommon>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlRegExpTest; testCheckAccess[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; checkAccess[java.lang.String, java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlRegExpTest; testCheckAccess[]; void; null; pcCommon>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlRegExpTest; testCheckAccess[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; checkAccess[java.lang.String, java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlRegExpTest; testCheckAccess[]; void; null; pcRoot>
<not found; assertNull[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlRegExpTest; testUnknownPkg[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; locateFinest[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlRegExpTest; testUnknownPkg[]; void; null; pcRoot>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; addGuard[com.puppycrawl.tools.checkstyle.checks.imports.Guard]; void; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlTest; setUp[]; void; null; pcRoot>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; addGuard[com.puppycrawl.tools.checkstyle.checks.imports.Guard]; void; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlTest; setUp[]; void; null; pcRoot>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; addGuard[com.puppycrawl.tools.checkstyle.checks.imports.Guard]; void; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlTest; setUp[]; void; null; pcRoot>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; addGuard[com.puppycrawl.tools.checkstyle.checks.imports.Guard]; void; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlTest; setUp[]; void; null; pcCommon>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlTest; testFullPkg[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; getFullPackage[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlTest; testFullPkg[]; void; null; pcRoot>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlTest; testFullPkg[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; getFullPackage[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlTest; testFullPkg[]; void; null; pcCommon>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlTest; testLocateFinest[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; locateFinest[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlTest; testLocateFinest[]; void; null; pcRoot>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlTest; testLocateFinest[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; locateFinest[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlTest; testLocateFinest[]; void; null; pcRoot>
<not found; assertNull[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlTest; testLocateFinest[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; locateFinest[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlTest; testLocateFinest[]; void; null; pcRoot>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlTest; testCheckAccess[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; checkAccess[java.lang.String, java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlTest; testCheckAccess[]; void; null; pcCommon>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlTest; testCheckAccess[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; checkAccess[java.lang.String, java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlTest; testCheckAccess[]; void; null; pcCommon>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlTest; testCheckAccess[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; checkAccess[java.lang.String, java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlTest; testCheckAccess[]; void; null; pcCommon>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlTest; testCheckAccess[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; checkAccess[java.lang.String, java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlTest; testCheckAccess[]; void; null; pcCommon>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlTest; testCheckAccess[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; checkAccess[java.lang.String, java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlTest; testCheckAccess[]; void; null; pcCommon>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlTest; testCheckAccess[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; checkAccess[java.lang.String, java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.AccessResult; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlTest; testCheckAccess[]; void; null; pcRoot>
<not found; assertNull[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlTest; testUnknownPkg[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; locateFinest[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; com.puppycrawl.tools.checkstyle.checks.imports.PkgControlTest; testUnknownPkg[]; void; null; pcRoot>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testGroups[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testGroups[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testGroups[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testGroups[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testGroups[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testGroups[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testGroupsRegexp[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testGroupsRegexp[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testGroupsRegexp[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testGroupsRegexp[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testGroupsRegexp[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testSeparated[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testSeparated[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testSeparated[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testSeparated[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testSeparated[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testSeparated[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testCaseInsensitive[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testCaseInsensitive[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testCaseInsensitive[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testCaseInsensitive[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testTop[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testTop[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testTop[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testTop[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testAbove[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testAbove[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testAbove[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testAbove[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testInFlow[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testInFlow[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testInFlow[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testInFlow[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testUnder[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testUnder[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testUnder[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testUnder[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testBottom[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testBottom[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testBottom[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testBottom[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testHonorsTokenProperty[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testHonorsTokenProperty[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testHonorsTokenProperty[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testHonorsTokenProperty[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testWildcard[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testWildcard[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testWildcard[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testWildcard[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testWildcardUnspecified[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testWildcardUnspecified[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testWildcardUnspecified[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testWildcardUnspecified[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testNoFailureForRedundantImports[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testNoFailureForRedundantImports[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheckTest; testNoFailureForRedundantImports[]; void; null; this>
<not found; newHashSet[]; not found; com.puppycrawl.tools.checkstyle.checks.ClassResolverTest; testMisc[]; void; null; Sets>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.ClassResolverTest; testMisc[]; void; null; imps>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.ClassResolverTest; testMisc[]; void; null; imps>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.ClassResolverTest; testMisc[]; void; null; imps>
<java.lang.Thread; getContextClassLoader[]; java.lang.ClassLoader; com.puppycrawl.tools.checkstyle.checks.ClassResolverTest; testMisc[]; void; null; Thread.currentThread()>
<java.lang.Thread; currentThread[]; java.lang.Thread; com.puppycrawl.tools.checkstyle.checks.ClassResolverTest; testMisc[]; void; getContextClassLoader[]; Thread>
<not found; assertNotNull[]; not found; com.puppycrawl.tools.checkstyle.checks.ClassResolverTest; testMisc[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.ClassResolver; resolve[java.lang.String, java.lang.String]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.ClassResolverTest; testMisc[]; void; null; cr>
<not found; fail[]; not found; com.puppycrawl.tools.checkstyle.checks.ClassResolverTest; testMisc[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.ClassResolver; resolve[java.lang.String, java.lang.String]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.ClassResolverTest; testMisc[]; void; null; cr>
<com.puppycrawl.tools.checkstyle.checks.ClassResolver; resolve[java.lang.String, java.lang.String]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.ClassResolverTest; testMisc[]; void; null; cr>
<com.puppycrawl.tools.checkstyle.checks.ClassResolver; resolve[java.lang.String, java.lang.String]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.ClassResolverTest; testMisc[]; void; null; cr>
<com.puppycrawl.tools.checkstyle.checks.ClassResolver; resolve[java.lang.String, java.lang.String]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.ClassResolverTest; testMisc[]; void; null; cr>
<not found; fail[]; not found; com.puppycrawl.tools.checkstyle.checks.ClassResolverTest; testMisc[]; void; null; this>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.ClassResolverTest; testMisc[]; void; null; imps>
<com.puppycrawl.tools.checkstyle.checks.ClassResolver; resolve[java.lang.String, java.lang.String]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.ClassResolverTest; testMisc[]; void; null; cr>
<java.lang.Thread; getContextClassLoader[]; java.lang.ClassLoader; com.puppycrawl.tools.checkstyle.checks.ClassResolverTest; testMisc[]; void; null; Thread.currentThread()>
<java.lang.Thread; currentThread[]; java.lang.Thread; com.puppycrawl.tools.checkstyle.checks.ClassResolverTest; testMisc[]; void; getContextClassLoader[]; Thread>
<com.puppycrawl.tools.checkstyle.checks.ClassResolver; resolve[java.lang.String, java.lang.String]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.ClassResolverTest; testMisc[]; void; null; cr>
<com.puppycrawl.tools.checkstyle.checks.ClassResolver; resolve[java.lang.String, java.lang.String]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.ClassResolverTest; testMisc[]; void; null; cr>
<not found; fail[]; not found; com.puppycrawl.tools.checkstyle.checks.ClassResolverTest; testMisc[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierTest; testIt[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierTest; testIt[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierTest; testIt[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheckTest; testIt[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheckTest; testIt[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheckTest; testIt[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testSingleDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testSingleDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testSingleDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testSingleAll[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testSingleAll[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testSingleAll[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testSingleAll[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testSingleNoUnchecked[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testSingleNoUnchecked[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testSingleNoUnchecked[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testSingleNoUnchecked[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testSingleNoUncheckedTokens[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testSingleNoUncheckedTokens[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testSingleNoUncheckedTokens[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testSingleNoUncheckedTokens[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testSingleNoUncheckedTokens[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testSingleNoUnWildcard[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testSingleNoUnWildcard[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testSingleNoUnWildcard[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testSingleNoUnWildcard[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testSingleNoUncheckedUnused[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testSingleNoUncheckedUnused[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testSingleNoUncheckedUnused[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testSingleNoUncheckedUnused[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testSingleNoUncheckedUnusedAll[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testSingleNoUncheckedUnusedAll[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testSingleNoUncheckedUnusedAll[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testSingleNoUncheckedUnusedAll[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testCompactDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testCompactDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testCompactDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testCompactAll[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testCompactAll[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testCompactAll[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testCompactAll[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testCompactNoUnchecked[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testCompactNoUnchecked[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testCompactNoUnchecked[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testCompactNoUnchecked[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testCompactNoUncheckedTokens[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testCompactNoUncheckedTokens[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testCompactNoUncheckedTokens[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testCompactNoUncheckedTokens[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testCompactNoUncheckedTokens[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testCompactNoUnWildcard[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testCompactNoUnWildcard[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testCompactNoUnWildcard[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testCompactNoUnWildcard[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testCompactNoUncheckedUnused[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testCompactNoUncheckedUnused[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testCompactNoUncheckedUnused[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testCompactNoUncheckedUnused[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testCompactNoUncheckedUnusedAll[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testCompactNoUncheckedUnusedAll[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testCompactNoUncheckedUnusedAll[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testCompactNoUncheckedUnusedAll[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testExpandedDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testExpandedDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testExpandedDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testExpandedAll[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testExpandedAll[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testExpandedAll[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testExpandedAll[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testExpandedNoUnchecked[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testExpandedNoUnchecked[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testExpandedNoUnchecked[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testExpandedNoUnchecked[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testExpandedNoUncheckedTokens[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testExpandedNoUncheckedTokens[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testExpandedNoUncheckedTokens[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testExpandedNoUncheckedTokens[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testExpandedNoUncheckedTokens[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testExpandedNoUnWildcard[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testExpandedNoUnWildcard[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testExpandedNoUnWildcard[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testExpandedNoUnWildcard[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testExpandedNoUncheckedUnused[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testExpandedNoUncheckedUnused[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testExpandedNoUncheckedUnused[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testExpandedNoUncheckedUnused[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testExpandedNoUncheckedUnusedAll[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testExpandedNoUncheckedUnusedAll[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testExpandedNoUncheckedUnusedAll[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.SuppressWarningsTest; testExpandedNoUncheckedUnusedAll[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedTest; testBadDeprecatedAnnotation[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedTest; testBadDeprecatedAnnotation[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedTest; testBadDeprecatedAnnotation[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedTest; testBadDeprecatedJavadoc[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedTest; testBadDeprecatedJavadoc[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedTest; testBadDeprecatedJavadoc[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedTest; testSpecialCaseDeprecated[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedTest; testSpecialCaseDeprecated[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedTest; testSpecialCaseDeprecated[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedTest; testGoodDeprecated[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedTest; testGoodDeprecated[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingDeprecatedTest; testGoodDeprecated[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testBadOverrideFromObject[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testBadOverrideFromObject[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testBadOverrideFromObject[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testBadOverrideFromObject[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testBadOverrideFromObjectJ5Compat[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testBadOverrideFromObjectJ5Compat[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testBadOverrideFromObjectJ5Compat[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testBadOverrideFromObjectJ5Compat[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testBadOverrideFromOther[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testBadOverrideFromOther[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testBadOverrideFromOther[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testBadOverrideFromOtherJ5Compat[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testBadOverrideFromOtherJ5Compat[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testBadOverrideFromOtherJ5Compat[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testBadOverrideFromOtherJ5Compat[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testBadAnnonOverride[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testBadAnnonOverride[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testBadAnnonOverride[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testBadAnnonOverrideJ5Compat[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testBadAnnonOverrideJ5Compat[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testBadAnnonOverrideJ5Compat[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testBadAnnonOverrideJ5Compat[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testNotOverride[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testNotOverride[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testNotOverride[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testGoodOverrideFromObject[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testGoodOverrideFromObject[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testGoodOverrideFromObject[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testGoodOverrideFromObject[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testGoodOverrideFromObjectJ5Compat[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testGoodOverrideFromObjectJ5Compat[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testGoodOverrideFromObjectJ5Compat[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testGoodOverrideFromObjectJ5Compat[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testGoodOverrideFromOther[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testGoodOverrideFromOther[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testGoodOverrideFromOther[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testGoodOverrideFromOtherJ5Compat[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testGoodOverrideFromOtherJ5Compat[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testGoodOverrideFromOtherJ5Compat[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testGoodOverrideFromOtherJ5Compat[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testGoodAnnonOverride[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testGoodAnnonOverride[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testGoodAnnonOverride[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testGoodAnnonOverrideJ5Compat[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testGoodAnnonOverrideJ5Compat[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testGoodAnnonOverrideJ5Compat[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.MissingOverrideCheckTest; testGoodAnnonOverrideJ5Compat[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testParansAlways[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testParansAlways[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testParansAlways[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testParansAlways[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testParansAlways[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testParansAlways[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testParansNever[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testParansNever[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testParansNever[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testParansNever[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testParansNever[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testParansNever[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testStyleExpanded[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testStyleExpanded[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testStyleExpanded[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testStyleExpanded[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testStyleExpanded[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testStyleExpanded[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testStyleCompact[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testStyleCompact[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testStyleCompact[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testStyleCompact[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testStyleCompact[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testStyleCompact[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testStyleCompactNoArray[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testStyleCompactNoArray[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testStyleCompactNoArray[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testStyleCompactNoArray[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testStyleCompactNoArray[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testStyleCompactNoArray[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testCommaAlwaysViolations[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testCommaAlwaysViolations[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testCommaAlwaysViolations[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testCommaAlwaysViolations[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testCommaAlwaysViolations[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testCommaAlwaysViolations[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testCommaAlwaysNoViolations[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testCommaAlwaysNoViolations[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testCommaAlwaysNoViolations[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testCommaAlwaysNoViolations[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testCommaAlwaysNoViolations[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testCommaAlwaysNoViolations[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testCommaNeverViolations[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testCommaNeverViolations[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testCommaNeverViolations[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testCommaNeverViolations[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testCommaNeverViolations[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testCommaNeverViolations[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testCommaNeverNoViolations[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testCommaNeverNoViolations[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testCommaNeverNoViolations[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testCommaNeverNoViolations[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testCommaNeverNoViolations[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testCommaNeverNoViolations[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testEverythingMixed[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testEverythingMixed[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testEverythingMixed[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testEverythingMixed[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testEverythingMixed[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationUseStyleTest; testEverythingMixed[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.PackageAnnotationTest; testBadPackageAnnotation1[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.PackageAnnotationTest; testBadPackageAnnotation1[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.PackageAnnotationTest; testBadPackageAnnotation1[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.PackageAnnotationTest; testBadPackageAnnotation2[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.PackageAnnotationTest; testBadPackageAnnotation2[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.PackageAnnotationTest; testBadPackageAnnotation2[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.PackageAnnotationTest; testGoodPackageAnnotation[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.PackageAnnotationTest; testGoodPackageAnnotation[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.annotation.PackageAnnotationTest; testGoodPackageAnnotation[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testRequiredPass[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testRequiredPass[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testRequiredPass[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testRequiredPass[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testRequiredFail[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testRequiredFail[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testRequiredFail[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testRequiredFail[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testRequiredNoDuplicatesPass[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testRequiredNoDuplicatesPass[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testRequiredNoDuplicatesPass[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testRequiredNoDuplicatesPass[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testRequiredNoDuplicatesPass[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testRequiredNoDuplicatesFail[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testRequiredNoDuplicatesFail[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testRequiredNoDuplicatesFail[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testRequiredNoDuplicatesFail[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testRequiredNoDuplicatesFail[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIllegalPass[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIllegalPass[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIllegalPass[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIllegalPass[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIllegalPass[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIllegalFailBelowErrorLimit[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIllegalFailBelowErrorLimit[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIllegalFailBelowErrorLimit[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIllegalFailBelowErrorLimit[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIllegalFailBelowErrorLimit[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIllegalFailBelowErrorLimit[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIllegalFailAboveErrorLimit[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIllegalFailAboveErrorLimit[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIllegalFailAboveErrorLimit[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIllegalFailAboveErrorLimit[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIllegalFailAboveErrorLimit[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIllegalFailAboveErrorLimit[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testMessagePropertyGood[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testMessagePropertyGood[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testMessagePropertyGood[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testMessagePropertyGood[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testMessagePropertyGood[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testMessagePropertyGood[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testMessagePropertyBad[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testMessagePropertyBad[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testMessagePropertyBad[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testMessagePropertyBad[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testMessagePropertyBad[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testMessagePropertyBad[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCaseTrue[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCaseTrue[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCaseTrue[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCaseTrue[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCaseTrue[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCaseFalse[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCaseFalse[]; void; null; checkConfigTrue>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCaseFalse[]; void; null; checkConfigTrue>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCaseFalse[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCaseFalse[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCaseFalse[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCaseFalse[]; void; null; checkConfigFalse>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCaseFalse[]; void; null; checkConfigFalse>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCaseFalse[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCaseFalse[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsCppStyle[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsCppStyle[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsCppStyle[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsCppStyle[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsCppStyle[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsCppStyle[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsFalseCppStyle[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsFalseCppStyle[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsFalseCppStyle[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsFalseCppStyle[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsFalseCppStyle[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsFalseCppStyle[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsCStyle[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsCStyle[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsCStyle[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsCStyle[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsCStyle[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsCStyle[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsFalseCStyle[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsFalseCStyle[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsFalseCStyle[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsFalseCStyle[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsFalseCStyle[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsFalseCStyle[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsMultipleCStyle[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsMultipleCStyle[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsMultipleCStyle[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsMultipleCStyle[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsMultipleCStyle[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsMultipleCStyle[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsMultiLine[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsMultiLine[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsMultiLine[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsMultiLine[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsMultiLine[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsMultiLine[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsInlineStart[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsInlineStart[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsInlineStart[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsInlineStart[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsInlineStart[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsInlineStart[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsInlineEnd[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsInlineEnd[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsInlineEnd[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsInlineEnd[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsInlineEnd[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsInlineEnd[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsInlineMiddle[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsInlineMiddle[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsInlineMiddle[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsInlineMiddle[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsInlineMiddle[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsInlineMiddle[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsNoSpaces[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsNoSpaces[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsNoSpaces[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsNoSpaces[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsNoSpaces[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.RegexpCheckTest; testIgnoreCommentsNoSpaces[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.TodoCommentCheckTest; testIt[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.TodoCommentCheckTest; testIt[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.TodoCommentCheckTest; testIt[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.TodoCommentCheckTest; testIt[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; com.puppycrawl.tools.checkstyle.checks.TranslationCheckTest; createCheckerConfig[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; null; dc>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.TranslationCheckTest; testTranslation[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.TranslationCheckTest; testTranslation[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.TranslationCheckTest; testTranslation[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.TranslationCheckTest; testTranslation[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.TranslationCheckTest; testTranslation[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.TranslationCheckTest; testTranslation[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheckTest; test[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheckTest; test[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheckTest; test[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheckTest; testNoBitwise[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheckTest; testNoBitwise[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheckTest; testNoBitwise[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheckTest; testNoBitwise[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheckTest; testNoBitwise[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.NPathComplexityCheckTest; testCalculation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.metrics.NPathComplexityCheckTest; testCalculation[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.NPathComplexityCheckTest; testCalculation[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.NPathComplexityCheckTest; testCalculation[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.NPathComplexityCheckTest; testIntegerOverflow[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.metrics.NPathComplexityCheckTest; testIntegerOverflow[]; void; null; checkConfig>
<java.text.NumberFormat; format[long]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.metrics.NPathComplexityCheckTest; testIntegerOverflow[]; void; null; NumberFormat.getInstance()>
<java.text.NumberFormat; getInstance[]; java.text.NumberFormat; com.puppycrawl.tools.checkstyle.checks.metrics.NPathComplexityCheckTest; testIntegerOverflow[]; void; format[long]; NumberFormat>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.NPathComplexityCheckTest; testIntegerOverflow[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.NPathComplexityCheckTest; testIntegerOverflow[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest; test[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest; test[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest; test[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest; test[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest; test15[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest; test15[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest; test15[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.ClassFanOutComplexityCheckTest; test15[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheckTest; test[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheckTest; test[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheckTest; test[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheckTest; test[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheckTest; test[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheckTest; test[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.ClassDataAbstractionCouplingCheckTest; test[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.metrics.ClassDataAbstractionCouplingCheckTest; test[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.ClassDataAbstractionCouplingCheckTest; test[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.ClassDataAbstractionCouplingCheckTest; test[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.CyclomaticComplexityCheckTest; test[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.metrics.CyclomaticComplexityCheckTest; test[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.CyclomaticComplexityCheckTest; test[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.metrics.CyclomaticComplexityCheckTest; test[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.ConstantNameCheckTest; testIllegalRegexp[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.ConstantNameCheckTest; testIllegalRegexp[]; void; null; checkConfig>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.ConstantNameCheckTest; testIllegalRegexp[]; void; null; this>
<not found; fail[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.ConstantNameCheckTest; testIllegalRegexp[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.ConstantNameCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.ConstantNameCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.ConstantNameCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.ConstantNameCheckTest; testAccessControlTuning[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.ConstantNameCheckTest; testAccessControlTuning[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.ConstantNameCheckTest; testAccessControlTuning[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.ConstantNameCheckTest; testAccessControlTuning[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.ConstantNameCheckTest; testAccessControlTuning[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.ConstantNameCheckTest; testAccessControlTuning[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.ConstantNameCheckTest; testInterfaceAndAnnotation[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.ConstantNameCheckTest; testInterfaceAndAnnotation[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.ConstantNameCheckTest; testInterfaceAndAnnotation[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.ConstantNameCheckTest; testDefault1[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.ConstantNameCheckTest; testDefault1[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.ConstantNameCheckTest; testDefault1[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testSpecified[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testSpecified[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testSpecified[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testSpecified[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testInnerClass[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testInnerClass[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testInnerClass[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testDefaults[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testDefaults[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testDefaults[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testUnderlined[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testUnderlined[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testUnderlined[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testUnderlined[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testPublicOnly[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testPublicOnly[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testPublicOnly[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testPublicOnly[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testPublicOnly[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testPublicOnly[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testPublicOnly[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testProtectedOnly[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testProtectedOnly[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testProtectedOnly[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testProtectedOnly[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testProtectedOnly[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testProtectedOnly[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testProtectedOnly[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testPackageOnly[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testPackageOnly[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testPackageOnly[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testPackageOnly[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testPackageOnly[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testPackageOnly[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testPackageOnly[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testPrivateOnly[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testPrivateOnly[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testPrivateOnly[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testPrivateOnly[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testPrivateOnly[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testPrivateOnly[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testPrivateOnly[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testNotPrivate[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testNotPrivate[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testNotPrivate[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheckTest; testNotPrivate[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheckTest; testInnerClass[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheckTest; testInnerClass[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheckTest; testInnerClass[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheckTest; testCatchParameter[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheckTest; testCatchParameter[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheckTest; testCatchParameter[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheckTest; testCatchParameter[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheckTest; testCatchParameter[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheckTest; testMethodEqClass[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheckTest; testMethodEqClass[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheckTest; testMethodEqClass[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheckTest; testMethodEqClassAllow[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheckTest; testMethodEqClassAllow[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheckTest; testMethodEqClassAllow[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheckTest; testMethodEqClassAllow[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheckTest; testAccessTuning[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheckTest; testAccessTuning[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheckTest; testAccessTuning[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheckTest; testAccessTuning[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheckTest; testAccessTuning[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheckTest; testForNpe[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheckTest; testForNpe[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheckTest; testForNpe[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.StaticVariableNameCheckTest; testSpecified[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.StaticVariableNameCheckTest; testSpecified[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.StaticVariableNameCheckTest; testSpecified[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.StaticVariableNameCheckTest; testSpecified[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.StaticVariableNameCheckTest; testAccessTuning[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.StaticVariableNameCheckTest; testAccessTuning[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.StaticVariableNameCheckTest; testAccessTuning[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.StaticVariableNameCheckTest; testAccessTuning[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.StaticVariableNameCheckTest; testAccessTuning[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.TypeParameterNameTest; testClassDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.TypeParameterNameTest; testClassDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.TypeParameterNameTest; testClassDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.TypeParameterNameTest; testMethodDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.TypeParameterNameTest; testMethodDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.TypeParameterNameTest; testMethodDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.TypeParameterNameTest; testClassFooName[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.TypeParameterNameTest; testClassFooName[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.TypeParameterNameTest; testClassFooName[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.TypeParameterNameTest; testClassFooName[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.TypeParameterNameTest; testMethodFooName[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.TypeParameterNameTest; testMethodFooName[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.TypeParameterNameTest; testMethodFooName[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.TypeParameterNameTest; testMethodFooName[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheckTest; testIllegalAbstractClassName[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheckTest; testIllegalAbstractClassName[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheckTest; testIllegalAbstractClassName[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheckTest; testIllegalAbstractClassName[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheckTest; testIllegalAbstractClassName[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheckTest; testIllegalClassType[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheckTest; testIllegalClassType[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheckTest; testIllegalClassType[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheckTest; testIllegalClassType[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheckTest; testIllegalClassType[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheckTest; testAllVariants[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheckTest; testAllVariants[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheckTest; testAllVariants[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheckTest; testAllVariants[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.AbstractClassNameCheckTest; testAllVariants[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.PackageNameCheckTest; testSpecified[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.PackageNameCheckTest; testSpecified[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.PackageNameCheckTest; testSpecified[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.PackageNameCheckTest; testSpecified[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.PackageNameCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.PackageNameCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.PackageNameCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.TypeNameCheckTest; testSpecified[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.TypeNameCheckTest; testSpecified[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.TypeNameCheckTest; testSpecified[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.TypeNameCheckTest; testSpecified[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.TypeNameCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.TypeNameCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.TypeNameCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.ParameterNameCheckTest; testCatch[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.ParameterNameCheckTest; testCatch[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.ParameterNameCheckTest; testCatch[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.ParameterNameCheckTest; testCatch[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.ParameterNameCheckTest; testSpecified[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.ParameterNameCheckTest; testSpecified[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.ParameterNameCheckTest; testSpecified[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.ParameterNameCheckTest; testSpecified[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.ParameterNameCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.ParameterNameCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.ParameterNameCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.LocalFinalVariableNameCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.LocalFinalVariableNameCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.LocalFinalVariableNameCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.LocalFinalVariableNameCheckTest; testSet[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.naming.LocalFinalVariableNameCheckTest; testSet[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.LocalFinalVariableNameCheckTest; testSet[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.LocalFinalVariableNameCheckTest; testSet[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.LocalFinalVariableNameCheckTest; testInnerClass[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.LocalFinalVariableNameCheckTest; testInnerClass[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.naming.LocalFinalVariableNameCheckTest; testInnerClass[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; com.puppycrawl.tools.checkstyle.checks.sizes.FileLengthCheckTest; createCheckerConfig[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; null; dc>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.FileLengthCheckTest; testAlarm[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.sizes.FileLengthCheckTest; testAlarm[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.FileLengthCheckTest; testAlarm[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.FileLengthCheckTest; testAlarm[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.FileLengthCheckTest; testAlarm[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.FileLengthCheckTest; testAlarm[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.FileLengthCheckTest; testOK[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.sizes.FileLengthCheckTest; testOK[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.FileLengthCheckTest; testOK[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.FileLengthCheckTest; testOK[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.FileLengthCheckTest; testOK[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.FileLengthCheckTest; testOK[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.FileLengthCheckTest; testArgs[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.sizes.FileLengthCheckTest; testArgs[]; void; null; checkConfig>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.FileLengthCheckTest; testArgs[]; void; null; this>
<not found; fail[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.FileLengthCheckTest; testArgs[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.OuterTypeNumberCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.OuterTypeNumberCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.OuterTypeNumberCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.OuterTypeNumberCheckTest; testMax30[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.sizes.OuterTypeNumberCheckTest; testMax30[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.OuterTypeNumberCheckTest; testMax30[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.OuterTypeNumberCheckTest; testMax30[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheckTest; testDefaults[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheckTest; testDefaults[]; void; null; this>
<not found; getSrcPath[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheckTest; testDefaults[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheckTest; testThrees[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheckTest; testThrees[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheckTest; testThrees[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheckTest; testThrees[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheckTest; testThrees[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheckTest; testThrees[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheckTest; testThrees[]; void; null; this>
<not found; getSrcPath[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheckTest; testThrees[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheckTest; testEnum[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheckTest; testEnum[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheckTest; testEnum[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheckTest; testEnum[]; void; null; this>
<not found; getSrcPath[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheckTest; testEnum[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.MethodLengthCheckTest; testIt[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.sizes.MethodLengthCheckTest; testIt[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.MethodLengthCheckTest; testIt[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.MethodLengthCheckTest; testIt[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.MethodLengthCheckTest; testcountEmpty[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.sizes.MethodLengthCheckTest; testcountEmpty[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.sizes.MethodLengthCheckTest; testcountEmpty[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.MethodLengthCheckTest; testcountEmpty[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.MethodLengthCheckTest; testcountEmpty[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.MethodLengthCheckTest; testAbstract[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.MethodLengthCheckTest; testAbstract[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.MethodLengthCheckTest; testAbstract[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheckTest; testMaxZero[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheckTest; testMaxZero[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheckTest; testMaxZero[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheckTest; testMaxZero[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheckTest; testMethodDef[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheckTest; testMethodDef[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheckTest; testMethodDef[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheckTest; testMethodDef[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheckTest; testMethodDef[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheckTest; testCtorDef[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheckTest; testCtorDef[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheckTest; testCtorDef[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheckTest; testCtorDef[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheckTest; testCtorDef[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheckTest; testStaticInit[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheckTest; testStaticInit[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheckTest; testStaticInit[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheckTest; testStaticInit[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheckTest; testStaticInit[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheckTest; testInstanceInit[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheckTest; testInstanceInit[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheckTest; testInstanceInit[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheckTest; testInstanceInit[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheckTest; testInstanceInit[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.ParameterNumberCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.ParameterNumberCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.ParameterNumberCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.ParameterNumberCheckTest; testNum[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.sizes.ParameterNumberCheckTest; testNum[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.ParameterNumberCheckTest; testNum[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.ParameterNumberCheckTest; testNum[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.ParameterNumberCheckTest; shouldLogActualParameterNumber[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addMessage[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.sizes.ParameterNumberCheckTest; shouldLogActualParameterNumber[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.ParameterNumberCheckTest; shouldLogActualParameterNumber[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.ParameterNumberCheckTest; shouldLogActualParameterNumber[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.AnonInnerLengthCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.AnonInnerLengthCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.AnonInnerLengthCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.AnonInnerLengthCheckTest; testNonDefault[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.sizes.AnonInnerLengthCheckTest; testNonDefault[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.AnonInnerLengthCheckTest; testNonDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.AnonInnerLengthCheckTest; testNonDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheckTest; testSimple[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheckTest; testSimple[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheckTest; testSimple[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheckTest; testSimple[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheckTest; testSimple[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheckTest; shouldLogActualLineLength[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheckTest; shouldLogActualLineLength[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheckTest; shouldLogActualLineLength[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addMessage[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheckTest; shouldLogActualLineLength[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheckTest; shouldLogActualLineLength[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheckTest; shouldLogActualLineLength[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheckTest; createCheckerConfig[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; null; dc>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheckTest; testNewlineAtEndOfFile[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheckTest; testNewlineAtEndOfFile[]; void; null; checkConfig>
<java.lang.Enum; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheckTest; testNewlineAtEndOfFile[]; void; null; LineSeparatorOption.LF>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheckTest; testNewlineAtEndOfFile[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheckTest; testNewlineAtEndOfFile[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheckTest; testNewlineAtEndOfFile[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheckTest; testNoNewlineAtEndOfFile[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheckTest; testNoNewlineAtEndOfFile[]; void; null; checkConfig>
<java.lang.Enum; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheckTest; testNoNewlineAtEndOfFile[]; void; null; LineSeparatorOption.LF>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheckTest; testNoNewlineAtEndOfFile[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheckTest; testNoNewlineAtEndOfFile[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheckTest; testNoNewlineAtEndOfFile[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheckTest; testSetLineSeparatorFailure[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheckTest; testSetLineSeparatorFailure[]; void; null; checkConfig>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheckTest; testSetLineSeparatorFailure[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheckTest; testEmptyFileFile[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheckTest; testEmptyFileFile[]; void; null; checkConfig>
<java.lang.Enum; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheckTest; testEmptyFileFile[]; void; null; LineSeparatorOption.LF>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheckTest; testEmptyFileFile[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheckTest; testEmptyFileFile[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheckTest; testEmptyFileFile[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; com.puppycrawl.tools.checkstyle.checks.FileSetCheckLifecycleTest; createCheckerConfig[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; null; dc>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.FileSetCheckLifecycleTest; testTranslation[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.FileSetCheckLifecycleTest; testTranslation[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.FileSetCheckLifecycleTest; testTranslation[]; void; null; this>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.checks.FileSetCheckLifecycleTest; testTranslation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.FileSetCheckLifecycleTest$TestFileSetCheck; isDestroyed[]; boolean; com.puppycrawl.tools.checkstyle.checks.FileSetCheckLifecycleTest; testTranslation[]; void; null; TestFileSetCheck>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testStaticHeader[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testStaticHeader[]; void; null; checkConfig>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testStaticHeader[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testStaticHeader[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testStaticHeader[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testStaticHeader[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeader[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeader[]; void; null; checkConfig>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeader[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeader[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeader[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testInlineRegexpHeader[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testInlineRegexpHeader[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testInlineRegexpHeader[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testInlineRegexpHeader[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testFailureForMultilineRegexp[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testFailureForMultilineRegexp[]; void; null; checkConfig>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testFailureForMultilineRegexp[]; void; null; this>
<not found; fail[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testFailureForMultilineRegexp[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderIgnore[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderIgnore[]; void; null; checkConfig>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderIgnore[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderIgnore[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderIgnore[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderMulti1[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderMulti1[]; void; null; checkConfig>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderMulti1[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderMulti1[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderMulti1[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderMulti1[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderMulti2[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderMulti2[]; void; null; checkConfig>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderMulti2[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderMulti2[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderMulti2[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderMulti2[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderMulti3[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderMulti3[]; void; null; checkConfig>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderMulti3[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderMulti3[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderMulti3[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderMulti3[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderMulti4[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderMulti4[]; void; null; checkConfig>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderMulti4[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderMulti4[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderMulti4[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderMulti4[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderMulti5[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderMulti5[]; void; null; checkConfig>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderMulti5[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderMulti5[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderMulti5[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderMulti5[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderSmallHeader[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderSmallHeader[]; void; null; checkConfig>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderSmallHeader[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderSmallHeader[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderSmallHeader[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testRegexpHeaderSmallHeader[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testNoHeader[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testNoHeader[]; void; null; this>
<not found; fail[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testNoHeader[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testNonExistingHeaderFile[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testNonExistingHeaderFile[]; void; null; checkConfig>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testNonExistingHeaderFile[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testNonExistingHeaderFile[]; void; null; this>
<not found; fail[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testNonExistingHeaderFile[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testInvalidCharset[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testInvalidCharset[]; void; null; checkConfig>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testInvalidCharset[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testInvalidCharset[]; void; null; checkConfig>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testInvalidCharset[]; void; null; this>
<not found; fail[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testInvalidCharset[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testEmptyFilename[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testEmptyFilename[]; void; null; checkConfig>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testEmptyFilename[]; void; null; this>
<not found; fail[]; not found; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheckTest; testEmptyFilename[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.ArrayTypeStyleCheckTest; testJavaStyle[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.ArrayTypeStyleCheckTest; testJavaStyle[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.ArrayTypeStyleCheckTest; testJavaStyle[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.ArrayTypeStyleCheckTest; testCStyle[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.ArrayTypeStyleCheckTest; testCStyle[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.ArrayTypeStyleCheckTest; testCStyle[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.ArrayTypeStyleCheckTest; testCStyle[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.OuterTypeFilenameCheckTest; testGood[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.OuterTypeFilenameCheckTest; testGood[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.OuterTypeFilenameCheckTest; testGood[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.OuterTypeFilenameCheckTest; testBad[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.OuterTypeFilenameCheckTest; testBad[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.OuterTypeFilenameCheckTest; testBad[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheckTest; setUp[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheckTest; testDefault[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheckTest; testSame[]; void; null; mCheckConfig>
<java.lang.Enum; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheckTest; testSame[]; void; null; RightCurlyOption.SAME>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheckTest; testSame[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheckTest; testSame[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheckTest; testAlone[]; void; null; mCheckConfig>
<java.lang.Enum; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheckTest; testAlone[]; void; null; RightCurlyOption.ALONE>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheckTest; testAlone[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheckTest; testAlone[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheckTest; testShouldStartLine[]; void; null; mCheckConfig>
<java.lang.Enum; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheckTest; testShouldStartLine[]; void; null; RightCurlyOption.ALONE>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheckTest; testShouldStartLine[]; void; null; mCheckConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheckTest; testShouldStartLine[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheckTest; testShouldStartLine[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheckTest; testIt[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheckTest; testIt[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheckTest; testIt[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.AvoidNestedBlocksCheckTest; testStrictSettings[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.AvoidNestedBlocksCheckTest; testStrictSettings[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.AvoidNestedBlocksCheckTest; testStrictSettings[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.AvoidNestedBlocksCheckTest; testAllowSwitchInCase[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.blocks.AvoidNestedBlocksCheckTest; testAllowSwitchInCase[]; void; null; checkConfig>
<java.lang.Boolean; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.blocks.AvoidNestedBlocksCheckTest; testAllowSwitchInCase[]; void; null; Boolean.TRUE>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.AvoidNestedBlocksCheckTest; testAllowSwitchInCase[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.AvoidNestedBlocksCheckTest; testAllowSwitchInCase[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheckTest; testText[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheckTest; testText[]; void; null; checkConfig>
<java.lang.Enum; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheckTest; testText[]; void; null; BlockOption.TEXT>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheckTest; testText[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheckTest; testText[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheckTest; testStatement[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheckTest; testStatement[]; void; null; checkConfig>
<java.lang.Enum; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheckTest; testStatement[]; void; null; BlockOption.STMT>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheckTest; testStatement[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheckTest; testStatement[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheckTest; setUp[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheckTest; testDefault[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheckTest; testNL[]; void; null; mCheckConfig>
<java.lang.Enum; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheckTest; testNL[]; void; null; LeftCurlyOption.NL>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheckTest; testNL[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheckTest; testNL[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheckTest; testNLOW[]; void; null; mCheckConfig>
<java.lang.Enum; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheckTest; testNLOW[]; void; null; LeftCurlyOption.NLOW>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheckTest; testNLOW[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheckTest; testNLOW[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheckTest; testDefault2[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheckTest; testDefault2[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheckTest; testNL2[]; void; null; mCheckConfig>
<java.lang.Enum; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheckTest; testNL2[]; void; null; LeftCurlyOption.NL>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheckTest; testNL2[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheckTest; testNL2[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheckTest; testDefault3[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheckTest; testDefault3[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheckTest; testNL3[]; void; null; mCheckConfig>
<java.lang.Enum; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheckTest; testNL3[]; void; null; LeftCurlyOption.NL>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheckTest; testNL3[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheckTest; testNL3[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheckTest; testMissingBraces[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheckTest; testMissingBraces[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheckTest; testDefaultWithAnnotations[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheckTest; testDefaultWithAnnotations[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheckTest; testNLWithAnnotations[]; void; null; mCheckConfig>
<java.lang.Enum; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheckTest; testNLWithAnnotations[]; void; null; LeftCurlyOption.NL>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheckTest; testNLWithAnnotations[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheckTest; testNLWithAnnotations[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidLabel[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidLabel[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidLabel[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidLabel[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidLabel[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidLabel[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidIfWithChecker[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidIfWithChecker[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidIfWithChecker[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidIfWithChecker[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidDotWithChecker[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidDotWithChecker[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidDotWithChecker[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidDotWithChecker[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidMethodWithChecker[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidMethodWithChecker[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidMethodWithChecker[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidMethodWithChecker[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidMethodWithChecker[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidMethodWithChecker[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidMethodWithChecker[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidMethodWithChecker[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidSwitchWithChecker[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidSwitchWithChecker[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidSwitchWithChecker[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidSwitchWithChecker[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidSwitchWithChecker[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidSwitchWithChecker[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidSwitchWithChecker[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidSwitchWithChecker[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidArrayInitWithChecker[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidArrayInitWithChecker[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidArrayInitWithChecker[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidArrayInitWithChecker[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidArrayInitWithChecker[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidArrayInitWithChecker[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidArrayInitWithChecker[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidArrayInitWithChecker[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidTryWithChecker[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidTryWithChecker[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidTryWithChecker[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidTryWithChecker[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidTryWithChecker[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidTryWithChecker[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidTryWithChecker[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidTryWithChecker[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidClassDefWithChecker[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidClassDefWithChecker[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidClassDefWithChecker[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidClassDefWithChecker[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidBlockWithChecker[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidBlockWithChecker[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidBlockWithChecker[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidBlockWithChecker[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidIfWithChecker[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidIfWithChecker[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidIfWithChecker[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidIfWithChecker[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidWhileWithChecker[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidWhileWithChecker[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidWhileWithChecker[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidWhileWithChecker[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidForWithChecker[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidForWithChecker[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidForWithChecker[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidForWithChecker[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidForWithChecker[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidForWithChecker[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidForWithChecker[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidForWithChecker[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidDoWhileWithChecker[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidDoWhileWithChecker[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidDoWhileWithChecker[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidDoWhileWithChecker[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidBlockWithChecker[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidBlockWithChecker[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidBlockWithChecker[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidBlockWithChecker[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidWhileWithChecker[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidWhileWithChecker[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidWhileWithChecker[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidWhileWithChecker[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidClassDefWithChecker[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidClassDefWithChecker[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidClassDefWithChecker[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidClassDefWithChecker[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidInterfaceDefWithChecker[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidInterfaceDefWithChecker[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidInterfaceDefWithChecker[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidInterfaceDefWithChecker[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidCommaWithChecker[]; void; null; this>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidCommaWithChecker[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidCommaWithChecker[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidCommaWithChecker[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testTabs[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testTabs[]; void; null; checkConfig>
<java.lang.Integer; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testTabs[]; void; null; Integer.valueOf(4)>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testTabs[]; void; toString[]; Integer>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testTabs[]; void; null; checkConfig>
<java.lang.Integer; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testTabs[]; void; null; Integer.valueOf(4)>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testTabs[]; void; toString[]; Integer>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testTabs[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testTabs[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testIndentationLevel[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testIndentationLevel[]; void; null; checkConfig>
<java.lang.Integer; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testIndentationLevel[]; void; null; Integer.valueOf(2)>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testIndentationLevel[]; void; toString[]; Integer>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testIndentationLevel[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testIndentationLevel[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testCaseLevel[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testCaseLevel[]; void; null; checkConfig>
<java.lang.Integer; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testCaseLevel[]; void; null; Integer.valueOf(0)>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testCaseLevel[]; void; toString[]; Integer>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testCaseLevel[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testCaseLevel[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testBraceAdjustment[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testBraceAdjustment[]; void; null; checkConfig>
<java.lang.Integer; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testBraceAdjustment[]; void; null; Integer.valueOf(2)>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testBraceAdjustment[]; void; toString[]; Integer>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testBraceAdjustment[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testBraceAdjustment[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidAssignWithChecker[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidAssignWithChecker[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testInvalidAssignWithChecker[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidAssignWithChecker[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidAssignWithChecker[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testValidAssignWithChecker[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; test15Extensions[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; test15Extensions[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; test15Extensions[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testTryResources[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testTryResources[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheckTest; testTryResources[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheckTest; testDefaultTokens[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheckTest; testDefaultTokens[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheckTest; testDefaultTokens[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheckTest; testCtorToken[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheckTest; testCtorToken[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheckTest; testCtorToken[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheckTest; testCtorToken[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheckTest; testMethodToken[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheckTest; testMethodToken[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheckTest; testMethodToken[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheckTest; testMethodToken[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheckTest; testCatchToken[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheckTest; testCatchToken[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheckTest; testCatchToken[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheckTest; testCatchToken[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheckTest; testForEachClauseToken[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheckTest; testForEachClauseToken[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheckTest; testForEachClauseToken[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.FinalParametersCheckTest; testForEachClauseToken[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.design.InterfaceIsTypeCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.design.InterfaceIsTypeCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.design.InterfaceIsTypeCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.design.InterfaceIsTypeCheckTest; testAllowMarker[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.design.InterfaceIsTypeCheckTest; testAllowMarker[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.design.InterfaceIsTypeCheckTest; testAllowMarker[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.design.InterfaceIsTypeCheckTest; testAllowMarker[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheckTest; testIt[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheckTest; testIt[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheckTest; testIt[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.design.InnerTypeLastCheckTest; testMembersBeforeInner[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.design.InnerTypeLastCheckTest; testMembersBeforeInner[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.design.InnerTypeLastCheckTest; testMembersBeforeInner[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.design.MutableExceptionCheckTest; test[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.design.MutableExceptionCheckTest; test[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.design.MutableExceptionCheckTest; test[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.design.ThrowsCountCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.design.ThrowsCountCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.design.ThrowsCountCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.design.ThrowsCountCheckTest; testMax[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.design.ThrowsCountCheckTest; testMax[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.design.ThrowsCountCheckTest; testMax[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.design.ThrowsCountCheckTest; testMax[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheckTest; testFianlClass[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheckTest; testFianlClass[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.design.FinalClassCheckTest; testFianlClass[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheckTest; testUtilClass[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheckTest; testUtilClass[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheckTest; testUtilClass[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheckTest; testNonUtilClass[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheckTest; testNonUtilClass[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheckTest; testNonUtilClass[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheckTest; testDerivedNonUtilClass[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheckTest; testDerivedNonUtilClass[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheckTest; testDerivedNonUtilClass[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheckTest; testOnlyNonstaticFieldNonUtilClass[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheckTest; testOnlyNonstaticFieldNonUtilClass[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheckTest; testOnlyNonstaticFieldNonUtilClass[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheckTest; testEmptyAbstractClass[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheckTest; testEmptyAbstractClass[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheckTest; testEmptyAbstractClass[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheckTest; testEmptyClassWithOnlyPrivateFields[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheckTest; testEmptyClassWithOnlyPrivateFields[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheckTest; testEmptyClassWithOnlyPrivateFields[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheckTest; testClassWithStaticInnerClass[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheckTest; testClassWithStaticInnerClass[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.design.HideUtilityClassConstructorCheckTest; testClassWithStaticInnerClass[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheckTest; getChecker[]; com.puppycrawl.tools.checkstyle.Checker; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheckTest; getChecker[]; com.puppycrawl.tools.checkstyle.Checker; null; checkConfig>
<not found; createChecker[]; not found; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheckTest; getChecker[]; com.puppycrawl.tools.checkstyle.Checker; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheckTest; testInner[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheckTest; getChecker[]; com.puppycrawl.tools.checkstyle.Checker; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheckTest; testInner[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheckTest; testInner[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheckTest; testIgnoreAccess[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheckTest; testIgnoreAccess[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheckTest; testIgnoreAccess[]; void; null; checkConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheckTest; testIgnoreAccess[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheckTest; testIgnoreAccess[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheckTest; testIgnoreAccess[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheckTest; testSimple[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheckTest; getChecker[]; com.puppycrawl.tools.checkstyle.Checker; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheckTest; testSimple[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheckTest; testSimple[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheckTest; testStrictJavadoc[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheckTest; getChecker[]; com.puppycrawl.tools.checkstyle.Checker; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheckTest; testStrictJavadoc[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheckTest; testStrictJavadoc[]; void; null; this>
<com.puppycrawl.tools.checkstyle.Checker; setBasedir[java.lang.String]; void; com.puppycrawl.tools.checkstyle.CheckerTest; testDosBasedir[]; void; null; c>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testDosBasedir[]; void; null; this>
<com.puppycrawl.tools.checkstyle.Checker; getBasedir[]; java.lang.String; com.puppycrawl.tools.checkstyle.CheckerTest; testDosBasedir[]; void; null; c>
<java.lang.String; replace[char, char]; java.lang.String; com.puppycrawl.tools.checkstyle.CheckerTest; testOsBasedir[]; void; null; System.getProperty("testinputs.dir").replace('/',File.separatorChar)>
<java.lang.String; replace[char, char]; java.lang.String; com.puppycrawl.tools.checkstyle.CheckerTest; testOsBasedir[]; void; replace[char, char]; System.getProperty("testinputs.dir")>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.CheckerTest; testOsBasedir[]; void; replace[char, char]; System>
<java.lang.String; endsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.CheckerTest; testOsBasedir[]; void; null; testinputs_dir>
<com.puppycrawl.tools.checkstyle.Checker; setBasedir[java.lang.String]; void; com.puppycrawl.tools.checkstyle.CheckerTest; testOsBasedir[]; void; null; c>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testOsBasedir[]; void; null; this>
<java.lang.String; equalsIgnoreCase[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.CheckerTest; testOsBasedir[]; void; null; (testinputs_dir + "coding")>
<com.puppycrawl.tools.checkstyle.Checker; getBasedir[]; java.lang.String; com.puppycrawl.tools.checkstyle.CheckerTest; testOsBasedir[]; void; null; c>
<not found; addListener[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testDestroy[]; void; null; c>
<not found; addFilter[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testDestroy[]; void; null; c>
<not found; destroy[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testDestroy[]; void; null; c>
<not found; fireAuditStarted[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testDestroy[]; void; null; c>
<not found; fireAuditFinished[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testDestroy[]; void; null; c>
<not found; fireFileStarted[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testDestroy[]; void; null; c>
<not found; fireFileFinished[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testDestroy[]; void; null; c>
<not found; newTreeSet[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testDestroy[]; void; null; Sets>
<java.util.TreeSet; add[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; boolean; com.puppycrawl.tools.checkstyle.CheckerTest; testDestroy[]; void; null; msgs>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.CheckerTest>; com.puppycrawl.tools.checkstyle.CheckerTest; testDestroy[]; void; null; this>
<not found; fireErrors[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testDestroy[]; void; null; c>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testDestroy[]; void; null; this>
<not found; wasCalled[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testDestroy[]; void; null; aa>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testDestroy[]; void; null; this>
<not found; wasCalled[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testDestroy[]; void; null; f>
<not found; addListener[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testAddListener[]; void; null; c>
<not found; fireAuditStarted[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testAddListener[]; void; null; c>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testAddListener[]; void; null; this>
<not found; wasCalled[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testAddListener[]; void; null; aa>
<not found; resetListener[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testAddListener[]; void; null; aa>
<not found; fireAuditFinished[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testAddListener[]; void; null; c>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testAddListener[]; void; null; this>
<not found; wasCalled[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testAddListener[]; void; null; aa>
<not found; resetListener[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testAddListener[]; void; null; aa>
<not found; fireFileStarted[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testAddListener[]; void; null; c>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testAddListener[]; void; null; this>
<not found; wasCalled[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testAddListener[]; void; null; aa>
<not found; resetListener[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testAddListener[]; void; null; aa>
<not found; fireFileFinished[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testAddListener[]; void; null; c>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testAddListener[]; void; null; this>
<not found; wasCalled[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testAddListener[]; void; null; aa>
<not found; resetListener[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testAddListener[]; void; null; aa>
<not found; newTreeSet[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testAddListener[]; void; null; Sets>
<java.util.TreeSet; add[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; boolean; com.puppycrawl.tools.checkstyle.CheckerTest; testAddListener[]; void; null; msgs>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.CheckerTest>; com.puppycrawl.tools.checkstyle.CheckerTest; testAddListener[]; void; null; this>
<not found; fireErrors[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testAddListener[]; void; null; c>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testAddListener[]; void; null; this>
<not found; wasCalled[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testAddListener[]; void; null; aa>
<not found; addListener[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveListener[]; void; null; c>
<not found; addListener[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveListener[]; void; null; c>
<not found; removeListener[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveListener[]; void; null; c>
<not found; fireAuditStarted[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveListener[]; void; null; c>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveListener[]; void; null; this>
<not found; wasCalled[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveListener[]; void; null; aa2>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveListener[]; void; null; this>
<not found; wasCalled[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveListener[]; void; null; aa>
<not found; resetListener[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveListener[]; void; null; aa2>
<not found; fireAuditFinished[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveListener[]; void; null; c>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveListener[]; void; null; this>
<not found; wasCalled[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveListener[]; void; null; aa2>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveListener[]; void; null; this>
<not found; wasCalled[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveListener[]; void; null; aa>
<not found; resetListener[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveListener[]; void; null; aa2>
<not found; fireFileStarted[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveListener[]; void; null; c>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveListener[]; void; null; this>
<not found; wasCalled[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveListener[]; void; null; aa2>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveListener[]; void; null; this>
<not found; wasCalled[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveListener[]; void; null; aa>
<not found; resetListener[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveListener[]; void; null; aa2>
<not found; fireFileFinished[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveListener[]; void; null; c>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveListener[]; void; null; this>
<not found; wasCalled[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveListener[]; void; null; aa2>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveListener[]; void; null; this>
<not found; wasCalled[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveListener[]; void; null; aa>
<not found; resetListener[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveListener[]; void; null; aa2>
<not found; newTreeSet[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveListener[]; void; null; Sets>
<java.util.TreeSet; add[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; boolean; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveListener[]; void; null; msgs>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.CheckerTest>; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveListener[]; void; null; this>
<not found; fireErrors[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveListener[]; void; null; c>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveListener[]; void; null; this>
<not found; wasCalled[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveListener[]; void; null; aa2>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveListener[]; void; null; this>
<not found; wasCalled[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveListener[]; void; null; aa>
<not found; addFilter[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testAddFilter[]; void; null; c>
<not found; resetFilter[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testAddFilter[]; void; null; f>
<not found; newTreeSet[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testAddFilter[]; void; null; Sets>
<java.util.TreeSet; add[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; boolean; com.puppycrawl.tools.checkstyle.CheckerTest; testAddFilter[]; void; null; msgs>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.CheckerTest>; com.puppycrawl.tools.checkstyle.CheckerTest; testAddFilter[]; void; null; this>
<not found; fireErrors[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testAddFilter[]; void; null; c>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testAddFilter[]; void; null; this>
<not found; wasCalled[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testAddFilter[]; void; null; f>
<not found; addFilter[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveFilter[]; void; null; c>
<not found; addFilter[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveFilter[]; void; null; c>
<not found; removeFilter[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveFilter[]; void; null; c>
<not found; resetFilter[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveFilter[]; void; null; f2>
<not found; newTreeSet[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveFilter[]; void; null; Sets>
<java.util.TreeSet; add[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; boolean; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveFilter[]; void; null; msgs>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.CheckerTest>; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveFilter[]; void; null; this>
<not found; fireErrors[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveFilter[]; void; null; c>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveFilter[]; void; null; this>
<not found; wasCalled[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveFilter[]; void; null; f2>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveFilter[]; void; null; this>
<not found; wasCalled[]; not found; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveFilter[]; void; null; f>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; com.puppycrawl.tools.checkstyle.BaseFileSetCheckTestSupport; createCheckerConfig[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; null; dc>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; verifySuppressed[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; testNone[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; createFilterConfig[java.lang.Class<?>]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; testDefault[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; verifySuppressed[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; testDefault[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; createFilterConfig[java.lang.Class<?>]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; testCheckC[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; testCheckC[]; void; null; filterConfig>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; verifySuppressed[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; testCheckC[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; createFilterConfig[java.lang.Class<?>]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; testCheckCPP[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; testCheckCPP[]; void; null; filterConfig>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; verifySuppressed[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; testCheckCPP[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; createFilterConfig[java.lang.Class<?>]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; testOffFormat[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; testOffFormat[]; void; null; filterConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; testOffFormat[]; void; null; filterConfig>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; verifySuppressed[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; testOffFormat[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; createFilterConfig[java.lang.Class<?>]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; testOffFormatCheck[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; testOffFormatCheck[]; void; null; filterConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; testOffFormatCheck[]; void; null; filterConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; testOffFormatCheck[]; void; null; filterConfig>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; verifySuppressed[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; testOffFormatCheck[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; createFilterConfig[java.lang.Class<?>]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; testExpansion[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; testExpansion[]; void; null; filterConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; testExpansion[]; void; null; filterConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; testExpansion[]; void; null; filterConfig>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; verifySuppressed[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; testExpansion[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; createFilterConfig[java.lang.Class<?>]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; testMessage[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; testMessage[]; void; null; filterConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; testMessage[]; void; null; filterConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; testMessage[]; void; null; filterConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; testMessage[]; void; null; filterConfig>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; verifySuppressed[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; testMessage[]; void; null; this>
<java.lang.Class; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; createFilterConfig[java.lang.Class<?>]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; null; aClass>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; verifySuppressed[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; verifySuppressed[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String[]]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; verifySuppressed[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; removeSuppressed[java.lang.String[], java.lang.String[]]; java.lang.String[]; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; verifySuppressed[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String[]]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; checksConfig>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; checksConfig>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; checksConfig>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; checksConfig>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; checkerConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; checkerConfig>
<com.puppycrawl.tools.checkstyle.Checker; setLocaleCountry[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; checker>
<java.util.Locale; getCountry[]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; locale>
<com.puppycrawl.tools.checkstyle.Checker; setLocaleLanguage[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; checker>
<java.util.Locale; getLanguage[]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; locale>
<com.puppycrawl.tools.checkstyle.Checker; setModuleClassLoader[java.lang.ClassLoader]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; checker>
<java.lang.Thread; getContextClassLoader[]; java.lang.ClassLoader; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; Thread.currentThread()>
<java.lang.Thread; currentThread[]; java.lang.Thread; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; getContextClassLoader[]; Thread>
<com.puppycrawl.tools.checkstyle.api.AutomaticBean; configure[com.puppycrawl.tools.checkstyle.api.Configuration]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; checker>
<com.puppycrawl.tools.checkstyle.Checker; addListener[com.puppycrawl.tools.checkstyle.api.AuditListener]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; checker>
<not found; newArrayList[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; removeSuppressed[java.lang.String[], java.lang.String[]]; java.lang.String[]; null; Lists>
<java.util.Arrays; asList[java.lang.String[]]; java.util.List<java.lang.String>; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; removeSuppressed[java.lang.String[], java.lang.String[]]; java.lang.String[]; null; Arrays>
<java.util.Collection; removeAll[java.util.Collection<?>]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; removeSuppressed[java.lang.String[], java.lang.String[]]; java.lang.String[]; null; coll>
<java.util.Arrays; asList[java.lang.String[]]; java.util.List<java.lang.String>; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; removeSuppressed[java.lang.String[], java.lang.String[]]; java.lang.String[]; null; Arrays>
<java.util.Collection; toArray[java.lang.String[]]; java.lang.String[]; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; removeSuppressed[java.lang.String[], java.lang.String[]]; java.lang.String[]; null; coll>
<java.util.Collection; size[]; int; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; removeSuppressed[java.lang.String[], java.lang.String[]]; java.lang.String[]; null; coll>
<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; verifySuppressed[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; testNone[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; createFilterConfig[java.lang.Class<?>]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; testDefault[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; verifySuppressed[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; testDefault[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; createFilterConfig[java.lang.Class<?>]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; testCheckC[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; testCheckC[]; void; null; filterConfig>
<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; verifySuppressed[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; testCheckC[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; createFilterConfig[java.lang.Class<?>]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; testCheckCPP[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; testCheckCPP[]; void; null; filterConfig>
<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; verifySuppressed[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; testCheckCPP[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; createFilterConfig[java.lang.Class<?>]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; testUsingAVariableMessage[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; testUsingAVariableMessage[]; void; null; filterConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; testUsingAVariableMessage[]; void; null; filterConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; testUsingAVariableMessage[]; void; null; filterConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; testUsingAVariableMessage[]; void; null; filterConfig>
<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; verifySuppressed[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; testUsingAVariableMessage[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; createFilterConfig[java.lang.Class<?>]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; testUsingAVariableCheckOnNextLine[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; testUsingAVariableCheckOnNextLine[]; void; null; filterConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; testUsingAVariableCheckOnNextLine[]; void; null; filterConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; testUsingAVariableCheckOnNextLine[]; void; null; filterConfig>
<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; verifySuppressed[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; testUsingAVariableCheckOnNextLine[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; createFilterConfig[java.lang.Class<?>]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; testUsingAVariableCheckOnPreviousLine[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; testUsingAVariableCheckOnPreviousLine[]; void; null; filterConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; testUsingAVariableCheckOnPreviousLine[]; void; null; filterConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; testUsingAVariableCheckOnPreviousLine[]; void; null; filterConfig>
<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; verifySuppressed[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; testUsingAVariableCheckOnPreviousLine[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; createFilterConfig[java.lang.Class<?>]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; testVariableCheckOnVariableNumberOfLines[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; testVariableCheckOnVariableNumberOfLines[]; void; null; filterConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; testVariableCheckOnVariableNumberOfLines[]; void; null; filterConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; testVariableCheckOnVariableNumberOfLines[]; void; null; filterConfig>
<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; verifySuppressed[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; testVariableCheckOnVariableNumberOfLines[]; void; null; this>
<java.lang.Class; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; createFilterConfig[java.lang.Class<?>]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; null; aClass>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; verifySuppressed[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; verifySuppressed[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String[]]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; verifySuppressed[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; removeSuppressed[java.lang.String[], java.lang.String[]]; java.lang.String[]; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; verifySuppressed[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String[]]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; checksConfig>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; checksConfig>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; checksConfig>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; checksConfig>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; checkerConfig>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; checkerConfig>
<com.puppycrawl.tools.checkstyle.Checker; setLocaleCountry[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; checker>
<java.util.Locale; getCountry[]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; locale>
<com.puppycrawl.tools.checkstyle.Checker; setLocaleLanguage[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; checker>
<java.util.Locale; getLanguage[]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; locale>
<com.puppycrawl.tools.checkstyle.Checker; setModuleClassLoader[java.lang.ClassLoader]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; checker>
<java.lang.Thread; getContextClassLoader[]; java.lang.ClassLoader; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; Thread.currentThread()>
<java.lang.Thread; currentThread[]; java.lang.Thread; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; getContextClassLoader[]; Thread>
<com.puppycrawl.tools.checkstyle.api.AutomaticBean; configure[com.puppycrawl.tools.checkstyle.api.Configuration]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; checker>
<com.puppycrawl.tools.checkstyle.Checker; addListener[com.puppycrawl.tools.checkstyle.api.AuditListener]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; checker>
<not found; newArrayList[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; removeSuppressed[java.lang.String[], java.lang.String[]]; java.lang.String[]; null; Lists>
<java.util.Arrays; asList[java.lang.String[]]; java.util.List<java.lang.String>; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; removeSuppressed[java.lang.String[], java.lang.String[]]; java.lang.String[]; null; Arrays>
<java.util.Collection; removeAll[java.util.Collection<?>]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; removeSuppressed[java.lang.String[], java.lang.String[]]; java.lang.String[]; null; coll>
<java.util.Arrays; asList[java.lang.String[]]; java.util.List<java.lang.String>; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; removeSuppressed[java.lang.String[], java.lang.String[]]; java.lang.String[]; null; Arrays>
<java.util.Collection; toArray[java.lang.String[]]; java.lang.String[]; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; removeSuppressed[java.lang.String[], java.lang.String[]]; java.lang.String[]; null; coll>
<java.util.Collection; size[]; int; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; removeSuppressed[java.lang.String[], java.lang.String[]]; java.lang.String[]; null; coll>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilterTest; testDefault[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilter; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilterTest; testDefault[]; void; null; filter>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilterTest>; com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilterTest; testDefault[]; void; null; this>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilterTest; testDefault[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilter; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilterTest; testDefault[]; void; null; filter>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilterTest>; com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilterTest; testDefault[]; void; null; this>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilterTest; testDefault[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilter; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilterTest; testDefault[]; void; null; filter>
<com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilter; setSeverity[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilterTest; testSeverity[]; void; null; filter>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilterTest; testSeverity[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilter; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilterTest; testSeverity[]; void; null; filter>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilterTest>; com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilterTest; testSeverity[]; void; null; this>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilterTest; testSeverity[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilter; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilterTest; testSeverity[]; void; null; filter>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilterTest>; com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilterTest; testSeverity[]; void; null; this>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilterTest; testSeverity[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilter; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilterTest; testSeverity[]; void; null; filter>
<com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilter; setSeverity[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilterTest; testAcceptOnMatch[]; void; null; filter>
<com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilter; setAcceptOnMatch[boolean]; void; com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilterTest; testAcceptOnMatch[]; void; null; filter>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilterTest; testAcceptOnMatch[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilter; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilterTest; testAcceptOnMatch[]; void; null; filter>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilterTest>; com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilterTest; testAcceptOnMatch[]; void; null; this>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilterTest; testAcceptOnMatch[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilter; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilterTest; testAcceptOnMatch[]; void; null; filter>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilterTest>; com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilterTest; testAcceptOnMatch[]; void; null; this>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilterTest; testAcceptOnMatch[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilter; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; com.puppycrawl.tools.checkstyle.filters.SeverityMatchFilterTest; testAcceptOnMatch[]; void; null; filter>
<com.puppycrawl.tools.checkstyle.filters.SuppressElement; setChecks[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; setUp[]; void; null; filter>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testDecideDefault[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getFileName[]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testDecideDefault[]; void; null; ev>
<com.puppycrawl.tools.checkstyle.filters.SuppressElement; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testDecideDefault[]; void; null; filter>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.filters.SuppressElementTest>; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testDecideLocalizedMessage[]; void; null; this>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testDecideLocalizedMessage[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressElement; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testDecideLocalizedMessage[]; void; null; filter>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.filters.SuppressElementTest>; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testDecideByLine[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressElement; setLines[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testDecideByLine[]; void; null; filter>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testDecideByLine[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressElement; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testDecideByLine[]; void; null; filter>
<com.puppycrawl.tools.checkstyle.filters.SuppressElement; setLines[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testDecideByLine[]; void; null; filter>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testDecideByLine[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressElement; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testDecideByLine[]; void; null; filter>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.filters.SuppressElementTest>; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testDecideByColumn[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressElement; setColumns[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testDecideByColumn[]; void; null; filter>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testDecideByColumn[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressElement; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testDecideByColumn[]; void; null; filter>
<com.puppycrawl.tools.checkstyle.filters.SuppressElement; setColumns[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testDecideByColumn[]; void; null; filter>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testDecideByColumn[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressElement; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testDecideByColumn[]; void; null; filter>
<com.puppycrawl.tools.checkstyle.filters.SuppressElement; setChecks[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testEquals[]; void; null; filter2>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testEquals[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressElement; setChecks[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testEquals[]; void; null; filter3>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testEquals[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressElement; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testEquals[]; void; null; filter>
<com.puppycrawl.tools.checkstyle.filters.SuppressElement; setColumns[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testEquals[]; void; null; filter>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testEquals[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressElement; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testEquals[]; void; null; filter>
<com.puppycrawl.tools.checkstyle.filters.SuppressElement; setColumns[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testEquals[]; void; null; filter2>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testEquals[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressElement; setColumns[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testEquals[]; void; null; filter>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testEquals[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressElement; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testEquals[]; void; null; filter>
<com.puppycrawl.tools.checkstyle.filters.SuppressElement; setColumns[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testEquals[]; void; null; filter2>
<com.puppycrawl.tools.checkstyle.filters.SuppressElement; setLines[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testEquals[]; void; null; filter>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testEquals[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressElement; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testEquals[]; void; null; filter>
<com.puppycrawl.tools.checkstyle.filters.SuppressElement; setLines[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testEquals[]; void; null; filter2>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testEquals[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressElement; setColumns[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testEquals[]; void; null; filter>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testEquals[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressElement; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testEquals[]; void; null; filter>
<com.puppycrawl.tools.checkstyle.filters.SuppressElement; setColumns[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testEquals[]; void; null; filter2>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressElementTest; testEquals[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader; loadSuppressions[java.lang.String]; com.puppycrawl.tools.checkstyle.api.FilterSet; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoaderTest; testResourceLoadSuppressions[]; void; null; SuppressionsLoader>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoaderTest; testResourceLoadSuppressions[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader; loadSuppressions[java.lang.String]; com.puppycrawl.tools.checkstyle.api.FilterSet; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoaderTest; testNoSuppressions[]; void; null; SuppressionsLoader>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoaderTest; testNoSuppressions[]; void; null; System>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoaderTest; testNoSuppressions[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader; loadSuppressions[java.lang.String]; com.puppycrawl.tools.checkstyle.api.FilterSet; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoaderTest; testLoadFromURL[]; void; null; SuppressionsLoader>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoaderTest; testLoadFromURL[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader; loadSuppressions[java.lang.String]; com.puppycrawl.tools.checkstyle.api.FilterSet; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoaderTest; testLoadFromMalformedURL[]; void; null; SuppressionsLoader>
<com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader; loadSuppressions[java.lang.String]; com.puppycrawl.tools.checkstyle.api.FilterSet; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoaderTest; testLoadFromNonExistingURL[]; void; null; SuppressionsLoader>
<com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader; loadSuppressions[java.lang.String]; com.puppycrawl.tools.checkstyle.api.FilterSet; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoaderTest; testMultipleSuppression[]; void; null; SuppressionsLoader>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoaderTest; testMultipleSuppression[]; void; null; System>
<com.puppycrawl.tools.checkstyle.filters.SuppressElement; setChecks[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoaderTest; testMultipleSuppression[]; void; null; se0>
<com.puppycrawl.tools.checkstyle.api.FilterSet; addFilter[com.puppycrawl.tools.checkstyle.api.Filter]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoaderTest; testMultipleSuppression[]; void; null; fc2>
<com.puppycrawl.tools.checkstyle.filters.SuppressElement; setChecks[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoaderTest; testMultipleSuppression[]; void; null; se1>
<com.puppycrawl.tools.checkstyle.filters.SuppressElement; setLines[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoaderTest; testMultipleSuppression[]; void; null; se1>
<com.puppycrawl.tools.checkstyle.api.FilterSet; addFilter[com.puppycrawl.tools.checkstyle.api.Filter]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoaderTest; testMultipleSuppression[]; void; null; fc2>
<com.puppycrawl.tools.checkstyle.filters.SuppressElement; setChecks[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoaderTest; testMultipleSuppression[]; void; null; se2>
<com.puppycrawl.tools.checkstyle.filters.SuppressElement; setColumns[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoaderTest; testMultipleSuppression[]; void; null; se2>
<com.puppycrawl.tools.checkstyle.api.FilterSet; addFilter[com.puppycrawl.tools.checkstyle.api.Filter]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoaderTest; testMultipleSuppression[]; void; null; fc2>
<com.puppycrawl.tools.checkstyle.filters.SuppressElement; setChecks[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoaderTest; testMultipleSuppression[]; void; null; se3>
<com.puppycrawl.tools.checkstyle.filters.SuppressElement; setLines[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoaderTest; testMultipleSuppression[]; void; null; se3>
<com.puppycrawl.tools.checkstyle.filters.SuppressElement; setColumns[java.lang.String]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoaderTest; testMultipleSuppression[]; void; null; se3>
<com.puppycrawl.tools.checkstyle.api.FilterSet; addFilter[com.puppycrawl.tools.checkstyle.api.Filter]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoaderTest; testMultipleSuppression[]; void; null; fc2>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoaderTest; testMultipleSuppression[]; void; null; this>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoaderTest; testNoFile[]; void; null; System>
<com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader; loadSuppressions[java.lang.String]; com.puppycrawl.tools.checkstyle.api.FilterSet; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoaderTest; testNoFile[]; void; null; SuppressionsLoader>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoaderTest; testNoFile[]; void; null; this>
<java.lang.Throwable; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoaderTest; testNoFile[]; void; null; ex>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoaderTest; testNoCheck[]; void; null; System>
<com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader; loadSuppressions[java.lang.String]; com.puppycrawl.tools.checkstyle.api.FilterSet; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoaderTest; testNoCheck[]; void; null; SuppressionsLoader>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoaderTest; testNoCheck[]; void; null; this>
<java.lang.Throwable; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoaderTest; testNoCheck[]; void; null; ex>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoaderTest; testBadInt[]; void; null; System>
<com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader; loadSuppressions[java.lang.String]; com.puppycrawl.tools.checkstyle.api.FilterSet; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoaderTest; testBadInt[]; void; null; SuppressionsLoader>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoaderTest; testBadInt[]; void; null; this>
<java.lang.Throwable; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoaderTest; testBadInt[]; void; null; ex>
<java.lang.String; startsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoaderTest; testBadInt[]; void; null; ex.getMessage()>
<java.lang.Throwable; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoaderTest; testBadInt[]; void; startsWith[java.lang.String]; ex>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testDecide[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testDecide[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testDecide[]; void; null; Integer>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testDecide[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testDecide[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testDecide[]; void; null; Integer>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testDecide[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testDecide[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testDecide[]; void; null; Integer>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testDecide[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testDecide[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testDecide[]; void; null; Integer>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testDecide[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testDecide[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testDecide[]; void; null; Integer>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testDecideSingle[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testDecideSingle[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testDecideSingle[]; void; null; Integer>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testDecideSingle[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testDecideSingle[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testDecideSingle[]; void; null; Integer>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testDecideSingle[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testDecideSingle[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testDecideSingle[]; void; null; Integer>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testDecideEmpty[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testDecideEmpty[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testDecideEmpty[]; void; null; Integer>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testDecideEmpty[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testDecideEmpty[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testDecideEmpty[]; void; null; Integer>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testDecideEmpty[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testDecideEmpty[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testDecideEmpty[]; void; null; Integer>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testDecideEmpty[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testDecideEmpty[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testDecideEmpty[]; void; null; Integer>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testDecideEmpty[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testDecideEmpty[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testDecideEmpty[]; void; null; Integer>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testEquals[]; void; null; this>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testEquals[]; void; null; this>
<java.lang.Object; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testEquals[]; void; null; filter>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testEquals[]; void; null; this>
<java.lang.Object; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testEquals[]; void; null; filter>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testEquals[]; void; null; this>
<java.lang.Object; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testEquals[]; void; null; filter>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testEquals[]; void; null; this>
<java.lang.Object; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.filters.IntRangeFilterTest; testEquals[]; void; null; filter>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.IntMatchFilterTest; testDecide[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.IntMatchFilterTest; testDecide[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.IntMatchFilterTest; testDecide[]; void; null; Integer>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.filters.IntMatchFilterTest; testDecide[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.IntMatchFilterTest; testDecide[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.IntMatchFilterTest; testDecide[]; void; null; Integer>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.IntMatchFilterTest; testDecide[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.IntMatchFilterTest; testDecide[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.IntMatchFilterTest; testDecide[]; void; null; Integer>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.filters.IntMatchFilterTest; testEquals[]; void; null; this>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.IntMatchFilterTest; testEquals[]; void; null; this>
<java.lang.Object; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.filters.IntMatchFilterTest; testEquals[]; void; null; filter>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.IntMatchFilterTest; testEquals[]; void; null; this>
<java.lang.Object; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.filters.IntMatchFilterTest; testEquals[]; void; null; filter>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.IntMatchFilterTest; testEquals[]; void; null; this>
<java.lang.Object; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.filters.IntMatchFilterTest; testEquals[]; void; null; filter>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.FilterSetTest; testEmptyChain[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.CSVFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.FilterSetTest; testEmptyChain[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.FilterSetTest; testEmptyChain[]; void; null; Integer>
<com.puppycrawl.tools.checkstyle.filters.CSVFilter; addFilter[com.puppycrawl.tools.checkstyle.filters.IntFilter]; void; com.puppycrawl.tools.checkstyle.filters.FilterSetTest; testOneFilter[]; void; null; filter>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.filters.FilterSetTest; testOneFilter[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.CSVFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.FilterSetTest; testOneFilter[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.FilterSetTest; testOneFilter[]; void; null; Integer>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.FilterSetTest; testOneFilter[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.CSVFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.FilterSetTest; testOneFilter[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.FilterSetTest; testOneFilter[]; void; null; Integer>
<com.puppycrawl.tools.checkstyle.filters.CSVFilter; addFilter[com.puppycrawl.tools.checkstyle.filters.IntFilter]; void; com.puppycrawl.tools.checkstyle.filters.FilterSetTest; testMultipleFilter[]; void; null; filter>
<com.puppycrawl.tools.checkstyle.filters.CSVFilter; addFilter[com.puppycrawl.tools.checkstyle.filters.IntFilter]; void; com.puppycrawl.tools.checkstyle.filters.FilterSetTest; testMultipleFilter[]; void; null; filter>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.filters.FilterSetTest; testMultipleFilter[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.CSVFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.FilterSetTest; testMultipleFilter[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.FilterSetTest; testMultipleFilter[]; void; null; Integer>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.filters.FilterSetTest; testMultipleFilter[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.CSVFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.FilterSetTest; testMultipleFilter[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.FilterSetTest; testMultipleFilter[]; void; null; Integer>
<com.puppycrawl.tools.checkstyle.filters.CSVFilter; addFilter[com.puppycrawl.tools.checkstyle.filters.IntFilter]; void; com.puppycrawl.tools.checkstyle.filters.FilterSetTest; testMultipleFilter[]; void; null; filter>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.filters.FilterSetTest; testMultipleFilter[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.CSVFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.FilterSetTest; testMultipleFilter[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.FilterSetTest; testMultipleFilter[]; void; null; Integer>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideSingle[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideSingle[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideSingle[]; void; null; Integer>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideSingle[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideSingle[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideSingle[]; void; null; Integer>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideSingle[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideSingle[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideSingle[]; void; null; Integer>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecidePair[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecidePair[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecidePair[]; void; null; Integer>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecidePair[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecidePair[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecidePair[]; void; null; Integer>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecidePair[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecidePair[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecidePair[]; void; null; Integer>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecidePair[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecidePair[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecidePair[]; void; null; Integer>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideRange[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideRange[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideRange[]; void; null; Integer>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideRange[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideRange[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideRange[]; void; null; Integer>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideRange[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideRange[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideRange[]; void; null; Integer>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideRange[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideRange[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideRange[]; void; null; Integer>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideRange[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideRange[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideRange[]; void; null; Integer>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideEmptyRange[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideEmptyRange[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideEmptyRange[]; void; null; Integer>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideEmptyRange[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideEmptyRange[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideEmptyRange[]; void; null; Integer>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideEmptyRange[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideEmptyRange[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideEmptyRange[]; void; null; Integer>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideEmptyRange[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideEmptyRange[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideEmptyRange[]; void; null; Integer>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideEmptyRange[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideEmptyRange[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideEmptyRange[]; void; null; Integer>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideRangePlusValue[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideRangePlusValue[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideRangePlusValue[]; void; null; Integer>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideRangePlusValue[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideRangePlusValue[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideRangePlusValue[]; void; null; Integer>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideRangePlusValue[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideRangePlusValue[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideRangePlusValue[]; void; null; Integer>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideRangePlusValue[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideRangePlusValue[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideRangePlusValue[]; void; null; Integer>
<not found; assertFalse[]; not found; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideRangePlusValue[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideRangePlusValue[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideRangePlusValue[]; void; null; Integer>
<not found; assertTrue[]; not found; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideRangePlusValue[]; void; null; this>
<com.puppycrawl.tools.checkstyle.filters.IntFilter; accept[int]; boolean; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideRangePlusValue[]; void; null; filter>
<java.lang.Integer; valueOf[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.filters.CSVFilterTest; testDecideRangePlusValue[]; void; null; Integer>
<not found; firePropertyChanged[]; not found; InputSetterGetter; setNumber2[int]; void; null; this>
<java.io.PrintStream; println[java.lang.String]; void; java.lang.Object; run[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; java.lang.Object; run[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; java.lang.Object; run[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; java.lang.Object; run[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; java.lang.Object; run[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; java.lang.Object; run[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; java.lang.Object; run[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; java.lang.Object; run[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; java.lang.Object; run[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; java.lang.Object; run[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; java.lang.Object; run[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; java.lang.Object; run[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; java.lang.Object; run[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; java.lang.Object; run[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; java.lang.Object; run[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; java.lang.Object; run[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; java.lang.Object; run[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; java.lang.Object; run[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; java.lang.Object; run[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; java.lang.Object; run[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; java.lang.Object; run[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; java.lang.Object; run[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; java.lang.Object; run[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; java.lang.Object; run[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; java.lang.Object; run[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; java.lang.Object; run[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; java.lang.Object; run[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; java.lang.Object; run[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; java.lang.Object; run[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; java.lang.Object; run[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; java.lang.Object; run[]; void; null; System.out>
<java.awt.Component; addMouseListener[java.awt.event.MouseListener]; void; com.puppycrawl.tools.checkstyle.InputAnonInnerLength; InputAnonInnerLength[]; void; null; mButton>
<java.io.PrintStream; println[java.lang.String]; void; java.awt.event.MouseAdapter; mouseClicked[java.awt.event.MouseEvent]; void; null; System.out>
<java.awt.Component; addMouseListener[java.awt.event.MouseListener]; void; com.puppycrawl.tools.checkstyle.InputAnonInnerLength; addInputAnonInner[]; void; null; mButton>
<java.io.PrintStream; println[java.lang.String]; void; java.awt.event.MouseAdapter; mouseClicked[java.awt.event.MouseEvent]; void; null; System.out>
<java.lang.Object; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.whitespace.InputWhitespaceAround; InputWhitespaceAround[int]; void; null; this>
<java.io.PrintStream; println[int]; void; com.puppycrawl.tools.checkstyle.whitespace.InputWhitespaceAround; enhancedFor[]; void; null; System.out>
<com.puppycrawl.tools.checkstyle.whitespace.InputMethodParamPad; method[]; void; com.puppycrawl.tools.checkstyle.whitespace.InputMethodParamPad; method[double]; void; null; this>
<com.puppycrawl.tools.checkstyle.whitespace.InputMethodParamPad; method[]; void; com.puppycrawl.tools.checkstyle.whitespace.InputMethodParamPad; method[double]; void; null; this>
<com.puppycrawl.tools.checkstyle.whitespace.InputMethodParamPad; method[]; void; com.puppycrawl.tools.checkstyle.whitespace.InputMethodParamPad; method[double]; void; null; this>
<com.puppycrawl.tools.checkstyle.whitespace.InputMethodParamPad; method[]; void; com.puppycrawl.tools.checkstyle.whitespace.InputMethodParamPad; dottedCalls[]; void; null; this>
<com.puppycrawl.tools.checkstyle.whitespace.InputMethodParamPad; method[]; void; com.puppycrawl.tools.checkstyle.whitespace.InputMethodParamPad; dottedCalls[]; void; null; this>
<com.puppycrawl.tools.checkstyle.whitespace.InputMethodParamPad; method[]; void; com.puppycrawl.tools.checkstyle.whitespace.InputMethodParamPad; dottedCalls[]; void; null; this>
<com.puppycrawl.tools.checkstyle.whitespace.InputMethodParamPad; method[]; void; com.puppycrawl.tools.checkstyle.whitespace.InputMethodParamPad; dottedCalls[]; void; null; p>
<com.puppycrawl.tools.checkstyle.whitespace.InputMethodParamPad; method[]; void; com.puppycrawl.tools.checkstyle.whitespace.InputMethodParamPad; dottedCalls[]; void; null; p>
<com.puppycrawl.tools.checkstyle.whitespace.InputMethodParamPad; method[]; void; com.puppycrawl.tools.checkstyle.whitespace.InputMethodParamPad; dottedCalls[]; void; null; p>
<java.lang.Integer; parseInt[java.lang.String]; int; com.puppycrawl.tools.checkstyle.whitespace.InputMethodParamPad; dottedCalls[]; void; null; java.lang.Integer>
<java.lang.Integer; parseInt[java.lang.String]; int; com.puppycrawl.tools.checkstyle.whitespace.InputMethodParamPad; dottedCalls[]; void; null; java.lang.Integer>
<java.lang.Integer; parseInt[java.lang.String]; int; com.puppycrawl.tools.checkstyle.whitespace.InputMethodParamPad; dottedCalls[]; void; null; java.lang.Integer>
<java.util.Map; entrySet[]; java.util.Set<java.util.Map.Entry<java.lang.Class<?>,java.lang.Integer>>; com.puppycrawl.tools.checkstyle.InputGenericWhitespaceCheck; callable2[java.lang.Runnable, T]; java.util.concurrent.Callable<T>; null; x>
<java.util.Map$Entry; getValue[]; java.lang.Integer; com.puppycrawl.tools.checkstyle.InputGenericWhitespaceCheck; callable2[java.lang.Runnable, T]; java.util.concurrent.Callable<T>; null; entry>
<java.util.Collections; emptySet[]; java.util.Set<java.lang.Object>; com.puppycrawl.tools.checkstyle.InputGenericWhitespaceCheck; getConstructor[java.lang.Class<?>[]]; int; null; Collections>
<java.util.Collections; emptySet[]; java.util.Set<java.lang.Object>; com.puppycrawl.tools.checkstyle.InputGenericWhitespaceCheck; getConstructor[java.lang.Class<?>[]]; int; null; Collections>
<com.puppycrawl.tools.checkstyle.coding.InputHasFinalizer$1; reallyFinalize[java.lang.String]; void; java.lang.Object; run[]; void; null; this>
<java.lang.Runnable; run[]; void; com.puppycrawl.tools.checkstyle.coding.InputHasFinalizer; finalize[]; void; null; runnable>
<java.lang.Object; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; flagForEquals[]; void; null; o>
<java.lang.Object; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; flagForEquals[]; void; null; o>
<java.lang.Object; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; flagForEquals[]; void; null; o>
<java.lang.Object; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; flagForEquals[]; void; null; o>
<java.lang.Object; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; flagForEquals[]; void; null; o>
<java.lang.Object; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; flagForEquals[]; void; null; o>
<java.lang.String; equalsIgnoreCase[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; flagForEqualsIgnoreCase[]; void; null; s>
<java.lang.String; equalsIgnoreCase[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; flagForEqualsIgnoreCase[]; void; null; s>
<java.lang.String; equalsIgnoreCase[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; flagForEqualsIgnoreCase[]; void; null; s>
<java.lang.String; equalsIgnoreCase[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; flagForEqualsIgnoreCase[]; void; null; s>
<java.lang.String; equalsIgnoreCase[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; flagForEqualsIgnoreCase[]; void; null; s>
<java.lang.String; equalsIgnoreCase[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; flagForEqualsIgnoreCase[]; void; null; s>
<java.lang.Object; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; flagForBoth[]; void; null; o>
<java.lang.Object; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; flagForBoth[]; void; null; o>
<java.lang.Object; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; flagForBoth[]; void; null; o>
<java.lang.Object; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; flagForBoth[]; void; null; o>
<java.lang.Object; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; flagForBoth[]; void; null; o>
<java.lang.Object; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; flagForBoth[]; void; null; o>
<java.lang.String; equalsIgnoreCase[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; flagForBoth[]; void; null; s>
<java.lang.String; equalsIgnoreCase[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; flagForBoth[]; void; null; s>
<java.lang.String; equalsIgnoreCase[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; flagForBoth[]; void; null; s>
<java.lang.String; equalsIgnoreCase[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; flagForBoth[]; void; null; s>
<java.lang.String; equalsIgnoreCase[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; flagForBoth[]; void; null; s>
<java.lang.String; equalsIgnoreCase[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; flagForBoth[]; void; null; s>
<java.lang.Object; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForEquals[]; void; null; o>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForEquals[]; void; null; (s="thin crust")>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForEquals[]; void; null; (s+="garlic")>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForEquals[]; void; null; ("Chicago Style" + "NY Style")>
<com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForEquals[]; void; null; this>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForEquals[]; void; null; "onions">
<java.lang.Object; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForEquals[]; void; null; o>
<java.lang.Object; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForEquals[]; void; null; o>
<com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForEquals[]; void; null; this>
<com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForEquals[]; void; null; this>
<java.lang.Object; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForEquals[]; void; null; new Object()>
<com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNullOutter$InputEqualsAvoidNullInner; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForEquals[]; void; null; outter.new InputEqualsAvoidNullInner()>
<java.lang.String; equalsIgnoreCase[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForEqualsIgnoreCase[]; void; null; s>
<java.lang.String; equalsIgnoreCase[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForEqualsIgnoreCase[]; void; null; s1>
<java.lang.String; equalsIgnoreCase[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForEqualsIgnoreCase[]; void; null; (s="thin crust")>
<java.lang.String; equalsIgnoreCase[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForEqualsIgnoreCase[]; void; null; (s+="garlic")>
<java.lang.String; equalsIgnoreCase[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForEqualsIgnoreCase[]; void; null; ("Chicago Style" + "NY Style")>
<java.lang.String; equalsIgnoreCase[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForEqualsIgnoreCase[]; void; null; "onions">
<java.lang.String; equalsIgnoreCase[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForEqualsIgnoreCase[]; void; null; s>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForEqualsIgnoreCase[]; void; null; s>
<java.lang.String; equalsIgnoreCase[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForEqualsIgnoreCase[]; void; null; new String()>
<java.lang.Object; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForBoth[]; void; null; o>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForBoth[]; void; null; (s="thin crust")>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForBoth[]; void; null; (s+="garlic")>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForBoth[]; void; null; ("Chicago Style" + "NY Style")>
<com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForBoth[]; void; null; this>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForBoth[]; void; null; "onions">
<java.lang.Object; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForBoth[]; void; null; o>
<java.lang.Object; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForBoth[]; void; null; o>
<com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForBoth[]; void; null; this>
<com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForBoth[]; void; null; this>
<java.lang.Object; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForBoth[]; void; null; new Object()>
<com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNullOutter$InputEqualsAvoidNullInner; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForBoth[]; void; null; outter.new InputEqualsAvoidNullInner()>
<java.lang.String; equalsIgnoreCase[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForBoth[]; void; null; s>
<java.lang.String; equalsIgnoreCase[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForBoth[]; void; null; s1>
<java.lang.String; equalsIgnoreCase[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForBoth[]; void; null; (s="thin crust")>
<java.lang.String; equalsIgnoreCase[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForBoth[]; void; null; (s+="garlic")>
<java.lang.String; equalsIgnoreCase[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForBoth[]; void; null; ("Chicago Style" + "NY Style")>
<java.lang.String; equalsIgnoreCase[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForBoth[]; void; null; "onions">
<java.lang.String; equalsIgnoreCase[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForBoth[]; void; null; s>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForBoth[]; void; null; s>
<java.lang.String; equalsIgnoreCase[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.coding.InputEqualsAvoidNull; noFlagForBoth[]; void; null; new String()>
<java.io.PrintStream; println[int]; void; java.lang.Object; a[]; void; null; System.out>
<com.puppycrawl.tools.checkstyle.coding.InputRequireThis; method1[]; void; com.puppycrawl.tools.checkstyle.coding.InputRequireThis; method2[int]; void; null; this>
<com.puppycrawl.tools.checkstyle.coding.InputRequireThis; method1[]; void; com.puppycrawl.tools.checkstyle.coding.InputRequireThis; method2[int]; void; null; this>
<java.lang.Throwable; printStackTrace[]; void; com.puppycrawl.tools.checkstyle.coding.InputRequireThis; method2[int]; void; null; e>
<java.lang.Integer; toString[int]; java.lang.String; com.puppycrawl.tools.checkstyle.coding.InputRequireThis; method2[int]; void; null; Integer>
<com.puppycrawl.tools.checkstyle.coding.InputRequireThis; method3[]; void; com.puppycrawl.tools.checkstyle.coding.InputRequireThis; method4[]; void; null; this>
<com.puppycrawl.tools.checkstyle.coding.InputRequireThis; method3[]; void; com.puppycrawl.tools.checkstyle.coding.InputRequireThis; method4[]; void; null; this>
<com.puppycrawl.tools.checkstyle.coding.Bug1155921; static_method[]; int; com.puppycrawl.tools.checkstyle.coding.Bug1155921; method2[]; int; null; this>
<java.lang.Object; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.coding.InputFinalLocalVariable; InputFinalLocalVariable[]; void; null; obj>
<java.lang.Object; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.coding.InputFinalLocalVariable; aMethod[]; void; null; obj>
<com.puppycrawl.tools.checkstyle.coding.Blah; getInts[]; int[]; com.puppycrawl.tools.checkstyle.coding.AbstractClass; abstractMethod[int]; void; null; this>
<java.io.PrintStream; println[java.lang.Object]; void; com.puppycrawl.tools.checkstyle.coding.test_1241722; doSomething[java.lang.Object]; void; null; System.out>
<java.lang.System; currentTimeMillis[]; long; com.puppycrawl.tools.checkstyle.coding.InputReturnFromCatchCheck; foo[]; void; null; System>
<java.lang.System; currentTimeMillis[]; long; com.puppycrawl.tools.checkstyle.coding.InputReturnFromCatchCheck; bar[]; void; null; System>
<java.lang.System; currentTimeMillis[]; long; com.puppycrawl.tools.checkstyle.coding.InputReturnFromCatchCheck; bar[]; void; null; System>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.coding.InputParameterAssignment; foo3[java.lang.String, int]; void; null; field>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.coding.InputMultipleStringLiterals; method1[]; void; null; System.out>
<java.lang.System; currentTimeMillis[]; long; com.puppycrawl.tools.checkstyle.coding.InputReturnFromFinallyCheck; foo[]; void; null; System>
<java.lang.System; currentTimeMillis[]; long; com.puppycrawl.tools.checkstyle.coding.InputReturnFromFinallyCheck; bar[]; void; null; System>
<java.lang.System; currentTimeMillis[]; long; com.puppycrawl.tools.checkstyle.coding.InputReturnFromFinallyCheck; bar[]; void; null; System>
<java.lang.Class; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.coding.InputReturnFromFinallyCheck; thisNull[]; void; null; this.getClass()>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.coding.InputReturnFromFinallyCheck>; com.puppycrawl.tools.checkstyle.coding.InputReturnFromFinallyCheck; thisNull[]; void; getName[]; this>
<java.lang.String; valueOf[boolean]; java.lang.String; com.puppycrawl.tools.checkstyle.coding.InputReturnFromFinallyCheck; thisNull[]; void; null; String>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.coding.InputReturnFromFinallyCheck; thisNull[]; void; null; System>
<java.io.PrintStream; println[java.lang.String]; void; InputUnnecessaryParentheses; f1[]; int; null; System.out>
<InputUnnecessaryParentheses; f2[int, double]; int; InputUnnecessaryParentheses; f3[]; boolean; null; this>
<InputUnnecessaryParentheses; print[int]; void; InputUnnecessaryParentheses; f5[]; void; null; this>
<InputUnnecessaryParentheses; print[int]; void; InputUnnecessaryParentheses; f5[]; void; null; this>
<InputUnnecessaryParentheses; print[int]; void; InputUnnecessaryParentheses; f5[]; void; null; this>
<InputUnnecessaryParentheses; print[int]; void; InputUnnecessaryParentheses; f5[]; void; null; this>
<java.io.PrintStream; println[java.lang.String]; void; InputUnnecessaryParentheses; print[int]; void; null; System.out>
<java.lang.Integer; toString[int]; java.lang.String; com.puppycrawl.tools.checkstyle.coding.InputInnerAssignment; innerAssignments[]; void; null; Integer>
<java.io.InputStream; read[]; int; com.puppycrawl.tools.checkstyle.coding.InputInnerAssignment; demoInputStreamIdiom[java.io.InputStream]; void; null; is>
<java.util.ArrayList; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputInnerAssignment; allParams[]; java.util.Collection<java.lang.Object>; null; params>
<java.util.ArrayList; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputInnerAssignment; allParams[]; java.util.Collection<java.lang.Object>; null; params>
<not found; getManifest[]; not found; com.puppycrawl.tools.checkstyle.coding.InputInnerAssignment; loadManifest[java.lang.String]; com.puppycrawl.tools.checkstyle.coding.Manifest; null; jis>
<java.io.PrintStream; println[java.lang.String]; void; InputFallThrough; method[int, int, boolean]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; InputFallThrough; method[int, int, boolean]; void; null; System.err>
<java.io.PrintStream; println[java.lang.String]; void; InputFallThrough; methodFallThru[int, int, boolean]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; InputFallThrough; methodFallThru[int, int, boolean]; void; null; System.err>
<java.lang.String; toUpperCase[]; java.lang.String; com.puppycrawl.tools.checkstyle.coding.InputStringLiteralEquality; foo[java.lang.String]; void; null; "Rick">
<java.lang.String; toLowerCase[]; java.lang.String; com.puppycrawl.tools.checkstyle.coding.InputStringLiteralEquality; foo[java.lang.String]; void; null; "Rick">
<com.puppycrawl.tools.checkstyle.InputBraces; testDoWhile[]; void; com.puppycrawl.tools.checkstyle.InputBraces; testDoWhile[]; void; null; this>
<com.puppycrawl.tools.checkstyle.InputBraces; condition[]; boolean; com.puppycrawl.tools.checkstyle.InputBraces; testDoWhile[]; void; null; this>
<com.puppycrawl.tools.checkstyle.InputBraces; testDoWhile[]; void; com.puppycrawl.tools.checkstyle.InputBraces; testDoWhile[]; void; null; this>
<com.puppycrawl.tools.checkstyle.InputBraces; condition[]; boolean; com.puppycrawl.tools.checkstyle.InputBraces; testDoWhile[]; void; null; this>
<com.puppycrawl.tools.checkstyle.InputBraces; condition[]; boolean; com.puppycrawl.tools.checkstyle.InputBraces; testWhile[]; void; null; this>
<com.puppycrawl.tools.checkstyle.InputBraces; testWhile[]; void; com.puppycrawl.tools.checkstyle.InputBraces; testWhile[]; void; null; this>
<com.puppycrawl.tools.checkstyle.InputBraces; condition[]; boolean; com.puppycrawl.tools.checkstyle.InputBraces; testWhile[]; void; null; this>
<com.puppycrawl.tools.checkstyle.InputBraces; condition[]; boolean; com.puppycrawl.tools.checkstyle.InputBraces; testWhile[]; void; null; this>
<com.puppycrawl.tools.checkstyle.InputBraces; testWhile[]; void; com.puppycrawl.tools.checkstyle.InputBraces; testWhile[]; void; null; this>
<com.puppycrawl.tools.checkstyle.InputBraces; condition[]; boolean; com.puppycrawl.tools.checkstyle.InputBraces; testWhile[]; void; null; this>
<com.puppycrawl.tools.checkstyle.InputBraces; condition[]; boolean; com.puppycrawl.tools.checkstyle.InputBraces; testWhile[]; void; null; this>
<com.puppycrawl.tools.checkstyle.InputBraces; testWhile[]; void; com.puppycrawl.tools.checkstyle.InputBraces; testWhile[]; void; null; this>
<com.puppycrawl.tools.checkstyle.InputBraces; testFor[]; void; com.puppycrawl.tools.checkstyle.InputBraces; testFor[]; void; null; this>
<com.puppycrawl.tools.checkstyle.InputBraces; testFor[]; void; com.puppycrawl.tools.checkstyle.InputBraces; testFor[]; void; null; this>
<com.puppycrawl.tools.checkstyle.InputBraces; testFor[]; void; com.puppycrawl.tools.checkstyle.InputBraces; testFor[]; void; null; this>
<com.puppycrawl.tools.checkstyle.InputBraces; condition[]; boolean; com.puppycrawl.tools.checkstyle.InputBraces; testIf[]; void; null; this>
<com.puppycrawl.tools.checkstyle.InputBraces; testIf[]; void; com.puppycrawl.tools.checkstyle.InputBraces; testIf[]; void; null; this>
<com.puppycrawl.tools.checkstyle.InputBraces; condition[]; boolean; com.puppycrawl.tools.checkstyle.InputBraces; testIf[]; void; null; this>
<com.puppycrawl.tools.checkstyle.InputBraces; testIf[]; void; com.puppycrawl.tools.checkstyle.InputBraces; testIf[]; void; null; this>
<com.puppycrawl.tools.checkstyle.InputBraces; testIf[]; void; com.puppycrawl.tools.checkstyle.InputBraces; testIf[]; void; null; this>
<com.puppycrawl.tools.checkstyle.InputBraces; condition[]; boolean; com.puppycrawl.tools.checkstyle.InputBraces; testIf[]; void; null; this>
<com.puppycrawl.tools.checkstyle.InputBraces; condition[]; boolean; com.puppycrawl.tools.checkstyle.InputBraces; testIf[]; void; null; this>
<com.puppycrawl.tools.checkstyle.InputBraces; testIf[]; void; com.puppycrawl.tools.checkstyle.InputBraces; testIf[]; void; null; this>
<com.puppycrawl.tools.checkstyle.InputBraces; condition[]; boolean; com.puppycrawl.tools.checkstyle.InputBraces; testIf[]; void; null; this>
<com.puppycrawl.tools.checkstyle.InputBraces; testIf[]; void; com.puppycrawl.tools.checkstyle.InputBraces; testIf[]; void; null; this>
<com.puppycrawl.tools.checkstyle.InputBraces; testIf[]; void; com.puppycrawl.tools.checkstyle.InputBraces; testIf[]; void; null; this>
<com.puppycrawl.tools.checkstyle.InputBraces; condition[]; boolean; com.puppycrawl.tools.checkstyle.InputBraces; testIf[]; void; null; this>
<com.puppycrawl.tools.checkstyle.InputBraces; testIf[]; void; com.puppycrawl.tools.checkstyle.InputBraces; testIf[]; void; null; this>
<com.puppycrawl.tools.checkstyle.InputBraces; testIf[]; void; com.puppycrawl.tools.checkstyle.InputBraces; testIf[]; void; null; this>
<com.puppycrawl.tools.checkstyle.InputBraces; condition[]; boolean; com.puppycrawl.tools.checkstyle.InputBraces; testIf[]; void; null; this>
<com.puppycrawl.tools.checkstyle.InputBraces; testIf[]; void; com.puppycrawl.tools.checkstyle.InputBraces; testIf[]; void; null; this>
<com.puppycrawl.tools.checkstyle.InputBraces; testIf[]; void; com.puppycrawl.tools.checkstyle.InputBraces; testIf[]; void; null; this>
<com.puppycrawl.tools.checkstyle.InputBraces; condition[]; boolean; com.puppycrawl.tools.checkstyle.InputBraces; testIf[]; void; null; this>
<com.puppycrawl.tools.checkstyle.InputBraces; condition[]; boolean; com.puppycrawl.tools.checkstyle.InputBraces; testIf[]; void; null; this>
<com.puppycrawl.tools.checkstyle.InputBraces; testIf[]; void; com.puppycrawl.tools.checkstyle.InputBraces; testIf[]; void; null; this>
<java.util.Arrays; sort[int[]]; void; com.puppycrawl.tools.checkstyle.InputBraces; emptyImplementation[]; void; null; Arrays>
<javax.swing.BorderFactory; createEmptyBorder[]; javax.swing.border.Border; com.puppycrawl.tools.checkstyle.InputBraces; emptyImplementation[]; void; null; javax.swing.BorderFactory>
<java.io.File; listRoots[]; java.io.File[]; com.puppycrawl.tools.checkstyle.InputBraces; emptyImplementation[]; void; null; this>
<com.puppycrawl.tools.checkstyle.grammars.InputJava7MultiCatch; logException[java.lang.Exception]; void; com.puppycrawl.tools.checkstyle.grammars.InputJava7MultiCatch; main[java.lang.String[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.grammars.InputJava7MultiCatch; logException[java.lang.Exception]; void; com.puppycrawl.tools.checkstyle.grammars.InputJava7MultiCatch; main[java.lang.String[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.annotation.BadAnnonOverride; doFoo[java.lang.Runnable]; void; com.puppycrawl.tools.checkstyle.annotation.BadAnnonOverride; doFoo[java.lang.Runnable]; void; null; this>
<com.puppycrawl.tools.checkstyle.annotation.GoodAnnonOverride; doFoo[java.lang.Runnable]; void; com.puppycrawl.tools.checkstyle.annotation.GoodAnnonOverride; doFoo[java.lang.Runnable]; void; null; this>
<com.puppycrawl.tools.checkstyle.annotation.GoodAnnonOverride; doFoo[java.lang.Runnable]; void; com.puppycrawl.tools.checkstyle.annotation.GoodAnnonOverride; doFoo2[java.lang.Runnable]; void; null; this>
<java.lang.Object; wait[long]; void; com.puppycrawl.tools.checkstyle.InputLeftCurlyOther; foo[]; int; null; this>
<java.lang.System; currentTimeMillis[]; long; com.puppycrawl.tools.checkstyle.InputLeftCurlyOther; foo[]; int; null; System>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.InputLeftCurlyOther; method2[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.InputLeftCurlyOther; method2[]; void; null; System.err>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.InputLeftCurlyOther; method2[]; void; null; System.err>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.InputUncommentedMain; main[java.lang.String[]]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.Main; main[java.lang.String[]]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.UncommentedMainTest1; main[java.lang.String[]]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.UncommentedMainTest2; main[int]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.UncommentedMainTest3; main[java.lang.String[]]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.UncommentedMainTest4; main[java.lang.String[]]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.UncommentedMainTest5; main[java.lang.String[]]; int; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.UncommentedMainTest6; main[java.lang.String[], int]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.UncommentedMainTest7; main[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.InputNestedBlocks; method[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.metrics.JavaNCSSCheckTestInput; testMethod3[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; java.lang.Object; itemStateChanged[java.awt.event.ItemEvent]; void; null; System.out>
<not found; createNameHistoryDetails[]; not found; InputMethodNameExtra; doit[]; void; null; this>
<not found; getPreviousName[]; not found; More.ViewChangeHistoryBaseAction.ChangeHistoryDisplayName; getDisplayName[]; java.lang.String; null; this>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.InputDesignForExtension.ClassOK; finalThroughClassDef[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.InputDesignForExtension; aPrivateMethod[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.InputDesignForExtension; doh[]; void; null; System.out>
<java.lang.Object; hashCode[]; int; com.puppycrawl.tools.checkstyle.InputDesignForExtension.MyComparator; compare[java.lang.Object, java.lang.Object]; int; null; o1>
<java.lang.Object; hashCode[]; int; com.puppycrawl.tools.checkstyle.InputDesignForExtension.MyComparator; compare[java.lang.Object, java.lang.Object]; int; null; o2>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.InputFinalParameters; method1[]; void; null; System.err>
<java.lang.Throwable; printStackTrace[]; void; com.puppycrawl.tools.checkstyle.InputFinalParameters; method1[]; void; null; npe>
<java.lang.Throwable; printStackTrace[]; void; com.puppycrawl.tools.checkstyle.InputFinalParameters; method1[]; void; null; e>
<java.lang.Throwable; printStackTrace[]; void; com.puppycrawl.tools.checkstyle.InputFinalParameters; method1[]; void; null; e>
<java.lang.Throwable; printStackTrace[]; void; com.puppycrawl.tools.checkstyle.InputFinalParameters; method1[]; void; null; e>
<com.puppycrawl.tools.checkstyle.Foo; someExpression[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.Foo; Bar[]; void; null; this>
<com.puppycrawl.tools.checkstyle.Foo; someExpression[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.Foo; Bar[]; void; null; this>
<com.puppycrawl.tools.checkstyle.Foo; someExpression[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.Foo; Bar[]; void; null; this>
<com.puppycrawl.tools.checkstyle.Foo; someExpression[]; java.lang.String[]; com.puppycrawl.tools.checkstyle.Foo; Bar[]; void; null; this>
<java.lang.Thread; start[]; void; com.puppycrawl.tools.checkstyle.ComplexityCheckTestInput; foo[]; void; null; new Thread(runnable)>
<java.lang.System; currentTimeMillis[]; long; com.puppycrawl.tools.checkstyle.ComplexityCheckTestInput; bar[]; void; null; System>
<java.lang.System; currentTimeMillis[]; long; com.puppycrawl.tools.checkstyle.ComplexityCheckTestInput; bar[]; void; null; System>
<java.lang.System; currentTimeMillis[]; long; com.puppycrawl.tools.checkstyle.ComplexityCheckTestInput; bar[]; void; null; System>
<java.lang.System; currentTimeMillis[]; long; com.puppycrawl.tools.checkstyle.ComplexityCheckTestInput; bar[]; void; null; System>
<java.lang.System; currentTimeMillis[]; long; com.puppycrawl.tools.checkstyle.ComplexityCheckTestInput; bar[]; void; null; System>
<java.lang.System; currentTimeMillis[]; long; com.puppycrawl.tools.checkstyle.ComplexityCheckTestInput; simpleElseIf[]; void; null; System>
<java.lang.System; currentTimeMillis[]; long; com.puppycrawl.tools.checkstyle.ComplexityCheckTestInput; simpleElseIf[]; void; null; System>
<java.lang.System; currentTimeMillis[]; long; com.puppycrawl.tools.checkstyle.ComplexityCheckTestInput; stupidElseIf[]; void; null; System>
<java.lang.System; currentTimeMillis[]; long; com.puppycrawl.tools.checkstyle.ComplexityCheckTestInput; stupidElseIf[]; void; null; System>
<java.lang.System; currentTimeMillis[]; long; com.puppycrawl.tools.checkstyle.ComplexityCheckTestInput; stupidElseIf[]; void; null; System>
<java.lang.System; currentTimeMillis[]; long; com.puppycrawl.tools.checkstyle.ComplexityCheckTestInput; stupidElseIf[]; void; null; System>
<java.lang.System; currentTimeMillis[]; long; com.puppycrawl.tools.checkstyle.ComplexityCheckTestInput; ComplexityCheckTestInput[]; void; null; System>
<java.lang.System; currentTimeMillis[]; long; com.puppycrawl.tools.checkstyle.ComplexityCheckTestInput; ComplexityCheckTestInput[]; void; null; System>
<java.lang.System; currentTimeMillis[]; long; com.puppycrawl.tools.checkstyle.ComplexityCheckTestInput; ComplexityCheckTestInput[]; void; null; System>
<java.lang.System; currentTimeMillis[]; long; com.puppycrawl.tools.checkstyle.ComplexityCheckTestInput; ComplexityCheckTestInput[]; void; null; System>
<java.lang.System; currentTimeMillis[]; long; com.puppycrawl.tools.checkstyle.ComplexityCheckTestInput; ComplexityCheckTestInput[]; void; null; System>
<java.lang.System; currentTimeMillis[]; long; com.puppycrawl.tools.checkstyle.ComplexityCheckTestInput; ComplexityCheckTestInput[]; void; null; System>
<java.lang.Thread; start[]; void; com.puppycrawl.tools.checkstyle.ComplexityCheckTestInput; ComplexityCheckTestInput[int]; void; null; new Thread(runnable)>
<javax.swing.BorderFactory; createEmptyBorder[int, int, int, int]; javax.swing.border.Border; com.puppycrawl.tools.checkstyle.InputMagicNumber; magicMethod[]; void; null; javax.swing.BorderFactory>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.InputSemantic; exHandlerTest[]; void; null; System.out>
<java.lang.Throwable; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.InputSemantic; exHandlerTest[]; void; null; handledException>
<java.lang.System; exit[int]; void; com.puppycrawl.tools.checkstyle.indentation.InputUseTabs; InputUseTabs[]; void; null; System>
<java.lang.System; exit[int]; void; com.puppycrawl.tools.checkstyle.indentation.InputUseTabs; InputUseTabs[]; void; null; System>
<InputValidAssignIndent; getLineNo[]; int; InputValidAssignIndent; foo[java.lang.String[]]; void; null; this>
<InputValidAssignIndent; getLine[]; java.lang.String; InputValidAssignIndent; foo[java.lang.String[]]; void; null; this>
<InputValidAssignIndent; getLine[]; java.lang.String; InputValidAssignIndent; foo[java.lang.String[]]; void; null; this>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidIfIndent; parenIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidIfIndent; parenIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidIfIndent; parenIfTest[]; void; null; System>
<javax.swing.AbstractButton; addActionListener[java.awt.event.ActionListener]; void; ; func[]; int; null; new JButton()>
<javax.swing.AbstractButton; addActionListener[java.awt.event.ActionListener]; void; ; func[]; int; null; new JButton()>
<javax.swing.AbstractButton; addActionListener[java.awt.event.ActionListener]; void; ; func[]; int; null; new JButton()>
<javax.swing.AbstractButton; addActionListener[java.awt.event.ActionListener]; void; ; func[]; int; null; new JButton()>
<com.puppycrawl.tools.checkstyle.indention.InputValidClassDefIndent6; myfunc2[int, int, int, int, int, int, int]; void; ; func[]; int; null; this>
<com.puppycrawl.tools.checkstyle.indention.InputValidClassDefIndent6; myfunc3[int, int, int, int]; int; ; func[]; int; null; this>
<javax.swing.AbstractButton; addActionListener[java.awt.event.ActionListener]; void; ; func[]; int; null; new JButton()>
<javax.swing.AbstractButton; addActionListener[java.awt.event.ActionListener]; void; ; func[]; int; null; new JButton()>
<com.puppycrawl.tools.checkstyle.indentation.InputValidClassDefIndent6; myfunc2[int, int, int, int, int, int, int]; void; ; func[]; int; null; this>
<com.puppycrawl.tools.checkstyle.indentation.InputValidClassDefIndent6; myfunc3[int, int, int, int]; int; ; func[]; int; null; this>
<java.lang.Comparable; compareTo[java.lang.Object]; int; com.puppycrawl.tools.checkstyle.indentation.OperatorHelper; compare[java.lang.Comparable, java.lang.Comparable]; boolean; null; obj1>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method3[int, int, int, int, int, int, int, int]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method4[int, int, int, int, int, int, int, int]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method4[int, int, int, int, int, int, int, int]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method4[int, int, int, int, int, int, int, int]; void; null; System>
<com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; myfunc2[int, int, int, int, int, int, int]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method4[int, int, int, int, int, int, int, int]; void; null; this>
<com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; myfunc3[int, int, int, int]; int; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method4[int, int, int, int, int, int, int, int]; void; null; this>
<com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; myfunc3[int, int, int, int]; int; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method4[int, int, int, int, int, int, int, int]; void; null; this>
<java.lang.Integer; intValue[]; int; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method4[int, int, int, int, int, int, int, int]; void; null; Integer.getInteger("mytest")>
<java.lang.Integer; getInteger[java.lang.String]; java.lang.Integer; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method4[int, int, int, int, int, int, int, int]; void; intValue[]; Integer>
<com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; myfunc3[int, int, int, int]; int; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method4[int, int, int, int, int, int, int, int]; void; null; this>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method6[]; void; null; System.out>
<java.lang.Object; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method6[]; void; null; Arrays.asList(new String[]{"method"})>
<java.util.Arrays; asList[java.lang.String[]]; java.util.List<java.lang.String>; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method6[]; void; toString[]; Arrays>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method6[]; void; null; System.out>
<java.lang.Object; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method6[]; void; null; Arrays.asList(new String[]{"method"})>
<java.util.Arrays; asList[java.lang.String[]]; java.util.List<java.lang.String>; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method6[]; void; toString[]; Arrays>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method6[]; void; null; System.out>
<java.lang.Object; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method6[]; void; null; Arrays.asList(new String[]{"method"})>
<java.util.Arrays; asList[java.lang.String[]]; java.util.List<java.lang.String>; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method6[]; void; toString[]; Arrays>
<com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; myfunc2[int, int, int, int, int, int, int]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method6[]; void; null; this>
<com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; myfunc2[int, int, int, int, int, int, int]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method6[]; void; null; this>
<com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method2[int, int, int, int]; int; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method6[]; void; null; this>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method6[]; void; null; System.out>
<java.lang.Object; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method6[]; void; null; Arrays.asList(new String[]{"method"})>
<java.util.Arrays; asList[java.lang.String[]]; java.util.List<java.lang.String>; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method6[]; void; toString[]; Arrays>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method6[]; void; null; System.out>
<java.lang.Object; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method6[]; void; null; Arrays.asList(new String[]{"method"})>
<java.util.Arrays; asList[java.lang.String[]]; java.util.List<java.lang.String>; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method6[]; void; toString[]; Arrays>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method6[]; void; null; System>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method6[]; void; null; System.out>
<com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method1[]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method6[]; void; null; this>
<com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method1[]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method6[]; void; null; this>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method6[]; void; null; System.out>
<com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method1[]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method6[]; void; null; this>
<com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method1[]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method6[]; void; null; this>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method6[]; void; null; System.out.toString()>
<java.lang.Object; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method6[]; void; equals[java.lang.Object]; System.out>
<not found; areOnSameLine[]; not found; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method6[]; void; null; this>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method6[]; void; null; aChild.expr>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method6[]; void; null; expr>
<java.io.PrintStream; write[byte[], int, int]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method6[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidMethodIndent; method6[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidSwitchIndent; method1[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidSwitchIndent; method1[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidSwitchIndent; method1[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidSwitchIndent; method1[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidSwitchIndent; method1[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidSwitchIndent; method1[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidSwitchIndent; method1[]; void; null; System.out>
<java.io.PrintStream; println[]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidDotIndent; InputValidDotIndent[]; void; null; System.out>
<java.io.PrintStream; println[]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidDotIndent; InputValidDotIndent[]; void; null; System.out>
<java.io.PrintStream; println[]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidDotIndent; InputValidDotIndent[]; void; null; System.out>
<java.io.PrintStream; println[]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidDotIndent; InputValidDotIndent[]; void; null; System.out>
<java.io.PrintStream; println[]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidDotIndent; InputValidDotIndent[]; void; null; System.out>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidForIndent; method1[int[]]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidForIndent; method1[int[]]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidForIndent; method1[int[]]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidForIndent; method1[int[]]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidForIndent; method1[int[]]; void; null; System>
<java.io.PrintStream; println[int]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidForIndent; method1[int[]]; void; null; System.err>
<java.io.PrintStream; println[int]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidForIndent; method1[int[]]; void; null; System.err>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputInvalidLabelIndent; InputInvalidLabelIndent[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputInvalidLabelIndent; InputInvalidLabelIndent[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputInvalidLabelIndent; InputInvalidLabelIndent[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputInvalidLabelIndent; InputInvalidLabelIndent[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputInvalidLabelIndent; InputInvalidLabelIndent[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputInvalidLabelIndent; InputInvalidLabelIndent[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputInvalidLabelIndent; InputInvalidLabelIndent[]; void; null; System.out>
<InputInvalidAssignIndent; getLineNo[]; int; InputInvalidAssignIndent; foo[java.lang.String[]]; void; null; this>
<InputInvalidAssignIndent; getLine[]; java.lang.String; InputInvalidAssignIndent; foo[java.lang.String[]]; void; null; this>
<InputInvalidAssignIndent; getLine[]; java.lang.String; InputInvalidAssignIndent; foo[java.lang.String[]]; void; null; this>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputInvalidTryIndent; method[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputInvalidTryIndent; method[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputInvalidTryIndent; method[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputInvalidTryIndent; method[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputInvalidTryIndent; method[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputInvalidTryIndent; method[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputInvalidTryIndent; method[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputInvalidTryIndent; method[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputInvalidTryIndent; method[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputInvalidTryIndent; method[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputInvalidTryIndent; method[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputInvalidTryIndent; method[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputInvalidTryIndent; method[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputInvalidTryIndent; method[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputInvalidTryIndent; method[]; void; null; System.out>
<com.puppycrawl.tools.checkstyle.indentation.InputInvalidArrayInitIndent; func1[int[]]; void; com.puppycrawl.tools.checkstyle.indentation.InputInvalidArrayInitIndent; InputInvalidArrayInitIndent[]; void; null; this>
<java.util.jar.JarInputStream; getManifest[]; java.util.jar.Manifest; com.puppycrawl.tools.checkstyle.indentation.InputValidTryResourcesIndent; loadManifest[java.lang.String]; java.util.jar.Manifest; null; jis>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidWhileIndent; method1[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidWhileIndent; method1[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidWhileIndent; method1[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidWhileIndent; method1[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidWhileIndent; method1[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidWhileIndent; method1[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidWhileIndent; method1[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidWhileIndent; method1[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidWhileIndent; method1[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidWhileIndent; method1[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidWhileIndent; method1[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidWhileIndent; method1[]; void; null; System>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidTryIndent; method[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidTryIndent; method[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidTryIndent; method[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidTryIndent; method[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidTryIndent; method[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidTryIndent; method[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidTryIndent; method[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidTryIndent; method[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidTryIndent; method[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidTryIndent; method[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidTryIndent; method[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidTryIndent; method[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidTryIndent; method[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidTryIndent; method[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidBinaryOpIndent; method1[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidCommaIndent; method1[int, int, int]; void; null; System.out>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidWhileIndent; method1[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidWhileIndent; method1[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidWhileIndent; method1[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidWhileIndent; method1[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidWhileIndent; method1[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidWhileIndent; method1[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidWhileIndent; method1[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidWhileIndent; method1[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidMethodIndent; method3[int, int, int, int, int, int, int, int]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidMethodIndent; method4[int, int, int, int, int, int, int, int]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidMethodIndent; method5[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidMethodIndent; method6[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidMethodIndent; InputInvalidMethodIndent[int, int]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidMethodIndent; method6a[]; void; null; System>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputInvalidMethodIndent; method6a[]; void; null; System.out>
<java.lang.Object; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidMethodIndent; method6a[]; void; null; Arrays.asList(new String[]{"method"})>
<java.util.Arrays; asList[java.lang.String[]]; java.util.List<java.lang.String>; com.puppycrawl.tools.checkstyle.indentation.InputInvalidMethodIndent; method6a[]; void; toString[]; Arrays>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputInvalidMethodIndent; method6a[]; void; null; System.out>
<java.lang.Object; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidMethodIndent; method6a[]; void; null; Arrays.asList(new String[]{"method"})>
<java.util.Arrays; asList[java.lang.String[]]; java.util.List<java.lang.String>; com.puppycrawl.tools.checkstyle.indentation.InputInvalidMethodIndent; method6a[]; void; toString[]; Arrays>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputInvalidMethodIndent; method6a[]; void; null; System.out>
<java.lang.Object; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidMethodIndent; method6a[]; void; null; Arrays.asList(new String[]{"method"})>
<java.util.Arrays; asList[java.lang.String[]]; java.util.List<java.lang.String>; com.puppycrawl.tools.checkstyle.indentation.InputInvalidMethodIndent; method6a[]; void; toString[]; Arrays>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputInvalidMethodIndent; method6a[]; void; null; System.out>
<java.lang.Object; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidMethodIndent; method6a[]; void; null; Arrays.asList(new String[]{"method"})>
<java.util.Arrays; asList[java.lang.String[]]; java.util.List<java.lang.String>; com.puppycrawl.tools.checkstyle.indentation.InputInvalidMethodIndent; method6a[]; void; toString[]; Arrays>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidMethodIndent; method6a[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidMethodIndent; method6a[]; void; null; System>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputInvalidMethodIndent; method6a[]; void; null; System.out>
<java.lang.Object; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidMethodIndent; method6a[]; void; null; Arrays.asList(new String[]{"method"})>
<java.util.Arrays; asList[java.lang.String[]]; java.util.List<java.lang.String>; com.puppycrawl.tools.checkstyle.indentation.InputInvalidMethodIndent; method6a[]; void; toString[]; Arrays>
<com.puppycrawl.tools.checkstyle.indentation.InputInvalidMethodIndent; myfunc2[int, int, int, int, int, int, int]; void; com.puppycrawl.tools.checkstyle.indentation.InputInvalidMethodIndent; myMethod[]; void; null; this>
<com.puppycrawl.tools.checkstyle.indentation.InputInvalidMethodIndent; myfunc2[int, int, int, int, int, int, int]; void; com.puppycrawl.tools.checkstyle.indentation.InputInvalidMethodIndent; myMethod[]; void; null; this>
<com.puppycrawl.tools.checkstyle.indentation.InputInvalidMethodIndent; method2[int, int, int, int]; int; com.puppycrawl.tools.checkstyle.indentation.InputInvalidMethodIndent; myMethod[]; void; null; this>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.indentation.InputInvalidMethodIndent; myMethod[]; void; null; System.out.toString()>
<java.lang.Object; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidMethodIndent; myMethod[]; void; equals[java.lang.Object]; System.out>
<java.lang.System; exit[int]; void; com.puppycrawl.tools.checkstyle.indentation.InputUseTwoSpaces; InputUseTwoSpaces[]; void; null; System>
<java.lang.System; exit[int]; void; com.puppycrawl.tools.checkstyle.indentation.InputUseTwoSpaces; InputUseTwoSpaces[]; void; null; System>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.Test; main[java.lang.String[]]; void; null; System.out>
<java.lang.String; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.Test; main[java.lang.String[]]; void; null; new Object().toString().toString().toString().toString()>
<java.lang.String; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.Test; main[java.lang.String[]]; void; toString[]; new Object().toString().toString().toString()>
<java.lang.String; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.Test; main[java.lang.String[]]; void; toString[]; new Object().toString().toString()>
<java.lang.String; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.Test; main[java.lang.String[]]; void; toString[]; new Object().toString()>
<java.lang.Object; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.Test; main[java.lang.String[]]; void; toString[]; new Object()>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidDoWhileIndent; method1[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidDoWhileIndent; method1[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidDoWhileIndent; method1[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidDoWhileIndent; method1[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidDoWhileIndent; method1[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidDoWhileIndent; method1[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidDoWhileIndent; method1[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidDoWhileIndent; method1[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidDoWhileIndent; method1[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidDoWhileIndent; method1[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidDoWhileIndent; method1[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidDoWhileIndent; method1[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidDoWhileIndent; method1[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidForIndent; method1[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidForIndent; method1[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidForIndent; method1[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputInvalidForIndent; method1[]; void; null; System>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputInvalidSwitchIndent; method1[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputInvalidSwitchIndent; method1[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputInvalidSwitchIndent; method1[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputInvalidSwitchIndent; method1[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputInvalidSwitchIndent; method1[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputInvalidSwitchIndent; method1[]; void; null; System.out>
<java.lang.System; identityHashCode[java.lang.Object]; int; com.puppycrawl.tools.checkstyle.indentation.EquivalenceTester; hashCode[java.lang.Object]; int; null; System>
<java.lang.Thread; start[]; void; com.puppycrawl.tools.checkstyle.indentation.bug1260079; bug1260079[]; void; null; new Thread(){
  public void run(){
    System.out.println("ran");
  }
}
>
<java.io.PrintStream; println[java.lang.String]; void; java.lang.Thread; run[]; void; start[]; System.out>
<com.puppycrawl.tools.checkstyle.indentation.InputValidIfIndent; foo[]; boolean; com.puppycrawl.tools.checkstyle.indentation.InputValidIfIndent; emptyIfTest[]; void; null; this>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidIfIndent; populatedIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidIfIndent; parenIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidIfIndent; parenIfTest[]; void; null; System>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.indentation.InputValidIfIndent; parenIfTest[]; void; null; System>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputBraceAdjustment; InputBraceAdjustment[]; void; null; System.out>
<com.puppycrawl.tools.checkstyle.indentation.InputValidArrayInitIndent; func1[int[]]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidArrayInitIndent; InputValidArrayInitIndent[]; void; null; this>
<com.puppycrawl.tools.checkstyle.indentation.InputValidArrayInitIndent; func1[int[]]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidArrayInitIndent; InputValidArrayInitIndent[]; void; null; this>
<com.puppycrawl.tools.checkstyle.indentation.InputValidArrayInitIndent; func1[int[]]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidArrayInitIndent; InputValidArrayInitIndent[]; void; null; this>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidLabelIndent; InputValidLabelIndent[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidLabelIndent; InputValidLabelIndent[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.indentation.InputValidLabelIndent; InputValidLabelIndent[]; void; null; System.out>
<java.lang.Object; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.InputWhitespace; dotTest[]; java.lang.String; null; o>
<java.lang.Object; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.InputWhitespace; dotTest[]; java.lang.String; null; o>
<java.lang.Object; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.InputWhitespace; dotTest[]; java.lang.String; null; o>
<java.lang.Object; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.InputWhitespace; dotTest[]; java.lang.String; null; o>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.InputWhitespace; assertTest[]; void; null; "OK">
<com.puppycrawl.tools.checkstyle.InputWhitespace; donBradman[java.lang.Runnable]; void; com.puppycrawl.tools.checkstyle.InputWhitespace; donBradman[java.lang.Runnable]; void; null; this>
<com.puppycrawl.tools.checkstyle.InputWhitespace; doStuff[]; void; com.puppycrawl.tools.checkstyle.InputWhitespace; rfe521323[]; void; null; this>
<com.puppycrawl.tools.checkstyle.SpecialCasesInForLoop; getSomeInts[]; int[]; com.puppycrawl.tools.checkstyle.SpecialCasesInForLoop; forIterator[]; void; null; this>
<java.io.PrintStream; println[java.lang.String]; void; java.lang.Object; run[]; void; null; System.out>
<java.awt.Component; addMouseListener[java.awt.event.MouseListener]; void; com.puppycrawl.tools.checkstyle.InputScopeAnonInner; InputScopeAnonInner[]; void; null; mButton>
<java.io.PrintStream; println[java.lang.String]; void; java.awt.event.MouseAdapter; mouseClicked[java.awt.event.MouseEvent]; void; null; System.out>
<java.awt.Component; addMouseListener[java.awt.event.MouseListener]; void; com.puppycrawl.tools.checkstyle.InputScopeAnonInner; addInputAnonInner[]; void; null; mButton>
<java.io.PrintStream; println[java.lang.String]; void; java.awt.event.MouseAdapter; mouseClicked[java.awt.event.MouseEvent]; void; null; System.out>
<java.lang.System; currentTimeMillis[]; long; com.puppycrawl.tools.checkstyle.InputSimplifyBoolean; isOddMillis[]; boolean; null; System>
<java.lang.System; currentTimeMillis[]; long; com.puppycrawl.tools.checkstyle.InputSimplifyBoolean; isOddMillis2[]; boolean; null; System>
<com.puppycrawl.tools.checkstyle.InputSimplifyBoolean; isOddMillis[]; boolean; com.puppycrawl.tools.checkstyle.InputSimplifyBoolean; giveMeTrue[]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.InputSimplifyBoolean; isOddMillis[]; boolean; com.puppycrawl.tools.checkstyle.InputSimplifyBoolean; giveMeTrue[]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.InputSimplifyBoolean; isOddMillis[]; boolean; com.puppycrawl.tools.checkstyle.InputSimplifyBoolean; ifNoElse[]; boolean; null; this>
<javax.swing.JComponent; setPreferredSize[java.awt.Dimension]; void; com.puppycrawl.tools.checkstyle.checks.design.InputNonUtilityClass; InputNonUtilityClass[]; void; null; this>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.design.InputNonUtilityClass; utilMethod[]; void; null; System.out>
<java.lang.System; currentTimeMillis[]; long; com.puppycrawl.tools.checkstyle.design.HideUtilityClassContructor3041574_3.Event1; getEmptyString[]; java.lang.String; null; System>
<java.io.PrintStream; println[java.lang.String]; void; ; methodTest1[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.design.InputInnerClassCheck; methodTest2[]; void; null; System.out>
<java.io.PrintStream; println[java.lang.String]; void; com.puppycrawl.tools.checkstyle.design.Temp2; methodTest2[]; void; null; System.out>
<java.util.Collection; size[]; int; com.puppycrawl.tools.checkstyle.Wildcard; foo[java.util.Collection<? extends com.puppycrawl.tools.checkstyle.Wildcard[]>]; void; null; collection>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheck; mustCheckReferenceCount[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; getScopeFromMods[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheck; mustCheckReferenceCount[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ScopeUtils>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheck; applyTo[java.util.Set]; void; null; aNodes>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheck; applyTo[java.util.Set]; void; null; it>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheck; applyTo[java.util.Set]; void; null; methods>
<java.util.Iterator; next[]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheck; applyTo[java.util.Set]; void; null; it>
<com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheck; getReferences[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheck; applyTo[java.util.Set]; void; null; this>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheck; applyTo[java.util.Set]; void; null; refIt>
<java.util.Iterator; next[]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheck; applyTo[java.util.Set]; void; null; refIt>
<not found; getTreeNode[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheck; applyTo[java.util.Set]; void; null; ref>
<not found; getDetailNode[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheck; applyTo[java.util.Set]; void; null; refNode>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheck; applyTo[java.util.Set]; void; null; refDetail>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheck; applyTo[java.util.Set]; void; null; parent>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheck; applyTo[java.util.Set]; void; null; methods>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheck; applyTo[java.util.Set]; void; null; parent>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheck; applyTo[java.util.Set]; void; null; methods>
<not found; log[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheck; applyTo[java.util.Set]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheck; applyTo[java.util.Set]; void; null; nameAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheck; applyTo[java.util.Set]; void; null; nameAST>
<com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheck; getErrorKey[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheck; applyTo[java.util.Set]; void; null; this>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheck; applyTo[java.util.Set]; void; null; nameAST>
<not found; get[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheck; getReferences[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.Iterator; null; getASTManager()>
<not found; getASTManager[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheck; getReferences[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.Iterator; get[]; this>
<not found; getDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheck; getReferences[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.Iterator; null; ident>
<not found; getReferences[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheck; getReferences[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.Iterator; null; definition>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheck; getReferences[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.Iterator; null; dummy>
<java.lang.reflect.Constructor; getParameterTypes[]; java.lang.Class[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalConstructor; ExternalConstructor[java.lang.reflect.Constructor]; void; null; _javaConstructor>
<java.lang.Class; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalConstructor; getName[]; java.lang.String; null; _javaConstructor.getDeclaringClass()>
<java.lang.reflect.Constructor; getDeclaringClass[]; java.lang.Class; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalConstructor; getName[]; java.lang.String; getName[]; _javaConstructor>
<java.lang.reflect.Constructor; getDeclaringClass[]; java.lang.Class; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalConstructor; getType[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; _javaConstructor>
<not found; isSame[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalConstructor; hasSameSignature[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; boolean; null; getSignature()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalConstructor; getSignature[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalConstructor; hasSameSignature[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; boolean; isSame[]; this>
<not found; isCompatibleWith[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalConstructor; hasCompatibleSignature[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; boolean; null; signature>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalConstructor; getSignature[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalConstructor; hasCompatibleSignature[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalConstructor; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalConstructor; getQualifiedName[]; java.lang.String; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalConstructor; getSignature[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalConstructor; getQualifiedName[]; java.lang.String; null; this>
<java.lang.reflect.Constructor; getExceptionTypes[]; java.lang.Class[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalConstructor; getExceptions[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass[]; null; getJavaConstructor()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalConstructor; getJavaConstructor[]; java.lang.reflect.Constructor; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalConstructor; getExceptions[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass[]; getExceptionTypes[]; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalConstructor; getQualifiedName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalConstructor; toString[]; java.lang.String; null; this>
<java.lang.reflect.Constructor; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalConstructor; equals[java.lang.Object]; boolean; null; getJavaConstructor()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalConstructor; getJavaConstructor[]; java.lang.reflect.Constructor; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalConstructor; equals[java.lang.Object]; boolean; equals[java.lang.Object]; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalConstructor; getJavaConstructor[]; java.lang.reflect.Constructor; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalConstructor; equals[java.lang.Object]; boolean; null; constructor>
<java.lang.reflect.Constructor; hashCode[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalConstructor; hashCode[]; int; null; getJavaConstructor()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalConstructor; getJavaConstructor[]; java.lang.reflect.Constructor; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalConstructor; hashCode[]; int; hashCode[]; this>
<not found; getFactory[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; Resolver[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable]; void; null; LogFactory>
<java.io.PrintStream; println[char[]]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; Resolver[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable]; void; null; System.out>
<not found; traverse[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolve[]; void; null; this>
<not found; getChildren[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleSList[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; null; node>
<not found; hasNext[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleSList[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; null; iterator>
<not found; nextChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleSList[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; null; iterator>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleSList[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; null; this>
<not found; getTreeNode[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleAnonymousInnerClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AnonymousInnerClass]; void; null; innerClass>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleAnonymousInnerClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AnonymousInnerClass]; void; null; objblock>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleAnonymousInnerClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AnonymousInnerClass]; void; null; this>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleAnonymousInnerClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AnonymousInnerClass]; void; null; expression>
<not found; getTreeNode[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef]; void; null; classDef>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef]; void; null; node>
<not found; setDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef]; void; null; nameNode>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef]; void; null; node>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef]; void; null; extendsClause>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef]; void; null; this>
<not found; setDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef]; void; null; extendedClassNode>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef]; void; null; extendedClassNode>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef]; void; null; node>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef]; void; null; implementsNode>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef]; void; null; this>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef]; void; null; interfaceNode>
<not found; getTreeNode[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef]; void; null; method>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef]; void; null; node>
<not found; setDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef]; void; null; nameNode>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef]; void; null; node>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef]; void; null; this>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef]; void; null; node>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef]; void; null; throwsNode>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef]; void; null; exception>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef]; void; null; this>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef]; void; null; exception>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef]; void; null; node>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleSList[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef]; void; null; this>
<not found; getTreeNode[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; block>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; node>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleIf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleWhileAndSynchronized[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleDoWhile[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; this>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; node>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleSList[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleCatch[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleSwitch[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleSList[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleSList[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; this>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; node>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleWhileAndSynchronized[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleAssert[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; this>
<not found; getInstance[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; mLogFactory>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver>; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; this>
<not found; error[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; log>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; node>
<not found; getTreeNode[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleAssert[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; block>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleAssert[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; node>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleAssert[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; this>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleAssert[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; conditional>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleAssert[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; message>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleAssert[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; message>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleAssert[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; this>
<not found; getTreeNode[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleSwitch[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; block>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleSwitch[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; node>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleSwitch[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; this>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleSwitch[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; expr>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleSwitch[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; caseGroup>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleSwitch[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; caseGroup>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleSwitch[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; caseGroup>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleSwitch[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; caseGroup>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleSwitch[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; caseNode>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleSwitch[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; this>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleSwitch[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; caseNode>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleSwitch[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; caseNode>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleSwitch[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; caseGroup>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleSList[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleSwitch[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; this>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleSwitch[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; caseGroup>
<not found; getTreeNode[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleCatch[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; block>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleCatch[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; node>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleSList[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleCatch[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; this>
<not found; getTreeNode[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; block>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; node>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; node>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; init>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; init.getFirstChild()>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; getType[]; init>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; this>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; init>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; node>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; cond>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; this>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; cond>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; node>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; iterator>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; this>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; iterator>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; iterator>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; this>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; forEach>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; forEach>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; body>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; body>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; body>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleSList[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; this>
<not found; getTreeNode[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleIf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; block>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleIf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; node>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleIf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; this>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleIf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; conditional>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleIf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; body>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleIf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; body>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleIf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; body>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleSList[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleIf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleIf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; this>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleIf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; body>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleIf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; elseBody>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleIf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; elseBody>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleIf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; elseBody>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleIf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; this>
<not found; getParentScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleIf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; block>
<not found; getTreeNode[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleWhileAndSynchronized[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; block>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleWhileAndSynchronized[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; node>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleWhileAndSynchronized[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; condition>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleWhileAndSynchronized[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; slist>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleWhileAndSynchronized[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; slist>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleWhileAndSynchronized[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleSList[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleWhileAndSynchronized[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; this>
<not found; getTreeNode[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleDoWhile[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; block>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleDoWhile[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; node>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleDoWhile[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; node>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleSList[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleDoWhile[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleDoWhile[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; this>
<not found; getTreeNode[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleVariable[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef]; void; null; variable>
<not found; getParentScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleVariable[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef]; void; null; variable>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleVariable[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef]; void; null; node>
<not found; setDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleVariable[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef]; void; null; nameNode>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleVariable[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef]; void; null; node>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveType[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleVariable[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef]; void; null; this>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleVariable[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef]; void; null; node>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleVariable[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef]; void; null; this>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleVariable[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef]; void; null; assignmentNode>
<not found; getParentScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleVariable[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef]; void; null; variable>
<not found; getTreeNode[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleLabel[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.LabelDef]; void; null; label>
<not found; setDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleLabel[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.LabelDef]; void; null; ((SymTabAST)node.getFirstChild())>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleLabel[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.LabelDef]; void; setDefinition[]; node>
<not found; getParentScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; handleLabel[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.LabelDef]; void; null; label>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; expression>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveTypecast[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; expression>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; expression>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; expression>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; child>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; child>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveIdent[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveType[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveLiteralThis[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveLiteralSuper[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveNew[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolvePrimitiveType[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveNumInt[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveNumFloat[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveStringLiteral[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveCharLiteral[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveAssignment[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveBooleanExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveInstanceOf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveBooleanLiteral[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveBooleanUnary[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveUnaryExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveArithmeticExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveGoto[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; expression>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveArrayAccess[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveQuestion[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveLiteralClass[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveArrayInitializer[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveThrowExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveShiftOperator[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveBitwiseNot[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<not found; getInstance[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; mLogFactory>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver>; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<not found; error[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; log>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; expression>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; expression>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveTypecast[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; node>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveTypecast[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; typeNode>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveTypecast[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; exprNode>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveTypecast[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; exprNode>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveTypecast[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; typeNode>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveTypecast[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; child>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveType[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveTypecast[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveTypecast[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; typeNode>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveType[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveTypecast[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveTypecast[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<not found; setDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveTypecast[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; ((SymTabAST)typeNode.getFirstChild())>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveTypecast[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; setDefinition[]; typeNode>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveArrayAccess[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; node>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveArrayAccess[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; arrayNode>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveArrayAccess[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; arrayNode>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveArrayAccess[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveArrayAccess[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; arrayNode>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveArrayAccess[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; arrayNode>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveArrayAccess[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveArrayAccess[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveArrayAccess[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; array>
<not found; hasNext[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; it>
<not found; nextNode[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; it>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; node>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<not found; setMeaningfulness[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; node>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; node>
<not found; hasNext[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; it>
<not found; nextNode[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; it>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; next>
<not found; getClassDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; location>
<not found; setDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; next>
<not found; setMeaningfulness[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; next>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; methodNode>
<not found; getEnclosingClass[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; location>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; methodNode>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; nameNode>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveParameters[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; nameNode>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; nameNode>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; nameNode>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; nameNode>
<not found; getSuperclass[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; location.getEnclosingClass()>
<not found; getEnclosingClass[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; getSuperclass[]; location>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; superclass>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; nameNode>
<not found; getEnclosingClass[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; location>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; newContext>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; nameNode>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; contextNode>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; nameNode>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; nameNode>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; nameNode>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<not found; getMethodDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; newContext>
<not found; setDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; nameNode>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; method>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; methodNode>
<not found; getEnclosingClass[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveLiteralThis[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; location>
<not found; getSuperclass[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveLiteralSuper[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; location.getEnclosingClass()>
<not found; getEnclosingClass[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveLiteralSuper[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; getSuperclass[]; location>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; newIsConstructor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; boolean; null; newNode.getFirstChild()>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; newIsConstructor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; boolean; getNextSibling[]; newNode>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; newIsConstructor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; boolean; null; typeNode>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; newIsConstructor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; boolean; null; typeNode>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; newIsConstructor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; boolean; null; typeNode>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveType[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; expr>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveType[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; nameNode>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveType[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveClassIdent[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveType[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<not found; setDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; expr>
<not found; getClassDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveClassIdent[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; location>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveClassIdent[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; expr>
<not found; setDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveClassIdent[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; expr>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; newIsConstructor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveNew[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveConstructor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveNew[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveNewArray[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveNew[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveNewArray[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; newNode>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveNewArray[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; typeNode>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveNewArray[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; declaratorNode>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveNewArray[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveNewArray[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; declaratorNode>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveNewArray[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveNewArray[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; declaratorNode>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveArrayInitializer[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveNewArray[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveQuestion[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; question>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveQuestion[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; test>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveQuestion[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; test>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveQuestion[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; test>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveQuestion[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; leftBranch>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveQuestion[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; leftBranch>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveQuestion[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; leftBranch>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveQuestion[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; rightBranch>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveQuestion[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; rightBranch>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveQuestion[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; rightBranch>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveQuestion[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveQuestion[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveQuestion[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; moreGeneral[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveQuestion[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<not found; isCompatibleWith[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; moreGeneral[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; a>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveConstructor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; constructor>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveConstructor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; constructor>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveConstructor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; nameNode>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveConstructor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; nameNode.getFirstChild()>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveConstructor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; getNextSibling[]; nameNode>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveConstructor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveParameters[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveConstructor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<not found; getMethodDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveConstructor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; classConstructed>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveConstructor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; nameIdent>
<not found; setDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveConstructor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; nameIdent>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveParameters[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; null; elist>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveParameters[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; null; expr>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveParameters[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; null; this>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveParameters[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; null; expr>
<java.util.Vector; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveParameters[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; null; parameters>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveParameters[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; null; expr>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveIdent[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; ident>
<not found; getVariableDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveIdent[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; context>
<not found; getVariableDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveIdent[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; location>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveIdent[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; ((IVariable)def)>
<not found; getClassDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveIdent[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; context>
<not found; getClassDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveIdent[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; location>
<not found; setDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveIdent[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; ident>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; findLeftChild[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveBooleanExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveBooleanExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; findRightSibling[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveBooleanExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveBooleanExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<not found; getDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveBooleanExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; LiteralResolver>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveAssignment[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; expression>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveAssignment[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; leftNode>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveAssignment[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveAssignment[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveUnaryExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; expression>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveUnaryExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; findLeftChild[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveArithmeticExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveArithmeticExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; findRightSibling[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveArithmeticExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveArithmeticExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; binaryResultType[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveArithmeticExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; findLeftChild[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; aExpression>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; findLeftChild[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; leftChild>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; findLeftChild[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; leftChild>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; findRightSibling[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; aLeftChild>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; findRightSibling[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; rightChild>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; findRightSibling[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; rightChild>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; binaryResultType[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; a>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; binaryResultType[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; b>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; binaryResultType[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; a>
<not found; binaryPromote[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; binaryResultType[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; PrimitiveClasses>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveInstanceOf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; expression>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveInstanceOf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; leftNode>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveInstanceOf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveInstanceOf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; rightNode>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveInstanceOf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<not found; getDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveInstanceOf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; LiteralResolver>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveGoto[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; expression>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveGoto[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; label>
<not found; getLabelDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveGoto[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; location>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveGoto[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; label>
<not found; setDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveGoto[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; label>
<not found; getDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolvePrimitiveType[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; LiteralResolver>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolvePrimitiveType[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; primitive>
<not found; setDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolvePrimitiveType[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; primitive>
<not found; getDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveStringLiteral[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; LiteralResolver>
<not found; getDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveCharLiteral[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; LiteralResolver>
<not found; getDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveBooleanLiteral[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; LiteralResolver>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveBooleanUnary[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; expression>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveBooleanUnary[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<not found; getDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveBooleanUnary[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; LiteralResolver>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveArrayInitializer[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; void; null; initializerNode>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveArrayInitializer[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; void; null; child>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveArrayInitializer[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; void; null; this>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveArrayInitializer[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; void; null; child>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveThrowExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; void; null; throwNode>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveThrowExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; findLeftChild[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveShiftOperator[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; findRightSibling[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveShiftOperator[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveShiftOperator[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveShiftOperator[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<not found; unaryPromote[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveShiftOperator[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; PrimitiveClasses>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveBitwiseNot[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; expression>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveExpression[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveBitwiseNot[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<not found; unaryPromote[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveBitwiseNot[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; PrimitiveClasses>
<java.lang.reflect.Method; getParameterTypes[]; java.lang.Class<?>[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalMethod; ExternalMethod[java.lang.reflect.Method]; void; null; _javaMethod>
<java.lang.reflect.Method; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalMethod; getName[]; java.lang.String; null; _javaMethod>
<java.lang.Class; isArray[]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalMethod; getType[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; _javaMethod.getReturnType()>
<java.lang.reflect.Method; getReturnType[]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalMethod; getType[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; isArray[]; _javaMethod>
<java.lang.Class; getComponentType[]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalMethod; getType[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; _javaMethod.getReturnType()>
<java.lang.reflect.Method; getReturnType[]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalMethod; getType[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; getComponentType[]; _javaMethod>
<java.lang.reflect.Method; getReturnType[]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalMethod; getType[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; _javaMethod>
<not found; isSame[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalMethod; hasSameSignature[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; boolean; null; _signature>
<not found; isCompatibleWith[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalMethod; hasCompatibleSignature[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; boolean; null; signature>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalMethod; getSignature[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalMethod; hasCompatibleSignature[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalMethod; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalMethod; getQualifiedName[]; java.lang.String; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalMethod; getSignature[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalMethod; getQualifiedName[]; java.lang.String; null; this>
<java.lang.reflect.Method; getExceptionTypes[]; java.lang.Class<?>[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalMethod; getExceptions[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass[]; null; getJavaMethod()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalMethod; getJavaMethod[]; java.lang.reflect.Method; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalMethod; getExceptions[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass[]; getExceptionTypes[]; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalMethod; getQualifiedName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalMethod; toString[]; java.lang.String; null; this>
<java.lang.reflect.Method; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalMethod; equals[java.lang.Object]; boolean; null; getJavaMethod()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalMethod; getJavaMethod[]; java.lang.reflect.Method; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalMethod; equals[java.lang.Object]; boolean; equals[java.lang.Object]; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalMethod; getJavaMethod[]; java.lang.reflect.Method; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalMethod; equals[java.lang.Object]; boolean; null; compared>
<java.lang.reflect.Method; hashCode[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalMethod; hashCode[]; int; null; getJavaMethod()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalMethod; getJavaMethod[]; java.lang.reflect.Method; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalMethod; hashCode[]; int; hashCode[]; this>
<java.util.ArrayList; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.NullClass; getReferences[]; java.util.Iterator; null; new ArrayList()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.NullClass; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.NullClass; getQualifiedName[]; java.lang.String; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.QueryEngine; setIndex[]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.QueryEngine; QueryEngine[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable]; void; null; this>
<not found; getScopeIndex[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.QueryEngine; setIndex[]; void; null; symbolTable>
<not found; lookup[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.QueryEngine; getSymbol[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; null; index>
<not found; getSymbol[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.QueryEngine; getSymbol[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; null; enclosingScope>
<not found; getSymbol[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.QueryEngine; getSymbol[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; null; enclosingScope.getParentScope()>
<not found; getParentScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.QueryEngine; getSymbol[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; getSymbol[]; enclosingScope>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.QueryEngine; getSymbol[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.QueryEngine; getDefinition[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IDefinition; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.QueryEngine; resolveDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IDefinition; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.QueryEngine; getDefinition[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IDefinition; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.QueryEngine; getWordNodeAtOccurrence[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.QueryEngine; getDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IDefinition; null; this>
<not found; getDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.QueryEngine; getDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IDefinition; null; node>
<not found; getDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.QueryEngine; resolveDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IDefinition; null; reference>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.QueryEngine; getSymbol[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.QueryEngine; getReferences[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; java.util.Iterator; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.QueryEngine; resolveReferences[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.QueryEngine; getReferences[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; java.util.Iterator; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.QueryEngine; getWordNodeAtOccurrence[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.QueryEngine; getReferences[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; java.util.Iterator; null; this>
<not found; getDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.QueryEngine; getReferences[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; java.util.Iterator; null; node>
<not found; getReferences[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.QueryEngine; getReferences[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; java.util.Iterator; null; node.getDefinition()>
<not found; getDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.QueryEngine; getReferences[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; java.util.Iterator; getReferences[]; node>
<not found; getReferences[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.QueryEngine; resolveReferences[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference]; java.util.Iterator; null; reference.getDefinition()>
<not found; getDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.QueryEngine; resolveReferences[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference]; java.util.Iterator; getReferences[]; reference>
<not found; getFileNode[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.QueryEngine; getFileNode[java.io.File]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; ASTUtil>
<not found; getTree[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.QueryEngine; getFileNode[java.io.File]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; symbolTable>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.QueryEngine; getFileNode[java.io.File]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.QueryEngine; getWordNodeAtOccurrence[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; this>
<not found; getFile[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.QueryEngine; getWordNodeAtOccurrence[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; location>
<not found; getEnclosingNode[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.QueryEngine; getWordNodeAtOccurrence[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; fileNode>
<not found; getLine[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.QueryEngine; getWordNodeAtOccurrence[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; location>
<not found; getColumn[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.QueryEngine; getWordNodeAtOccurrence[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; location>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.QueryEngine; getWordNodeAtOccurrence[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; node>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.QueryEngine; getWordNodeAtOccurrence[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.QueryEngine; getWordAtOccurrence[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; java.lang.String; null; this>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.QueryEngine; getWordAtOccurrence[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; java.lang.String; null; node>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AnonymousInnerClass; AnonymousInnerClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; null; parentScope>
<not found; getNextAnonymousId[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AnonymousInnerClass; AnonymousInnerClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; null; parentScope.getEnclosingClass()>
<not found; getEnclosingClass[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AnonymousInnerClass; AnonymousInnerClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; getNextAnonymousId[]; parentScope>
<not found; constructDottedName[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AnonymousInnerClass; finishMakingDefinition[]; void; null; ASTUtil>
<not found; getClassDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AnonymousInnerClass; finishMakingDefinition[]; void; null; this>
<not found; setSuperclass[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AnonymousInnerClass; finishMakingDefinition[]; void; null; this>
<not found; addSubclass[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AnonymousInnerClass; finishMakingDefinition[]; void; null; superclass>
<java.util.Hashtable; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; addDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef]; void; null; elements>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; addDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef]; void; null; def>
<java.util.Hashtable; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; addDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; elements>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; addDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; def>
<java.util.Hashtable; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; addDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef]; void; null; classes>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; addDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef]; void; null; def>
<java.util.Hashtable; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; addDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.LabelDef]; void; null; labels>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; addDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.LabelDef]; void; null; def>
<java.util.Vector; addAll[java.util.Collection]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; getDefinitions[]; java.util.Enumeration; null; allElements>
<java.util.Hashtable; values[]; java.util.Collection; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; getDefinitions[]; java.util.Enumeration; null; elements>
<java.util.Vector; addAll[java.util.Collection]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; getDefinitions[]; java.util.Enumeration; null; allElements>
<java.util.Hashtable; values[]; java.util.Collection; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; getDefinitions[]; java.util.Enumeration; null; labels>
<java.util.Vector; addAll[java.util.Collection]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; getDefinitions[]; java.util.Enumeration; null; allElements>
<java.util.Hashtable; values[]; java.util.Collection; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; getDefinitions[]; java.util.Enumeration; null; classes>
<java.util.Vector; elements[]; java.util.Enumeration; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; getDefinitions[]; java.util.Enumeration; null; allElements>
<java.util.Collection; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; getClasses[]; java.util.Iterator; null; classes.values()>
<java.util.Hashtable; values[]; java.util.Collection; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; getClasses[]; java.util.Iterator; iterator[]; classes>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; getReferencesIn[]; java.util.Iterator; null; referencesInScope>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; getReferencesIn[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; getSymbol[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; null; this>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; getSymbol[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; null; it>
<java.util.Iterator; next[]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; getSymbol[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; null; it>
<not found; getLine[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; getSymbol[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; null; reference>
<not found; getLine[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; getSymbol[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; null; location>
<not found; getColumn[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; getSymbol[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; null; reference>
<not found; getColumn[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; getSymbol[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; null; location>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; addReferenceInScope[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference]; void; null; referencesInScope>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DotIterator; makeNodes[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DotIterator; DotIterator[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<java.util.List; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DotIterator; DotIterator[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; _nodes>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DotIterator; makeNodes[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; node>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DotIterator; makeNodes[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; node>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DotIterator; makeNodes[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; left>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DotIterator; makeNodes[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DotIterator; makeNodes[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DotIterator; makeNodes[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DotIterator; makeNodes[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<java.util.List; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DotIterator; makeNodes[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; _nodes>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DotIterator; hasNext[]; boolean; null; _nodesIter>
<java.util.Iterator; next[]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DotIterator; next[]; java.lang.Object; null; _nodesIter>
<java.util.Iterator; next[]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DotIterator; nextNode[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; _nodesIter>
<not found; elements[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverse[]; void; null; _symbolTable.getPackages()>
<not found; getPackages[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverse[]; void; elements[]; _symbolTable>
<java.util.Enumeration; hasMoreElements[]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverse[]; void; null; packages>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverse[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverse[]; void; null; this>
<java.util.Enumeration; nextElement[]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverse[]; void; null; packages>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverse[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverse[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverse[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverse[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverse[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverse[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverse[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverse[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverse[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverse[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverse[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverse[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverse[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverse[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverse[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverse[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; handlePackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverse[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traversePackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverse[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; handleAnonymousInnerClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AnonymousInnerClass]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverse[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AnonymousInnerClass]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverseChildren[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverse[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AnonymousInnerClass]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; handleClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverse[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverseChildren[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverse[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; handleDefaultConstructor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefaultConstructor]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverse[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefaultConstructor]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; handleMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverse[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverseChildren[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverse[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; handleBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverse[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverseChildren[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverse[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; handleVariable[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverse[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; handleLabel[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.LabelDef]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverse[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.LabelDef]; void; null; this>
<not found; getClasses[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traversePackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef]; void; null; pkg>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traversePackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef]; void; null; definitions>
<java.util.Iterator; next[]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traversePackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef]; void; null; definitions>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverse[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traversePackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef]; void; null; this>
<not found; getDefinitions[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverseChildren[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; null; scope>
<java.util.Enumeration; hasMoreElements[]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverseChildren[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; null; definitions>
<java.util.Enumeration; nextElement[]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverseChildren[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; null; definitions>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverse[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefinitionTraverser; traverseChildren[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getLocalName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getName[]; java.lang.String; null; this>
<java.lang.Class; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getLocalName[]; java.lang.String; null; _javaClass>
<java.lang.String; substring[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getLocalName[]; java.lang.String; null; fullName>
<java.lang.String; lastIndexOf[java.lang.String]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getLocalName[]; java.lang.String; null; fullName>
<java.lang.Class; getSuperclass[]; java.lang.Class; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getSuperclass[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; _javaClass>
<java.lang.Class; isInterface[]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getSuperclass[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; _javaClass>
<java.lang.Class; getInterfaces[]; java.lang.Class[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getInterfaces[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass[]; null; _javaClass>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getQualifiedName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getClassDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<java.lang.Class; getClasses[]; java.lang.Class[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getClassDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; getJavaClass()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getJavaClass[]; java.lang.Class; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getClassDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; getClasses[]; this>
<java.lang.Class; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getClassDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; classes[i]>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getClassDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; qualifiedName>
<java.lang.Class; getDeclaredField[java.lang.String]; java.lang.reflect.Field; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getVariableDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IVariable; null; _javaClass>
<java.lang.Class; getInterfaces[]; java.lang.Class[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getVariableDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IVariable; null; _javaClass>
<java.lang.Class; getDeclaredField[java.lang.String]; java.lang.reflect.Field; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getVariableDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IVariable; null; interfaces[i]>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getSuperclass[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getVariableDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IVariable; null; this>
<not found; getVariableDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getVariableDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IVariable; null; getSuperclass()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getSuperclass[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getVariableDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IVariable; getVariableDefinition[]; this>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getMethodDefinition[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; name>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getMethodDefinition[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getConstructorDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getMethodDefinition[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; this>
<java.lang.Class; getDeclaredMethods[]; java.lang.reflect.Method[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getMethodDefinition[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; _javaClass>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getMethodDefinition[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; name>
<java.lang.reflect.Method; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getMethodDefinition[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; methods[i]>
<not found; hasSameSignature[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getMethodDefinition[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; method>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getMostCompatibleMethod[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getMethodDefinition[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getSuperclass[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getMethodDefinition[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; this>
<not found; getMethodDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getMethodDefinition[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; getSuperclass()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getSuperclass[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getMethodDefinition[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; getMethodDefinition[]; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getInterfaces[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getMethodDefinition[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; this>
<not found; getMethodDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getMethodDefinition[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; interfaces[i]>
<java.util.Collection; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getMostCompatibleMethod[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; getMethods()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getMethods[]; java.util.Collection; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getMostCompatibleMethod[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; iterator[]; this>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getMostCompatibleMethod[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; it>
<java.util.Iterator; next[]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getMostCompatibleMethod[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; it>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getMostCompatibleMethod[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; name>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getMostCompatibleMethod[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; method>
<not found; hasCompatibleSignature[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getMostCompatibleMethod[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; method>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getMostCompatibleMethod[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; compatibleMethods>
<java.util.Set; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getMostCompatibleMethod[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; compatibleMethods>
<java.util.SortedSet; first[]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getMostCompatibleMethod[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; compatibleMethods>
<java.lang.Class; getDeclaredMethods[]; java.lang.reflect.Method[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getMethods[]; java.util.Collection; null; _javaClass>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getMethods[]; java.util.Collection; null; _methods>
<java.lang.Class; isInterface[]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getConstructorDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; _javaClass>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getInterfaceConstructor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getConstructorDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getClassConstructor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getConstructorDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; this>
<not found; getParameters[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getInterfaceConstructor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; signature>
<java.lang.Class; getConstructors[]; java.lang.reflect.Constructor[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getClassConstructor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; _javaClass>
<not found; hasSameSignature[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getClassConstructor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; constructor>
<not found; hasCompatibleSignature[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getClassConstructor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; constructor>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; isPrimitive[]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; isCompatibleWith[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; boolean; null; this>
<not found; isPrimitive[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; isCompatibleWith[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; boolean; null; type>
<not found; typesAreCompatible[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; isCompatibleWith[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; boolean; null; PrimitiveClasses>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; isCompatibleWith[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; boolean; null; type>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getSuperclass[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; isCompatibleWith[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; boolean; null; this>
<not found; isCompatibleWith[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; isCompatibleWith[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; boolean; null; getSuperclass()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getSuperclass[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; isCompatibleWith[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; boolean; isCompatibleWith[]; this>
<java.lang.Class; getInterfaces[]; java.lang.Class[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; isCompatibleWith[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; boolean; null; _javaClass>
<java.lang.Class; getInterfaces[]; java.lang.Class[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; isCompatibleWith[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; boolean; null; _javaClass>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; isCompatibleWith[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; isCompatibleWith[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; boolean; null; new ExternalClass(interfaces[i])>
<java.util.List; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; addImplementor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef]; void; null; _implementors>
<java.util.List; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; addSubclass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef]; void; null; _subclasses>
<java.lang.Class; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getQualifiedName[]; java.lang.String; null; _javaClass>
<java.lang.Class; isPrimitive[]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; isPrimitive[]; boolean; null; getJavaClass()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getJavaClass[]; java.lang.Class; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; isPrimitive[]; boolean; isPrimitive[]; this>
<java.lang.Class; getDeclaredClasses[]; java.lang.Class[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getInnerClasses[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass[]; null; getJavaClass()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getJavaClass[]; java.lang.Class; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getInnerClasses[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass[]; getDeclaredClasses[]; this>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass>; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; toString[]; java.lang.String; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getQualifiedName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; toString[]; java.lang.String; null; this>
<java.lang.Object; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; equals[java.lang.Object]; boolean; null; getJavaClass()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getJavaClass[]; java.lang.Class; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; equals[java.lang.Object]; boolean; equals[java.lang.Object]; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getJavaClass[]; java.lang.Class; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; equals[java.lang.Object]; boolean; null; compared>
<java.lang.Object; hashCode[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; hashCode[]; int; null; getJavaClass()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getJavaClass[]; java.lang.Class; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; hashCode[]; int; hashCode[]; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ArrayLengthMember; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ArrayLengthMember; getQualifiedName[]; java.lang.String; null; this>
<not found; getDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ArrayLengthMember; getType[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; LiteralResolver>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSpecificityComparator; compare[java.lang.Object, java.lang.Object]; int; null; method1>
<not found; getSignature[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSpecificityComparator; compare[java.lang.Object, java.lang.Object]; int; null; method1>
<not found; getSignature[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSpecificityComparator; compare[java.lang.Object, java.lang.Object]; int; null; method2>
<not found; isCompatibleWith[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSpecificityComparator; compare[java.lang.Object, java.lang.Object]; int; null; sig1>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; setDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IDefinition, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, boolean]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; setDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IDefinition, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; null; this>
<not found; addReferenceInScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; setDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IDefinition, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, boolean]; void; null; scope>
<not found; isSourced[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; setDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IDefinition, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, boolean]; void; null; definition>
<not found; addReference[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; setDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IDefinition, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, boolean]; void; null; _definition>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; ignoreChildren[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; setMeaningfulness[boolean]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; ignoreChildren[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; ignoreChildren[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; ignoreChildren[]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; ignoreChildren[]; void; null; child>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; ignoreChildren[]; void; null; child>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; setFile[java.io.File]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; finishDefinition[java.io.File, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; setParent[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; finishDefinition[java.io.File, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; finishChildren[java.io.File]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; finishDefinition[java.io.File, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; finishDefinition[java.io.File, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; null; this>
<not found; compose[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; finishDefinition[java.io.File, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; null; result>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; finishDefinition[java.io.File, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; finishDefinition[java.io.File, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; finishDefinition[java.io.File, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; finishDefinition[java.io.File, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; null; this>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; finishDefinition[java.io.File, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; null; this>
<not found; length[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; finishDefinition[java.io.File, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; null; getText()>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; finishDefinition[java.io.File, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; length[]; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; setSpan[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; finishDefinition[java.io.File, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; finishChildren[java.io.File]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getSpan[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; finishChildren[java.io.File]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; finishDefinition[java.io.File, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; finishChildren[java.io.File]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; null; current>
<not found; compose[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; finishChildren[java.io.File]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; null; result>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; finishChildren[java.io.File]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; null; current>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getName[]; java.lang.String; null; _definition>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; prefixString[boolean]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; toString[]; java.lang.String; null; this>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; toString[]; java.lang.String; null; resultBuffer>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; toString[]; java.lang.String; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; toString[]; java.lang.String; null; this>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; toString[]; java.lang.String; null; resultBuffer>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getFile[]; java.io.File; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; toString[]; java.lang.String; null; this>
<java.lang.StringBuffer; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; toString[]; java.lang.String; null; resultBuffer>
<com.puppycrawl.tools.checkstyle.api.TokenTypes; getTokenName[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; prefixString[boolean]; java.lang.String; null; TokenTypes>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; prefixString[boolean]; java.lang.String; null; this>
<not found; equalsIgnoreCase[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; prefixString[boolean]; java.lang.String; null; getText()>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; prefixString[boolean]; java.lang.String; equalsIgnoreCase[]; this>
<java.lang.StringBuffer; append[char]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; prefixString[boolean]; java.lang.String; null; b>
<java.lang.StringBuffer; append[java.lang.Object]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; prefixString[boolean]; java.lang.String; null; b>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; prefixString[boolean]; java.lang.String; null; this>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; prefixString[boolean]; java.lang.String; null; b>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; prefixString[boolean]; java.lang.String; null; b>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; prefixString[boolean]; java.lang.String; null; b>
<java.lang.StringBuffer; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; prefixString[boolean]; java.lang.String; null; b>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; prefixString[boolean]; java.lang.String; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getSpan[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; null; this>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getSpan[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; null; this>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getSpan[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; null; text>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getSpan[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getSpan[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getSpan[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getSpan[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getEnclosingNode[int, int]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; this>
<not found; contains[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getEnclosingNode[int, int]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; getSpan()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getSpan[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getEnclosingNode[int, int]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; contains[]; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getEnclosingNode[int, int]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getEnclosingNode[int, int]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getEnclosingNode[int, int]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; child>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getEnclosingNode[int, int]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; child>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getDetailNode[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST; null; detailAST>
<not found; create[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST; null; SymTabASTFactory>
<not found; setFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; setParent[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST; null; child>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; setFile[java.io.File]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST; null; child>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getFile[]; java.io.File; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getDetailNode[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST; null; detailAST>
<not found; create[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST; null; SymTabASTFactory>
<not found; setNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; setFile[java.io.File]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST; null; sibling>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getFile[]; java.io.File; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; setDetailNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; initialize[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; initialize[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST]; void; null; detailAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; initialize[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST]; void; null; detailAST>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; sibling>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; sibling>
<not found; put[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; setDetailNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ASTManager.getInstance()>
<not found; getInstance[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; setDetailNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; put[]; ASTManager>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; setStart[int, int]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; Span[int, int, int, int]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; setEnd[int, int]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; Span[int, int, int, int]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getStartLine[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; Span[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span]; void; null; span>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getStartColumn[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; Span[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span]; void; null; span>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getEndLine[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; Span[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span]; void; null; span>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getEndColumn[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; Span[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span]; void; null; span>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; contains[int, int]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; contains[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getStartLine[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; contains[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span]; boolean; null; span>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getStartColumn[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; contains[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span]; boolean; null; span>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; contains[int, int]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; contains[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getEndLine[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; contains[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span]; boolean; null; span>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getEndColumn[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; contains[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span]; boolean; null; span>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getStartLine[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; contains[int, int]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getStartLine[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; contains[int, int]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getStartColumn[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; contains[int, int]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getEndLine[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; contains[int, int]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getEndLine[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; contains[int, int]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getEndColumn[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; contains[int, int]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getStartLine[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; startsBefore[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getStartLine[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; startsBefore[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span]; boolean; null; span>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getStartLine[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; startsBefore[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getStartLine[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; startsBefore[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span]; boolean; null; span>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getStartColumn[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; startsBefore[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getStartColumn[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; startsBefore[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span]; boolean; null; span>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getEndLine[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; endsAfter[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getEndLine[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; endsAfter[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span]; boolean; null; span>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getEndLine[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; endsAfter[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getEndLine[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; endsAfter[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span]; boolean; null; span>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getEndColumn[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; endsAfter[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getEndColumn[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; endsAfter[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span]; boolean; null; span>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; startsBefore[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; compose[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span]; void; null; span>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; setStart[int, int]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; compose[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getStartLine[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; compose[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span]; void; null; span>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getStartColumn[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; compose[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span]; void; null; span>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; endsAfter[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; compose[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span]; void; null; span>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; setEnd[int, int]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; compose[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getEndLine[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; compose[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span]; void; null; span>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getEndColumn[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; compose[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span]; void; null; span>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getStartLine[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; equals[java.lang.Object]; boolean; null; span>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getStartLine[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; equals[java.lang.Object]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getStartColumn[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; equals[java.lang.Object]; boolean; null; span>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getStartColumn[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; equals[java.lang.Object]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getEndLine[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; equals[java.lang.Object]; boolean; null; span>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getEndLine[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; equals[java.lang.Object]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getEndColumn[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; equals[java.lang.Object]; boolean; null; span>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getEndColumn[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; equals[java.lang.Object]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getStartLine[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; toString[]; java.lang.String; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getStartColumn[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; toString[]; java.lang.String; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getEndLine[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; toString[]; java.lang.String; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; getEndColumn[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Span; toString[]; java.lang.String; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; clear[]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; addTree[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST]; void; null; this>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; addTree[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST]; void; null; mTrees>
<java.util.Map; clear[]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; clear[]; void; null; mCheckNodes>
<java.util.Map; clear[]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; clear[]; void; null; mTrees>
<java.util.Map; clear[]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; clear[]; void; null; mMap>
<not found; create[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; buildTree[]; void; null; SymTabASTFactory>
<java.util.Map; keySet[]; java.util.Set; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; buildTree[]; void; null; mTrees>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; buildTree[]; void; null; keys>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; buildTree[]; void; null; it>
<java.util.Iterator; next[]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; buildTree[]; void; null; it>
<java.util.Map; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; buildTree[]; void; null; mTrees>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; addToCompleteTree[java.io.File, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; buildTree[]; void; null; this>
<not found; getTable[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; buildTree[]; void; null; new TableMaker(mCompleteTree)>
<not found; create[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; addToCompleteTree[java.io.File, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST]; void; null; SymTabASTFactory>
<java.io.File; getAbsolutePath[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; addToCompleteTree[java.io.File, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST]; void; null; aFile>
<not found; setFile[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; addToCompleteTree[java.io.File, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST]; void; null; fileNode>
<not found; addChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; addToCompleteTree[java.io.File, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST]; void; null; mCompleteTree>
<not found; setParent[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; addToCompleteTree[java.io.File, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST]; void; null; fileNode>
<not found; create[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; addToCompleteTree[java.io.File, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST]; void; null; SymTabASTFactory>
<not found; setFile[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; addToCompleteTree[java.io.File, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST]; void; null; child>
<not found; addChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; addToCompleteTree[java.io.File, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST]; void; null; fileNode>
<not found; setParent[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; addToCompleteTree[java.io.File, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST]; void; null; child>
<not found; finishDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; addToCompleteTree[java.io.File, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST]; void; null; fileNode>
<java.util.Map; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; registerCheckNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AbstractUsageCheck, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST]; void; null; mCheckNodes>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; registerCheckNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AbstractUsageCheck, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST]; void; null; nodeSet>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; registerCheckNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AbstractUsageCheck, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST]; void; null; mCheckNodes>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; registerCheckNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AbstractUsageCheck, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST]; void; null; nodeSet>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; buildTree[]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; getCheckNodes[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AbstractUsageCheck]; java.util.Set; null; this>
<java.util.Map; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; getCheckNodes[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AbstractUsageCheck]; java.util.Set; null; mCheckNodes>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; put[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; mMap>
<java.util.Map; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; get[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; mMap>
<java.util.Map; clear[]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; clearDetailsMap[]; void; null; mMap>
<java.util.Map; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; isEmptyDetailsMap[]; boolean; null; mMap>
<java.util.Map; remove[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; removeCheck[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AbstractUsageCheck]; void; null; mCheckNodes>
<java.util.Map; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; removeCheck[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AbstractUsageCheck]; void; null; mCheckNodes>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; clear[]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; removeCheck[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AbstractUsageCheck]; void; null; this>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefaultConstructor; DefaultConstructor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef]; void; null; classConstructed>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefaultConstructor; equals[java.lang.Object]; boolean; null; getType()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefaultConstructor; getType[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefaultConstructor; equals[java.lang.Object]; boolean; equals[]; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefaultConstructor; getType[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefaultConstructor; equals[java.lang.Object]; boolean; null; constructor>
<java.util.List; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef; addParameter[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef]; void; null; parameters>
<not found; addDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef; addParameter[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef]; void; null; this>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef; hasSameSignature[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; boolean; null; getSignature()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef; getSignature[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef; hasSameSignature[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; boolean; equals[]; this>
<not found; isCompatibleWith[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef; hasCompatibleSignature[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; boolean; null; signature>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef; getSignature[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef; hasCompatibleSignature[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; boolean; null; this>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef; getSignature[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature; null; parameters>
<java.util.Vector; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef; getSignature[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature; null; argTypes>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef; getSignature[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature; null; getParameterAt(i)>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef; getParameterAt[int]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef; getSignature[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature; getType[]; this>
<java.util.List; get[int]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef; getParameterAt[int]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef; null; parameters>
<java.util.List; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef; addException[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; void; null; exceptions>
<java.util.List; toArray[java.lang.Object[]]; java.lang.Object[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef; getExceptions[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass[]; null; exceptions>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef; getSignature[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef; getQualifiedName[]; java.lang.String; null; this>
<java.lang.Class; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef; getLabelDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.LabelDef; null; getClass()>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef>; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef; getLabelDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.LabelDef; getName[]; this>
<not found; get[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef; getClass[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; classes>
<not found; get[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef; addDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IPackage]; void; null; elements>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef; addDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IPackage]; void; null; def>
<not found; put[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef; addDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IPackage]; void; null; elements>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef; addDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IPackage]; void; null; def>
<not found; setASTNodeClass[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef; addDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IPackage]; void; null; factory>
<java.lang.Class; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef; addDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IPackage]; void; null; SymTabAST.class>
<not found; create[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabASTFactory; create[int, java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; factory>
<not found; create[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabASTFactory; create[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; factory>
<java.lang.Class; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefaultScope; addDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IPackage]; void; null; getClass()>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefaultScope>; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefaultScope; addDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IPackage]; void; getName[]; this>
<not found; get[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefaultScope; getClassDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; classes>
<not found; getParentScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefaultScope; getClassDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<not found; getClassDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefaultScope; getClassDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; getParentScope()>
<not found; getParentScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefaultScope; getClassDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; getClassDefinition[]; this>
<not found; getParentScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefaultScope; getMethodDefinition[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; this>
<not found; getMethodDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefaultScope; getMethodDefinition[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; getParentScope()>
<not found; getParentScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefaultScope; getMethodDefinition[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; getMethodDefinition[]; this>
<not found; get[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefaultScope; getVariableDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IVariable; null; elements>
<not found; getParentScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefaultScope; getVariableDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IVariable; null; this>
<not found; getVariableDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefaultScope; getVariableDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IVariable; null; getParentScope()>
<not found; getParentScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefaultScope; getVariableDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IVariable; getVariableDefinition[]; this>
<not found; get[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefaultScope; getLabelDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.LabelDef; null; labels>
<not found; getParentScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefaultScope; getLabelDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.LabelDef; null; this>
<not found; getLabelDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefaultScope; getLabelDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.LabelDef; null; getParentScope()>
<not found; getParentScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DefaultScope; getLabelDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.LabelDef; getLabelDefinition[]; this>
<java.lang.reflect.Field; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalVariable; getName[]; java.lang.String; null; _javaField>
<not found; getQualifiedName[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalVariable; getQualifiedName[]; java.lang.String; null; new ExternalClass(_javaField.getDeclaringClass())>
<java.lang.reflect.Field; getDeclaringClass[]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalVariable; getQualifiedName[]; java.lang.String; getQualifiedName[]; _javaField>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalVariable; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalVariable; getQualifiedName[]; java.lang.String; null; this>
<java.lang.Class; isArray[]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalVariable; getType[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; _javaField.getType()>
<java.lang.reflect.Field; getType[]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalVariable; getType[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; isArray[]; _javaField>
<java.lang.Class; getComponentType[]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalVariable; getType[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; _javaField.getType()>
<java.lang.reflect.Field; getType[]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalVariable; getType[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; getComponentType[]; _javaField>
<java.lang.reflect.Field; getType[]; java.lang.Class<?>; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalVariable; getType[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; _javaField>
<java.util.Vector; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.UnknownClass; getReferences[]; java.util.Iterator; null; new Vector()>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.UnknownClass; equals[java.lang.Object]; boolean; null; other.getName()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.UnknownClass; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.UnknownClass; equals[java.lang.Object]; boolean; equals[java.lang.Object]; other>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.UnknownClass; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.UnknownClass; equals[java.lang.Object]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.UnknownClass; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.UnknownClass; toString[]; java.lang.String; null; this>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceTool; walkChildren[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; node>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceTool; walkSelfAndSiblings[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceTool; walkChildren[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceTool; walkChildren[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; node>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceTool; handleNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceTool; walkSelfAndSiblings[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceTool; walkSelfAndSiblings[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; node>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceTool; handleNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceTool; walkSelfAndSiblings[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceTool; walkSelfAndSiblings[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; sibling>
<not found; getLineNo[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; getLine[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; int; null; indexedNode>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; getLine[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; int; null; indexedNode>
<not found; getLineNo[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; getLine[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; int; null; indexedNode>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; getLine[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; int; null; indexedNode>
<not found; getLineNo[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; getLine[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; int; null; indexedNode>
<not found; getColumnNo[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; getColumn[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; int; null; indexedNode>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; getColumn[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; int; null; indexedNode>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; getColumn[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; int; null; indexedNode>
<not found; getColumnNo[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; getColumn[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; int; null; indexedNode>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; getColumn[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; int; null; indexedNode>
<not found; getColumnNo[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; getColumn[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; int; null; indexedNode>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; constructDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; java.lang.String; null; tree>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; constructDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; java.lang.String; null; tree>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; constructDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; java.lang.String; null; left>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; constructDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; constructDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; java.lang.String; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; constructDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; constructDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; java.lang.String; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; constructDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; java.lang.String; null; tree>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; constructDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; java.lang.String; null; tree>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; constructDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; java.lang.String; null; left>
<java.lang.StringBuffer; append[java.lang.Object]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; constructDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; java.lang.String; null; buf>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; constructDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; constructDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; java.lang.String; null; this>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; constructDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; java.lang.String; null; buf>
<java.lang.StringBuffer; append[java.lang.Object]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; constructDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; java.lang.String; null; buf>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; constructDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; constructDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; java.lang.String; null; this>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; constructDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; java.lang.String; null; buf>
<java.lang.StringBuffer; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; constructDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; java.lang.String; null; buf>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; constructDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; java.lang.String; null; tree>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; constructDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; constructDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; java.lang.String; null; this>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; constructDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; java.lang.String; null; tree>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; constructDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; java.lang.String; null; tree>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; constructDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; constructPackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; java.lang.String; null; this>
<java.lang.String; substring[int, int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; constructPackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; java.lang.String; null; fullName>
<java.lang.String; lastIndexOf[java.lang.String]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; constructPackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; java.lang.String; null; fullName>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; constructDottedName[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; constructClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; java.lang.String; null; this>
<java.lang.String; substring[int, int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; constructClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; java.lang.String; null; fullName>
<java.lang.String; lastIndexOf[java.lang.String]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; constructClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; java.lang.String; null; fullName>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; constructClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; java.lang.String; null; fullName>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; treesBelowFilesAreEqual[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, java.io.File[], com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, java.io.File[]]; boolean; null; getFileNode(firstRoot,firstFiles[i])>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; getFileNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, java.io.File]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; treesBelowFilesAreEqual[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, java.io.File[], com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, java.io.File[]]; boolean; getFirstChild[]; this>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; treesBelowFilesAreEqual[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, java.io.File[], com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, java.io.File[]]; boolean; null; getFileNode(secondRoot,secondFiles[i])>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; getFileNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, java.io.File]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; treesBelowFilesAreEqual[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, java.io.File[], com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, java.io.File[]]; boolean; getFirstChild[]; this>
<not found; equalsList[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; treesBelowFilesAreEqual[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, java.io.File[], com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, java.io.File[]]; boolean; null; firstTree>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; getFileNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, java.io.File]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; root>
<java.io.File; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; getFileNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, java.io.File]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; file>
<not found; getFile[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; getFileNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, java.io.File]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; fileNode>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTUtil; getFileNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, java.io.File]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; fileNode>
<not found; getFile[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition; Definition[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; _node>
<not found; getLine[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition; Definition[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; ASTUtil>
<not found; getColumn[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition; Definition[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; ASTUtil>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition; addReference[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference]; void; null; _references>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition; getReferences[]; java.util.Iterator; null; _references>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition; getNumReferences[]; int; null; _references>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition; getParentScope[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition; getQualifiedName[]; java.lang.String; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition; getParentScope[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition; getQualifiedName[]; java.lang.String; null; this>
<not found; getQualifiedName[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition; getQualifiedName[]; java.lang.String; null; getParentScope()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition; getParentScope[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition; getQualifiedName[]; java.lang.String; getQualifiedName[]; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition; getParentScope[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition; getEnclosingClass[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; null; this>
<not found; getEnclosingClass[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition; getEnclosingClass[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; null; getParentScope()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition; getParentScope[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition; getEnclosingClass[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getEnclosingClass[]; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition; getParentScope[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition; getEnclosingPackage[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IPackage; null; this>
<not found; getEnclosingPackage[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition; getEnclosingPackage[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IPackage; null; getParentScope()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition; getParentScope[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition; getEnclosingPackage[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IPackage; getEnclosingPackage[]; this>
<java.lang.Class; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition; toString[]; java.lang.String; null; getClass()>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition>; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition; toString[]; java.lang.String; getName[]; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition; getQualifiedName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition; toString[]; java.lang.String; null; this>
<java.lang.Class; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition; compareTo[java.lang.Object]; int; null; o.getClass()>
<java.lang.Object; getClass[]; java.lang.Class<? extends java.lang.Object>; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition; compareTo[java.lang.Object]; int; getName[]; o>
<java.lang.String; compareTo[java.lang.String]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition; compareTo[java.lang.Object]; int; null; getQualifiedName()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition; getQualifiedName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition; compareTo[java.lang.Object]; int; compareTo[java.lang.String]; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition; getQualifiedName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition; compareTo[java.lang.Object]; int; null; ((Definition)o)>
<java.lang.Class; isArray[]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalSignature; ExternalSignature[java.lang.Class[]]; void; null; parameters[i]>
<java.lang.Class; getComponentType[]; java.lang.Class; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalSignature; ExternalSignature[java.lang.Class[]]; void; null; parameters[i]>
<not found; getParameters[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalSignature; isCompatibleWith[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; boolean; null; signature>
<not found; isCompatibleWith[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalSignature; isCompatibleWith[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; boolean; null; getParameters()[i]>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalSignature; getParameters[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalSignature; isCompatibleWith[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; boolean; isCompatibleWith[]; this>
<not found; getParameters[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalSignature; isCompatibleWith[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; boolean; null; signature>
<java.util.Arrays; equals[long[], long[]]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalSignature; isSame[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; boolean; null; java.util.Arrays>
<not found; getParameters[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalSignature; isSame[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; boolean; null; signature>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalSignature; toString[]; java.lang.String; null; result>
<java.lang.StringBuffer; append[java.lang.Object]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalSignature; toString[]; java.lang.String; null; result>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalSignature; toString[]; java.lang.String; null; result>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalSignature; toString[]; java.lang.String; null; result>
<java.lang.StringBuffer; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalSignature; toString[]; java.lang.String; null; result>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; addDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; ClassDef[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<java.util.Vector; clone[]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; addUnprocessedImports[java.util.Vector]; void; null; aImports>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; importPackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IPackage]; void; null; importedPackages>
<java.util.Hashtable; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; importClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; void; null; imports>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; importClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; void; null; imported>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; addDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef]; void; null; method.getName()>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; addDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef]; void; equals[]; method>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; addDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef]; void; null; this>
<java.util.Set; remove[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; addDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef]; void; null; methods>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; addDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef]; void; null; methods>
<java.util.Vector; addAll[java.util.Collection]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getDefinitions[]; java.util.Enumeration; null; allElements>
<not found; values[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getDefinitions[]; java.util.Enumeration; null; elements>
<java.util.Vector; addAll[java.util.Collection]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getDefinitions[]; java.util.Enumeration; null; allElements>
<java.util.Vector; addAll[java.util.Collection]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getDefinitions[]; java.util.Enumeration; null; allElements>
<not found; values[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getDefinitions[]; java.util.Enumeration; null; labels>
<java.util.Vector; addAll[java.util.Collection]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getDefinitions[]; java.util.Enumeration; null; allElements>
<not found; values[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getDefinitions[]; java.util.Enumeration; null; classes>
<java.util.Vector; elements[]; java.util.Enumeration; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getDefinitions[]; java.util.Enumeration; null; allElements>
<not found; get[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getClassDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; classes>
<java.util.Hashtable; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getClassDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; imports>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getClassDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; importedPackages>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getClassDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; it>
<java.util.Iterator; next[]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getClassDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; it>
<not found; getClass[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getClassDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; pkg>
<not found; getClassDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getClassDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; getParentScope()>
<not found; getParentScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getClassDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; getClassDefinition[]; this>
<not found; getQualifiedName[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getClassDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; getParentScope()>
<not found; getParentScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getClassDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; getQualifiedName[]; this>
<not found; loadClass[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getClassDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; ClassManager.getClassLoader()>
<not found; getClassLoader[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getClassDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; loadClass[]; ClassManager>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getDeclaredMethod[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getMethodDefinition[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getMostCompatibleMethod[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getMethodDefinition[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; this>
<not found; getMethodDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getMethodDefinition[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; superclass>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getInterfaces[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getMethodDefinition[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; this>
<not found; getMethodDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getMethodDefinition[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; myInterfaces[index]>
<not found; getParentScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getMethodDefinition[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; this>
<not found; getMethodDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getMethodDefinition[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; getParentScope()>
<not found; getParentScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getMethodDefinition[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; getMethodDefinition[]; this>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getMostCompatibleMethod[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; methods>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getMostCompatibleMethod[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; it>
<java.util.Iterator; next[]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getMostCompatibleMethod[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; it>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getMostCompatibleMethod[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; name>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getMostCompatibleMethod[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; method>
<not found; hasCompatibleSignature[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getMostCompatibleMethod[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; method>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getMostCompatibleMethod[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; compatibleMethods>
<java.util.Set; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getMostCompatibleMethod[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; compatibleMethods>
<java.util.SortedSet; first[]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getMostCompatibleMethod[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; compatibleMethods>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getDeclaredMethod[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; methods>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getDeclaredMethod[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; it>
<java.util.Iterator; next[]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getDeclaredMethod[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; it>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getDeclaredMethod[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; name>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getDeclaredMethod[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; method>
<not found; hasSameSignature[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getDeclaredMethod[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; method>
<not found; get[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getVariableDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IVariable; null; elements>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getInterfaces[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getVariableDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IVariable; null; this>
<not found; getVariableDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getVariableDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IVariable; null; superinterfaces[i]>
<not found; getVariableDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getVariableDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IVariable; null; superclass>
<not found; getParentScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getVariableDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IVariable; null; this>
<not found; getVariableDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getVariableDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IVariable; null; getParentScope()>
<not found; getParentScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getVariableDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IVariable; getVariableDefinition[]; this>
<java.util.List; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; addInterface[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; void; null; interfaces>
<java.util.List; toArray[java.lang.Object[]]; java.lang.Object[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getInterfaces[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass[]; null; interfaces>
<java.util.List; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; addSubclass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef]; void; null; subclasses>
<java.util.List; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; addImplementor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef]; void; null; implementors>
<not found; getClasses[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getInnerClasses[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass[]; null; this>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getInnerClasses[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass[]; null; it>
<java.util.List; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getInnerClasses[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass[]; null; result>
<java.util.Iterator; next[]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getInnerClasses[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass[]; null; it>
<java.util.List; toArray[java.lang.Object[]]; java.lang.Object[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getInnerClasses[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass[]; null; result>
<java.util.List; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; isSuperclassOf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; boolean; null; subclasses>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; isCompatibleWith[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; boolean; null; type>
<not found; isCompatibleWith[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; isCompatibleWith[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; boolean; null; superclass>
<java.util.List; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; isCompatibleWith[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; boolean; null; interfaces>
<java.util.List; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; isCompatibleWith[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; boolean; null; interfaces>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; isCompatibleWith[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; boolean; null; it>
<java.util.Iterator; next[]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; isCompatibleWith[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; boolean; null; it>
<not found; isCompatibleWith[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; isCompatibleWith[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; boolean; null; current>
<not found; loadClass[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalPackage; getClass[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; ClassManager.getClassLoader()>
<not found; getClassLoader[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalPackage; getClass[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; loadClass[]; ClassManager>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalPackage; getQualifiedName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalPackage; getClass[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalPackage; addDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IPackage]; void; null; _packages>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalPackage; addDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IPackage]; void; null; pkg>
<java.lang.StringBuffer; append[java.lang.Object]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalPackage; getQualifiedName[]; java.lang.String; null; result>
<not found; getQualifiedName[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalPackage; getQualifiedName[]; java.lang.String; null; _parent>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalPackage; getQualifiedName[]; java.lang.String; null; result>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalPackage; getQualifiedName[]; java.lang.String; null; result>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalPackage; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalPackage; getQualifiedName[]; java.lang.String; null; this>
<java.lang.StringBuffer; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalPackage; getQualifiedName[]; java.lang.String; null; result>
<not found; getSuperclass[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ArrayDef; getSuperclass[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; getType()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ArrayDef; getType[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ArrayDef; getSuperclass[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; getSuperclass[]; this>
<not found; getMethodDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ArrayDef; getMethodDefinition[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; new ExternalClass(Object.class)>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ArrayDef; getVariableDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IVariable; null; name>
<java.util.Vector; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ArrayDef; getReferences[]; java.util.Iterator; null; new Vector()>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ArrayDef; isCompatibleWith[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; boolean; null; type>
<not found; isCompatibleWith[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ArrayDef; isCompatibleWith[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; boolean; null; getType()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ArrayDef; getType[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ArrayDef; isCompatibleWith[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; boolean; isCompatibleWith[]; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ArrayDef; getType[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ArrayDef; isCompatibleWith[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; boolean; null; ((ArrayDef)type)>
<not found; isSourced[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ArrayDef; isSourced[]; boolean; null; getType()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ArrayDef; getType[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ArrayDef; isSourced[]; boolean; isSourced[]; this>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ArrayDef; getName[]; java.lang.String; null; getType()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ArrayDef; getType[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ArrayDef; getName[]; java.lang.String; getName[]; this>
<not found; getQualifiedName[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ArrayDef; getQualifiedName[]; java.lang.String; null; getType()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ArrayDef; getType[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ArrayDef; getQualifiedName[]; java.lang.String; getQualifiedName[]; this>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ArrayDef; equals[java.lang.Object]; boolean; null; getType()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ArrayDef; getType[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ArrayDef; equals[java.lang.Object]; boolean; equals[]; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ArrayDef; getType[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ArrayDef; equals[java.lang.Object]; boolean; null; compared>
<not found; hashCode[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ArrayDef; hashCode[]; int; null; getType()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ArrayDef; getType[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ArrayDef; hashCode[]; int; hashCode[]; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ArrayDef; getQualifiedName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ArrayDef; toString[]; java.lang.String; null; this>
<not found; getAbsolutePath[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; lookup[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; null; occ.getFile()>
<not found; getFile[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; lookup[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; getAbsolutePath[]; occ>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; getFileVector[java.lang.String]; java.util.Vector; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; lookup[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; findScope[java.util.Vector, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; lookup[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; null; this>
<java.util.Vector; elementAt[int]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; findScope[java.util.Vector, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; null; scopeList>
<not found; contains[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; findScope[java.util.Vector, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; null; bestSoFar.getTreeNode().getSpan()>
<not found; getSpan[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; findScope[java.util.Vector, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; contains[]; bestSoFar.getTreeNode()>
<not found; getTreeNode[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; findScope[java.util.Vector, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; getSpan[]; bestSoFar>
<not found; getLine[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; findScope[java.util.Vector, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; null; occ>
<not found; getColumn[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; findScope[java.util.Vector, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; null; occ>
<java.util.Vector; elementAt[int]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; findScope[java.util.Vector, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; null; scopeList>
<java.util.Vector; size[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; findScope[java.util.Vector, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; null; scopeList>
<java.util.Vector; elementAt[int]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; findScope[java.util.Vector, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; null; scopeList>
<not found; contains[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; findScope[java.util.Vector, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; null; currentScope.getTreeNode().getSpan()>
<not found; getSpan[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; findScope[java.util.Vector, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; contains[]; currentScope.getTreeNode()>
<not found; getTreeNode[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; findScope[java.util.Vector, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; getSpan[]; currentScope>
<not found; getLine[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; findScope[java.util.Vector, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; null; occ>
<not found; getColumn[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; findScope[java.util.Vector, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; null; occ>
<not found; contains[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; findScope[java.util.Vector, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; null; bestSoFar.getTreeNode().getSpan()>
<not found; getSpan[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; findScope[java.util.Vector, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; contains[]; bestSoFar.getTreeNode()>
<not found; getTreeNode[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; findScope[java.util.Vector, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; getSpan[]; bestSoFar>
<not found; getSpan[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; findScope[java.util.Vector, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; null; currentScope.getTreeNode()>
<not found; getTreeNode[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; findScope[java.util.Vector, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; getSpan[]; currentScope>
<not found; getTreeNode[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; addScope[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; null; scope>
<not found; getFile[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; addScope[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; null; SymTabAST>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; getFileVector[java.lang.String]; java.util.Vector; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; addScope[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; null; this>
<not found; getAbsolutePath[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; addScope[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; null; scope.getTreeNode().getFile()>
<not found; getFile[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; addScope[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; getAbsolutePath[]; scope.getTreeNode()>
<not found; getTreeNode[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; addScope[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; getFile[]; scope>
<java.util.Vector; addElement[java.lang.Object]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; addScope[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; null; fileVector>
<java.util.Hashtable; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; getFileVector[java.lang.String]; java.util.Vector; null; indexOfFiles>
<java.util.Hashtable; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; getFileVector[java.lang.String]; java.util.Vector; null; indexOfFiles>
<java.lang.ClassLoader; getSystemClassLoader[]; java.lang.ClassLoader; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; getFileVector[java.lang.String]; java.util.Vector; null; ClassLoader>
<not found; getTree[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceCounter; ReferenceCounter[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable]; void; null; table>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceCounter; countReferences[]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceCounter; ReferenceCounter[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable]; void; null; this>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceCounter; numberOfReferences[]; int; null; _references>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceCounter; numberOfResolvedReferences[]; int; null; _resolvedReferences>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceCounter; numberOfUnresolvedReferences[]; int; null; _unresolvedReferences>
<java.util.List; listIterator[]; java.util.ListIterator; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceCounter; getUnresolvedReferences[]; java.util.ListIterator; null; _unresolvedReferences>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceCounter; handleNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceCounter; countReferences[]; void; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceCounter; handleNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; node>
<not found; isMeaningful[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceCounter; handleNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; node>
<java.util.List; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceCounter; handleNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; _references>
<not found; getDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceCounter; handleNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; node>
<not found; getDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceCounter; handleNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; node>
<java.util.List; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceCounter; handleNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; _resolvedReferences>
<java.util.List; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceCounter; handleNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; _unresolvedReferences>
<not found; walkChildren[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceCounter; handleNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable; pushScope[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable; SymbolTable[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<java.util.Stack; peek[]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable; getCurrentScope[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; null; scopes>
<java.util.Stack; push[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable; pushScope[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; null; scopes>
<java.util.Stack; pop[]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable; popScope[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; null; scopes>
<java.util.Hashtable; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable; getPackage[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef; null; packages>
<not found; addDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable; definePackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; null; parent>
<java.util.Hashtable; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable; definePackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; null; packages>
<not found; getQualifiedName[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable; definePackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; null; pkg>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable; indexScope[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable; defineClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef]; void; null; this>
<not found; addDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable; defineClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef]; void; null; getCurrentScope()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable; getCurrentScope[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable; defineClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef]; void; addDefinition[]; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable; indexScope[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable; defineMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef]; void; null; this>
<not found; addDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable; defineMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef]; void; null; ((ClassDef)getCurrentScope())>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable; getCurrentScope[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable; defineMethod[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef]; void; addDefinition[]; this>
<not found; addDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable; defineVariable[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef]; void; null; getCurrentScope()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable; getCurrentScope[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable; defineVariable[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef]; void; addDefinition[]; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable; indexScope[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable; defineBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; this>
<not found; addDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable; defineBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; getCurrentScope()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable; getCurrentScope[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable; defineBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; addDefinition[]; this>
<not found; addDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable; defineLabel[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.LabelDef]; void; null; getCurrentScope()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable; getCurrentScope[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable; defineLabel[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.LabelDef]; void; addDefinition[]; this>
<not found; addScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable; indexScope[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; null; index>
<not found; getTree[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceThreshold; ReferenceThreshold[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable, int]; void; null; table>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceThreshold; go[]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceThreshold; ReferenceThreshold[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable, int]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceThreshold; collectUnderreferencedDefinitions[]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceThreshold; go[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceThreshold; handleNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceThreshold; collectUnderreferencedDefinitions[]; void; null; this>
<not found; isMeaningful[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceThreshold; handleNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; node>
<not found; getDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceThreshold; handleNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; node>
<not found; getNumReferences[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceThreshold; handleNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; def>
<not found; indexOf[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceThreshold; handleNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; def.getQualifiedName()>
<not found; getQualifiedName[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceThreshold; handleNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; indexOf[]; def>
<not found; indexOf[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceThreshold; handleNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; def.getQualifiedName()>
<not found; getQualifiedName[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceThreshold; handleNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; indexOf[]; def>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceThreshold; handleNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; _underreferencedDefinitions>
<not found; walkChildren[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceThreshold; handleNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabASTIterator; SymTabASTIterator[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; parent>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabASTIterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabASTIterator; next[]; java.lang.Object; null; this>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabASTIterator; next[]; java.lang.Object; null; _current>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabASTIterator; next[]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabASTIterator; nextChild[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; createDefinitions[]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; getTable[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; resolveReferences[]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; getTable[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; createDefinitions[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; finishCreatingDefinitions[]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; createDefinitions[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; finishCreatingDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; finishCreatingDefinitions[]; void; null; this>
<not found; getBaseScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; finishCreatingDefinitions[]; void; null; symbolTable>
<not found; finishMakingDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; finishCreatingDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition]; void; null; innerClass>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker$ClassFinisher; finish[]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; finishCreatingDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition]; void; null; new ClassFinisher(def)>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker$VariableFinisher; finish[]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; finishCreatingDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition]; void; null; new VariableFinisher(def)>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker$MethodFinisher; finish[]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; finishCreatingDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition]; void; null; new MethodFinisher(def)>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; finishCreatingDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition]; void; null; def.getTreeNode()>
<not found; getTreeNode[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; finishCreatingDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition]; void; getFirstChild[]; def>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; finishCreatingDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition]; void; null; firstChild>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; finishCreatingDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition]; void; null; firstChild>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; finishCreatingDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition]; void; null; firstChild>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker$CatchFinisher; finish[]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; finishCreatingDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition]; void; null; new CatchFinisher((BlockDef)def)>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; finishCreatingChildren[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; finishCreatingDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition]; void; null; this>
<not found; getDefinitions[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; finishCreatingChildren[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; null; scope>
<java.util.Enumeration; hasMoreElements[]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; finishCreatingChildren[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; null; definitions>
<java.util.Enumeration; nextElement[]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; finishCreatingChildren[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; null; definitions>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; finishCreatingDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; finishCreatingChildren[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; null; this>
<not found; resolve[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; resolveReferences[]; void; null; new Resolver(symbolTable)>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkSiblings[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[]; void; null; this>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[]; void; null; _tree>
<not found; setScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; tree>
<not found; getCurrentScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; symbolTable>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; tree>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processFile[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; tree.getFirstChild()>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; getType[]; tree>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processImplicitPackage[java.io.File]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; this>
<not found; getFile[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; tree>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkSiblings[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; this>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; tree>
<not found; popScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; symbolTable>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; clearImports[]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; this>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; symtabTree>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; symtabTree>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; symtabTree>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processAnonymousInnerClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkSiblings[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; this>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; tree>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processConstructorDef[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processMethodDef[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processFinally[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processTry[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processVariableDef[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processPackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processLabel[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processImport[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processIf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processAssert[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkSiblings[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; this>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; tree>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; makeBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processAssert[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processAssert[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; tree>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processAssert[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; expr>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processAssert[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; message>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processAssert[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; message>
<not found; pushScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processAssert[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; symbolTable>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processAssert[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processAssert[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<not found; popScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processAssert[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; symbolTable>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkSiblings[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; this>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkSiblings[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; tree>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processPackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; tree>
<not found; constructDottedName[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processPackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; ASTUtil>
<not found; ignoreChildren[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processPackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; firstChild>
<not found; getPackage[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processPackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; symbolTable>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; createPackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processPackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processPackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; tree>
<not found; pushScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processPackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; symbolTable>
<java.io.File; getParent[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processImplicitPackage[java.io.File]; void; null; file>
<not found; getPackage[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processImplicitPackage[java.io.File]; void; null; symbolTable>
<not found; getBaseScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processImplicitPackage[java.io.File]; void; null; symbolTable>
<not found; definePackage[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processImplicitPackage[java.io.File]; void; null; symbolTable>
<not found; getBaseScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processImplicitPackage[java.io.File]; void; null; symbolTable>
<not found; pushScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processImplicitPackage[java.io.File]; void; null; symbolTable>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; createPackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef; null; tree>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; createPackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef; null; tree>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; createPackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef; null; leftChild>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; createPackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; createPackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; getPackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; createPackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; getPackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; createPackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef; null; this>
<not found; getBaseScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; createPackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef; null; symbolTable>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; getPackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef; null; tree>
<not found; getPackage[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; getPackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef; null; symbolTable>
<not found; getQualifiedName[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; getPackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef; null; parent>
<not found; getPackage[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; getPackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef; null; symbolTable>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; getPackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef; null; tree>
<not found; definePackage[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; getPackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef; null; symbolTable>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; setCurrentFile[java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processFile[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processFile[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; tree>
<java.util.Vector; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processImport[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; imports>
<java.util.Vector; clear[]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; clearImports[]; void; null; imports>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processLabel[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; tree.findFirstToken(TokenTypes.IDENT)>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processLabel[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; getText[]; tree>
<not found; getCurrentScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processLabel[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; symbolTable>
<not found; defineLabel[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processLabel[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; symbolTable>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processLabel[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processLabel[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; tree.getFirstChild()>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processLabel[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; getNextSibling[]; tree>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; tree.findFirstToken(TokenTypes.IDENT)>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; getText[]; tree>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; makeClass[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; tree>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; objblock>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; start>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; start>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkSiblings[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<not found; popScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; symbolTable>
<not found; getCurrentScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; makeClass[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; symbolTable>
<not found; addUnprocessedImports[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; makeClass[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; def>
<not found; defineClass[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; makeClass[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; symbolTable>
<not found; pushScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; makeClass[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; symbolTable>
<not found; getCurrentScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processAnonymousInnerClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; symbolTable>
<not found; defineClass[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processAnonymousInnerClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; symbolTable>
<not found; pushScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processAnonymousInnerClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; symbolTable>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkSiblings[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processAnonymousInnerClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processAnonymousInnerClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; objblock>
<not found; popScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processAnonymousInnerClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; symbolTable>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; makeVariableDef[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processVariableDef[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<not found; getCurrentScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processVariableDef[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; symbolTable>
<not found; defineVariable[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processVariableDef[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; symbolTable>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processVariableDef[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; tree>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processVariableDef[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processVariableDef[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; assignmentNode>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; makeVariableDef[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef; null; tree.findFirstToken(TokenTypes.IDENT)>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; makeVariableDef[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef; getText[]; tree>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; makeBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processTry[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processTry[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; tree>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processTry[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; slist>
<not found; pushScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processTry[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; symbolTable>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processTry[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<not found; popScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processTry[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; symbolTable>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkSiblings[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processTry[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; makeBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processFinally[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processFinally[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; tree>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processFinally[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; tree>
<not found; pushScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processFinally[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; symbolTable>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processFinally[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<not found; popScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processFinally[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; symbolTable>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processFinally[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processMethodDef[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; tree.findFirstToken(TokenTypes.IDENT)>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processMethodDef[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; getText[]; tree>
<not found; getCurrentScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processMethodDef[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; symbolTable>
<not found; defineMethod[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processMethodDef[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; symbolTable>
<not found; pushScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processMethodDef[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; symbolTable>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processMethodDef[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processMethodDef[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; tree>
<not found; popScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processMethodDef[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; symbolTable>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processMethodDef[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processConstructorDef[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; makeBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<not found; pushScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; symbolTable>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; tree>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; forEach>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; tree>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; tree>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; tree>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; forIter>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; body>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; body>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<not found; popScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processFor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; symbolTable>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; makeBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processIf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processIf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; tree>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processIf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; expr>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processIf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; ifBranch>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processIf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; ifBranch>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processIf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; ifBranch>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processIf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; elseBranch>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processIf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; elseBranch>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processIf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; elseBranch>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processIf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; elseBranch>
<not found; pushScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processIf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; symbolTable>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processIf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processIf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<not found; popScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processIf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; symbolTable>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processElse[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processIf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processElse[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; tree>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processIf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processElse[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; makeElseBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processElse[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; makeElseBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; tree>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; makeBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; makeElseBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<not found; pushScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; makeElseBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; symbolTable>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; makeElseBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<not found; popScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; makeElseBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; symbolTable>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkTree[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; makeElseBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; makeBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; this>
<not found; pushScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; symbolTable>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; tree>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; child>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; child>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; walkSiblings[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; this>
<not found; popScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, boolean]; void; null; symbolTable>
<not found; setCurrentFile[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; setCurrentFile[java.lang.String]; void; null; symbolTable>
<not found; getCurrentScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; makeBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef; null; symbolTable>
<not found; defineBlock[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; makeBlock[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef; null; symbolTable>
<not found; getTreeNode[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; getExtendsNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; classDef>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; getExtendsNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; classDefTreeNode>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; getExtendsNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; extendsClause>
<not found; getTreeNode[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.DefinitionFinisher; DefinitionFinisher[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition]; void; null; def>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.DefinitionFinisher; getType[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; typeNode.getFirstChild()>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.DefinitionFinisher; getType[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; getType[]; typeNode>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.DefinitionFinisher; getType[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; typeNode.getFirstChild()>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.DefinitionFinisher; getType[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; getFirstChild[]; typeNode>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.DefinitionFinisher; getType[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; typeNode>
<not found; getParentScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.DefinitionFinisher; getType[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; def>
<not found; resolveClass[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.DefinitionFinisher; getType[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; resolver>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker$ClassFinisher; addImports[]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; finish[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker$ClassFinisher; setSuperclass[]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; finish[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker$ClassFinisher; addInterfaces[]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; finish[]; void; null; this>
<not found; addDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addImports[]; void; null; java>
<not found; importPackage[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addImports[]; void; null; _def>
<not found; getUnprocessedImports[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addImports[]; void; null; _def>
<java.util.Vector; size[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addImports[]; void; null; unprocessedImports>
<java.util.Vector; get[int]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addImports[]; void; null; unprocessedImports>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addImports[]; void; null; importNode>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addImports[]; void; null; imported.getFirstChild()>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addImports[]; void; getNextSibling[]; imported>
<not found; hasNext[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addImports[]; void; null; it>
<not found; nextNode[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addImports[]; void; null; it>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addImports[]; void; null; current>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addImports[]; void; null; current.getText()>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addImports[]; void; equals[]; current>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addImports[]; void; null; current>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker$ClassFinisher; findOrLoadClass[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addImports[]; void; null; this>
<not found; hasNext[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addImports[]; void; null; it>
<not found; hasNext[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addImports[]; void; null; it>
<not found; nextNode[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addImports[]; void; null; it>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addImports[]; void; null; current.getText()>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addImports[]; void; equals[]; current>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker$ClassFinisher; importInnerClasses[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addImports[]; void; null; this>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addImports[]; void; null; current>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker$ClassFinisher; findOrLoadClass[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addImports[]; void; null; this>
<not found; importClass[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addImports[]; void; null; _def>
<not found; importClass[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addImports[]; void; null; _def>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addImports[]; void; null; current.getText()>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addImports[]; void; equals[]; current>
<not found; getPackage[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addImports[]; void; null; symbolTable>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker$ClassFinisher; getPackage[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalPackage; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addImports[]; void; null; this>
<not found; importPackage[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addImports[]; void; null; _def>
<not found; ignoreChildren[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addImports[]; void; null; imported>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addImports[]; void; null; lastPart>
<not found; setDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addImports[]; void; null; lastPart>
<not found; setMeaningfulness[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addImports[]; void; null; lastPart>
<not found; getInnerClasses[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; importInnerClasses[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; void; null; outerClass>
<not found; importClass[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; importInnerClasses[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; void; null; _def>
<not found; loadClass[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; loadClass[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; ClassManager.getClassLoader()>
<not found; getClassLoader[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; loadClass[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; loadClass[]; ClassManager>
<not found; getClassDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; findOrLoadClass[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; symbolTable.getBaseScope()>
<not found; getBaseScope[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; findOrLoadClass[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; getClassDefinition[]; symbolTable>
<java.lang.String; lastIndexOf[java.lang.String]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; findOrLoadClass[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; className>
<java.lang.String; lastIndexOf[java.lang.String]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; findOrLoadClass[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; className>
<not found; getClassDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; findOrLoadClass[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; parentClass>
<java.lang.String; substring[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; findOrLoadClass[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; className>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker$ClassFinisher; loadClass[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; findOrLoadClass[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; setSuperclass[]; void; null; _def.getTreeNode()>
<not found; getTreeNode[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; setSuperclass[]; void; getType[]; _def>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; getExtendsNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; setSuperclass[]; void; null; this>
<not found; constructDottedName[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; setSuperclass[]; void; null; ASTUtil>
<not found; getClassDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; setSuperclass[]; void; null; _def>
<not found; setSuperclass[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; setSuperclass[]; void; null; _def>
<not found; addSubclass[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; setSuperclass[]; void; null; superclass>
<not found; setSuperclass[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; setSuperclass[]; void; null; _def>
<not found; setSuperclass[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; setSuperclass[]; void; null; _def>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addInterfaces[]; void; null; _def.getTreeNode()>
<not found; getTreeNode[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addInterfaces[]; void; getType[]; _def>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addInterfaces[]; void; null; _node>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addInterfaces[]; void; null; _node>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addInterfaces[]; void; null; implementsClause>
<not found; getClassDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addInterfaces[]; void; null; _def>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addInterfaces[]; void; null; interfaceNode>
<not found; addInterface[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addInterfaces[]; void; null; _def>
<not found; addImplementor[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addInterfaces[]; void; null; implemented>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addInterfaces[]; void; null; interfaceNode>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.VariableFinisher; finish[]; void; null; _node>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.VariableFinisher; finish[]; void; null; typeNode>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.VariableFinisher; finish[]; void; null; typeTextNode>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.VariableFinisher; finish[]; void; null; typeTextNode>
<not found; setLine[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.VariableFinisher; finish[]; void; null; typeTextNode>
<not found; getLine[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.VariableFinisher; finish[]; void; null; ASTUtil>
<not found; getTreeNode[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.VariableFinisher; finish[]; void; null; _def>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker$DefinitionFinisher; getType[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.VariableFinisher; finish[]; void; null; this>
<not found; setType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.VariableFinisher; finish[]; void; null; _def>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker$MethodFinisher; setReturnType[]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.MethodFinisher; finish[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker$MethodFinisher; setSignature[]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.MethodFinisher; finish[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker$MethodFinisher; setExceptionsThrown[]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.MethodFinisher; finish[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker$MethodFinisher; isConstructor[]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.MethodFinisher; setReturnType[]; void; null; this>
<not found; getEnclosingClass[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.MethodFinisher; setReturnType[]; void; null; _def>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker$DefinitionFinisher; getType[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.MethodFinisher; setReturnType[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker$MethodFinisher; getTypeNode[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.MethodFinisher; setReturnType[]; void; null; this>
<not found; setType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.MethodFinisher; setReturnType[]; void; null; _def>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.MethodFinisher; setSignature[]; void; null; _node>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.MethodFinisher; setSignature[]; void; null; parametersNode>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.MethodFinisher; setSignature[]; void; null; parameterNode>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; makeVariableDef[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.MethodFinisher; setSignature[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker$VariableFinisher; finish[]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.MethodFinisher; setSignature[]; void; null; new VariableFinisher(parameter)>
<not found; addParameter[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.MethodFinisher; setSignature[]; void; null; _def>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.MethodFinisher; setSignature[]; void; null; parameterNode>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.MethodFinisher; setExceptionsThrown[]; void; null; _node>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.MethodFinisher; setExceptionsThrown[]; void; null; throwsNode>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.MethodFinisher; setExceptionsThrown[]; void; null; exceptionNode>
<not found; getPackage[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.MethodFinisher; setExceptionsThrown[]; void; null; symbolTable>
<not found; constructPackage[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.MethodFinisher; setExceptionsThrown[]; void; null; ASTUtil>
<not found; getClassDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.MethodFinisher; setExceptionsThrown[]; void; null; pkg>
<not found; constructClass[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.MethodFinisher; setExceptionsThrown[]; void; null; ASTUtil>
<not found; getClassDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.MethodFinisher; setExceptionsThrown[]; void; null; _def>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.MethodFinisher; setExceptionsThrown[]; void; null; exceptionNode>
<not found; addException[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.MethodFinisher; setExceptionsThrown[]; void; null; _def>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.MethodFinisher; setExceptionsThrown[]; void; null; exceptionNode>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker$MethodFinisher; getTypeNode[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.MethodFinisher; isConstructor[]; boolean; null; this>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.MethodFinisher; getTypeNode[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; _node>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker$CatchFinisher; createExceptionVariable[]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.CatchFinisher; finish[]; void; null; this>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.CatchFinisher; createExceptionVariable[]; void; null; _def.getTreeNode()>
<not found; getTreeNode[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.CatchFinisher; createExceptionVariable[]; void; findFirstToken[]; _def>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; makeVariableDef[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.CatchFinisher; createExceptionVariable[]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker$VariableFinisher; finish[]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.CatchFinisher; createExceptionVariable[]; void; null; new VariableFinisher(exception)>
<not found; addDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.CatchFinisher; createExceptionVariable[]; void; null; _def>
<not found; getFile[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; Reference[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; _node>
<not found; getLine[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; Reference[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; ASTUtil>
<not found; getColumn[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; Reference[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; ASTUtil>
<not found; getDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; getDefinition[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IDefinition; null; _node>
<not found; getLine[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; getLine[]; int; null; getOccurrence()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; getOccurrence[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; getLine[]; int; getLine[]; this>
<not found; getColumn[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; getColumn[]; int; null; getOccurrence()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; getOccurrence[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; getColumn[]; int; getColumn[]; this>
<not found; getFile[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; getFile[]; java.io.File; null; getOccurrence()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; getOccurrence[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; getFile[]; java.io.File; getFile[]; this>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; getName[]; java.lang.String; null; _node>
<not found; toString[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; toString[]; java.lang.String; null; getOccurrence()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; getOccurrence[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; toString[]; java.lang.String; toString[]; this>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; equals[java.lang.Object]; boolean; null; getOccurrence()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; getOccurrence[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; equals[java.lang.Object]; boolean; equals[]; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; getOccurrence[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; equals[java.lang.Object]; boolean; null; ((Reference)obj)>
<java.lang.Class; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; compareTo[java.lang.Object]; int; null; getClass()>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference>; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; compareTo[java.lang.Object]; int; getName[]; this>
<not found; compareTo[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; compareTo[java.lang.Object]; int; null; getOccurrence()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; getOccurrence[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; compareTo[java.lang.Object]; int; compareTo[]; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; getOccurrence[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference; compareTo[java.lang.Object]; int; null; ((Reference)o)>
<java.lang.Class; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.InterfaceConstructor; getName[]; java.lang.String; null; _classConstructed>
<not found; isSame[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.InterfaceConstructor; hasSameSignature[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; boolean; null; getSignature()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.InterfaceConstructor; getSignature[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.InterfaceConstructor; hasSameSignature[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; boolean; isSame[]; this>
<not found; isCompatibleWith[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.InterfaceConstructor; hasCompatibleSignature[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; boolean; null; signature>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.InterfaceConstructor; getSignature[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.InterfaceConstructor; hasCompatibleSignature[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.InterfaceConstructor; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.InterfaceConstructor; getQualifiedName[]; java.lang.String; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.InterfaceConstructor; getSignature[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.InterfaceConstructor; getQualifiedName[]; java.lang.String; null; this>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.InterfaceConstructor; equals[java.lang.Object]; boolean; null; getType()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.InterfaceConstructor; getType[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.InterfaceConstructor; equals[java.lang.Object]; boolean; equals[]; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.InterfaceConstructor; getType[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.InterfaceConstructor; equals[java.lang.Object]; boolean; null; constructor>
<not found; hashCode[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.InterfaceConstructor; hashCode[]; int; null; getType()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.InterfaceConstructor; getType[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.InterfaceConstructor; hashCode[]; int; hashCode[]; this>
<java.util.List; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.InterfaceConstructor; hashCode[]; int; null; order>
<java.util.List; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.InterfaceConstructor; hashCode[]; int; null; order>
<java.util.List; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.InterfaceConstructor; hashCode[]; int; null; order>
<java.util.List; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.InterfaceConstructor; hashCode[]; int; null; order>
<java.util.List; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.InterfaceConstructor; hashCode[]; int; null; order>
<java.util.List; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.InterfaceConstructor; hashCode[]; int; null; order>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PrimitiveClasses; typesAreCompatible[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass]; boolean; null; hole>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PrimitiveClasses; typesAreCompatible[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass]; boolean; null; peg>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PrimitiveClasses; typesAreCompatible[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass]; boolean; null; hole>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PrimitiveClasses; typesAreCompatible[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass]; boolean; null; peg>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PrimitiveClasses; typesAreCompatible[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass]; boolean; null; peg>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PrimitiveClasses; typesAreCompatible[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass]; boolean; null; hole>
<java.util.List; indexOf[java.lang.Object]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PrimitiveClasses; typesAreCompatible[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass]; boolean; null; order>
<java.util.List; indexOf[java.lang.Object]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PrimitiveClasses; typesAreCompatible[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass]; boolean; null; order>
<java.util.List; indexOf[java.lang.Object]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PrimitiveClasses; typesAreCompatible[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass]; boolean; null; order>
<java.util.List; indexOf[java.lang.Object]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PrimitiveClasses; typesAreCompatible[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass]; boolean; null; order>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PrimitiveClasses; unaryPromote[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; type>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PrimitiveClasses; unaryPromote[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; type>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PrimitiveClasses; unaryPromote[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; type>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PrimitiveClasses; binaryPromote[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; a>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PrimitiveClasses; binaryPromote[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; b>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PrimitiveClasses; binaryPromote[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; a>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PrimitiveClasses; binaryPromote[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; b>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PrimitiveClasses; binaryPromote[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; a>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PrimitiveClasses; binaryPromote[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; b>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef; getVisibilityNode[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef; getVisibility[]; int; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef; getVisibility[]; int; null; visibilityNode>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef; getVisibility[]; int; null; visibilityNode>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef; getVisibility[]; int; null; visibilityNode>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef; getVisibilityNode[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; getTreeNode()>
<not found; getTreeNode[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef; getVisibilityNode[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; findFirstToken[]; this>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef; getVisibilityNode[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; modifiersNode>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef; isVisibilityNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef; getVisibilityNode[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; this>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef; getVisibilityNode[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; modifier>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef; isVisibilityNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; boolean; null; node>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef; isVisibilityNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; boolean; null; node>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef; isVisibilityNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; boolean; null; node>
<not found; findFirstToken[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef; isAssignedAtDeclaration[]; boolean; null; getTreeNode()>
<not found; getTreeNode[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef; isAssignedAtDeclaration[]; boolean; findFirstToken[]; this>
<not found; put[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BaseScope; addDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IPackage]; void; null; elements>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BaseScope; addDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IPackage]; void; null; def>
<not found; get[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BaseScope; getPackageDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IPackage; null; table.getPackages()>
<not found; getPackages[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BaseScope; getPackageDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IPackage; get[]; table>
<not found; getDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BaseScope; getClassDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; LiteralResolver>
<java.lang.String; lastIndexOf[java.lang.String]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BaseScope; getClassDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; name>
<java.lang.String; substring[int, int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BaseScope; getClassDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; name>
<java.lang.String; substring[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BaseScope; getClassDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; name>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BaseScope; getPackageDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IPackage; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BaseScope; getClassDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; this>
<not found; getClass[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BaseScope; getClassDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; pkg>
<not found; loadClass[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BaseScope; getClassDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; ClassManager.getClassLoader()>
<not found; getClassLoader[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BaseScope; getClassDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; loadClass[]; ClassManager>
<not found; getFile[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; Occurrence[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; node>
<not found; getLineNo[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; Occurrence[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; node>
<not found; getColumnNo[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; Occurrence[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; node>
<java.lang.Class; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; compareTo[java.lang.Object]; int; null; getClass()>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence>; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; compareTo[java.lang.Object]; int; getName[]; this>
<java.io.File; compareTo[java.io.File]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; compareTo[java.lang.Object]; int; null; getFile()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; getFile[]; java.io.File; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; compareTo[java.lang.Object]; int; compareTo[java.io.File]; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; getFile[]; java.io.File; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; compareTo[java.lang.Object]; int; null; other>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; getLine[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; compareTo[java.lang.Object]; int; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; getLine[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; compareTo[java.lang.Object]; int; null; other>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; getColumn[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; compareTo[java.lang.Object]; int; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; getColumn[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; compareTo[java.lang.Object]; int; null; other>
<java.io.File; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; equals[java.lang.Object]; boolean; null; getFile()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; getFile[]; java.io.File; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; equals[java.lang.Object]; boolean; equals[java.lang.Object]; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; getFile[]; java.io.File; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; equals[java.lang.Object]; boolean; null; occ>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; getLine[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; equals[java.lang.Object]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; getLine[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; equals[java.lang.Object]; boolean; null; occ>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; getColumn[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; equals[java.lang.Object]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; getColumn[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; equals[java.lang.Object]; boolean; null; occ>
<java.io.File; hashCode[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; hashCode[]; int; null; getFile()>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; getFile[]; java.io.File; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; hashCode[]; int; hashCode[]; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; getFile[]; java.io.File; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; toString[]; java.lang.String; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; getLine[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; toString[]; java.lang.String; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; getColumn[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence; toString[]; java.lang.String; null; this>
<java.util.Vector; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalDefinition; getReferences[]; java.util.Iterator; null; new Vector()>
<java.util.Vector; size[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; MethodSignature[java.util.Vector]; void; null; argTypes>
<java.util.Vector; toArray[java.lang.Object[]]; java.lang.Object[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; MethodSignature[java.util.Vector]; void; null; argTypes>
<not found; getParameters[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; isCompatibleWith[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; boolean; null; signature>
<not found; isCompatibleWith[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; isCompatibleWith[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; boolean; null; _argTypes[i]>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; isSame[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; boolean; null; this>
<java.util.Arrays; equals[long[], long[]]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; equals[java.lang.Object]; boolean; null; java.util.Arrays>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; getParameters[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; equals[java.lang.Object]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; getParameters[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; equals[java.lang.Object]; boolean; null; signature>
<java.lang.StringBuffer; append[java.lang.Object]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; result>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; _argTypes[i]>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; result>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; result>
<java.lang.StringBuffer; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; result>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; nameMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; nameMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; nameMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; nameMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; nameMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; nameMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; nameMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; nameMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; intMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; intMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; intMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; intMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; intMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; intMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; intMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; intMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; intMap>
<java.lang.Object; getClass[]; java.lang.Class<? extends java.lang.String>; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; "">
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; classMap>
<not found; create[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; SymTabASTFactory>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; classMap>
<not found; create[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; SymTabASTFactory>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; classMap>
<not found; create[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; SymTabASTFactory>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; classMap>
<not found; create[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; SymTabASTFactory>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; classMap>
<not found; create[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; SymTabASTFactory>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; classMap>
<not found; create[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; SymTabASTFactory>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; classMap>
<not found; create[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; SymTabASTFactory>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; classMap>
<not found; create[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; SymTabASTFactory>
<java.util.Map; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.LiteralResolver; getDefinition[int]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; intMap>
<java.util.Map; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.LiteralResolver; getDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; nameMap>
<java.util.Map; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.LiteralResolver; getASTNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; classMap>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; mustCheckReferenceCount[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; getScopeFromMods[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; mustCheckReferenceCount[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ScopeUtils>
<com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; mustCheckReferenceCount[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isReadObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; mustCheckReferenceCount[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteReplaceOrReadResolve[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; mustCheckReferenceCount[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; "writeObject">
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ident>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST.findFirstToken(TokenTypes.TYPE)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; getFirstChild[]; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; typeAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; params>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ((DetailAST)params.getFirstChild()).findFirstToken(TokenTypes.TYPE)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; getFirstChild[]; ((DetailAST)params.getFirstChild())>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; findFirstToken[int]; params>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; FullIdent.createFullIdent(type)>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; getText[]; FullIdent>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; "java.io.ObjectOutputStream">
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; "ObjectOutputStream">
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; throwsAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; throwsAST>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; FullIdent.createFullIdent(expt)>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; getText[]; FullIdent>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; "java.io.IOException">
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; "IOException">
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isReadObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isReadObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; "readObject">
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isReadObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ident>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isReadObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST.findFirstToken(TokenTypes.TYPE)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isReadObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; getFirstChild[]; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isReadObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; typeAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isReadObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isReadObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; params>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isReadObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ((DetailAST)params.getFirstChild()).findFirstToken(TokenTypes.TYPE)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isReadObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; getFirstChild[]; ((DetailAST)params.getFirstChild())>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isReadObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; findFirstToken[int]; params>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isReadObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; FullIdent.createFullIdent(type)>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isReadObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; getText[]; FullIdent>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isReadObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; "java.io.ObjectInputStream">
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isReadObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; "ObjectInputStream">
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isReadObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isReadObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; throwsAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isReadObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; throwsAST>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isReadObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; FullIdent.createFullIdent(excpt1)>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isReadObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; getText[]; FullIdent>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isReadObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; FullIdent.createFullIdent(throwsAST.getLastChild())>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isReadObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; getText[]; FullIdent>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLastChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isReadObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; throwsAST>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isReadObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; "java.io.IOException">
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isReadObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; "IOException">
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isReadObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; "java.io.IOException">
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isReadObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; "IOException">
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isReadObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; "java.lang.ClassNotFoundException">
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isReadObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; "ClassNotFoundException">
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isReadObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; "java.lang.ClassNotFoundException">
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isReadObject[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; "ClassNotFoundException">
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteReplaceOrReadResolve[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteReplaceOrReadResolve[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; "writeReplace">
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteReplaceOrReadResolve[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ident>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteReplaceOrReadResolve[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; "readResolve">
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteReplaceOrReadResolve[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ident>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteReplaceOrReadResolve[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST.findFirstToken(TokenTypes.TYPE)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteReplaceOrReadResolve[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; getFirstChild[]; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteReplaceOrReadResolve[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; typeAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteReplaceOrReadResolve[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; typeAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteReplaceOrReadResolve[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteReplaceOrReadResolve[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; params>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteReplaceOrReadResolve[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[]; int; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteReplaceOrReadResolve[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; throwsAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteReplaceOrReadResolve[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; throwsAST>
<com.puppycrawl.tools.checkstyle.api.FullIdent; getText[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteReplaceOrReadResolve[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; FullIdent.createFullIdent(excpt)>
<com.puppycrawl.tools.checkstyle.api.FullIdent; createFullIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.FullIdent; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteReplaceOrReadResolve[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; getText[]; FullIdent>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteReplaceOrReadResolve[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; "java.io.ObjectStreamException">
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheck; isWriteReplaceOrReadResolve[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; "ObjectStreamException">
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateFieldCheck; mustCheckReferenceCount[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; getScopeFromMods[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateFieldCheck; mustCheckReferenceCount[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ScopeUtils>
<com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; setIgnoreFormat[java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; AbstractUsageCheck[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; setIgnoreFormat[java.lang.String]; void; null; Utils>
<not found; setClassLoader[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ClassManager>
<com.puppycrawl.tools.checkstyle.api.Check; getClassLoader[]; java.lang.ClassLoader; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.FileContents; getFilename[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; getFileContents()>
<com.puppycrawl.tools.checkstyle.api.Check; getFileContents[]; com.puppycrawl.tools.checkstyle.api.FileContents; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getFilename[]; this>
<not found; addTree[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; getASTManager()>
<com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; getASTManager[]; com.puppycrawl.tools.checkstyle.checks.usage.ASTManager; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; addTree[]; this>
<com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; mustCheckReferenceCount[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; getRegexp[]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; find[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; regexp.matcher(nameAST.getText())>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; find[]; regexp>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; nameAST>
<not found; registerCheckNode[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; getASTManager()>
<com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; getASTManager[]; com.puppycrawl.tools.checkstyle.checks.usage.ASTManager; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; registerCheckNode[]; this>
<not found; getCheckNodes[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; getASTManager()>
<com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; getASTManager[]; com.puppycrawl.tools.checkstyle.checks.usage.ASTManager; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; getCheckNodes[]; this>
<com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; applyTo[java.util.Set]; void; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; logError[java.lang.Exception]; void; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<not found; removeCheck[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; getASTManager()>
<com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; getASTManager[]; com.puppycrawl.tools.checkstyle.checks.usage.ASTManager; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; removeCheck[]; this>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; logError[java.lang.Exception]; void; null; this>
<java.lang.Throwable; getMessage[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; logError[java.lang.Exception]; void; null; aException>
<not found; debug[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; logError[java.lang.Exception]; void; null; Utils.getExceptionLogger()>
<com.puppycrawl.tools.checkstyle.api.Utils; getExceptionLogger[]; com.puppycrawl.tools.checkstyle.api.Log; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; logError[java.lang.Exception]; void; debug[]; Utils>
<not found; get[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; getReferenceCount[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; null; getASTManager()>
<com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; getASTManager[]; com.puppycrawl.tools.checkstyle.checks.usage.ASTManager; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; getReferenceCount[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; get[]; this>
<not found; getDefinition[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; getReferenceCount[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; null; ident>
<not found; getNumReferences[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; getReferenceCount[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; null; definition>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; applyTo[java.util.Set]; void; null; aNodes>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; applyTo[java.util.Set]; void; null; it>
<java.util.Iterator; next[]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; applyTo[java.util.Set]; void; null; it>
<com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; getReferenceCount[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; applyTo[java.util.Set]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; applyTo[java.util.Set]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; applyTo[java.util.Set]; void; null; nameAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; applyTo[java.util.Set]; void; null; nameAST>
<com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; getErrorKey[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; applyTo[java.util.Set]; void; null; this>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; applyTo[java.util.Set]; void; null; nameAST>
<not found; getInstance[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; getASTManager[]; com.puppycrawl.tools.checkstyle.checks.usage.ASTManager; null; ASTManager>
<com.puppycrawl.tools.checkstyle.api.ScopeUtils; isLocalVariableDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.UnusedLocalVariableCheck; mustCheckReferenceCount[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; ScopeUtils>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.usage.UnusedParameterCheck; mustCheckReferenceCount[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedParameterCheck; mustCheckReferenceCount[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; parent>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.usage.UnusedParameterCheck; mustCheckReferenceCount[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; parent>
<com.puppycrawl.tools.checkstyle.checks.usage.UnusedParameterCheck; hasBody[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.UnusedParameterCheck; mustCheckReferenceCount[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.checks.usage.UnusedParameterCheck; isLocal[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.UnusedParameterCheck; mustCheckReferenceCount[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedParameterCheck; mustCheckReferenceCount[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; parent>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedParameterCheck; hasBody[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.UnusedParameterCheck; hasBody[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedParameterCheck; hasBody[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedParameterCheck; isLocal[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.usage.UnusedParameterCheck; isLocal[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.UnusedParameterCheck; isLocal[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; modifiers>
<com.puppycrawl.tools.checkstyle.api.DetailAST; branchContains[int]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.UnusedParameterCheck; isLocal[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; modifiers>
<not found; run[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.AllTests; main[java.lang.String[]]; void; null; junit.textui.TestRunner>
<com.puppycrawl.tools.checkstyle.checks.usage.AllTests; suite[]; com.puppycrawl.tools.checkstyle.checks.usage.Test; com.puppycrawl.tools.checkstyle.checks.usage.AllTests; main[java.lang.String[]]; void; null; AllTests>
<not found; addTest[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.AllTests; suite[]; com.puppycrawl.tools.checkstyle.checks.usage.Test; null; suite>
<not found; addTest[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.AllTests; suite[]; com.puppycrawl.tools.checkstyle.checks.usage.Test; null; suite>
<not found; addTest[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.AllTests; suite[]; com.puppycrawl.tools.checkstyle.checks.usage.Test; null; suite>
<not found; addTest[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.AllTests; suite[]; com.puppycrawl.tools.checkstyle.checks.usage.Test; null; suite>
<not found; addTest[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.AllTests; suite[]; com.puppycrawl.tools.checkstyle.checks.usage.Test; null; suite>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedLocalVariableCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedLocalVariableCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedLocalVariableCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedLocalVariableCheckTest; testIgnoreFormat[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.usage.UnusedLocalVariableCheckTest; testIgnoreFormat[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedLocalVariableCheckTest; testIgnoreFormat[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedLocalVariableCheckTest; testIgnoreFormat[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateFieldCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateFieldCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateFieldCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateFieldCheckTest; testIgnoreFormat[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateFieldCheckTest; testIgnoreFormat[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateFieldCheckTest; testIgnoreFormat[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateFieldCheckTest; testIgnoreFormat[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheckTest; testIgnoreFormat[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheckTest; testIgnoreFormat[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheckTest; testIgnoreFormat[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheckTest; testIgnoreFormat[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedParameterCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedParameterCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedParameterCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedParameterCheckTest; testException[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.usage.UnusedParameterCheckTest; testException[]; void; null; checkConfig>
<java.lang.Boolean; toString[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.usage.UnusedParameterCheckTest; testException[]; void; null; Boolean.FALSE>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedParameterCheckTest; testException[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedParameterCheckTest; testException[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedParameterCheckTest; testIgnoreFormat[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.usage.UnusedParameterCheckTest; testIgnoreFormat[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedParameterCheckTest; testIgnoreFormat[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedParameterCheckTest; testIgnoreFormat[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedParameterCheckTest; testIgnoreNonLocal[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.usage.UnusedParameterCheckTest; testIgnoreNonLocal[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedParameterCheckTest; testIgnoreNonLocal[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedParameterCheckTest; testIgnoreNonLocal[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheckTest; testDefault[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheckTest; testDefault[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheckTest; testDefault[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheckTest; testAllowSerializationMethods[]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheckTest; testAllowSerializationMethods[]; void; null; checkConfig>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheckTest; testAllowSerializationMethods[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheckTest; testAllowSerializationMethods[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheckTest; testInner[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheckTest; testInner[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheckTest; testInner[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheckTest; testEmptyFile[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheckTest; testEmptyFile[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.checks.usage.UnusedPrivateMethodCheckTest; testEmptyFile[]; void; null; this>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.usage.InputUnusedField; method[]; void; null; mReadString>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.usage.InputUnusedField; method[]; void; null; "">
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.usage.InputUnusedLocal; method[]; void; null; readObject>
<com.puppycrawl.tools.checkstyle.usage.InputUnusedMethod; methodUsed0[]; void; com.puppycrawl.tools.checkstyle.usage.InputUnusedMethod; main[java.lang.String[]]; void; null; method>
<com.puppycrawl.tools.checkstyle.usage.InputUnusedMethod; methodUsed1[int]; void; com.puppycrawl.tools.checkstyle.usage.InputUnusedMethod; main[java.lang.String[]]; void; null; method>
<com.puppycrawl.tools.checkstyle.usage.InputUnusedMethod; methodUsed1[double]; void; com.puppycrawl.tools.checkstyle.usage.InputUnusedMethod; main[java.lang.String[]]; void; null; method>
<java.lang.Math; sqrt[double]; double; com.puppycrawl.tools.checkstyle.usage.InputUnusedMethod; main[java.lang.String[]]; void; null; Math>
<com.puppycrawl.tools.checkstyle.usage.InputUnusedMethod; methodUsed1[java.lang.String]; void; com.puppycrawl.tools.checkstyle.usage.InputUnusedMethod; main[java.lang.String[]]; void; null; method>
<com.puppycrawl.tools.checkstyle.usage.Ternary; m[]; int; com.puppycrawl.tools.checkstyle.usage.Ternary; m1[]; void; methodUsed1[java.lang.String]; this>
<java.lang.Thread; start[]; void; com.puppycrawl.tools.checkstyle.usage.Outer3; dotted[]; void; null; th>
<com.puppycrawl.tools.checkstyle.usage.InputInnerUsedMethod; doSomething[]; void; javax.swing.AbstractAction; actionPerformed[java.awt.event.ActionEvent]; void; null; this>
<java.lang.String; length[]; int; com.puppycrawl.tools.checkstyle.usage.InputUnusedParameter; method[java.lang.String, java.awt.Rectangle, java.lang.Object]; void; null; aReadObject>
<java.io.PrintStream; println[java.lang.String]; void; JavadocCheckDefault; usage[]; void; null; System.out>
<java.lang.System; exit[int]; void; JavadocCheckDefault; usage[]; void; null; System>
<JavadocCheckDefault; usage[]; void; JavadocCheckDefault; main[java.lang.String[]]; void; null; this>
<java.lang.Class; forName[java.lang.String]; java.lang.Class<?>; JavadocCheckDefault; main[java.lang.String[]]; void; null; Class>
<java.lang.Class; newInstance[]; java.lang.Object; JavadocCheckDefault; main[java.lang.String[]]; void; null; clazz>
<com.puppycrawl.tools.checkstyle.api.Check; getDefaultTokens[]; int[]; JavadocCheckDefault; main[java.lang.String[]]; void; null; check>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; JavadocCheckDefault; main[java.lang.String[]]; void; null; buf>
<java.util.ArrayList; add[java.lang.Object]; boolean; JavadocCheckDefault; main[java.lang.String[]]; void; null; tokenNames>
<com.puppycrawl.tools.checkstyle.api.TokenTypes; getTokenName[int]; java.lang.String; JavadocCheckDefault; main[java.lang.String[]]; void; null; TokenTypes>
<java.util.Collections; sort[java.util.List<Z#0-T#0>]; void; JavadocCheckDefault; main[java.lang.String[]]; void; null; Collections>
<java.util.ArrayList; iterator[]; java.util.Iterator; JavadocCheckDefault; main[java.lang.String[]]; void; null; tokenNames>
<java.util.Iterator; next[]; java.lang.Object; JavadocCheckDefault; main[java.lang.String[]]; void; null; it>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; JavadocCheckDefault; main[java.lang.String[]]; void; null; buf>
<java.util.Iterator; hasNext[]; boolean; JavadocCheckDefault; main[java.lang.String[]]; void; null; it>
<java.util.Iterator; next[]; java.lang.Object; JavadocCheckDefault; main[java.lang.String[]]; void; null; it>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; JavadocCheckDefault; main[java.lang.String[]]; void; null; buf>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; JavadocCheckDefault; main[java.lang.String[]]; void; null; buf>
<java.io.PrintStream; println[java.lang.Object]; void; JavadocCheckDefault; main[java.lang.String[]]; void; null; System.out>
<java.lang.Throwable; printStackTrace[]; void; JavadocCheckDefault; main[java.lang.String[]]; void; null; ex>
<java.lang.System; exit[int]; void; JavadocCheckDefault; main[java.lang.String[]]; void; null; System>
<not found; getMethods[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; JavaClassDefinition[com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClass, java.util.Set, java.util.Set]; void; null; aJavaClass>
<not found; inScope[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; JavaClassDefinition[com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClass, java.util.Set, java.util.Set]; void; null; Utils>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; JavaClassDefinition[com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClass, java.util.Set, java.util.Set]; void; null; methodSet>
<java.util.Set; toArray[java.lang.Object[]]; java.lang.Object[]; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; JavaClassDefinition[com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClass, java.util.Set, java.util.Set]; void; null; methodSet>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; JavaClassDefinition[com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClass, java.util.Set, java.util.Set]; void; null; methodSet>
<not found; getFields[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; JavaClassDefinition[com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClass, java.util.Set, java.util.Set]; void; null; aJavaClass>
<not found; inScope[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; JavaClassDefinition[com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClass, java.util.Set, java.util.Set]; void; null; Utils>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; JavaClassDefinition[com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClass, java.util.Set, java.util.Set]; void; null; mFieldDefs>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; JavaClassDefinition[com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClass, java.util.Set, java.util.Set]; void; null; fields[i]>
<java.util.Collection; toArray[java.lang.Object[]]; java.lang.Object[]; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; getFieldDefs[]; com.puppycrawl.tools.checkstyle.bcel.classfile.FieldDefinition[]; null; mFieldDefs.values()>
<java.util.Map; values[]; java.util.Collection; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; getFieldDefs[]; com.puppycrawl.tools.checkstyle.bcel.classfile.FieldDefinition[]; toArray[java.lang.Object[]]; mFieldDefs>
<java.util.Map; size[]; int; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; getFieldDefs[]; com.puppycrawl.tools.checkstyle.bcel.classfile.FieldDefinition[]; null; mFieldDefs>
<not found; getClassName[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; findNarrowestMethod[java.lang.String, java.lang.String, com.puppycrawl.tools.checkstyle.bcel.classfile.Type[]]; com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition; null; mJavaClass>
<not found; instanceOf[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; findNarrowestMethod[java.lang.String, java.lang.String, com.puppycrawl.tools.checkstyle.bcel.classfile.Type[]]; com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition; null; Repository>
<not found; isCompatible[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; findNarrowestMethod[java.lang.String, java.lang.String, com.puppycrawl.tools.checkstyle.bcel.classfile.Type[]]; com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition; null; mMethodDefs[i]>
<not found; isCompatible[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; findNarrowestMethod[java.lang.String, java.lang.String, com.puppycrawl.tools.checkstyle.bcel.classfile.Type[]]; com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition; null; result>
<java.util.Map; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; findFieldDef[java.lang.String]; com.puppycrawl.tools.checkstyle.bcel.classfile.FieldDefinition; null; mFieldDefs>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; hasReference[com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition, com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO]; boolean; null; aMethodDef>
<not found; getArgumentTypes[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; hasReference[com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition, com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO]; boolean; null; aMethodDef>
<com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; getJavaClass[]; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClass; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; hasReference[com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition, com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO]; boolean; null; this>
<not found; findJavaClassDef[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; hasReference[com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition, com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO]; boolean; null; aReferenceDAO>
<com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; findNarrowestMethod[java.lang.String, java.lang.String, com.puppycrawl.tools.checkstyle.bcel.classfile.Type[]]; com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; hasReference[com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition, com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO]; boolean; null; javaClassDef>
<not found; getClassName[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; hasReference[com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition, com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO]; boolean; null; getJavaClass()>
<com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; getJavaClass[]; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClass; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; hasReference[com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition, com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO]; boolean; getClassName[]; this>
<not found; hasReference[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; hasReference[com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition, com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO]; boolean; null; methodDef>
<com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; getJavaClass[]; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClass; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; hasReference[com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition, com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO]; boolean; null; this>
<not found; getSuperClass[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; hasReference[com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition, com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO]; boolean; null; currentJavaClass>
<not found; toString[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; toString[]; java.lang.String; null; getJavaClass()>
<com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; getJavaClass[]; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClass; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; toString[]; java.lang.String; toString[]; this>
<not found; getFieldOrMethod[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.FieldDefinition; getField[]; com.puppycrawl.tools.checkstyle.bcel.classfile.Field; null; this>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.bcel.classfile.FieldDefinition; getReadReferenceCount[]; int; null; mGetReferences>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.bcel.classfile.FieldDefinition; getWriteReferenceCount[]; int; null; mPutReferences>
<com.puppycrawl.tools.checkstyle.bcel.classfile.FieldDefinition; getReadReferenceCount[]; int; com.puppycrawl.tools.checkstyle.bcel.classfile.FieldDefinition; getReferenceCount[]; int; null; this>
<com.puppycrawl.tools.checkstyle.bcel.classfile.FieldDefinition; getWriteReferenceCount[]; int; com.puppycrawl.tools.checkstyle.bcel.classfile.FieldDefinition; getReferenceCount[]; int; null; this>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.bcel.classfile.FieldDefinition; addReference[com.puppycrawl.tools.checkstyle.bcel.classfile.FieldReference]; void; null; mPutReferences>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.bcel.classfile.FieldDefinition; addReference[com.puppycrawl.tools.checkstyle.bcel.classfile.FieldReference]; void; null; mGetReferences>
<not found; isPrivate[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.Utils; inScope[com.puppycrawl.tools.checkstyle.bcel.classfile.FieldOrMethod, java.util.Set]; boolean; null; aFieldOrMethod>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.bcel.classfile.Utils; inScope[com.puppycrawl.tools.checkstyle.bcel.classfile.FieldOrMethod, java.util.Set]; boolean; null; aScopes>
<not found; isProtected[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.Utils; inScope[com.puppycrawl.tools.checkstyle.bcel.classfile.FieldOrMethod, java.util.Set]; boolean; null; aFieldOrMethod>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.bcel.classfile.Utils; inScope[com.puppycrawl.tools.checkstyle.bcel.classfile.FieldOrMethod, java.util.Set]; boolean; null; aScopes>
<not found; isPublic[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.Utils; inScope[com.puppycrawl.tools.checkstyle.bcel.classfile.FieldOrMethod, java.util.Set]; boolean; null; aFieldOrMethod>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.bcel.classfile.Utils; inScope[com.puppycrawl.tools.checkstyle.bcel.classfile.FieldOrMethod, java.util.Set]; boolean; null; aScopes>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.bcel.classfile.Utils; inScope[com.puppycrawl.tools.checkstyle.bcel.classfile.FieldOrMethod, java.util.Set]; boolean; null; aScopes>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO; ReferenceDAO[java.util.Set, java.util.Set, java.util.Set]; void; null; aJavaClasses>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO; ReferenceDAO[java.util.Set, java.util.Set, java.util.Set]; void; null; aJavaClasses>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO; ReferenceDAO[java.util.Set, java.util.Set, java.util.Set]; void; null; it>
<java.util.Iterator; next[]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO; ReferenceDAO[java.util.Set, java.util.Set, java.util.Set]; void; null; it>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO; ReferenceDAO[java.util.Set, java.util.Set, java.util.Set]; void; null; mJavaClasses>
<java.util.Map; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO; findJavaClassDef[com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClass]; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; null; mJavaClasses>
<not found; getClassName[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO; addInvokeReference[com.puppycrawl.tools.checkstyle.bcel.classfile.InvokeReference]; void; null; aInvokeRef>
<not found; lookupClass[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO; addInvokeReference[com.puppycrawl.tools.checkstyle.bcel.classfile.InvokeReference]; void; null; Repository>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO; addInvokeReference[com.puppycrawl.tools.checkstyle.bcel.classfile.InvokeReference]; void; null; aInvokeRef>
<not found; getArgTypes[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO; addInvokeReference[com.puppycrawl.tools.checkstyle.bcel.classfile.InvokeReference]; void; null; aInvokeRef>
<java.util.Map; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO; addInvokeReference[com.puppycrawl.tools.checkstyle.bcel.classfile.InvokeReference]; void; null; mJavaClasses>
<not found; findNarrowestMethod[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO; addInvokeReference[com.puppycrawl.tools.checkstyle.bcel.classfile.InvokeReference]; void; null; javaClassDef>
<not found; addReference[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO; addInvokeReference[com.puppycrawl.tools.checkstyle.bcel.classfile.InvokeReference]; void; null; narrowest>
<not found; getSuperClass[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO; addInvokeReference[com.puppycrawl.tools.checkstyle.bcel.classfile.InvokeReference]; void; null; javaClass>
<not found; getClassName[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO; addFieldReference[com.puppycrawl.tools.checkstyle.bcel.classfile.FieldReference]; void; null; aFieldRef>
<not found; lookupClass[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO; addFieldReference[com.puppycrawl.tools.checkstyle.bcel.classfile.FieldReference]; void; null; Repository>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO; addFieldReference[com.puppycrawl.tools.checkstyle.bcel.classfile.FieldReference]; void; null; aFieldRef>
<java.util.Map; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO; addFieldReference[com.puppycrawl.tools.checkstyle.bcel.classfile.FieldReference]; void; null; mJavaClasses>
<not found; findFieldDef[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO; addFieldReference[com.puppycrawl.tools.checkstyle.bcel.classfile.FieldReference]; void; null; javaClassDef>
<not found; addReference[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO; addFieldReference[com.puppycrawl.tools.checkstyle.bcel.classfile.FieldReference]; void; null; fieldDef>
<not found; getSuperClass[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO; addFieldReference[com.puppycrawl.tools.checkstyle.bcel.classfile.FieldReference]; void; null; javaClass>
<not found; getClassName[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO; findFieldDef[com.puppycrawl.tools.checkstyle.bcel.classfile.FieldReference]; com.puppycrawl.tools.checkstyle.bcel.classfile.FieldDefinition; null; aFieldRef>
<not found; lookupClass[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO; findFieldDef[com.puppycrawl.tools.checkstyle.bcel.classfile.FieldReference]; com.puppycrawl.tools.checkstyle.bcel.classfile.FieldDefinition; null; Repository>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO; findFieldDef[com.puppycrawl.tools.checkstyle.bcel.classfile.FieldReference]; com.puppycrawl.tools.checkstyle.bcel.classfile.FieldDefinition; null; aFieldRef>
<java.util.Map; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO; findFieldDef[com.puppycrawl.tools.checkstyle.bcel.classfile.FieldReference]; com.puppycrawl.tools.checkstyle.bcel.classfile.FieldDefinition; null; mJavaClasses>
<not found; findFieldDef[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO; findFieldDef[com.puppycrawl.tools.checkstyle.bcel.classfile.FieldReference]; com.puppycrawl.tools.checkstyle.bcel.classfile.FieldDefinition; null; javaClassDef>
<not found; getSuperClass[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO; findFieldDef[com.puppycrawl.tools.checkstyle.bcel.classfile.FieldReference]; com.puppycrawl.tools.checkstyle.bcel.classfile.FieldDefinition; null; javaClass>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.FieldOrMethodDefinition; getName[]; java.lang.String; null; mFieldOrMethod>
<not found; toString[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.FieldOrMethodDefinition; toString[]; java.lang.String; null; mFieldOrMethod>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition; getReferenceCount[]; int; null; mReferences>
<not found; getFieldOrMethod[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition; getMethod[]; com.puppycrawl.tools.checkstyle.bcel.classfile.Method; null; this>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition; addReference[com.puppycrawl.tools.checkstyle.bcel.classfile.InvokeReference]; void; null; mReferences>
<not found; getArgumentTypes[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition; getArgumentTypes[]; com.puppycrawl.tools.checkstyle.bcel.classfile.Type[]; null; getMethod()>
<com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition; getMethod[]; com.puppycrawl.tools.checkstyle.bcel.classfile.Method; com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition; getArgumentTypes[]; com.puppycrawl.tools.checkstyle.bcel.classfile.Type[]; getArgumentTypes[]; this>
<com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition; isCompatible[java.lang.String, com.puppycrawl.tools.checkstyle.bcel.classfile.Type[]]; boolean; com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition; isCompatible[com.puppycrawl.tools.checkstyle.bcel.classfile.Method]; boolean; null; this>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition; isCompatible[com.puppycrawl.tools.checkstyle.bcel.classfile.Method]; boolean; null; aMethod>
<not found; getArgumentTypes[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition; isCompatible[com.puppycrawl.tools.checkstyle.bcel.classfile.Method]; boolean; null; aMethod>
<com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition; isCompatible[com.puppycrawl.tools.checkstyle.bcel.classfile.Method]; boolean; com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition; isCompatible[com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition]; boolean; null; this>
<com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition; getMethod[]; com.puppycrawl.tools.checkstyle.bcel.classfile.Method; com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition; isCompatible[com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition]; boolean; null; aMethodDef>
<com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition; isCompatible[com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition]; boolean; com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition; isAsNarrow[com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition]; boolean; null; aMethodDef>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition; isCompatible[java.lang.String, com.puppycrawl.tools.checkstyle.bcel.classfile.Type[]]; boolean; null; getName()>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition; isCompatible[java.lang.String, com.puppycrawl.tools.checkstyle.bcel.classfile.Type[]]; boolean; equals[]; this>
<com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition; getArgumentTypes[]; com.puppycrawl.tools.checkstyle.bcel.classfile.Type[]; com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition; isCompatible[java.lang.String, com.puppycrawl.tools.checkstyle.bcel.classfile.Type[]]; boolean; null; this>
<not found; isCompatible[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition; isCompatible[java.lang.String, com.puppycrawl.tools.checkstyle.bcel.classfile.Type[]]; boolean; null; Utils>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition; hasReference[com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClass]; boolean; null; getReferences()>
<com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition; getReferences[]; java.util.Set; com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition; hasReference[com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClass]; boolean; iterator[]; this>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition; hasReference[com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClass]; boolean; null; it>
<java.util.Iterator; next[]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition; hasReference[com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClass]; boolean; null; it>
<not found; getClassName[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition; hasReference[com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClass]; boolean; null; invokeRef>
<not found; instanceOf[]; not found; com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition; hasReference[com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClass]; boolean; null; Repository>
<not found; getFileName[]; not found; com.puppycrawl.tools.checkstyle.bcel.AbstractCheckVisitor; log[com.puppycrawl.tools.checkstyle.bcel.JavaClass, int, java.lang.String, java.lang.Object[]]; void; null; javaClass>
<com.puppycrawl.tools.checkstyle.bcel.AbstractCheckVisitor; log[java.lang.String, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.bcel.AbstractCheckVisitor; log[com.puppycrawl.tools.checkstyle.bcel.JavaClass, int, java.lang.String, java.lang.Object[]]; void; null; this>
<java.util.HashMap; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.AbstractCheckVisitor; log[java.lang.String, int, java.lang.String, java.lang.Object[]]; void; null; mMessageMap>
<java.util.HashMap; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.AbstractCheckVisitor; log[java.lang.String, int, java.lang.String, java.lang.Object[]]; void; null; mMessageMap>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessages; add[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; void; com.puppycrawl.tools.checkstyle.bcel.AbstractCheckVisitor; log[java.lang.String, int, java.lang.String, java.lang.Object[]]; void; null; localizedMessages>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; getMessageBundle[]; java.lang.String; com.puppycrawl.tools.checkstyle.bcel.AbstractCheckVisitor; log[java.lang.String, int, java.lang.String, java.lang.Object[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; getSeverityLevel[]; com.puppycrawl.tools.checkstyle.api.SeverityLevel; com.puppycrawl.tools.checkstyle.bcel.AbstractCheckVisitor; log[java.lang.String, int, java.lang.String, java.lang.Object[]]; void; null; this>
<java.lang.Object; getClass[]; java.lang.Class<? extends com.puppycrawl.tools.checkstyle.bcel.AbstractCheckVisitor>; com.puppycrawl.tools.checkstyle.bcel.AbstractCheckVisitor; log[java.lang.String, int, java.lang.String, java.lang.Object[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.bcel.AbstractCheckVisitor; log[java.lang.String, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.bcel.AbstractCheckVisitor; log[int, java.lang.String, java.lang.Object[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.bcel.AbstractCheckVisitor; log[int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.bcel.AbstractCheckVisitor; log[int, int, java.lang.String, java.lang.Object[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; setFileExtensions[java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; ClassFileSetCheck[]; void; null; this>
<not found; setRepository[]; not found; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; setClassLoader[java.lang.ClassLoader]; void; null; Repository>
<com.puppycrawl.tools.checkstyle.api.Configuration; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; setupChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; aChildConf>
<com.puppycrawl.tools.checkstyle.ModuleFactory; createModule[java.lang.String]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; setupChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; mModuleFactory>
<not found; contextualize[]; not found; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; setupChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; c>
<not found; configure[]; not found; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; setupChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; c>
<not found; init[]; not found; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; setupChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; c>
<com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; registerCheck[com.puppycrawl.tools.checkstyle.bcel.AbstractCheckVisitor]; void; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; setupChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; this>
<com.puppycrawl.tools.checkstyle.DefaultContext; add[java.lang.String, java.lang.Object]; void; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; finishLocalSetup[]; void; null; checkContext>
<com.puppycrawl.tools.checkstyle.DefaultContext; add[java.lang.String, java.lang.Object]; void; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; finishLocalSetup[]; void; null; checkContext>
<com.puppycrawl.tools.checkstyle.DefaultContext; add[java.lang.String, java.lang.Object]; void; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; finishLocalSetup[]; void; null; checkContext>
<com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter; getSeverity[]; java.lang.String; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; finishLocalSetup[]; void; null; this>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; registerCheck[com.puppycrawl.tools.checkstyle.bcel.AbstractCheckVisitor]; void; null; mAllChecks>
<com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; registerVisitors[]; void; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; process[java.io.File[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; extractJavaClasses[java.io.File[]]; java.util.Set; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; process[java.io.File[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; visitSet[java.util.Set]; void; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; process[java.io.File[]]; void; null; this>
<not found; setVisitor[]; not found; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; process[java.io.File[]]; void; null; walker>
<com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; getTreeVisitor[]; com.puppycrawl.tools.checkstyle.bcel.Visitor; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; process[java.io.File[]]; void; null; this>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; process[java.io.File[]]; void; null; javaClasses>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; process[java.io.File[]]; void; null; it>
<java.util.Iterator; next[]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; process[java.io.File[]]; void; null; it>
<com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; visitObject[java.lang.Object]; void; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; process[java.io.File[]]; void; null; this>
<not found; walk[]; not found; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; process[java.io.File[]]; void; null; walker>
<com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; leaveObject[java.lang.Object]; void; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; process[java.io.File[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; leaveSet[java.util.Set]; void; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; process[java.io.File[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; fireErrors[]; void; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; process[java.io.File[]]; void; null; this>
<java.util.Set; addAll[java.util.Collection]; boolean; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; registerVisitors[]; void; null; mObjectSetVisitors>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; registerVisitors[]; void; null; mAllChecks>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; registerVisitors[]; void; null; it>
<java.util.Iterator; next[]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; registerVisitors[]; void; null; it>
<not found; getVisitor[]; not found; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; registerVisitors[]; void; null; check>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; registerVisitors[]; void; null; mObjectSetVisitors>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; registerVisitors[]; void; null; mTreeVisitors>
<not found; filter[]; not found; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; extractJavaClasses[java.io.File[]]; java.util.Set; null; this>
<com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; extractJavaClasses[java.io.File]; java.util.Set; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; extractJavaClasses[java.io.File[]]; java.util.Set; null; this>
<java.util.Set; addAll[java.util.Collection]; boolean; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; extractJavaClasses[java.io.File[]]; java.util.Set; null; result>
<java.lang.Throwable; printStackTrace[]; void; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; extractJavaClasses[java.io.File[]]; java.util.Set; null; e>
<not found; clearCache[]; not found; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; visitSet[java.util.Set]; void; null; Repository>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; visitSet[java.util.Set]; void; null; aSet>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; visitSet[java.util.Set]; void; null; it>
<java.util.Iterator; next[]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; visitSet[java.util.Set]; void; null; it>
<not found; addClass[]; not found; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; visitSet[java.util.Set]; void; null; Repository>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; visitSet[java.util.Set]; void; null; getObjectSetVisitors()>
<com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; getObjectSetVisitors[]; java.util.Set; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; visitSet[java.util.Set]; void; iterator[]; this>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; visitSet[java.util.Set]; void; null; it>
<java.util.Iterator; next[]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; visitSet[java.util.Set]; void; null; it>
<not found; visitSet[]; not found; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; visitSet[java.util.Set]; void; null; visitor>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; visitObject[java.lang.Object]; void; null; getObjectSetVisitors()>
<com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; getObjectSetVisitors[]; java.util.Set; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; visitObject[java.lang.Object]; void; iterator[]; this>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; visitObject[java.lang.Object]; void; null; it>
<java.util.Iterator; next[]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; visitObject[java.lang.Object]; void; null; it>
<not found; visitObject[]; not found; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; visitObject[java.lang.Object]; void; null; visitor>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; leaveObject[java.lang.Object]; void; null; getObjectSetVisitors()>
<com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; getObjectSetVisitors[]; java.util.Set; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; leaveObject[java.lang.Object]; void; iterator[]; this>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; leaveObject[java.lang.Object]; void; null; it>
<java.util.Iterator; next[]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; leaveObject[java.lang.Object]; void; null; it>
<not found; leaveObject[]; not found; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; leaveObject[java.lang.Object]; void; null; visitor>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; leaveSet[java.util.Set]; void; null; getObjectSetVisitors()>
<com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; getObjectSetVisitors[]; java.util.Set; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; leaveSet[java.util.Set]; void; iterator[]; this>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; leaveSet[java.util.Set]; void; null; it>
<java.util.Iterator; next[]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; leaveSet[java.util.Set]; void; null; it>
<not found; leaveSet[]; not found; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; leaveSet[java.util.Set]; void; null; visitor>
<java.io.File; getPath[]; java.lang.String; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; extractJavaClasses[java.io.File]; java.util.Set; null; aFile>
<java.lang.String; endsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; extractJavaClasses[java.io.File]; java.util.Set; null; fileName>
<java.lang.String; endsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; extractJavaClasses[java.io.File]; java.util.Set; null; fileName>
<java.util.zip.ZipFile; entries[]; java.util.Enumeration<? extends java.util.zip.ZipEntry>; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; extractJavaClasses[java.io.File]; java.util.Set; null; zipFile>
<java.util.Enumeration; hasMoreElements[]; boolean; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; extractJavaClasses[java.io.File]; java.util.Set; null; entries>
<java.util.Enumeration; nextElement[]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; extractJavaClasses[java.io.File]; java.util.Set; null; entries>
<java.util.zip.ZipEntry; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; extractJavaClasses[java.io.File]; java.util.Set; null; entry>
<java.lang.String; endsWith[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; extractJavaClasses[java.io.File]; java.util.Set; null; entryName>
<java.util.zip.ZipFile; getInputStream[java.util.zip.ZipEntry]; java.io.InputStream; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; extractJavaClasses[java.io.File]; java.util.Set; null; zipFile>
<not found; parse[]; not found; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; extractJavaClasses[java.io.File]; java.util.Set; null; new ClassParser(in,entryName)>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; extractJavaClasses[java.io.File]; java.util.Set; null; result>
<not found; parse[]; not found; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; extractJavaClasses[java.io.File]; java.util.Set; null; new ClassParser(fileName)>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; extractJavaClasses[java.io.File]; java.util.Set; null; result>
<java.util.HashMap; keySet[]; java.util.Set; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; fireErrors[]; void; null; mMessageMap>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; fireErrors[]; void; null; keys>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; fireErrors[]; void; null; iter>
<java.util.Iterator; next[]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; fireErrors[]; void; null; iter>
<com.puppycrawl.tools.checkstyle.api.MessageDispatcher; fireFileStarted[java.lang.String]; void; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; fireErrors[]; void; null; getMessageDispatcher()>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; getMessageDispatcher[]; com.puppycrawl.tools.checkstyle.api.MessageDispatcher; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; fireErrors[]; void; fireFileStarted[java.lang.String]; this>
<java.util.HashMap; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; fireErrors[]; void; null; mMessageMap>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessages; getMessages[]; java.util.TreeSet<com.puppycrawl.tools.checkstyle.api.LocalizedMessage>; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; fireErrors[]; void; null; localizedMessages>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessages; reset[]; void; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; fireErrors[]; void; null; localizedMessages>
<com.puppycrawl.tools.checkstyle.api.MessageDispatcher; fireErrors[java.lang.String, java.util.TreeSet<com.puppycrawl.tools.checkstyle.api.LocalizedMessage>]; void; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; fireErrors[]; void; null; getMessageDispatcher()>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; getMessageDispatcher[]; com.puppycrawl.tools.checkstyle.api.MessageDispatcher; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; fireErrors[]; void; fireErrors[java.lang.String, java.util.TreeSet<com.puppycrawl.tools.checkstyle.api.LocalizedMessage>]; this>
<com.puppycrawl.tools.checkstyle.api.MessageDispatcher; fireFileFinished[java.lang.String]; void; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; fireErrors[]; void; null; getMessageDispatcher()>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; getMessageDispatcher[]; com.puppycrawl.tools.checkstyle.api.MessageDispatcher; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; fireErrors[]; void; fireFileFinished[java.lang.String]; this>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.bcel.generic.Utils; isCompatible[com.puppycrawl.tools.checkstyle.bcel.generic.Type, com.puppycrawl.tools.checkstyle.bcel.generic.Type]; boolean; null; aSubType>
<not found; isAssignmentCompatibleWith[]; not found; com.puppycrawl.tools.checkstyle.bcel.generic.Utils; isCompatible[com.puppycrawl.tools.checkstyle.bcel.generic.Type, com.puppycrawl.tools.checkstyle.bcel.generic.Type]; boolean; null; aSubRefType>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.bcel.generic.Utils; isCompatible[com.puppycrawl.tools.checkstyle.bcel.generic.Type, com.puppycrawl.tools.checkstyle.bcel.generic.Type]; boolean; null; aSubType>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.bcel.generic.Utils; isCompatible[com.puppycrawl.tools.checkstyle.bcel.generic.Type, com.puppycrawl.tools.checkstyle.bcel.generic.Type]; boolean; null; aSuperType>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.bcel.generic.Utils; isCompatible[com.puppycrawl.tools.checkstyle.bcel.generic.Type, com.puppycrawl.tools.checkstyle.bcel.generic.Type]; boolean; null; aSuperType>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.bcel.generic.Utils; isCompatible[com.puppycrawl.tools.checkstyle.bcel.generic.Type, com.puppycrawl.tools.checkstyle.bcel.generic.Type]; boolean; null; aSuperType>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.bcel.generic.Utils; isCompatible[com.puppycrawl.tools.checkstyle.bcel.generic.Type, com.puppycrawl.tools.checkstyle.bcel.generic.Type]; boolean; null; aSuperType>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.bcel.generic.Utils; isCompatible[com.puppycrawl.tools.checkstyle.bcel.generic.Type, com.puppycrawl.tools.checkstyle.bcel.generic.Type]; boolean; null; aSuperType>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.bcel.generic.Utils; isCompatible[com.puppycrawl.tools.checkstyle.bcel.generic.Type, com.puppycrawl.tools.checkstyle.bcel.generic.Type]; boolean; null; aSubType>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.bcel.generic.Utils; isCompatible[com.puppycrawl.tools.checkstyle.bcel.generic.Type, com.puppycrawl.tools.checkstyle.bcel.generic.Type]; boolean; null; aSuperType>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.bcel.generic.Utils; isCompatible[com.puppycrawl.tools.checkstyle.bcel.generic.Type, com.puppycrawl.tools.checkstyle.bcel.generic.Type]; boolean; null; aSuperType>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.bcel.generic.Utils; isCompatible[com.puppycrawl.tools.checkstyle.bcel.generic.Type, com.puppycrawl.tools.checkstyle.bcel.generic.Type]; boolean; null; aSuperType>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.bcel.generic.Utils; isCompatible[com.puppycrawl.tools.checkstyle.bcel.generic.Type, com.puppycrawl.tools.checkstyle.bcel.generic.Type]; boolean; null; aSuperType>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.bcel.generic.Utils; isCompatible[com.puppycrawl.tools.checkstyle.bcel.generic.Type, com.puppycrawl.tools.checkstyle.bcel.generic.Type]; boolean; null; aSubType>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.bcel.generic.Utils; isCompatible[com.puppycrawl.tools.checkstyle.bcel.generic.Type, com.puppycrawl.tools.checkstyle.bcel.generic.Type]; boolean; null; aSuperType>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.bcel.generic.Utils; isCompatible[com.puppycrawl.tools.checkstyle.bcel.generic.Type, com.puppycrawl.tools.checkstyle.bcel.generic.Type]; boolean; null; aSuperType>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.bcel.generic.Utils; isCompatible[com.puppycrawl.tools.checkstyle.bcel.generic.Type, com.puppycrawl.tools.checkstyle.bcel.generic.Type]; boolean; null; aSuperType>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.bcel.generic.Utils; isCompatible[com.puppycrawl.tools.checkstyle.bcel.generic.Type, com.puppycrawl.tools.checkstyle.bcel.generic.Type]; boolean; null; aSubType>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.bcel.generic.Utils; isCompatible[com.puppycrawl.tools.checkstyle.bcel.generic.Type, com.puppycrawl.tools.checkstyle.bcel.generic.Type]; boolean; null; aSuperType>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.bcel.generic.Utils; isCompatible[com.puppycrawl.tools.checkstyle.bcel.generic.Type, com.puppycrawl.tools.checkstyle.bcel.generic.Type]; boolean; null; aSuperType>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.bcel.generic.Utils; isCompatible[com.puppycrawl.tools.checkstyle.bcel.generic.Type, com.puppycrawl.tools.checkstyle.bcel.generic.Type]; boolean; null; aSubType>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.bcel.generic.Utils; isCompatible[com.puppycrawl.tools.checkstyle.bcel.generic.Type, com.puppycrawl.tools.checkstyle.bcel.generic.Type]; boolean; null; aSuperType>
<not found; getClassName[]; not found; com.puppycrawl.tools.checkstyle.bcel.generic.FieldOrMethodReference; getClassName[]; java.lang.String; null; mInstruction>
<not found; getClassType[]; not found; com.puppycrawl.tools.checkstyle.bcel.generic.FieldOrMethodReference; getClassType[]; com.puppycrawl.tools.checkstyle.bcel.generic.ObjectType; null; mInstruction>
<not found; getLoadClassType[]; not found; com.puppycrawl.tools.checkstyle.bcel.generic.FieldOrMethodReference; getLoadClassType[]; com.puppycrawl.tools.checkstyle.bcel.generic.ObjectType; null; mInstruction>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.bcel.generic.FieldOrMethodReference; getName[]; java.lang.String; null; mInstruction>
<not found; toString[]; not found; com.puppycrawl.tools.checkstyle.bcel.generic.FieldOrMethodReference; toString[]; java.lang.String; null; mInstruction>
<not found; getConstantPool[]; not found; com.puppycrawl.tools.checkstyle.bcel.generic.FieldOrMethodReference; toString[]; java.lang.String; null; mPoolGen>
<not found; getArgumentTypes[]; not found; com.puppycrawl.tools.checkstyle.bcel.generic.InvokeReference; getArgTypes[]; com.puppycrawl.tools.checkstyle.bcel.generic.Type[]; null; ((InvokeInstruction)mInstruction)>
<not found; accept[]; not found; com.puppycrawl.tools.checkstyle.bcel.JavaClassWalker; walk[com.puppycrawl.tools.checkstyle.bcel.JavaClass]; void; null; aJavaClass>
<com.puppycrawl.tools.checkstyle.bcel.checks.UnreadVariableCheck; checkReferences[]; void; com.puppycrawl.tools.checkstyle.bcel.checks.UnreadVariableCheck.DeepVisitor; leaveSet[java.util.Set]; void; null; this>
<java.util.BitSet; set[int]; void; com.puppycrawl.tools.checkstyle.bcel.checks.UnreadVariableCheck.GenericVisitor; visitLoadInstruction[com.puppycrawl.tools.checkstyle.bcel.checks.LoadInstruction]; void; null; mLocalVariableBitSet>
<not found; getIndex[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.UnreadVariableCheck.GenericVisitor; visitLoadInstruction[com.puppycrawl.tools.checkstyle.bcel.checks.LoadInstruction]; void; null; aInstruction>
<com.puppycrawl.tools.checkstyle.bcel.checks.UnreadVariableCheck; checkReferences[]; void; com.puppycrawl.tools.checkstyle.bcel.checks.UnreadVariableCheck.ClassFileVisitor; visitMethod[com.puppycrawl.tools.checkstyle.bcel.checks.Method]; void; null; this>
<not found; getLocalVariableTable[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.UnreadVariableCheck.ClassFileVisitor; visitMethod[com.puppycrawl.tools.checkstyle.bcel.checks.Method]; void; null; aMethod>
<java.util.BitSet; clear[]; void; com.puppycrawl.tools.checkstyle.bcel.checks.UnreadVariableCheck.ClassFileVisitor; visitMethod[com.puppycrawl.tools.checkstyle.bcel.checks.Method]; void; null; mLocalVariableBitSet>
<not found; getLength[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.UnreadVariableCheck; checkReferences[]; void; null; mLocalVariableTable>
<java.util.BitSet; get[int]; boolean; com.puppycrawl.tools.checkstyle.bcel.checks.UnreadVariableCheck; checkReferences[]; void; null; mLocalVariableBitSet>
<not found; getLocalVariable[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.UnreadVariableCheck; checkReferences[]; void; null; mLocalVariableTable>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.UnreadVariableCheck; checkReferences[]; void; null; localVariable.getName()>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.UnreadVariableCheck; checkReferences[]; void; equals[]; localVariable>
<not found; log[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.UnreadVariableCheck; checkReferences[]; void; null; this>
<not found; getClassName[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.UnreadVariableCheck; checkReferences[]; void; null; mCurrentJavaClass>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.UnreadVariableCheck; checkReferences[]; void; null; mCurrentMethod>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.UnreadVariableCheck; checkReferences[]; void; null; localVariable>
<not found; addFieldScope[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenInheritedFieldCheck; setScope[java.lang.String]; void; null; ((ReferenceVisitor)getVisitor())>
<not found; getVisitor[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenInheritedFieldCheck; setScope[java.lang.String]; void; addFieldScope[]; this>
<com.puppycrawl.tools.checkstyle.api.Scope; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenInheritedFieldCheck; setScope[java.lang.String]; void; null; Scope>
<not found; getClassName[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenInheritedFieldCheck; visitObject[java.lang.Object]; void; null; javaClass>
<not found; getSuperClasses[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenInheritedFieldCheck; visitObject[java.lang.Object]; void; null; javaClass>
<not found; getFields[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenInheritedFieldCheck; visitObject[java.lang.Object]; void; null; javaClass>
<not found; getClassName[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenInheritedFieldCheck; visitObject[java.lang.Object]; void; null; superClass>
<not found; getFields[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenInheritedFieldCheck; visitObject[java.lang.Object]; void; null; superClass>
<not found; isPrivate[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenInheritedFieldCheck; visitObject[java.lang.Object]; void; null; superClassField>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenInheritedFieldCheck; visitObject[java.lang.Object]; void; null; superClassField.getName()>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenInheritedFieldCheck; visitObject[java.lang.Object]; void; equals[]; superClassField>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenInheritedFieldCheck; visitObject[java.lang.Object]; void; null; field>
<com.puppycrawl.tools.checkstyle.bcel.checks.HiddenInheritedFieldCheck; ignore[java.lang.String, com.puppycrawl.tools.checkstyle.bcel.checks.Field]; boolean; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenInheritedFieldCheck; visitObject[java.lang.Object]; void; null; this>
<not found; log[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenInheritedFieldCheck; visitObject[java.lang.Object]; void; null; this>
<not found; toString[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenInheritedFieldCheck; ignore[java.lang.String, com.puppycrawl.tools.checkstyle.bcel.checks.Field]; boolean; null; aField>
<java.lang.String; indexOf[java.lang.String]; int; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenInheritedFieldCheck; ignore[java.lang.String, com.puppycrawl.tools.checkstyle.bcel.checks.Field]; boolean; null; fieldName>
<not found; addMethodScope[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.UnusedMethodCheck; setScope[java.lang.String]; void; null; ((ReferenceVisitor)getVisitor())>
<not found; getVisitor[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.UnusedMethodCheck; setScope[java.lang.String]; void; addMethodScope[]; this>
<com.puppycrawl.tools.checkstyle.api.Scope; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.bcel.checks.UnusedMethodCheck; setScope[java.lang.String]; void; null; Scope>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.bcel.checks.UnusedMethodCheck; leaveSet[java.util.Set]; void; null; aJavaClasses>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.bcel.checks.UnusedMethodCheck; leaveSet[java.util.Set]; void; null; it>
<java.util.Iterator; next[]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.checks.UnusedMethodCheck; leaveSet[java.util.Set]; void; null; it>
<not found; getClassName[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.UnusedMethodCheck; leaveSet[java.util.Set]; void; null; javaClass>
<not found; findJavaClassDef[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.UnusedMethodCheck; leaveSet[java.util.Set]; void; null; this>
<not found; getMethodDefs[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.UnusedMethodCheck; leaveSet[java.util.Set]; void; null; classDef>
<not found; hasReference[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.UnusedMethodCheck; leaveSet[java.util.Set]; void; null; classDef>
<not found; getReferenceDAO[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.UnusedMethodCheck; leaveSet[java.util.Set]; void; null; this>
<not found; getMethod[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.UnusedMethodCheck; leaveSet[java.util.Set]; void; null; methodDefs[i]>
<com.puppycrawl.tools.checkstyle.bcel.checks.UnusedMethodCheck; ignore[java.lang.String, com.puppycrawl.tools.checkstyle.bcel.checks.Method]; boolean; com.puppycrawl.tools.checkstyle.bcel.checks.UnusedMethodCheck; leaveSet[java.util.Set]; void; null; this>
<not found; log[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.UnusedMethodCheck; leaveSet[java.util.Set]; void; null; this>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.UnusedMethodCheck; ignore[java.lang.String, com.puppycrawl.tools.checkstyle.bcel.checks.Method]; boolean; null; aMethod>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.bcel.checks.UnusedMethodCheck; ignore[java.lang.String, com.puppycrawl.tools.checkstyle.bcel.checks.Method]; boolean; null; methodName>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.bcel.checks.UnusedMethodCheck; ignore[java.lang.String, com.puppycrawl.tools.checkstyle.bcel.checks.Method]; boolean; null; methodName>
<not found; addFieldScope[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenStaticMethodCheck; setScope[java.lang.String]; void; null; ((ReferenceVisitor)getVisitor())>
<not found; getVisitor[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenStaticMethodCheck; setScope[java.lang.String]; void; addFieldScope[]; this>
<com.puppycrawl.tools.checkstyle.api.Scope; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenStaticMethodCheck; setScope[java.lang.String]; void; null; Scope>
<not found; getClassName[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenStaticMethodCheck; visitObject[java.lang.Object]; void; null; javaClass>
<not found; getSuperClasses[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenStaticMethodCheck; visitObject[java.lang.Object]; void; null; javaClass>
<not found; getMethods[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenStaticMethodCheck; visitObject[java.lang.Object]; void; null; javaClass>
<not found; isPrivate[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenStaticMethodCheck; visitObject[java.lang.Object]; void; null; method>
<not found; isStatic[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenStaticMethodCheck; visitObject[java.lang.Object]; void; null; method>
<not found; getClassName[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenStaticMethodCheck; visitObject[java.lang.Object]; void; null; superClass>
<not found; getMethods[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenStaticMethodCheck; visitObject[java.lang.Object]; void; null; superClass>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenStaticMethodCheck; visitObject[java.lang.Object]; void; null; superClassMethod.getName()>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenStaticMethodCheck; visitObject[java.lang.Object]; void; equals[]; superClassMethod>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenStaticMethodCheck; visitObject[java.lang.Object]; void; null; method>
<com.puppycrawl.tools.checkstyle.bcel.checks.HiddenStaticMethodCheck; ignore[java.lang.String, com.puppycrawl.tools.checkstyle.bcel.checks.Method]; boolean; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenStaticMethodCheck; visitObject[java.lang.Object]; void; null; this>
<not found; getArgumentTypes[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenStaticMethodCheck; visitObject[java.lang.Object]; void; null; method>
<not found; getArgumentTypes[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenStaticMethodCheck; visitObject[java.lang.Object]; void; null; superClassMethod>
<not found; equals[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenStaticMethodCheck; visitObject[java.lang.Object]; void; null; methodTypes[arg]>
<not found; log[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenStaticMethodCheck; visitObject[java.lang.Object]; void; null; this>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenStaticMethodCheck; ignore[java.lang.String, com.puppycrawl.tools.checkstyle.bcel.checks.Method]; boolean; null; aMethod>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenStaticMethodCheck; ignore[java.lang.String, com.puppycrawl.tools.checkstyle.bcel.checks.Method]; boolean; null; methodName>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenStaticMethodCheck; ignore[java.lang.String, com.puppycrawl.tools.checkstyle.bcel.checks.Method]; boolean; null; methodName>
<java.lang.String; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenStaticMethodCheck; ignore[java.lang.String, com.puppycrawl.tools.checkstyle.bcel.checks.Method]; boolean; null; methodName>
<not found; indexOf[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenStaticMethodCheck; ignore[java.lang.String, com.puppycrawl.tools.checkstyle.bcel.checks.Method]; boolean; null; aMethod.toString()>
<not found; toString[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenStaticMethodCheck; ignore[java.lang.String, com.puppycrawl.tools.checkstyle.bcel.checks.Method]; boolean; indexOf[]; aMethod>
<not found; addFieldScope[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.UnreadFieldCheck; setScope[java.lang.String]; void; null; ((ReferenceVisitor)getVisitor())>
<not found; getVisitor[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.UnreadFieldCheck; setScope[java.lang.String]; void; addFieldScope[]; this>
<com.puppycrawl.tools.checkstyle.api.Scope; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.bcel.checks.UnreadFieldCheck; setScope[java.lang.String]; void; null; Scope>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.bcel.checks.UnreadFieldCheck; leaveSet[java.util.Set]; void; null; aJavaClasses>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.bcel.checks.UnreadFieldCheck; leaveSet[java.util.Set]; void; null; it>
<java.util.Iterator; next[]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.checks.UnreadFieldCheck; leaveSet[java.util.Set]; void; null; it>
<not found; getClassName[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.UnreadFieldCheck; leaveSet[java.util.Set]; void; null; javaClass>
<not found; findJavaClassDef[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.UnreadFieldCheck; leaveSet[java.util.Set]; void; null; this>
<not found; getFieldDefs[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.UnreadFieldCheck; leaveSet[java.util.Set]; void; null; classDef>
<not found; getReadReferenceCount[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.UnreadFieldCheck; leaveSet[java.util.Set]; void; null; fieldDefs[i]>
<not found; getField[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.UnreadFieldCheck; leaveSet[java.util.Set]; void; null; fieldDefs[i]>
<not found; isFinal[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.UnreadFieldCheck; leaveSet[java.util.Set]; void; null; field>
<not found; ignore[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.UnreadFieldCheck; leaveSet[java.util.Set]; void; null; this>
<not found; log[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.UnreadFieldCheck; leaveSet[java.util.Set]; void; null; this>
<com.puppycrawl.tools.checkstyle.bcel.checks.AbstractReferenceCheck; setIgnoreClassName[java.lang.String]; void; com.puppycrawl.tools.checkstyle.bcel.checks.AbstractReferenceCheck; AbstractReferenceCheck[]; void; null; this>
<com.puppycrawl.tools.checkstyle.bcel.checks.AbstractReferenceCheck; setIgnoreName[java.lang.String]; void; com.puppycrawl.tools.checkstyle.bcel.checks.AbstractReferenceCheck; AbstractReferenceCheck[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.Scope; getInstance[java.lang.String]; com.puppycrawl.tools.checkstyle.api.Scope; com.puppycrawl.tools.checkstyle.bcel.checks.AbstractReferenceCheck; setScope[java.lang.String]; void; null; Scope>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.AbstractReferenceCheck; ignore[java.lang.String, com.puppycrawl.tools.checkstyle.bcel.checks.FieldOrMethod]; boolean; null; aFieldOrMethod>
<com.puppycrawl.tools.checkstyle.bcel.checks.AbstractReferenceCheck; equalScope[com.puppycrawl.tools.checkstyle.bcel.checks.FieldOrMethod]; boolean; com.puppycrawl.tools.checkstyle.bcel.checks.AbstractReferenceCheck; ignore[java.lang.String, com.puppycrawl.tools.checkstyle.bcel.checks.FieldOrMethod]; boolean; null; this>
<java.util.regex.Matcher; matches[]; boolean; com.puppycrawl.tools.checkstyle.bcel.checks.AbstractReferenceCheck; ignore[java.lang.String, com.puppycrawl.tools.checkstyle.bcel.checks.FieldOrMethod]; boolean; null; mIgnoreClassNameRegexp.matcher(aClassName)>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.bcel.checks.AbstractReferenceCheck; ignore[java.lang.String, com.puppycrawl.tools.checkstyle.bcel.checks.FieldOrMethod]; boolean; matches[]; mIgnoreClassNameRegexp>
<java.util.regex.Matcher; matches[]; boolean; com.puppycrawl.tools.checkstyle.bcel.checks.AbstractReferenceCheck; ignore[java.lang.String, com.puppycrawl.tools.checkstyle.bcel.checks.FieldOrMethod]; boolean; null; mIgnoreNameRegexp.matcher(fieldOrMethodName)>
<java.util.regex.Pattern; matcher[java.lang.CharSequence]; java.util.regex.Matcher; com.puppycrawl.tools.checkstyle.bcel.checks.AbstractReferenceCheck; ignore[java.lang.String, com.puppycrawl.tools.checkstyle.bcel.checks.FieldOrMethod]; boolean; matches[]; mIgnoreNameRegexp>
<not found; isPrivate[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.AbstractReferenceCheck; equalScope[com.puppycrawl.tools.checkstyle.bcel.checks.FieldOrMethod]; boolean; null; aFieldOrMethod>
<not found; isProtected[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.AbstractReferenceCheck; equalScope[com.puppycrawl.tools.checkstyle.bcel.checks.FieldOrMethod]; boolean; null; aFieldOrMethod>
<not found; isPublic[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.AbstractReferenceCheck; equalScope[com.puppycrawl.tools.checkstyle.bcel.checks.FieldOrMethod]; boolean; null; aFieldOrMethod>
<com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.bcel.checks.AbstractReferenceCheck; setIgnoreClassName[java.lang.String]; void; null; Utils>
<com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.bcel.checks.AbstractReferenceCheck; setIgnoreName[java.lang.String]; void; null; Utils>
<not found; getInstance[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.AbstractReferenceCheck; getVisitor[]; com.puppycrawl.tools.checkstyle.bcel.checks.IDeepVisitor; null; ReferenceVisitor>
<not found; getReferenceDAO[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.AbstractReferenceCheck; getReferenceDAO[]; com.puppycrawl.tools.checkstyle.bcel.checks.ReferenceDAO; null; ((ReferenceVisitor)getVisitor())>
<com.puppycrawl.tools.checkstyle.bcel.checks.AbstractReferenceCheck; getVisitor[]; com.puppycrawl.tools.checkstyle.bcel.checks.IDeepVisitor; com.puppycrawl.tools.checkstyle.bcel.checks.AbstractReferenceCheck; getReferenceDAO[]; com.puppycrawl.tools.checkstyle.bcel.checks.ReferenceDAO; getReferenceDAO[]; this>
<not found; findJavaClassDef[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.AbstractReferenceCheck; findJavaClassDef[com.puppycrawl.tools.checkstyle.bcel.checks.JavaClass]; com.puppycrawl.tools.checkstyle.bcel.checks.JavaClassDefinition; null; getReferenceDAO()>
<com.puppycrawl.tools.checkstyle.bcel.checks.AbstractReferenceCheck; getReferenceDAO[]; com.puppycrawl.tools.checkstyle.bcel.checks.ReferenceDAO; com.puppycrawl.tools.checkstyle.bcel.checks.AbstractReferenceCheck; findJavaClassDef[com.puppycrawl.tools.checkstyle.bcel.checks.JavaClass]; com.puppycrawl.tools.checkstyle.bcel.checks.JavaClassDefinition; findJavaClassDef[]; this>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitCode[com.puppycrawl.tools.checkstyle.bcel.Code]; void; null; mVisitors>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitCode[com.puppycrawl.tools.checkstyle.bcel.Code]; void; null; iter>
<java.util.Iterator; next[]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitCode[com.puppycrawl.tools.checkstyle.bcel.Code]; void; null; iter>
<not found; getClassFileVisitor[]; not found; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitCode[com.puppycrawl.tools.checkstyle.bcel.Code]; void; null; visitor>
<not found; accept[]; not found; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitCode[com.puppycrawl.tools.checkstyle.bcel.Code]; void; null; aCode>
<not found; getCode[]; not found; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitCode[com.puppycrawl.tools.checkstyle.bcel.Code]; void; null; aCode>
<not found; iterator[]; not found; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitCode[com.puppycrawl.tools.checkstyle.bcel.Code]; void; null; list>
<not found; iterator[]; not found; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitCode[com.puppycrawl.tools.checkstyle.bcel.Code]; void; null; list>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitCode[com.puppycrawl.tools.checkstyle.bcel.Code]; void; null; iter>
<java.util.Iterator; next[]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitCode[com.puppycrawl.tools.checkstyle.bcel.Code]; void; null; iter>
<com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitInstructionHandle[com.puppycrawl.tools.checkstyle.bcel.InstructionHandle]; void; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitCode[com.puppycrawl.tools.checkstyle.bcel.Code]; void; null; this>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitInstructionHandle[com.puppycrawl.tools.checkstyle.bcel.InstructionHandle]; void; null; mVisitors>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitInstructionHandle[com.puppycrawl.tools.checkstyle.bcel.InstructionHandle]; void; null; iter>
<java.util.Iterator; next[]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitInstructionHandle[com.puppycrawl.tools.checkstyle.bcel.InstructionHandle]; void; null; iter>
<not found; getGenericVisitor[]; not found; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitInstructionHandle[com.puppycrawl.tools.checkstyle.bcel.InstructionHandle]; void; null; visitor>
<not found; accept[]; not found; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitInstructionHandle[com.puppycrawl.tools.checkstyle.bcel.InstructionHandle]; void; null; aInstruction>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitConstantPool[com.puppycrawl.tools.checkstyle.bcel.ConstantPool]; void; null; mVisitors>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitConstantPool[com.puppycrawl.tools.checkstyle.bcel.ConstantPool]; void; null; iter>
<java.util.Iterator; next[]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitConstantPool[com.puppycrawl.tools.checkstyle.bcel.ConstantPool]; void; null; iter>
<not found; getClassFileVisitor[]; not found; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitConstantPool[com.puppycrawl.tools.checkstyle.bcel.ConstantPool]; void; null; visitor>
<not found; accept[]; not found; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitConstantPool[com.puppycrawl.tools.checkstyle.bcel.ConstantPool]; void; null; aConstantPool>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitField[com.puppycrawl.tools.checkstyle.bcel.Field]; void; null; mVisitors>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitField[com.puppycrawl.tools.checkstyle.bcel.Field]; void; null; iter>
<java.util.Iterator; next[]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitField[com.puppycrawl.tools.checkstyle.bcel.Field]; void; null; iter>
<not found; getClassFileVisitor[]; not found; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitField[com.puppycrawl.tools.checkstyle.bcel.Field]; void; null; visitor>
<not found; accept[]; not found; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitField[com.puppycrawl.tools.checkstyle.bcel.Field]; void; null; aField>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitJavaClass[com.puppycrawl.tools.checkstyle.bcel.JavaClass]; void; null; mVisitors>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitJavaClass[com.puppycrawl.tools.checkstyle.bcel.JavaClass]; void; null; iter>
<java.util.Iterator; next[]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitJavaClass[com.puppycrawl.tools.checkstyle.bcel.JavaClass]; void; null; iter>
<not found; getClassFileVisitor[]; not found; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitJavaClass[com.puppycrawl.tools.checkstyle.bcel.JavaClass]; void; null; visitor>
<not found; accept[]; not found; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitJavaClass[com.puppycrawl.tools.checkstyle.bcel.JavaClass]; void; null; aJavaClass>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitLocalVariableTable[com.puppycrawl.tools.checkstyle.bcel.LocalVariableTable]; void; null; mVisitors>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitLocalVariableTable[com.puppycrawl.tools.checkstyle.bcel.LocalVariableTable]; void; null; iter>
<java.util.Iterator; next[]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitLocalVariableTable[com.puppycrawl.tools.checkstyle.bcel.LocalVariableTable]; void; null; iter>
<not found; getClassFileVisitor[]; not found; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitLocalVariableTable[com.puppycrawl.tools.checkstyle.bcel.LocalVariableTable]; void; null; visitor>
<not found; accept[]; not found; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitLocalVariableTable[com.puppycrawl.tools.checkstyle.bcel.LocalVariableTable]; void; null; aTable>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitMethod[com.puppycrawl.tools.checkstyle.bcel.Method]; void; null; mVisitors>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitMethod[com.puppycrawl.tools.checkstyle.bcel.Method]; void; null; iter>
<java.util.Iterator; next[]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitMethod[com.puppycrawl.tools.checkstyle.bcel.Method]; void; null; iter>
<not found; getClassFileVisitor[]; not found; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitMethod[com.puppycrawl.tools.checkstyle.bcel.Method]; void; null; visitor>
<not found; accept[]; not found; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitMethod[com.puppycrawl.tools.checkstyle.bcel.Method]; void; null; aMethod>
<com.puppycrawl.tools.checkstyle.bcel.ReferenceVisitor; addInvokeReference[com.puppycrawl.tools.checkstyle.bcel.InvokeReference]; void; com.puppycrawl.tools.checkstyle.bcel.ReferenceVisitor.GenericVisitor; visitINVOKESPECIAL[com.puppycrawl.tools.checkstyle.bcel.INVOKESPECIAL]; void; null; this>
<com.puppycrawl.tools.checkstyle.bcel.ReferenceVisitor; addInvokeReference[com.puppycrawl.tools.checkstyle.bcel.InvokeReference]; void; com.puppycrawl.tools.checkstyle.bcel.ReferenceVisitor.GenericVisitor; visitINVOKESTATIC[com.puppycrawl.tools.checkstyle.bcel.INVOKESTATIC]; void; null; this>
<com.puppycrawl.tools.checkstyle.bcel.ReferenceVisitor; addInvokeReference[com.puppycrawl.tools.checkstyle.bcel.InvokeReference]; void; com.puppycrawl.tools.checkstyle.bcel.ReferenceVisitor.GenericVisitor; visitINVOKEVIRTUAL[com.puppycrawl.tools.checkstyle.bcel.INVOKEVIRTUAL]; void; null; this>
<com.puppycrawl.tools.checkstyle.bcel.ReferenceVisitor; addFieldReference[com.puppycrawl.tools.checkstyle.bcel.FieldReference]; void; com.puppycrawl.tools.checkstyle.bcel.ReferenceVisitor.GenericVisitor; visitGETSTATIC[com.puppycrawl.tools.checkstyle.bcel.GETSTATIC]; void; null; this>
<com.puppycrawl.tools.checkstyle.bcel.ReferenceVisitor; addFieldReference[com.puppycrawl.tools.checkstyle.bcel.FieldReference]; void; com.puppycrawl.tools.checkstyle.bcel.ReferenceVisitor.GenericVisitor; visitGETFIELD[com.puppycrawl.tools.checkstyle.bcel.GETFIELD]; void; null; this>
<com.puppycrawl.tools.checkstyle.bcel.ReferenceVisitor; addFieldReference[com.puppycrawl.tools.checkstyle.bcel.FieldReference]; void; com.puppycrawl.tools.checkstyle.bcel.ReferenceVisitor.GenericVisitor; visitPUTSTATIC[com.puppycrawl.tools.checkstyle.bcel.PUTSTATIC]; void; null; this>
<com.puppycrawl.tools.checkstyle.bcel.ReferenceVisitor; addFieldReference[com.puppycrawl.tools.checkstyle.bcel.FieldReference]; void; com.puppycrawl.tools.checkstyle.bcel.ReferenceVisitor.GenericVisitor; visitPUTFIELD[com.puppycrawl.tools.checkstyle.bcel.PUTFIELD]; void; null; this>
<not found; setGenericVisitor[]; not found; com.puppycrawl.tools.checkstyle.bcel.ReferenceVisitor; ReferenceVisitor[]; void; null; this>
<com.puppycrawl.tools.checkstyle.bcel.ReferenceVisitor; addFieldScope[com.puppycrawl.tools.checkstyle.api.Scope]; void; com.puppycrawl.tools.checkstyle.bcel.ReferenceVisitor; ReferenceVisitor[]; void; null; this>
<not found; addInvokeReference[]; not found; com.puppycrawl.tools.checkstyle.bcel.ReferenceVisitor; addInvokeReference[com.puppycrawl.tools.checkstyle.bcel.InvokeReference]; void; null; getReferenceDAO()>
<com.puppycrawl.tools.checkstyle.bcel.ReferenceVisitor; getReferenceDAO[]; com.puppycrawl.tools.checkstyle.bcel.ReferenceDAO; com.puppycrawl.tools.checkstyle.bcel.ReferenceVisitor; addInvokeReference[com.puppycrawl.tools.checkstyle.bcel.InvokeReference]; void; addInvokeReference[]; this>
<not found; addFieldReference[]; not found; com.puppycrawl.tools.checkstyle.bcel.ReferenceVisitor; addFieldReference[com.puppycrawl.tools.checkstyle.bcel.FieldReference]; void; null; getReferenceDAO()>
<com.puppycrawl.tools.checkstyle.bcel.ReferenceVisitor; getReferenceDAO[]; com.puppycrawl.tools.checkstyle.bcel.ReferenceDAO; com.puppycrawl.tools.checkstyle.bcel.ReferenceVisitor; addFieldReference[com.puppycrawl.tools.checkstyle.bcel.FieldReference]; void; addFieldReference[]; this>
<not found; getConstantPool[]; not found; com.puppycrawl.tools.checkstyle.bcel.ReferenceVisitor; visitObject[java.lang.Object]; void; null; javaClass>
<not found; findJavaClassDef[]; not found; com.puppycrawl.tools.checkstyle.bcel.ReferenceVisitor; findJavaClassDef[com.puppycrawl.tools.checkstyle.bcel.JavaClass]; com.puppycrawl.tools.checkstyle.bcel.JavaClassDefinition; null; getReferenceDAO()>
<com.puppycrawl.tools.checkstyle.bcel.ReferenceVisitor; getReferenceDAO[]; com.puppycrawl.tools.checkstyle.bcel.ReferenceDAO; com.puppycrawl.tools.checkstyle.bcel.ReferenceVisitor; findJavaClassDef[com.puppycrawl.tools.checkstyle.bcel.JavaClass]; com.puppycrawl.tools.checkstyle.bcel.JavaClassDefinition; findJavaClassDef[]; this>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.bcel.ReferenceVisitor; addFieldScope[com.puppycrawl.tools.checkstyle.api.Scope]; void; null; mFieldScopes>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.bcel.ReferenceVisitor; addMethodScope[com.puppycrawl.tools.checkstyle.api.Scope]; void; null; mMethodScopes>
<java.lang.Class; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.bcel.BcelCheckTestCase; createCheckConfig[java.lang.Class]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; null; aClazz>
<com.puppycrawl.tools.checkstyle.bcel.BcelCheckTestCase; createCheckerConfig[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; com.puppycrawl.tools.checkstyle.bcel.BcelCheckTestCase; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; this>
<com.puppycrawl.tools.checkstyle.Checker; setLocaleCountry[java.lang.String]; void; com.puppycrawl.tools.checkstyle.bcel.BcelCheckTestCase; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; c>
<java.util.Locale; getCountry[]; java.lang.String; com.puppycrawl.tools.checkstyle.bcel.BcelCheckTestCase; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; locale>
<com.puppycrawl.tools.checkstyle.Checker; setLocaleLanguage[java.lang.String]; void; com.puppycrawl.tools.checkstyle.bcel.BcelCheckTestCase; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; c>
<java.util.Locale; getLanguage[]; java.lang.String; com.puppycrawl.tools.checkstyle.bcel.BcelCheckTestCase; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; locale>
<com.puppycrawl.tools.checkstyle.api.AutomaticBean; configure[com.puppycrawl.tools.checkstyle.api.Configuration]; void; com.puppycrawl.tools.checkstyle.bcel.BcelCheckTestCase; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; c>
<com.puppycrawl.tools.checkstyle.Checker; addListener[com.puppycrawl.tools.checkstyle.api.AuditListener]; void; com.puppycrawl.tools.checkstyle.bcel.BcelCheckTestCase; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; null; c>
<com.puppycrawl.tools.checkstyle.bcel.BcelCheckTestCase; createCheckConfig[java.lang.Class]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; com.puppycrawl.tools.checkstyle.bcel.BcelCheckTestCase; createCheckerConfig[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; null; this>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; com.puppycrawl.tools.checkstyle.bcel.BcelCheckTestCase; createCheckerConfig[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; null; dc>
<com.puppycrawl.tools.checkstyle.DefaultConfiguration; addChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; com.puppycrawl.tools.checkstyle.bcel.BcelCheckTestCase; createCheckerConfig[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; null; twConf>
<java.lang.System; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.bcel.BcelCheckTestCase; getPath[java.lang.String]; java.lang.String; null; System>
<java.io.File; getCanonicalPath[]; java.lang.String; com.puppycrawl.tools.checkstyle.bcel.BcelCheckTestCase; getPath[java.lang.String]; java.lang.String; null; f>
<com.puppycrawl.tools.checkstyle.bcel.BcelCheckTestCase; verify[com.puppycrawl.tools.checkstyle.Checker, java.lang.String, java.lang.String, java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.bcel.BcelCheckTestCase; verify[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String, java.lang.String[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.bcel.BcelCheckTestCase; createChecker[com.puppycrawl.tools.checkstyle.api.Configuration]; com.puppycrawl.tools.checkstyle.Checker; com.puppycrawl.tools.checkstyle.bcel.BcelCheckTestCase; verify[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String, java.lang.String[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.bcel.BcelCheckTestCase; verify[com.puppycrawl.tools.checkstyle.Checker, java.lang.String, java.lang.String, java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.bcel.BcelCheckTestCase; verify[com.puppycrawl.tools.checkstyle.Checker, java.lang.String, java.lang.String[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.bcel.BcelCheckTestCase; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; com.puppycrawl.tools.checkstyle.bcel.BcelCheckTestCase; verify[com.puppycrawl.tools.checkstyle.Checker, java.lang.String, java.lang.String, java.lang.String[]]; void; null; this>
<java.io.PrintStream; flush[]; void; com.puppycrawl.tools.checkstyle.bcel.BcelCheckTestCase; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; null; mStream>
<com.puppycrawl.tools.checkstyle.Checker; process[java.util.List<java.io.File>]; int; com.puppycrawl.tools.checkstyle.bcel.BcelCheckTestCase; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; null; aC>
<java.io.ByteArrayOutputStream; toByteArray[]; byte[]; com.puppycrawl.tools.checkstyle.bcel.BcelCheckTestCase; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; null; mBAOS>
<java.io.LineNumberReader; readLine[]; java.lang.String; com.puppycrawl.tools.checkstyle.bcel.BcelCheckTestCase; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; null; lnr>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.bcel.BcelCheckTestCase; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; null; this>
<not found; assertEquals[]; not found; com.puppycrawl.tools.checkstyle.bcel.BcelCheckTestCase; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; null; this>
<java.io.LineNumberReader; readLine[]; java.lang.String; com.puppycrawl.tools.checkstyle.bcel.BcelCheckTestCase; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; null; lnr>
<com.puppycrawl.tools.checkstyle.Checker; destroy[]; void; com.puppycrawl.tools.checkstyle.bcel.BcelCheckTestCase; verify[com.puppycrawl.tools.checkstyle.Checker, java.io.File[], java.lang.String, java.lang.String[]]; void; null; aC>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenInheritedFieldTest; testIt[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenInheritedFieldTest; testIt[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenInheritedFieldTest; testIt[]; void; null; this>
<not found; createCheckConfig[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenStaticMethodTest; testIt[]; void; null; this>
<not found; verify[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenStaticMethodTest; testIt[]; void; null; this>
<not found; getPath[]; not found; com.puppycrawl.tools.checkstyle.bcel.checks.HiddenStaticMethodTest; testIt[]; void; null; this>
<com.puppycrawl.tools.checkstyle.bcel.checks.SubClass; staticMethod[]; int; com.puppycrawl.tools.checkstyle.bcel.checks.SubClass; callStaticMethodWithObject[]; void; null; s>
<com.puppycrawl.tools.checkstyle.bcel.checks.SubClass; staticMethod[]; int; com.puppycrawl.tools.checkstyle.bcel.checks.SubClass; callStaticMethodWithClass[]; void; null; SubClass>
<com.puppycrawl.tools.checkstyle.bcel.checks.SubClass; staticMethod[]; int; com.puppycrawl.tools.checkstyle.bcel.checks.SubClass; callStaticMethodWithThis[]; void; null; this>
<not found; setNamespaceAware[]; not found; com.puppycrawl.tools.checkstyle.NamespacesSAXParserFactoryImpl; NamespacesSAXParserFactoryImpl[]; void; null; this>
<java.io.PrintWriter; println[java.lang.String]; void; com.mycompany.listeners.VerboseListener; auditStarted[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; mWriter>
<java.io.PrintWriter; println[java.lang.String]; void; com.mycompany.listeners.VerboseListener; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; mWriter>
<java.io.PrintWriter; flush[]; void; com.mycompany.listeners.VerboseListener; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; mWriter>
<java.io.PrintWriter; close[]; void; com.mycompany.listeners.VerboseListener; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; mWriter>
<java.io.PrintWriter; println[java.lang.String]; void; com.mycompany.listeners.VerboseListener; fileStarted[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; mWriter>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getFileName[]; java.lang.String; com.mycompany.listeners.VerboseListener; fileStarted[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; aEvt>
<java.io.PrintWriter; println[java.lang.String]; void; com.mycompany.listeners.VerboseListener; fileFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; mWriter>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getFileName[]; java.lang.String; com.mycompany.listeners.VerboseListener; fileFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; aEvt>
<com.mycompany.listeners.VerboseListener; printEvent[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; com.mycompany.listeners.VerboseListener; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; this>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.mycompany.listeners.VerboseListener; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; SeverityLevel.ERROR>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getSeverityLevel[]; com.puppycrawl.tools.checkstyle.api.SeverityLevel; com.mycompany.listeners.VerboseListener; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; aEvt>
<com.mycompany.listeners.VerboseListener; printEvent[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; com.mycompany.listeners.VerboseListener; addException[com.puppycrawl.tools.checkstyle.api.AuditEvent, java.lang.Throwable]; void; null; this>
<java.lang.Throwable; printStackTrace[java.io.PrintStream]; void; com.mycompany.listeners.VerboseListener; addException[com.puppycrawl.tools.checkstyle.api.AuditEvent, java.lang.Throwable]; void; null; aThrowable>
<java.io.PrintWriter; println[java.lang.String]; void; com.mycompany.listeners.VerboseListener; printEvent[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; mWriter>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getFileName[]; java.lang.String; com.mycompany.listeners.VerboseListener; printEvent[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; aEvt>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getLine[]; int; com.mycompany.listeners.VerboseListener; printEvent[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; aEvt>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getColumn[]; int; com.mycompany.listeners.VerboseListener; printEvent[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; aEvt>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getSeverityLevel[]; com.puppycrawl.tools.checkstyle.api.SeverityLevel; com.mycompany.listeners.VerboseListener; printEvent[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; aEvt>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getMessage[]; java.lang.String; com.mycompany.listeners.VerboseListener; printEvent[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; aEvt>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getSourceName[]; java.lang.String; com.mycompany.listeners.VerboseListener; printEvent[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; aEvt>
<not found; getFactory[]; not found; com.mycompany.listeners.CommonsLoggingListener; CommonsLoggingListener[]; void; null; LogFactory>
<not found; getInstance[]; not found; com.mycompany.listeners.CommonsLoggingListener; auditStarted[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; mLogFactory>
<not found; info[]; not found; com.mycompany.listeners.CommonsLoggingListener; auditStarted[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; log>
<not found; getInstance[]; not found; com.mycompany.listeners.CommonsLoggingListener; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; mLogFactory>
<not found; info[]; not found; com.mycompany.listeners.CommonsLoggingListener; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; log>
<not found; getInstance[]; not found; com.mycompany.listeners.CommonsLoggingListener; fileStarted[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; mLogFactory>
<not found; info[]; not found; com.mycompany.listeners.CommonsLoggingListener; fileStarted[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; log>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getFileName[]; java.lang.String; com.mycompany.listeners.CommonsLoggingListener; fileStarted[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; aEvt>
<not found; getInstance[]; not found; com.mycompany.listeners.CommonsLoggingListener; fileFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; mLogFactory>
<not found; info[]; not found; com.mycompany.listeners.CommonsLoggingListener; fileFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; log>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getFileName[]; java.lang.String; com.mycompany.listeners.CommonsLoggingListener; fileFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; aEvt>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getSeverityLevel[]; com.puppycrawl.tools.checkstyle.api.SeverityLevel; com.mycompany.listeners.CommonsLoggingListener; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; aEvt>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.mycompany.listeners.CommonsLoggingListener; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; SeverityLevel.IGNORE>
<not found; getInstance[]; not found; com.mycompany.listeners.CommonsLoggingListener; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; mLogFactory>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getSourceName[]; java.lang.String; com.mycompany.listeners.CommonsLoggingListener; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; aEvt>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getFileName[]; java.lang.String; com.mycompany.listeners.CommonsLoggingListener; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; aEvt>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getMessage[]; java.lang.String; com.mycompany.listeners.CommonsLoggingListener; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; aEvt>
<java.lang.String; length[]; int; com.mycompany.listeners.CommonsLoggingListener; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; message>
<java.lang.StringBuffer; append[int]; java.lang.StringBuffer; com.mycompany.listeners.CommonsLoggingListener; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; sb.append("Line: ")>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; com.mycompany.listeners.CommonsLoggingListener; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; append[int]; sb>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getLine[]; int; com.mycompany.listeners.CommonsLoggingListener; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; aEvt>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getColumn[]; int; com.mycompany.listeners.CommonsLoggingListener; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; aEvt>
<java.lang.StringBuffer; append[int]; java.lang.StringBuffer; com.mycompany.listeners.CommonsLoggingListener; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; sb.append(" Column: ")>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; com.mycompany.listeners.CommonsLoggingListener; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; append[int]; sb>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getColumn[]; int; com.mycompany.listeners.CommonsLoggingListener; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; aEvt>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; com.mycompany.listeners.CommonsLoggingListener; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; sb.append(" Message: ")>
<java.lang.StringBuffer; append[java.lang.String]; java.lang.StringBuffer; com.mycompany.listeners.CommonsLoggingListener; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; append[java.lang.String]; sb>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.mycompany.listeners.CommonsLoggingListener; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; aEvt.getSeverityLevel()>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getSeverityLevel[]; com.puppycrawl.tools.checkstyle.api.SeverityLevel; com.mycompany.listeners.CommonsLoggingListener; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; equals[java.lang.Object]; aEvt>
<not found; warn[]; not found; com.mycompany.listeners.CommonsLoggingListener; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; log>
<java.lang.StringBuffer; toString[]; java.lang.String; com.mycompany.listeners.CommonsLoggingListener; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; sb>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.mycompany.listeners.CommonsLoggingListener; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; aEvt.getSeverityLevel()>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getSeverityLevel[]; com.puppycrawl.tools.checkstyle.api.SeverityLevel; com.mycompany.listeners.CommonsLoggingListener; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; equals[java.lang.Object]; aEvt>
<not found; info[]; not found; com.mycompany.listeners.CommonsLoggingListener; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; log>
<java.lang.StringBuffer; toString[]; java.lang.String; com.mycompany.listeners.CommonsLoggingListener; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; sb>
<not found; error[]; not found; com.mycompany.listeners.CommonsLoggingListener; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; log>
<java.lang.StringBuffer; toString[]; java.lang.String; com.mycompany.listeners.CommonsLoggingListener; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; sb>
<not found; getInstance[]; not found; com.mycompany.listeners.CommonsLoggingListener; addException[com.puppycrawl.tools.checkstyle.api.AuditEvent, java.lang.Throwable]; void; null; mLogFactory>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getSourceName[]; java.lang.String; com.mycompany.listeners.CommonsLoggingListener; addException[com.puppycrawl.tools.checkstyle.api.AuditEvent, java.lang.Throwable]; void; null; aEvt>
<not found; error[]; not found; com.mycompany.listeners.CommonsLoggingListener; addException[com.puppycrawl.tools.checkstyle.api.AuditEvent, java.lang.Throwable]; void; null; log>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getFileName[]; java.lang.String; com.mycompany.listeners.CommonsLoggingListener; addException[com.puppycrawl.tools.checkstyle.api.AuditEvent, java.lang.Throwable]; void; null; aEvt>
<com.puppycrawl.tools.checkstyle.DefaultLogger; auditStarted[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; com.mycompany.listeners.MailLogger; auditStarted[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; mLogger>
<com.puppycrawl.tools.checkstyle.DefaultLogger; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; com.mycompany.listeners.MailLogger; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; mLogger>
<java.lang.System; getProperties[]; java.util.Properties; com.mycompany.listeners.MailLogger; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; System>
<java.util.Properties; get[java.lang.Object]; java.lang.Object; com.mycompany.listeners.MailLogger; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; properties>
<java.util.Properties; load[java.io.InputStream]; void; com.mycompany.listeners.MailLogger; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; fileProperties>
<java.io.InputStream; close[]; void; com.mycompany.listeners.MailLogger; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; is>
<java.util.Properties; keys[]; java.util.Enumeration<java.lang.Object>; com.mycompany.listeners.MailLogger; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; fileProperties>
<java.util.Enumeration; hasMoreElements[]; boolean; com.mycompany.listeners.MailLogger; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; e>
<java.util.Enumeration; nextElement[]; java.lang.Object; com.mycompany.listeners.MailLogger; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; e>
<java.util.Properties; getProperty[java.lang.String]; java.lang.String; com.mycompany.listeners.MailLogger; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; fileProperties>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.mycompany.listeners.MailLogger; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; properties>
<com.mycompany.listeners.MailLogger; getValue[java.util.Properties, java.lang.String, java.lang.String]; java.lang.String; com.mycompany.listeners.MailLogger; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; this>
<com.mycompany.listeners.MailLogger; getValue[java.util.Properties, java.lang.String, java.lang.String]; java.lang.String; com.mycompany.listeners.MailLogger; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; this>
<com.mycompany.listeners.MailLogger; getValue[java.util.Properties, java.lang.String, java.lang.String]; java.lang.String; com.mycompany.listeners.MailLogger; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; this>
<com.mycompany.listeners.MailLogger; getValue[java.util.Properties, java.lang.String, java.lang.String]; java.lang.String; com.mycompany.listeners.MailLogger; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; this>
<com.mycompany.listeners.MailLogger; sendMail[java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]; void; com.mycompany.listeners.MailLogger; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; this>
<java.io.ByteArrayOutputStream; toString[]; java.lang.String; com.mycompany.listeners.MailLogger; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; mOutputStream>
<java.io.PrintStream; println[java.lang.String]; void; com.mycompany.listeners.MailLogger; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; System.out>
<java.lang.Throwable; printStackTrace[java.io.PrintStream]; void; com.mycompany.listeners.MailLogger; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; e>
<com.puppycrawl.tools.checkstyle.DefaultLogger; fileStarted[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; com.mycompany.listeners.MailLogger; fileStarted[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; mLogger>
<com.puppycrawl.tools.checkstyle.DefaultLogger; fileFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; com.mycompany.listeners.MailLogger; fileFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; mLogger>
<java.lang.Enum; equals[java.lang.Object]; boolean; com.mycompany.listeners.MailLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; SeverityLevel.ERROR>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getSeverityLevel[]; com.puppycrawl.tools.checkstyle.api.SeverityLevel; com.mycompany.listeners.MailLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; aEvt>
<com.puppycrawl.tools.checkstyle.DefaultLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; com.mycompany.listeners.MailLogger; addError[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; mLogger>
<com.puppycrawl.tools.checkstyle.DefaultLogger; addException[com.puppycrawl.tools.checkstyle.api.AuditEvent, java.lang.Throwable]; void; com.mycompany.listeners.MailLogger; addException[com.puppycrawl.tools.checkstyle.api.AuditEvent, java.lang.Throwable]; void; null; mLogger>
<java.util.Properties; get[java.lang.Object]; java.lang.Object; com.mycompany.listeners.MailLogger; getValue[java.util.Properties, java.lang.String, java.lang.String]; java.lang.String; null; aProperties>
<java.lang.System; getProperties[]; java.util.Properties; com.mycompany.listeners.MailLogger; sendMail[java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]; void; null; System>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.mycompany.listeners.MailLogger; sendMail[java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]; void; null; props>
<not found; getDefaultInstance[]; not found; com.mycompany.listeners.MailLogger; sendMail[java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]; void; null; Session>
<not found; setFrom[]; not found; com.mycompany.listeners.MailLogger; sendMail[java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]; void; null; message>
<java.util.StringTokenizer; hasMoreTokens[]; boolean; com.mycompany.listeners.MailLogger; sendMail[java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]; void; null; t>
<not found; addRecipient[]; not found; com.mycompany.listeners.MailLogger; sendMail[java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]; void; null; message>
<java.util.StringTokenizer; nextToken[]; java.lang.String; com.mycompany.listeners.MailLogger; sendMail[java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]; void; null; t>
<not found; setSubject[]; not found; com.mycompany.listeners.MailLogger; sendMail[java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]; void; null; message>
<not found; setText[]; not found; com.mycompany.listeners.MailLogger; sendMail[java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]; void; null; message>
<not found; send[]; not found; com.mycompany.listeners.MailLogger; sendMail[java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]; void; null; Transport>
<java.util.ArrayList; iterator[]; java.util.Iterator; com.mycompany.listeners.MailLogger; sendMail[java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]; void; null; new ArrayList()>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.checks.xpath.DocumentNavigator; getAttributeName[java.lang.Object]; java.lang.String; null; ((Attribute)aObject)>
<not found; getName[]; not found; com.puppycrawl.tools.checkstyle.checks.xpath.DocumentNavigator; getAttributeQName[java.lang.Object]; java.lang.String; null; ((Attribute)aObject)>
<not found; getValue[]; not found; com.puppycrawl.tools.checkstyle.checks.xpath.DocumentNavigator; getAttributeStringValue[java.lang.Object]; java.lang.String; null; ((Attribute)aObject)>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.xpath.DocumentNavigator; getElementName[java.lang.Object]; java.lang.String; null; ((DetailAST)aObject)>
<com.puppycrawl.tools.checkstyle.api.TokenTypes; getTokenName[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.xpath.DocumentNavigator; getElementName[java.lang.Object]; java.lang.String; null; TokenTypes>
<com.puppycrawl.tools.checkstyle.checks.xpath.DocumentNavigator; getElementName[java.lang.Object]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.xpath.DocumentNavigator; getElementQName[java.lang.Object]; java.lang.String; null; this>
<not found; getType[]; not found; com.puppycrawl.tools.checkstyle.checks.xpath.DocumentNavigator; isDocument[java.lang.Object]; boolean; null; node>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.xpath.DocumentNavigator; getParentNode[java.lang.Object]; java.lang.Object; null; ((DetailAST)aObject)>
<not found; getParent[]; not found; com.puppycrawl.tools.checkstyle.checks.xpath.DocumentNavigator; getParentNode[java.lang.Object]; java.lang.Object; null; ((Attribute)aObject)>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.xpath.NodeIterator; getFirstNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; this>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.xpath.NodeIterator; getNextNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; this>
<com.puppycrawl.tools.checkstyle.checks.xpath.DocumentNavigator; isAttribute[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.xpath.DocumentNavigator; getParentAxisIterator[java.lang.Object]; java.util.Iterator; null; this>
<not found; getParent[]; not found; com.puppycrawl.tools.checkstyle.checks.xpath.DocumentNavigator; getParentAxisIterator[java.lang.Object]; java.util.Iterator; null; ((Attribute)aObject)>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.xpath.DocumentNavigator; getParentAxisIterator[java.lang.Object]; java.util.Iterator; null; ((DetailAST)aObject)>
<null; getNextNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.xpath.NodeIterator; getFirstNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; this>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.xpath.NodeIterator; getNextNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; this>
<null; getNextNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.xpath.NodeIterator; getFirstNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; this>
<not found; getPreviousSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.xpath.NodeIterator; getNextNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; this>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.xpath.NodeIterator; getFirstNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; this>
<null; getFirstNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.xpath.NodeIterator; getFirstNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.xpath.NodeIterator; getFirstNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; aAST>
<not found; getFirstChild[]; not found; com.puppycrawl.tools.checkstyle.checks.xpath.NodeIterator; getNextNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; this>
<not found; getNextSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.xpath.NodeIterator; getNextNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; this>
<null; getFirstNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.xpath.NodeIterator; getNextNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.xpath.NodeIterator; getNextNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; aAST>
<not found; getPreviousSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.xpath.NodeIterator; getFirstNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; this>
<null; getFirstNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.xpath.NodeIterator; getFirstNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.xpath.NodeIterator; getFirstNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; aAST>
<not found; getLastChild[]; not found; com.puppycrawl.tools.checkstyle.checks.xpath.NodeIterator; getNextNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; this>
<not found; getPreviousSibling[]; not found; com.puppycrawl.tools.checkstyle.checks.xpath.NodeIterator; getNextNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; this>
<null; getFirstNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.xpath.NodeIterator; getNextNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getParent[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.xpath.NodeIterator; getNextNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; aAST>
<com.puppycrawl.tools.checkstyle.checks.xpath.DocumentNavigator; isDocument[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.xpath.DocumentNavigator; getDocumentNode[java.lang.Object]; java.lang.Object; null; this>
<com.puppycrawl.tools.checkstyle.checks.xpath.DocumentNavigator; getDocumentNode[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.xpath.DocumentNavigator; getDocumentNode[java.lang.Object]; java.lang.Object; null; this>
<com.puppycrawl.tools.checkstyle.checks.xpath.DocumentNavigator; getParentNode[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.xpath.DocumentNavigator; getDocumentNode[java.lang.Object]; java.lang.Object; null; this>
<java.util.ArrayList; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.xpath.DocumentNavigator; getDocumentNode[java.lang.Object]; java.lang.Object; null; (new ArrayList())>
<not found; describe[]; not found; com.puppycrawl.tools.checkstyle.checks.xpath.AttributeAxisIterator; AttributeAxisIterator[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; BeanUtils>
<java.lang.Throwable; printStackTrace[]; void; com.puppycrawl.tools.checkstyle.checks.xpath.AttributeAxisIterator; AttributeAxisIterator[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; e>
<java.lang.Throwable; printStackTrace[]; void; com.puppycrawl.tools.checkstyle.checks.xpath.AttributeAxisIterator; AttributeAxisIterator[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; e>
<java.lang.Throwable; printStackTrace[]; void; com.puppycrawl.tools.checkstyle.checks.xpath.AttributeAxisIterator; AttributeAxisIterator[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; e>
<java.util.Map; size[]; int; com.puppycrawl.tools.checkstyle.checks.xpath.AttributeAxisIterator; AttributeAxisIterator[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; props>
<java.util.Map; keySet[]; java.util.Set; com.puppycrawl.tools.checkstyle.checks.xpath.AttributeAxisIterator; AttributeAxisIterator[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; props>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.xpath.AttributeAxisIterator; AttributeAxisIterator[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; values>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.checks.xpath.AttributeAxisIterator; AttributeAxisIterator[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; iter>
<java.util.Iterator; next[]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.xpath.AttributeAxisIterator; AttributeAxisIterator[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; iter>
<java.util.Map; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.xpath.AttributeAxisIterator; AttributeAxisIterator[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; props>
<java.util.List; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.xpath.AttributeAxisIterator; AttributeAxisIterator[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; attributes>
<java.util.List; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.xpath.AttributeAxisIterator; AttributeAxisIterator[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; attributes>
<java.util.Iterator; next[]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.xpath.AttributeAxisIterator; next[]; java.lang.Object; null; mIter>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.checks.xpath.AttributeAxisIterator; hasNext[]; boolean; null; mIter>
<java.util.Iterator; remove[]; void; com.puppycrawl.tools.checkstyle.checks.xpath.AttributeAxisIterator; remove[]; void; null; mIter>
<com.puppycrawl.tools.checkstyle.checks.xpath.NodeIterator; getFirstNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.xpath.NodeIterator; NodeIterator[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.checks.xpath.NodeIterator; getNextNode[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.xpath.NodeIterator; next[]; java.lang.Object; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getPreviousSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.xpath.NodeIterator; getPreviousSibling[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getNextSibling[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.xpath.NodeIterator; getNextSibling[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getFirstChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.xpath.NodeIterator; getFirstChild[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; aAST>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLastChild[]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.xpath.NodeIterator; getLastChild[com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; aAST>
<not found; setASTNodeType[]; not found; com.puppycrawl.tools.checkstyle.checks.xpath.XPathCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; factory>
<java.lang.Class; getName[]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.xpath.XPathCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; DetailAST.class>
<not found; create[]; not found; com.puppycrawl.tools.checkstyle.checks.xpath.XPathCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; factory>
<com.puppycrawl.tools.checkstyle.api.DetailAST; setFirstChild[com.puppycrawl.tools.checkstyle.api.AST]; void; com.puppycrawl.tools.checkstyle.checks.xpath.XPathCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; root>
<not found; iterator[]; not found; com.puppycrawl.tools.checkstyle.checks.xpath.XPathCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mXPath.selectNodes(aAST)>
<not found; selectNodes[]; not found; com.puppycrawl.tools.checkstyle.checks.xpath.XPathCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; iterator[]; mXPath>
<java.util.Iterator; hasNext[]; boolean; com.puppycrawl.tools.checkstyle.checks.xpath.XPathCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; it>
<java.util.Iterator; next[]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.xpath.XPathCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; it>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; com.puppycrawl.tools.checkstyle.checks.xpath.XPathCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.puppycrawl.tools.checkstyle.checks.xpath.XPathCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; node>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getColumnNo[]; int; com.puppycrawl.tools.checkstyle.checks.xpath.XPathCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; node>
<not found; getText[]; not found; com.puppycrawl.tools.checkstyle.checks.xpath.XPathCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; node>
<not found; printStackTrace[]; not found; com.puppycrawl.tools.checkstyle.checks.xpath.XPathCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; e>
<com.puppycrawl.tools.checkstyle.api.DetailAST; findFirstToken[int]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.mycompany.checks.MethodLimitCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ast>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getChildCount[int]; int; com.mycompany.checks.MethodLimitCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; objBlock>
<com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; com.mycompany.checks.MethodLimitCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.DetailAST; getLineNo[]; int; com.mycompany.checks.MethodLimitCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; ast>
<java.io.File; getPath[]; java.lang.String; com.mycompany.checks.LimitImplementationFiles; process[java.io.File[]]; void; null; files[max]>
<com.puppycrawl.tools.checkstyle.api.LocalizedMessages; reset[]; void; com.mycompany.checks.LimitImplementationFiles; process[java.io.File[]]; void; null; getMessageCollector()>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; getMessageCollector[]; com.puppycrawl.tools.checkstyle.api.LocalizedMessages; com.mycompany.checks.LimitImplementationFiles; process[java.io.File[]]; void; reset[]; this>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; getMessageDispatcher[]; com.puppycrawl.tools.checkstyle.api.MessageDispatcher; com.mycompany.checks.LimitImplementationFiles; process[java.io.File[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.MessageDispatcher; fireFileStarted[java.lang.String]; void; com.mycompany.checks.LimitImplementationFiles; process[java.io.File[]]; void; null; dispatcher>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; log[int, java.lang.String, java.lang.Object[]]; void; com.mycompany.checks.LimitImplementationFiles; process[java.io.File[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; fireErrors[java.lang.String]; void; com.mycompany.checks.LimitImplementationFiles; process[java.io.File[]]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.MessageDispatcher; fireFileFinished[java.lang.String]; void; com.mycompany.checks.LimitImplementationFiles; process[java.io.File[]]; void; null; dispatcher>
<com.mycompany.filters.FilesFilter; setFiles[java.lang.String]; void; com.mycompany.filters.FilesFilter; FilesFilter[]; void; null; this>
<com.puppycrawl.tools.checkstyle.api.AuditEvent; getFileName[]; java.lang.String; com.mycompany.filters.FilesFilter; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; aEvent>
<not found; match[]; not found; com.mycompany.filters.FilesFilter; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; mFileRegexp>
<not found; getRE[]; not found; com.mycompany.filters.FilesFilter; setFiles[java.lang.String]; void; null; Utils>


Calls That Belongs To JCF (716)

<java.util.Properties; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.PropertiesExpander; resolve[java.lang.String]; java.lang.String; null; mProperties>
<java.util.Map; put[java.lang.String, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AbstractLoader; AbstractLoader[java.lang.String, java.lang.String]; void; null; mPublicIdToResourceNameMap>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.api.AbstractLoader; resolveEntity[java.lang.String, java.lang.String]; org.xml.sax.InputSource; null; mPublicIdToResourceNameMap.keySet()>
<java.util.Map; keySet[]; java.util.Set<java.lang.String>; com.puppycrawl.tools.checkstyle.api.AbstractLoader; resolveEntity[java.lang.String, java.lang.String]; org.xml.sax.InputSource; contains[java.lang.Object]; mPublicIdToResourceNameMap>
<java.util.Map; get[java.lang.Object]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AbstractLoader; resolveEntity[java.lang.String, java.lang.String]; org.xml.sax.InputSource; null; mPublicIdToResourceNameMap>
<java.util.Map; get[java.lang.Object]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String, int]; java.util.regex.Pattern; null; CREATED_RES>
<java.util.Map; put[java.lang.String, java.util.regex.Pattern]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.api.Utils; getPattern[java.lang.String, int]; java.util.regex.Pattern; null; CREATED_RES>
<java.util.List; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.api.Utils; getLines[java.lang.String, java.lang.String]; java.lang.String[]; null; lines>
<java.util.List; toArray[java.lang.String[]]; java.lang.String[]; com.puppycrawl.tools.checkstyle.api.Utils; getLines[java.lang.String, java.lang.String]; java.lang.String[]; null; lines>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.api.Utils; getLines[java.lang.String, java.lang.String]; java.lang.String[]; null; lines>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.api.Check; setTokens[java.lang.String[]]; void; null; mTokens>
<java.util.Map; get[java.lang.Object]; java.lang.String; com.puppycrawl.tools.checkstyle.api.Check; log[int, java.lang.String, java.lang.Object[]]; void; null; this.getCustomMessages()>
<java.util.Map; get[java.lang.Object]; java.lang.String; com.puppycrawl.tools.checkstyle.api.Check; log[int, int, java.lang.String, java.lang.Object[]]; void; null; this.getCustomMessages()>
<java.util.Map; get[java.lang.Object]; java.util.ResourceBundle; com.puppycrawl.tools.checkstyle.api.LocalizedMessage; getBundle[java.lang.String]; java.util.ResourceBundle; null; BUNDLE_CACHE>
<java.util.Map; put[java.lang.String, java.util.ResourceBundle]; java.util.ResourceBundle; com.puppycrawl.tools.checkstyle.api.LocalizedMessage; getBundle[java.lang.String]; java.util.ResourceBundle; null; BUNDLE_CACHE>
<java.util.Map; get[java.lang.Object]; java.lang.String; com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck; log[int, int, java.lang.String, java.lang.Object[]]; void; null; this.getCustomMessages()>
<java.util.Map; put[java.lang.Integer, com.puppycrawl.tools.checkstyle.api.TextBlock]; com.puppycrawl.tools.checkstyle.api.TextBlock; com.puppycrawl.tools.checkstyle.api.FileContents; reportCppComment[int, int]; void; null; mCPlusPlusComments>
<java.util.Map; containsKey[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.api.FileContents; reportCComment[int, int, int, int]; void; null; mCComments>
<java.util.Map; get[java.lang.Object]; java.util.List<com.puppycrawl.tools.checkstyle.api.TextBlock>; com.puppycrawl.tools.checkstyle.api.FileContents; reportCComment[int, int, int, int]; void; null; mCComments>
<java.util.List; add[com.puppycrawl.tools.checkstyle.api.TextBlock]; boolean; com.puppycrawl.tools.checkstyle.api.FileContents; reportCComment[int, int, int, int]; void; null; entries>
<java.util.List; add[com.puppycrawl.tools.checkstyle.api.TextBlock]; boolean; com.puppycrawl.tools.checkstyle.api.FileContents; reportCComment[int, int, int, int]; void; null; entries>
<java.util.Map; put[java.lang.Integer, java.util.List<com.puppycrawl.tools.checkstyle.api.TextBlock>]; java.util.List<com.puppycrawl.tools.checkstyle.api.TextBlock>; com.puppycrawl.tools.checkstyle.api.FileContents; reportCComment[int, int, int, int]; void; null; mCComments>
<java.util.Map; put[java.lang.Integer, com.puppycrawl.tools.checkstyle.api.TextBlock]; com.puppycrawl.tools.checkstyle.api.TextBlock; com.puppycrawl.tools.checkstyle.api.FileContents; reportCComment[int, int, int, int]; void; null; mJavadocComments>
<java.util.Map; get[java.lang.Object]; com.puppycrawl.tools.checkstyle.api.TextBlock; com.puppycrawl.tools.checkstyle.api.FileContents; getJavadocBefore[int]; com.puppycrawl.tools.checkstyle.api.TextBlock; null; mJavadocComments>
<java.util.Map; values[]; java.util.Collection<java.util.List<com.puppycrawl.tools.checkstyle.api.TextBlock>>; com.puppycrawl.tools.checkstyle.api.FileContents; hasIntersectionWithComment[int, int, int, int]; boolean; null; mCComments>
<java.util.Map; get[java.lang.Object]; com.puppycrawl.tools.checkstyle.api.TextBlock; com.puppycrawl.tools.checkstyle.api.FileContents; hasIntersectionWithComment[int, int, int, int]; boolean; null; mCPlusPlusComments>
<java.util.List; add[E]; boolean; com.puppycrawl.tools.checkstyle.api.FastStack; push[E]; void; null; mEntries>
<java.util.List; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.api.FastStack; isEmpty[]; boolean; null; mEntries>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.api.FastStack; size[]; int; null; mEntries>
<java.util.List; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.api.FastStack; peek[]; E; null; mEntries>
<java.util.List; get[int]; E; com.puppycrawl.tools.checkstyle.api.FastStack; peek[]; E; null; mEntries>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.api.FastStack; peek[]; E; null; mEntries>
<java.util.List; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.api.FastStack; pop[]; E; null; mEntries>
<java.util.List; remove[int]; E; com.puppycrawl.tools.checkstyle.api.FastStack; pop[]; E; null; mEntries>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.api.FastStack; pop[]; E; null; mEntries>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.api.FastStack; peek[int]; E; null; mEntries>
<java.util.List; get[int]; E; com.puppycrawl.tools.checkstyle.api.FastStack; peek[int]; E; null; mEntries>
<java.util.List; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.api.FastStack; contains[E]; boolean; null; mEntries>
<java.util.List; clear[]; void; com.puppycrawl.tools.checkstyle.api.FastStack; clear[]; void; null; mEntries>
<java.util.List; iterator[]; java.util.Iterator<E>; com.puppycrawl.tools.checkstyle.api.FastStack; iterator[]; java.util.Iterator<E>; null; mEntries>
<java.util.TreeSet; clear[]; void; com.puppycrawl.tools.checkstyle.api.LocalizedMessages; reset[]; void; null; mMessages>
<java.util.TreeSet; add[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; boolean; com.puppycrawl.tools.checkstyle.api.LocalizedMessages; add[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; void; null; mMessages>
<java.util.TreeSet; size[]; int; com.puppycrawl.tools.checkstyle.api.LocalizedMessages; size[]; int; null; mMessages>
<java.util.Set; add[com.puppycrawl.tools.checkstyle.api.Filter]; boolean; com.puppycrawl.tools.checkstyle.api.FilterSet; addFilter[com.puppycrawl.tools.checkstyle.api.Filter]; void; null; mFilters>
<java.util.Set; remove[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.api.FilterSet; removeFilter[com.puppycrawl.tools.checkstyle.api.Filter]; void; null; mFilters>
<java.util.Set; hashCode[]; int; com.puppycrawl.tools.checkstyle.api.FilterSet; hashCode[]; int; null; mFilters>
<java.util.Set; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.api.FilterSet; equals[java.lang.Object]; boolean; null; this.mFilters>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.api.FilterSet; clear[]; void; null; mFilters>
<java.util.Map; get[java.lang.Object]; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; fromText[java.lang.String]; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; null; TEXT_TO_TAG>
<java.util.Map; get[java.lang.Object]; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; fromName[java.lang.String]; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; null; NAME_TO_TAG>
<java.util.Map; containsKey[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.api.JavadocTagInfo; isValidName[java.lang.String]; boolean; null; NAME_TO_TAG>
<java.util.List; toArray[java.lang.String[]]; java.lang.String[]; com.puppycrawl.tools.checkstyle.api.FileText; FileText[java.io.File, java.util.List<java.lang.String>]; void; null; aLines>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.api.FileText; FileText[java.io.File, java.util.List<java.lang.String>]; void; null; aLines>
<java.util.List; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.api.AutomaticBean.RelaxedStringArrayConverter; convert[java.lang.Class, java.lang.Object]; java.lang.Object; null; result>
<java.util.List; toArray[java.lang.String[]]; java.lang.String[]; com.puppycrawl.tools.checkstyle.api.AutomaticBean.RelaxedStringArrayConverter; convert[java.lang.Class, java.lang.Object]; java.lang.Object; null; result>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.api.AutomaticBean.RelaxedStringArrayConverter; convert[java.lang.Class, java.lang.Object]; java.lang.Object; null; result>
<java.util.Map; put[java.lang.String, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoader; createIdToResourceNameMap[]; java.util.Map<java.lang.String,java.lang.String>; null; map>
<java.util.Map; put[java.lang.String, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoader; createIdToResourceNameMap[]; java.util.Map<java.lang.String,java.lang.String>; null; map>
<java.util.Map; put[java.lang.String, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoader; createIdToResourceNameMap[]; java.util.Map<java.lang.String,java.lang.String>; null; map>
<java.util.Map; put[java.lang.String, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.ConfigurationLoader; createIdToResourceNameMap[]; java.util.Map<java.lang.String,java.lang.String>; null; map>
<java.util.List; iterator[]; java.util.Iterator<java.lang.String>; com.puppycrawl.tools.checkstyle.ConfigurationLoader; replaceProperties[java.lang.String, com.puppycrawl.tools.checkstyle.PropertyResolver, java.lang.String]; java.lang.String; null; fragments>
<java.util.List; iterator[]; java.util.Iterator<java.lang.String>; com.puppycrawl.tools.checkstyle.ConfigurationLoader; replaceProperties[java.lang.String, com.puppycrawl.tools.checkstyle.PropertyResolver, java.lang.String]; java.lang.String; null; propertyRefs>
<java.util.List; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.ConfigurationLoader; parsePropertyString[java.lang.String, java.util.List<java.lang.String>, java.util.List<java.lang.String>]; void; null; aFragments>
<java.util.List; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.ConfigurationLoader; parsePropertyString[java.lang.String, java.util.List<java.lang.String>, java.util.List<java.lang.String>]; void; null; aFragments>
<java.util.List; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.ConfigurationLoader; parsePropertyString[java.lang.String, java.util.List<java.lang.String>, java.util.List<java.lang.String>]; void; null; aFragments>
<java.util.List; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.ConfigurationLoader; parsePropertyString[java.lang.String, java.util.List<java.lang.String>, java.util.List<java.lang.String>]; void; null; aFragments>
<java.util.List; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.ConfigurationLoader; parsePropertyString[java.lang.String, java.util.List<java.lang.String>, java.util.List<java.lang.String>]; void; null; aFragments>
<java.util.List; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.ConfigurationLoader; parsePropertyString[java.lang.String, java.util.List<java.lang.String>, java.util.List<java.lang.String>]; void; null; aPropertyRefs>
<java.util.List; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.ConfigurationLoader; parsePropertyString[java.lang.String, java.util.List<java.lang.String>, java.util.List<java.lang.String>]; void; null; aFragments>
<java.util.Map; keySet[]; java.util.Set<java.lang.String>; com.puppycrawl.tools.checkstyle.DefaultConfiguration; getAttributeNames[]; java.lang.String[]; null; mAttributeMap>
<java.util.Set; toArray[java.lang.String[]]; java.lang.String[]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; getAttributeNames[]; java.lang.String[]; null; keySet>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.DefaultConfiguration; getAttributeNames[]; java.lang.String[]; null; keySet>
<java.util.Map; containsKey[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.DefaultConfiguration; getAttribute[java.lang.String]; java.lang.String; null; mAttributeMap>
<java.util.Map; get[java.lang.Object]; java.lang.String; com.puppycrawl.tools.checkstyle.DefaultConfiguration; getAttribute[java.lang.String]; java.lang.String; null; mAttributeMap>
<java.util.List; toArray[com.puppycrawl.tools.checkstyle.api.Configuration[]]; com.puppycrawl.tools.checkstyle.api.Configuration[]; com.puppycrawl.tools.checkstyle.DefaultConfiguration; getChildren[]; com.puppycrawl.tools.checkstyle.api.Configuration[]; null; mChildren>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.DefaultConfiguration; getChildren[]; com.puppycrawl.tools.checkstyle.api.Configuration[]; null; mChildren>
<java.util.List; add[com.puppycrawl.tools.checkstyle.api.Configuration]; boolean; com.puppycrawl.tools.checkstyle.DefaultConfiguration; addChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; mChildren>
<java.util.List; remove[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.DefaultConfiguration; removeChild[com.puppycrawl.tools.checkstyle.api.Configuration]; void; null; mChildren>
<java.util.Map; put[java.lang.String, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; null; mAttributeMap>
<java.util.Map; put[java.lang.String, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; null; mAttributeMap>
<java.util.Map; put[java.lang.String, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.DefaultConfiguration; addAttribute[java.lang.String, java.lang.String]; void; null; mAttributeMap>
<java.util.Map; put[java.lang.String, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.DefaultConfiguration; addMessage[java.lang.String, java.lang.String]; void; null; mMessages>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.PackageNamesLoader; endElement[java.lang.String, java.lang.String, java.lang.String]; void; null; mPackageNames>
<java.util.Set; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.TreeWalker; registerCheck[com.puppycrawl.tools.checkstyle.api.Check]; void; null; checkTokens>
<java.util.Set; add[com.puppycrawl.tools.checkstyle.api.Check]; boolean; com.puppycrawl.tools.checkstyle.TreeWalker; registerCheck[com.puppycrawl.tools.checkstyle.api.Check]; void; null; mAllChecks>
<java.util.List; add[com.puppycrawl.tools.checkstyle.api.FileSetCheck]; boolean; com.puppycrawl.tools.checkstyle.Checker; addFileSetCheck[com.puppycrawl.tools.checkstyle.api.FileSetCheck]; void; null; mFileSetChecks>
<java.util.List; clear[]; void; com.puppycrawl.tools.checkstyle.Checker; destroy[]; void; null; mListeners>
<java.util.List; add[com.puppycrawl.tools.checkstyle.api.AuditListener]; boolean; com.puppycrawl.tools.checkstyle.Checker; addListener[com.puppycrawl.tools.checkstyle.api.AuditListener]; void; null; mListeners>
<java.util.List; remove[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.Checker; removeListener[com.puppycrawl.tools.checkstyle.api.AuditListener]; void; null; mListeners>
<java.util.TreeSet; addAll[java.util.Collection<? extends com.puppycrawl.tools.checkstyle.api.LocalizedMessage>]; boolean; com.puppycrawl.tools.checkstyle.Checker; process[java.util.List<java.io.File>]; int; null; fileMessages>
<java.util.TreeSet; add[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; boolean; com.puppycrawl.tools.checkstyle.Checker; process[java.util.List<java.io.File>]; int; null; fileMessages>
<java.util.TreeSet; add[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; boolean; com.puppycrawl.tools.checkstyle.Checker; process[java.util.List<java.io.File>]; int; null; fileMessages>
<java.util.List; add[java.io.File]; boolean; com.puppycrawl.tools.checkstyle.Main; getFilesToProcess[com.puppycrawl.tools.checkstyle.CommandLine]; java.util.List<java.io.File>; null; files>
<java.util.List; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.Main; getFilesToProcess[com.puppycrawl.tools.checkstyle.CommandLine]; java.util.List<java.io.File>; null; files>
<java.util.List; add[java.io.File]; boolean; com.puppycrawl.tools.checkstyle.Main; traverse[java.io.File, java.util.List<java.io.File>]; void; null; aFiles>
<java.util.Properties; load[java.io.InputStream]; void; com.puppycrawl.tools.checkstyle.Main; loadProperties[java.io.File]; java.util.Properties; null; properties>
<java.util.List; clear[]; void; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; openFile[java.io.File, java.awt.Component]; void; null; getLines2position()>
<java.util.List; add[java.lang.Integer]; boolean; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; openFile[java.io.File, java.awt.Component]; void; null; getLines2position()>
<java.util.List; add[java.lang.Integer]; boolean; com.puppycrawl.tools.checkstyle.gui.ParseTreeInfoPanel; openFile[java.io.File, java.awt.Component]; void; null; getLines2position()>
<java.util.List; get[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.gui.CodeSelector; select[]; void; null; lines2position>
<java.util.List; get[int]; java.lang.Integer; com.puppycrawl.tools.checkstyle.gui.CodeSelector; findLastPosition[com.puppycrawl.tools.checkstyle.api.DetailAST]; int; null; lines2position>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.gui.FileDrop.FileDropTargetListener; drop[java.awt.dnd.DropTargetDropEvent]; void; null; fileList>
<java.util.List; toArray[java.io.File[]]; java.io.File[]; com.puppycrawl.tools.checkstyle.gui.FileDrop.FileDropTargetListener; drop[java.awt.dnd.DropTargetDropEvent]; void; null; fileList>
<java.util.List; add[com.puppycrawl.tools.checkstyle.CheckStyleTask.Formatter]; boolean; com.puppycrawl.tools.checkstyle.CheckStyleTask; addFormatter[com.puppycrawl.tools.checkstyle.CheckStyleTask.Formatter]; void; null; mFormatters>
<java.util.List; add[com.puppycrawl.tools.checkstyle.CheckStyleTask.Property]; boolean; com.puppycrawl.tools.checkstyle.CheckStyleTask; addProperty[com.puppycrawl.tools.checkstyle.CheckStyleTask.Property]; void; null; mOverrideProps>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.CheckStyleTask; realExecute[]; void; null; files>
<java.util.Properties; load[java.io.InputStream]; void; com.puppycrawl.tools.checkstyle.CheckStyleTask; createOverridingProperties[]; java.util.Properties; null; retVal>
<java.util.Hashtable; keySet[]; java.util.Set<>; com.puppycrawl.tools.checkstyle.CheckStyleTask; createOverridingProperties[]; java.util.Properties; null; antProps>
<java.util.Hashtable; get[java.lang.Object]; ; com.puppycrawl.tools.checkstyle.CheckStyleTask; createOverridingProperties[]; java.util.Properties; null; antProps>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.CheckStyleTask; createOverridingProperties[]; java.util.Properties; null; retVal>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.CheckStyleTask; createOverridingProperties[]; java.util.Properties; null; retVal>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.CheckStyleTask; getListeners[]; com.puppycrawl.tools.checkstyle.api.AuditListener[]; null; mFormatters>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.CheckStyleTask; getListeners[]; com.puppycrawl.tools.checkstyle.api.AuditListener[]; null; mFormatters>
<java.util.List; get[int]; com.puppycrawl.tools.checkstyle.CheckStyleTask.Formatter; com.puppycrawl.tools.checkstyle.CheckStyleTask; getListeners[]; com.puppycrawl.tools.checkstyle.api.AuditListener[]; null; mFormatters>
<java.util.List; add[java.io.File]; boolean; com.puppycrawl.tools.checkstyle.CheckStyleTask; scanFileSets[]; java.util.List<java.io.File>; null; list>
<java.util.List; add[java.io.File]; boolean; com.puppycrawl.tools.checkstyle.CheckStyleTask; scanFileSets[]; java.util.List<java.io.File>; null; list>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheck; beginProcessing[java.lang.String]; void; null; mDirectoriesChecked>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; mDirectoriesChecked>
<java.util.Set; add[java.io.File]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; mDirectoriesChecked>
<java.util.List; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; checkHtml[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock]; void; null; typeParameters>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; isSingleTag[com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag]; boolean; null; SINGLE_TAGS>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck; isAllowedTag[com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag]; boolean; null; ALLOWED_TAGS>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkTag[int, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.lang.String, java.util.regex.Pattern, java.lang.String]; void; null; aTags>
<java.util.List; get[int]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkTag[int, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.lang.String, java.util.regex.Pattern, java.lang.String]; void; null; aTags>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkTypeParamTag[int, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.lang.String]; void; null; aTags>
<java.util.List; get[int]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkTypeParamTag[int, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.lang.String]; void; null; aTags>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkUnusedTypeParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<java.lang.String>]; void; null; aTags>
<java.util.List; get[int]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkUnusedTypeParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<java.lang.String>]; void; null; aTags>
<java.util.List; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck; checkUnusedTypeParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<java.lang.String>]; void; null; aTypeParamNames>
<java.util.List; remove[int]; com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; nextTag[]; com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag; null; mTags>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; hasNextTag[]; boolean; null; mTags>
<java.util.List; add[com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.TagParser; add[com.puppycrawl.tools.checkstyle.checks.javadoc.HtmlTag]; void; null; mTags>
<java.util.List; iterator[]; java.util.Iterator<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.api.Scope]; void; null; tags>
<java.util.List; iterator[]; java.util.Iterator<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkComment[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.api.Scope]; void; null; tags>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; hasShortCircuitTag[com.puppycrawl.tools.checkstyle.api.DetailAST, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.Scope]; boolean; null; aTags>
<java.util.List; get[int]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; hasShortCircuitTag[com.puppycrawl.tools.checkstyle.api.DetailAST, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.Scope]; boolean; isInheritDocTag[]; aTags>
<java.util.List; add[com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; tags>
<java.util.List; add[com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; tags>
<java.util.List; add[com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; tags>
<java.util.List; add[com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; tags>
<java.util.List; add[com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getMethodTags[com.puppycrawl.tools.checkstyle.api.TextBlock]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; null; tags>
<java.util.List; add[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getParameters[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<com.puppycrawl.tools.checkstyle.api.DetailAST>; null; retVal>
<java.util.List; add[com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; getThrows[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>; null; retVal>
<java.util.List; listIterator[]; java.util.ListIterator<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; aTags>
<java.util.List; iterator[]; java.util.Iterator<com.puppycrawl.tools.checkstyle.api.DetailAST>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; params>
<java.util.List; iterator[]; java.util.Iterator<com.puppycrawl.tools.checkstyle.api.DetailAST>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkParamTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, com.puppycrawl.tools.checkstyle.api.DetailAST, boolean]; void; null; typeParams>
<java.util.List; listIterator[]; java.util.ListIterator<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkReturnTag[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, int, boolean]; void; null; aTags>
<java.util.List; listIterator[]; java.util.ListIterator<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; aTags>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; foundThrows>
<java.util.List; listIterator[]; java.util.ListIterator<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; aThrows>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; foundThrows>
<java.util.List; listIterator[]; java.util.ListIterator<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; aThrows>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck; checkThrowsTags[java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag>, java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.ExceptionInfo>, boolean]; void; null; foundThrows>
<java.util.List; add[com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; tags>
<java.util.List; add[com.puppycrawl.tools.checkstyle.checks.javadoc.InvalidJavadocTag]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; invalidTags>
<java.util.List; add[com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; tags>
<java.util.List; add[com.puppycrawl.tools.checkstyle.checks.javadoc.InvalidJavadocTag]; boolean; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils; getJavadocTags[com.puppycrawl.tools.checkstyle.api.TextBlock, com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtils.JavadocTagType]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTags; null; invalidTags>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mImports>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mImports>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; processImport[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mImports>
<java.util.Map; put[java.lang.String, com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo]; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; processTypeParams[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; paramsMap>
<java.util.Map; get[java.lang.Object]; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck; findClassAlias[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo; null; paramMap>
<java.util.List; clear[]; void; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; beginProcessing[java.lang.String]; void; null; mFiles>
<java.util.List; add[java.io.File]; boolean; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; mFiles>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; finishProcessing[]; void; null; mFiles>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; finishProcessing[]; void; null; mFiles>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; finishProcessing[]; void; null; mFiles>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; finishProcessing[]; void; null; mFiles>
<java.util.List; get[int]; java.io.File; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; finishProcessing[]; void; null; mFiles>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; dumpStats[long, long, long]; void; null; mFiles>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; findDuplicates[]; void; null; mFiles>
<java.util.List; get[int]; java.io.File; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; findDuplicates[]; void; getPath[]; mFiles>
<java.util.Collection; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; findDuplicateFromLine[int, int, int, int[], com.puppycrawl.tools.checkstyle.checks.duplicates.Multimap<java.lang.Integer,java.lang.Integer>]; void; null; ignoreEntries>
<java.util.List; get[int]; java.io.File; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; findDuplicateFromLine[int, int, int, int[], com.puppycrawl.tools.checkstyle.checks.duplicates.Multimap<java.lang.Integer,java.lang.Integer>]; void; null; mFiles>
<java.util.List; get[int]; java.io.File; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; verifiyDuplicateLines[int, int, int, int]; int; null; mFiles>
<java.util.List; get[int]; java.io.File; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; verifiyDuplicateLines[int, int, int, int]; int; null; mFiles>
<java.util.Map; get[java.lang.Object]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; getTrimmedLines[java.io.File]; java.lang.String[]; null; mTrimmedLineCache>
<java.util.Map; put[java.lang.String, java.lang.String[]]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.duplicates.StrictDuplicateCodeCheck; getTrimmedLines[java.io.File]; java.lang.String[]; null; mTrimmedLineCache>
<java.util.Set; addAll[java.util.Collection<? extends java.lang.Integer>]; boolean; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; lines>
<java.util.Map; keySet[]; java.util.Set<java.lang.Integer>; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; cppComments>
<java.util.Set; addAll[java.util.Collection<? extends java.lang.Integer>]; boolean; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; lines>
<java.util.Map; keySet[]; java.util.Set<java.lang.Integer>; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; cComments>
<java.util.Map; containsKey[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; cppComments>
<java.util.Map; get[java.lang.Object]; com.puppycrawl.tools.checkstyle.api.TextBlock; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; cppComments>
<java.util.Map; containsKey[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; cComments>
<java.util.Map; get[java.lang.Object]; java.util.List<com.puppycrawl.tools.checkstyle.api.TextBlock>; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; cComments>
<java.util.List; get[int]; com.puppycrawl.tools.checkstyle.api.TextBlock; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; commentList>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; commentList>
<java.util.List; clear[]; void; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; beginProcessing[java.lang.String]; void; null; mPropertyFiles>
<java.util.List; add[java.io.File]; boolean; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; mPropertyFiles>
<java.util.Map; get[java.lang.Object]; java.util.Set<java.io.File>; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; arrangePropertyFiles[java.util.List<java.io.File>]; java.util.Map<java.lang.String,java.util.Set<java.io.File>>; null; propFileMap>
<java.util.Map; put[java.lang.String, java.util.Set<java.io.File>]; java.util.Set<java.io.File>; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; arrangePropertyFiles[java.util.List<java.io.File>]; java.util.Map<java.lang.String,java.util.Set<java.io.File>>; null; propFileMap>
<java.util.Set; add[java.io.File]; boolean; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; arrangePropertyFiles[java.util.List<java.io.File>]; java.util.Map<java.lang.String,java.util.Set<java.io.File>>; null; fileSet>
<java.util.Properties; load[java.io.InputStream]; void; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; loadKeys[java.io.File]; java.util.Set<java.lang.Object>; null; props>
<java.util.Properties; propertyNames[]; java.util.Enumeration<?>; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; loadKeys[java.io.File]; java.util.Set<java.lang.Object>; null; props>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; loadKeys[java.io.File]; java.util.Set<java.lang.Object>; null; keys>
<java.util.TreeSet; add[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; boolean; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; logIOException[java.io.IOException, java.io.File]; void; null; messages>
<java.util.Map; entrySet[]; java.util.Set<java.util.Map.Entry<java.io.File,java.util.Set<java.lang.Object>>>; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; compareKeySets[java.util.Set<java.lang.Object>, java.util.Map<java.io.File,java.util.Set<java.lang.Object>>]; void; null; aFileMap>
<java.util.Set; removeAll[java.util.Collection<?>]; boolean; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; compareKeySets[java.util.Set<java.lang.Object>, java.util.Map<java.io.File,java.util.Set<java.lang.Object>>]; void; null; keysClone>
<java.util.Set; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; compareKeySets[java.util.Set<java.lang.Object>, java.util.Map<java.io.File,java.util.Set<java.lang.Object>>]; void; null; keysClone>
<java.util.Map; entrySet[]; java.util.Set<java.util.Map.Entry<java.lang.String,java.util.Set<java.io.File>>>; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; checkPropertyFileSets[java.util.Map<java.lang.String,java.util.Set<java.io.File>>]; void; null; aPropFiles>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; checkPropertyFileSets[java.util.Map<java.lang.String,java.util.Set<java.io.File>>]; void; null; files>
<java.util.Set; addAll[java.util.Collection<? extends java.lang.Object>]; boolean; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; checkPropertyFileSets[java.util.Map<java.lang.String,java.util.Set<java.io.File>>]; void; null; keys>
<java.util.Map; put[java.io.File, java.util.Set<java.lang.Object>]; java.util.Set<java.lang.Object>; com.puppycrawl.tools.checkstyle.checks.TranslationCheck; checkPropertyFileSets[java.util.Map<java.lang.String,java.util.Set<java.io.File>>]; void; null; fileMap>
<java.util.List; iterator[]; java.util.Iterator<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; checkException[com.puppycrawl.tools.checkstyle.api.FullIdent, java.util.List<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; null; aKnownExcs>
<java.util.List; add[com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.RedundantThrowsCheck; checkException[com.puppycrawl.tools.checkstyle.api.FullIdent, java.util.List<com.puppycrawl.tools.checkstyle.checks.AbstractTypeAwareCheck.ClassInfo>]; void; null; aKnownExcs>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheck; shouldIgnoreMethod[java.lang.String]; boolean; null; mIgnoredMethodNames>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheck; setIgnoredMethodNames[java.lang.String[]]; void; null; mIgnoredMethodNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalThrowsCheck; setIgnoredMethodNames[java.lang.String[]]; void; null; mIgnoredMethodNames>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.AbstractIllegalCheck; isIllegalClassName[java.lang.String]; boolean; null; mIllegalClassNames>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.checks.coding.AbstractIllegalCheck; setIllegalClassNames[java.lang.String[]]; void; null; mIllegalClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.AbstractIllegalCheck; setIllegalClassNames[java.lang.String[]]; void; null; mIllegalClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.AbstractIllegalCheck; setIllegalClassNames[java.lang.String[]]; void; null; mIllegalClassNames>
<java.util.Set; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; checkIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mParameterNames>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; checkIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mParameterNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.ParameterAssignmentCheck; visitMethodParameters[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mParameterNames>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.checks.coding.CovariantEqualsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mEqualsMethods>
<java.util.Set; add[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.CovariantEqualsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mEqualsMethods>
<java.util.Map; get[java.lang.Object]; java.util.List<com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck.StringInfo>; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mStringMap>
<java.util.Map; put[java.lang.String, java.util.List<com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck.StringInfo>]; java.util.List<com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck.StringInfo>; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mStringMap>
<java.util.List; add[com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck.StringInfo]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; hitList>
<java.util.Map; clear[]; void; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mStringMap>
<java.util.Map; keySet[]; java.util.Set<java.lang.String>; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mStringMap>
<java.util.Map; get[java.lang.Object]; java.util.List<com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck.StringInfo>; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mStringMap>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; hits>
<java.util.List; get[int]; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck.StringInfo; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; hits>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; hits>
<java.util.Map; put[java.lang.String, com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; insertVariable[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; state>
<java.util.Map; remove[java.lang.Object]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; removeVariable[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; state>
<java.util.Map; values[]; java.util.Collection<com.puppycrawl.tools.checkstyle.api.DetailAST>; com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; state>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenTextCheck; getAcceptableTokens[]; int[]; null; tokenNames>
<java.util.Map; clear[]; void; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mObjBlockEquals>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mObjBlockWithHashCode>
<java.util.Map; put[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.api.DetailAST]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mObjBlockEquals>
<java.util.Set; add[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mObjBlockWithHashCode>
<java.util.Map; keySet[]; java.util.Set<com.puppycrawl.tools.checkstyle.api.DetailAST>; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mObjBlockEquals>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mObjBlockWithHashCode>
<java.util.Map; get[java.lang.Object]; com.puppycrawl.tools.checkstyle.api.DetailAST; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mObjBlockEquals>
<java.util.Map; clear[]; void; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mObjBlockEquals>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mObjBlockWithHashCode>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mImports>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mInstantiations>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; processClassDef[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mClassNames>
<java.util.Set; add[com.puppycrawl.tools.checkstyle.api.FullIdent]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; processImport[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mImports>
<java.util.Set; add[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; processLiteralNew[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mInstantiations>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; getIllegalInstantiation[java.lang.String]; java.lang.String; null; mIllegalClasses>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; getIllegalInstantiation[java.lang.String]; java.lang.String; null; mClassNames>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; getIllegalInstantiation[java.lang.String]; java.lang.String; null; mIllegalClasses>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; getIllegalInstantiation[java.lang.String]; java.lang.String; null; mIllegalClasses>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; setClasses[java.lang.String]; void; null; mIllegalClasses>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck; setClasses[java.lang.String]; void; null; mIllegalClasses>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; isMatchingClassName[java.lang.String]; boolean; null; mIllegalClassNames>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; isMatchingClassName[java.lang.String]; boolean; null; mLegalAbstractClassNames>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; isCheckedMethod[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; null; mIgnoredMethodNames>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; setIllegalClassNames[java.lang.String[]]; void; null; mIllegalClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; setIllegalClassNames[java.lang.String[]]; void; null; mIllegalClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; setIllegalClassNames[java.lang.String[]]; void; null; mIllegalClassNames>
<java.util.Set; toArray[java.lang.String[]]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; getIllegalClassNames[]; java.lang.String[]; null; mIllegalClassNames>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; getIllegalClassNames[]; java.lang.String[]; null; mIllegalClassNames>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; setIgnoredMethodNames[java.lang.String[]]; void; null; mIgnoredMethodNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; setIgnoredMethodNames[java.lang.String[]]; void; null; mIgnoredMethodNames>
<java.util.Set; toArray[java.lang.String[]]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; getIgnoredMethodNames[]; java.lang.String[]; null; mIgnoredMethodNames>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; getIgnoredMethodNames[]; java.lang.String[]; null; mIgnoredMethodNames>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; setLegalAbstractClassNames[java.lang.String[]]; void; null; mLegalAbstractClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; setLegalAbstractClassNames[java.lang.String[]]; void; null; mLegalAbstractClassNames>
<java.util.Set; toArray[java.lang.String[]]; java.lang.String[]; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; getLegalAbstractClassNames[]; java.lang.String[]; null; mLegalAbstractClassNames>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTypeCheck; getLegalAbstractClassNames[]; java.lang.String[]; null; mLegalAbstractClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck.FieldFrame; addInstanceField[java.lang.String]; void; null; mInstanceFields>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck.FieldFrame; addStaticField[java.lang.String]; void; null; mStaticFields>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck.FieldFrame; containsInstanceField[java.lang.String]; boolean; null; mInstanceFields>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck.FieldFrame; containsStaticField[java.lang.String]; boolean; null; mStaticFields>
<java.util.LinkedList; clear[]; void; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mMethodStack>
<java.util.LinkedList; add[com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck.MethodNode]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mMethodStack>
<java.util.LinkedList; getLast[]; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck.MethodNode; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mMethodStack>
<java.util.LinkedList; removeLast[]; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck.MethodNode; com.puppycrawl.tools.checkstyle.checks.coding.AbstractSuperCheck; leaveToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mMethodStack>
<java.util.Set; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenCheck; getAcceptableTokens[]; int[]; null; tokenNames>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.checks.coding.IllegalTokenCheck; getAcceptableTokens[]; int[]; null; tokenNames>
<java.util.Map; put[java.lang.String, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheck; endsWithNewline[java.io.RandomAccessFile]; boolean; null; DTD_RESOURCE_BY_ID>
<java.util.Map; put[java.lang.String, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.NewlineAtEndOfFileCheck; endsWithNewline[java.io.RandomAccessFile]; boolean; null; DTD_RESOURCE_BY_ID>
<java.util.List; clear[]; void; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck; setExcludes[java.lang.String[]]; void; null; mExcludes>
<java.util.List; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck; setExcludes[java.lang.String[]]; void; null; mExcludes>
<java.util.List; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck; logsStarredImportViolation[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mExcludes>
<java.util.List; add[com.puppycrawl.tools.checkstyle.checks.imports.PkgControl]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; PkgControl[com.puppycrawl.tools.checkstyle.checks.imports.PkgControl, java.lang.String]; void; null; mParent.mChildren>
<java.util.LinkedList; addFirst[com.puppycrawl.tools.checkstyle.checks.imports.Guard]; void; com.puppycrawl.tools.checkstyle.checks.imports.PkgControl; addGuard[com.puppycrawl.tools.checkstyle.checks.imports.Guard]; void; null; mGuards>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mImports>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mStaticImports>
<java.util.Set; add[com.puppycrawl.tools.checkstyle.api.FullIdent]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mImports>
<java.util.Set; add[com.puppycrawl.tools.checkstyle.api.FullIdent]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mStaticImports>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mImports>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mReferenced>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; finishTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mReferenced>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; processIdent[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mReferenced>
<java.util.Set; add[com.puppycrawl.tools.checkstyle.api.FullIdent]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; processImport[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mImports>
<java.util.Set; add[com.puppycrawl.tools.checkstyle.api.FullIdent]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; processStaticImport[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mImports>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck; processJavadoc[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mReferenced>
<java.util.List; add[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mods>
<java.util.List; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mods>
<java.util.List; iterator[]; java.util.Iterator<com.puppycrawl.tools.checkstyle.api.DetailAST>; com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck; checkOrderSuggestedByJLS[java.util.List<com.puppycrawl.tools.checkstyle.api.DetailAST>]; com.puppycrawl.tools.checkstyle.api.DetailAST; null; aModifiers>
<java.util.List; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.CheckUtils; getTypeParameterNames[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<java.lang.String>; null; typeParamNames>
<java.util.List; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.CheckUtils; getTypeParameterNames[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<java.lang.String>; null; typeParamNames>
<java.util.List; add[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.CheckUtils; getTypeParameters[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<com.puppycrawl.tools.checkstyle.api.DetailAST>; null; typeParams>
<java.util.List; add[com.puppycrawl.tools.checkstyle.api.DetailAST]; boolean; com.puppycrawl.tools.checkstyle.checks.CheckUtils; getTypeParameters[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.List<com.puppycrawl.tools.checkstyle.api.DetailAST>; null; typeParams>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.checks.DescendantTokenCheck; getAcceptableTokens[]; int[]; null; tokenNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.ClassResolver; ClassResolver[java.lang.ClassLoader, java.lang.String, java.util.Set<java.lang.String>]; void; null; mImports>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.LexicalFrame; addName[java.lang.String]; void; null; mVarNames>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.LexicalFrame; contains[java.lang.String]; boolean; null; mVarNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.ClassFrame; addStaticMember[java.lang.String]; void; null; mStaticMembers>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.ClassFrame; addInstanceMember[java.lang.String]; void; null; mInstanceMembers>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.ClassFrame; hasInstanceMember[java.lang.String]; boolean; null; mInstanceMembers>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.ClassFrame; contains[java.lang.String]; boolean; null; mInstanceMembers>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.ClassFrame; contains[java.lang.String]; boolean; null; mStaticMembers>
<java.util.LinkedList; addFirst[com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.LexicalFrame]; void; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.FrameStack; enter[com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.LexicalFrame]; void; null; mFrameList>
<java.util.LinkedList; removeFirst[]; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.LexicalFrame; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.FrameStack; leave[]; void; null; mFrameList>
<java.util.LinkedList; getFirst[]; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.LexicalFrame; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.FrameStack; current[]; com.puppycrawl.tools.checkstyle.checks.DeclarationCollector.LexicalFrame; null; mFrameList>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck; AbstractClassCouplingCheck[int]; void; null; mIgnoredClassNames>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck.Context; addReferencedClassName[java.lang.String]; void; null; mReferencedClassNames>
<java.util.Set; remove[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck.Context; checkCoupling[]; void; null; mReferencedClassNames>
<java.util.Set; remove[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck.Context; checkCoupling[]; void; null; mReferencedClassNames>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck.Context; checkCoupling[]; void; null; mReferencedClassNames>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck.Context; checkCoupling[]; void; null; mReferencedClassNames>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.metrics.AbstractClassCouplingCheck.Context; isSignificant[java.lang.String]; boolean; null; mIgnoredClassNames>
<java.util.EnumMap; put[com.puppycrawl.tools.checkstyle.api.Scope, java.lang.Integer]; java.lang.Integer; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck.MethodCounter; increment[com.puppycrawl.tools.checkstyle.api.Scope]; void; null; mCounts>
<java.util.EnumMap; put[com.puppycrawl.tools.checkstyle.api.Scope, java.lang.Integer]; java.lang.Integer; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck.MethodCounter; increment[com.puppycrawl.tools.checkstyle.api.Scope]; void; null; mCounts>
<java.util.EnumMap; get[java.lang.Object]; java.lang.Integer; com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck.MethodCounter; value[com.puppycrawl.tools.checkstyle.api.Scope]; int; null; mCounts>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.sizes.FileLengthCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; aLines>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.sizes.FileLengthCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; aLines>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; aLines>
<java.util.List; get[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.header.HeaderCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; aLines>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; aLines>
<java.util.List; get[int]; java.lang.String; com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck; processFiltered[java.io.File, java.util.List<java.lang.String>]; void; null; aLines>
<java.util.List; get[int]; java.util.regex.Pattern; com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck; isMatch[java.lang.String, int]; boolean; matcher[java.lang.CharSequence]; mHeaderRegexps>
<java.util.List; clear[]; void; com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck; postprocessHeaderLines[]; void; null; mHeaderRegexps>
<java.util.List; add[java.util.regex.Pattern]; boolean; com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck; postprocessHeaderLines[]; void; null; mHeaderRegexps>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck; postprocessHeaderLines[]; void; null; mHeaderRegexps>
<java.util.List; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck; checkHeaderNotInitialized[]; void; null; mHeaderLines>
<java.util.List; clear[]; void; com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck; loadHeader[java.io.Reader]; void; null; mHeaderLines>
<java.util.List; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck; loadHeader[java.io.Reader]; void; null; mHeaderLines>
<java.util.List; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck; finishLocalSetup[]; void; null; mHeaderLines>
<java.util.List; clear[]; void; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mCharacters>
<java.util.List; add[java.lang.Integer[]]; boolean; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; beginTree[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mCharacters>
<java.util.List; get[int]; java.lang.Integer[]; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; findMatch[]; void; intValue[]; mCharacters>
<java.util.List; get[int]; java.lang.Integer[]; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; findMatch[]; void; intValue[]; mCharacters>
<java.util.List; get[int]; java.lang.Integer[]; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; findMatch[]; void; intValue[]; mCharacters>
<java.util.List; get[int]; java.lang.Integer[]; com.puppycrawl.tools.checkstyle.checks.RegexpCheck; findMatch[]; void; intValue[]; mCharacters>
<java.util.Map; put[java.lang.Integer, java.lang.reflect.Constructor<?>]; java.lang.reflect.Constructor<?>; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; register[int, java.lang.Class<?>]; void; null; mTypeHandlers>
<java.util.Map; keySet[]; java.util.Set<java.lang.Integer>; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; isHandledType[int]; boolean; null; mTypeHandlers>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; isHandledType[int]; boolean; null; typeSet>
<java.util.Map; keySet[]; java.util.Set<java.lang.Integer>; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; getHandledTypes[]; int[]; null; mTypeHandlers>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; getHandledTypes[]; int[]; null; typeSet>
<java.util.Map; get[java.lang.Object]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; getHandler[com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; null; mCreatedHandlers>
<java.util.Map; get[java.lang.Object]; java.lang.reflect.Constructor<?>; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; getHandler[com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; null; mTypeHandlers>
<java.util.Map; put[com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; createMethodCallHandler[com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck, com.puppycrawl.tools.checkstyle.api.DetailAST, com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler]; com.puppycrawl.tools.checkstyle.checks.indentation.ExpressionHandler; null; mCreatedHandlers>
<java.util.Map; clear[]; void; com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory; clearCreatedHandlers[]; void; null; mCreatedHandlers>
<java.util.Set; add[java.lang.Integer]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; IndentLevel[int]; void; null; mLevels>
<java.util.Set; add[java.lang.Integer]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; IndentLevel[com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel, int]; void; null; mLevels>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; isMultiLevel[]; boolean; null; mLevels>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; accept[int]; boolean; null; mLevels>
<java.util.SortedSet; first[]; java.lang.Integer; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; gt[int]; boolean; intValue[]; mLevels>
<java.util.Set; add[java.lang.Integer]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; addAcceptedIndent[int]; void; null; mLevels>
<java.util.Set; addAll[java.util.Collection<? extends java.lang.Integer>]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; addAcceptedIndent[com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel]; void; null; mLevels>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; toString[]; java.lang.String; null; mLevels>
<java.util.SortedSet; first[]; java.lang.Integer; com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel; toString[]; java.lang.String; toString[]; mLevels>
<java.util.Map; get[java.lang.Object]; java.lang.Integer; com.puppycrawl.tools.checkstyle.checks.indentation.LineSet; getStartColumn[java.lang.Integer]; java.lang.Integer; null; mLines>
<java.util.SortedMap; firstKey[]; java.lang.Integer; com.puppycrawl.tools.checkstyle.checks.indentation.LineSet; firstLineCol[]; int; null; mLines>
<java.util.Map; get[java.lang.Object]; java.lang.Integer; com.puppycrawl.tools.checkstyle.checks.indentation.LineSet; firstLineCol[]; int; intValue[]; mLines>
<java.util.SortedMap; firstKey[]; java.lang.Integer; com.puppycrawl.tools.checkstyle.checks.indentation.LineSet; firstLine[]; int; intValue[]; mLines>
<java.util.SortedMap; lastKey[]; java.lang.Integer; com.puppycrawl.tools.checkstyle.checks.indentation.LineSet; lastLine[]; int; intValue[]; mLines>
<java.util.Map; put[java.lang.Integer, java.lang.Integer]; java.lang.Integer; com.puppycrawl.tools.checkstyle.checks.indentation.LineSet; addLineAndCol[int, int]; void; null; mLines>
<java.util.Map; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.checks.indentation.LineSet; isEmpty[]; boolean; null; mLines>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mods>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; visitToken[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; mods>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; getModifiers[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.Set<java.lang.String>; null; retVal>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck; getVisibilityScope[java.util.Set<java.lang.String>]; java.lang.String; null; aModifiers>
<java.util.Map; entrySet[]; java.util.Set<java.util.Map.Entry<java.lang.Integer,com.puppycrawl.tools.checkstyle.api.TextBlock>>; com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck; checkCppComments[com.puppycrawl.tools.checkstyle.api.FileContents]; void; null; comments>
<java.util.Map; entrySet[]; java.util.Set<java.util.Map.Entry<java.lang.Integer,java.util.List<com.puppycrawl.tools.checkstyle.api.TextBlock>>>; com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck; checkBadComments[com.puppycrawl.tools.checkstyle.api.FileContents]; void; null; allComments>
<java.util.Map; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.DefaultContext; get[java.lang.String]; java.lang.Object; null; mEntries>
<java.util.Map; keySet[]; java.util.Set<java.lang.String>; com.puppycrawl.tools.checkstyle.DefaultContext; getAttributeNames[]; com.puppycrawl.tools.checkstyle.ImmutableCollection<java.lang.String>; null; mEntries>
<java.util.Map; put[java.lang.String, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.DefaultContext; add[java.lang.String, java.lang.Object]; void; null; mEntries>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.PackageObjectFactory; addPackage[java.lang.String]; void; null; mPackages>
<java.util.Properties; load[java.io.InputStream]; void; com.puppycrawl.tools.checkstyle.PropertyCacheFile; PropertyCacheFile[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String]; void; null; mDetails>
<java.util.Properties; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.PropertyCacheFile; PropertyCacheFile[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String]; void; null; mDetails>
<java.util.Properties; clear[]; void; com.puppycrawl.tools.checkstyle.PropertyCacheFile; PropertyCacheFile[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String]; void; null; mDetails>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.PropertyCacheFile; PropertyCacheFile[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String]; void; null; mDetails>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.PropertyCacheFile; PropertyCacheFile[com.puppycrawl.tools.checkstyle.api.Configuration, java.lang.String]; void; null; mDetails>
<java.util.Properties; store[java.io.OutputStream, java.lang.String]; void; com.puppycrawl.tools.checkstyle.PropertyCacheFile; destroy[]; void; null; mDetails>
<java.util.Properties; getProperty[java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.PropertyCacheFile; alreadyChecked[java.lang.String, long]; boolean; null; mDetails>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.PropertyCacheFile; checkedOk[java.lang.String, long]; void; null; mDetails>
<java.util.List; iterator[]; java.util.Iterator<com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter.Tag>; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; accept[com.puppycrawl.tools.checkstyle.api.AuditEvent]; boolean; null; mTags>
<java.util.List; clear[]; void; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; tagSuppressions[]; void; null; mTags>
<java.util.List; add[com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter.Tag]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter; addTag[java.lang.String, int]; void; null; mTags>
<java.util.Set; add[com.puppycrawl.tools.checkstyle.filters.IntFilter]; boolean; com.puppycrawl.tools.checkstyle.filters.CSVFilter; addFilter[com.puppycrawl.tools.checkstyle.filters.IntFilter]; void; null; mFilters>
<java.util.Set; hashCode[]; int; com.puppycrawl.tools.checkstyle.filters.CSVFilter; hashCode[]; int; null; mFilters>
<java.util.Set; equals[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.filters.CSVFilter; equals[java.lang.Object]; boolean; null; this.mFilters>
<java.util.Map; put[java.lang.String, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader; createIdToResourceNameMap[]; java.util.Map<java.lang.String,java.lang.String>; null; map>
<java.util.Map; put[java.lang.String, java.lang.String]; java.lang.String; com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader; createIdToResourceNameMap[]; java.util.Map<java.lang.String,java.lang.String>; null; map>
<java.util.List; clear[]; void; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; tagSuppressions[]; void; null; mTags>
<java.util.List; add[com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter.Tag]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter; addTag[java.lang.String, int, int, boolean]; void; null; mTags>
<java.util.TreeSet; size[]; int; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessage[]; void; null; messages>
<java.util.TreeSet; first[]; com.puppycrawl.tools.checkstyle.api.LocalizedMessage; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessage[]; void; getMessage[]; messages>
<java.util.TreeSet; size[]; int; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessageWithParameters[]; void; null; messages>
<java.util.TreeSet; first[]; com.puppycrawl.tools.checkstyle.api.LocalizedMessage; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessageWithParameters[]; void; getMessage[]; messages>
<java.util.TreeSet; size[]; int; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessageWithParametersNegative[]; void; null; messages>
<java.util.TreeSet; first[]; com.puppycrawl.tools.checkstyle.api.LocalizedMessage; com.puppycrawl.tools.checkstyle.api.AbstractViolationReporterTest; testCustomMessageWithParametersNegative[]; void; getMessage[]; messages>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.PackageNamesLoaderTest; validatePackageNames[java.util.Set<java.lang.String>]; void; null; aPkgNames>
<java.util.List; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.XMLLoggerTest; getOutStreamLines[]; java.lang.String[]; null; lineList>
<java.util.List; toArray[java.lang.String[]]; java.lang.String[]; com.puppycrawl.tools.checkstyle.XMLLoggerTest; getOutStreamLines[]; java.lang.String[]; null; lineList>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.XMLLoggerTest; getOutStreamLines[]; java.lang.String[]; null; lineList>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testCheckstyleChecks[]; void; null; props>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testCheckstyleChecks[]; void; null; atts>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testCheckstyleChecks[]; void; null; atts>
<java.util.Properties; clear[]; void; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testCheckstyleChecks[]; void; null; atts>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testCheckstyleChecks[]; void; null; atts>
<java.util.Properties; clear[]; void; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testCheckstyleChecks[]; void; null; atts>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testCheckstyleChecks[]; void; null; atts>
<java.util.Properties; clear[]; void; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testCheckstyleChecks[]; void; null; atts>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testCheckstyleChecks[]; void; null; atts>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testCheckstyleChecks[]; void; null; atts>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testCustomMessages[]; void; null; props>
<java.util.Properties; size[]; int; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; verifyConfigNode[com.puppycrawl.tools.checkstyle.DefaultConfiguration, java.lang.String, int, java.util.Properties]; void; null; atts>
<java.util.Properties; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; verifyConfigNode[com.puppycrawl.tools.checkstyle.DefaultConfiguration, java.lang.String, int, java.util.Properties]; void; null; atts>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; initProperties[]; java.util.Properties; null; props>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; initProperties[]; java.util.Properties; null; props>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testExternalEntity[]; void; null; props>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testExternalEntity[]; void; null; atts>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testExternalEntity[]; void; null; atts>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testExternalEntitySubdir[]; void; null; props>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testExternalEntitySubdir[]; void; null; atts>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testExternalEntitySubdir[]; void; null; atts>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testExternalEntityFromURI[]; void; null; props>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testExternalEntityFromURI[]; void; null; atts>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.ConfigurationLoaderTest; testExternalEntityFromURI[]; void; null; atts>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTags[]; void; null; allTags.getValidTags()>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTagType[]; void; null; blockTags.getValidTags()>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTagType[]; void; null; inlineTags.getValidTags()>
<java.util.List; get[int]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testInlineTagLinkText[]; void; getArg1[]; tags>
<java.util.List; get[int]; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testInlineTagMethodRef[]; void; getArg1[]; tags>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTagPositions[]; void; null; tags>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testInvalidTags[]; void; null; allTags.getInvalidTags()>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testInvalidTags[]; void; null; allTags.getValidTags()>
<java.util.Map; entrySet[]; java.util.Set<java.util.Map.Entry<java.lang.Class<?>,java.lang.Integer>>; com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheckTest; setUp[]; void; null; x>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.ClassResolverTest; testMisc[]; void; null; imps>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.ClassResolverTest; testMisc[]; void; null; imps>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.ClassResolverTest; testMisc[]; void; null; imps>
<java.util.Set; add[java.lang.String]; boolean; com.puppycrawl.tools.checkstyle.checks.ClassResolverTest; testMisc[]; void; null; imps>
<java.util.TreeSet; add[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; boolean; com.puppycrawl.tools.checkstyle.CheckerTest; testDestroy[]; void; null; msgs>
<java.util.TreeSet; add[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; boolean; com.puppycrawl.tools.checkstyle.CheckerTest; testAddListener[]; void; null; msgs>
<java.util.TreeSet; add[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; boolean; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveListener[]; void; null; msgs>
<java.util.TreeSet; add[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; boolean; com.puppycrawl.tools.checkstyle.CheckerTest; testAddFilter[]; void; null; msgs>
<java.util.TreeSet; add[com.puppycrawl.tools.checkstyle.api.LocalizedMessage]; boolean; com.puppycrawl.tools.checkstyle.CheckerTest; testRemoveFilter[]; void; null; msgs>
<java.util.Collection; removeAll[java.util.Collection<?>]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; removeSuppressed[java.lang.String[], java.lang.String[]]; java.lang.String[]; null; coll>
<java.util.Collection; toArray[java.lang.String[]]; java.lang.String[]; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; removeSuppressed[java.lang.String[], java.lang.String[]]; java.lang.String[]; null; coll>
<java.util.Collection; size[]; int; com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilterTest; removeSuppressed[java.lang.String[], java.lang.String[]]; java.lang.String[]; null; coll>
<java.util.Collection; removeAll[java.util.Collection<?>]; boolean; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; removeSuppressed[java.lang.String[], java.lang.String[]]; java.lang.String[]; null; coll>
<java.util.Collection; toArray[java.lang.String[]]; java.lang.String[]; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; removeSuppressed[java.lang.String[], java.lang.String[]]; java.lang.String[]; null; coll>
<java.util.Collection; size[]; int; com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilterTest; removeSuppressed[java.lang.String[], java.lang.String[]]; java.lang.String[]; null; coll>
<java.util.Map; entrySet[]; java.util.Set<java.util.Map.Entry<java.lang.Class<?>,java.lang.Integer>>; com.puppycrawl.tools.checkstyle.InputGenericWhitespaceCheck; callable2[java.lang.Runnable, T]; java.util.concurrent.Callable<T>; null; x>
<java.util.ArrayList; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputInnerAssignment; allParams[]; java.util.Collection<java.lang.Object>; null; params>
<java.util.ArrayList; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.coding.InputInnerAssignment; allParams[]; java.util.Collection<java.lang.Object>; null; params>
<java.util.Collection; size[]; int; com.puppycrawl.tools.checkstyle.Wildcard; foo[java.util.Collection<? extends com.puppycrawl.tools.checkstyle.Wildcard[]>]; void; null; collection>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheck; applyTo[java.util.Set]; void; null; aNodes>
<java.util.Set; clear[]; void; com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheck; applyTo[java.util.Set]; void; null; methods>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheck; applyTo[java.util.Set]; void; null; methods>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheck; applyTo[java.util.Set]; void; null; methods>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.usage.OneMethodPrivateFieldCheck; getReferences[com.puppycrawl.tools.checkstyle.api.DetailAST]; java.util.Iterator; null; dummy>
<java.util.Vector; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Resolver; resolveParameters[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass, boolean]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; null; parameters>
<java.util.ArrayList; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.NullClass; getReferences[]; java.util.Iterator; null; new ArrayList()>
<java.util.Hashtable; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; addDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef]; void; null; elements>
<java.util.Hashtable; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; addDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.BlockDef]; void; null; elements>
<java.util.Hashtable; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; addDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef]; void; null; classes>
<java.util.Hashtable; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; addDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.LabelDef]; void; null; labels>
<java.util.Vector; addAll[java.util.Collection]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; getDefinitions[]; java.util.Enumeration; null; allElements>
<java.util.Hashtable; values[]; java.util.Collection; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; getDefinitions[]; java.util.Enumeration; null; elements>
<java.util.Vector; addAll[java.util.Collection]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; getDefinitions[]; java.util.Enumeration; null; allElements>
<java.util.Hashtable; values[]; java.util.Collection; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; getDefinitions[]; java.util.Enumeration; null; labels>
<java.util.Vector; addAll[java.util.Collection]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; getDefinitions[]; java.util.Enumeration; null; allElements>
<java.util.Hashtable; values[]; java.util.Collection; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; getDefinitions[]; java.util.Enumeration; null; classes>
<java.util.Vector; elements[]; java.util.Enumeration; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; getDefinitions[]; java.util.Enumeration; null; allElements>
<java.util.Collection; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; getClasses[]; java.util.Iterator; null; classes.values()>
<java.util.Hashtable; values[]; java.util.Collection; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; getClasses[]; java.util.Iterator; iterator[]; classes>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; getReferencesIn[]; java.util.Iterator; null; referencesInScope>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; addReferenceInScope[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference]; void; null; referencesInScope>
<java.util.List; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DotIterator; DotIterator[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; _nodes>
<java.util.List; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.DotIterator; makeNodes[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; _nodes>
<java.util.Collection; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getMostCompatibleMethod[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; getMethods()>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getMostCompatibleMethod[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; compatibleMethods>
<java.util.Set; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getMostCompatibleMethod[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; compatibleMethods>
<java.util.SortedSet; first[]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getMostCompatibleMethod[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; compatibleMethods>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; getMethods[]; java.util.Collection; null; _methods>
<java.util.List; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; addImplementor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef]; void; null; _implementors>
<java.util.List; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass; addSubclass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef]; void; null; _subclasses>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; addTree[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST]; void; null; mTrees>
<java.util.Map; clear[]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; clear[]; void; null; mCheckNodes>
<java.util.Map; clear[]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; clear[]; void; null; mTrees>
<java.util.Map; clear[]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; clear[]; void; null; mMap>
<java.util.Map; keySet[]; java.util.Set; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; buildTree[]; void; null; mTrees>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; buildTree[]; void; null; keys>
<java.util.Map; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; buildTree[]; void; null; mTrees>
<java.util.Map; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; registerCheckNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AbstractUsageCheck, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST]; void; null; mCheckNodes>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; registerCheckNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AbstractUsageCheck, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST]; void; null; nodeSet>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; registerCheckNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AbstractUsageCheck, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST]; void; null; mCheckNodes>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; registerCheckNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AbstractUsageCheck, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST]; void; null; nodeSet>
<java.util.Map; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; getCheckNodes[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AbstractUsageCheck]; java.util.Set; null; mCheckNodes>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; put[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; mMap>
<java.util.Map; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; get[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AST]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; mMap>
<java.util.Map; clear[]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; clearDetailsMap[]; void; null; mMap>
<java.util.Map; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; isEmptyDetailsMap[]; boolean; null; mMap>
<java.util.Map; remove[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; removeCheck[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AbstractUsageCheck]; void; null; mCheckNodes>
<java.util.Map; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ASTManager; removeCheck[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.AbstractUsageCheck]; void; null; mCheckNodes>
<java.util.List; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef; addParameter[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef]; void; null; parameters>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef; getSignature[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature; null; parameters>
<java.util.Vector; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef; getSignature[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature; null; argTypes>
<java.util.List; get[int]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef; getParameterAt[int]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.VariableDef; null; parameters>
<java.util.List; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef; addException[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; void; null; exceptions>
<java.util.List; toArray[java.lang.Object[]]; java.lang.Object[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef; getExceptions[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass[]; null; exceptions>
<java.util.Vector; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.UnknownClass; getReferences[]; java.util.Iterator; null; new Vector()>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition; addReference[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Reference]; void; null; _references>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition; getReferences[]; java.util.Iterator; null; _references>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Definition; getNumReferences[]; int; null; _references>
<java.util.Vector; clone[]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; addUnprocessedImports[java.util.Vector]; void; null; aImports>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; importPackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IPackage]; void; null; importedPackages>
<java.util.Hashtable; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; importClass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; void; null; imports>
<java.util.Set; remove[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; addDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef]; void; null; methods>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; addDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodDef]; void; null; methods>
<java.util.Vector; addAll[java.util.Collection]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getDefinitions[]; java.util.Enumeration; null; allElements>
<java.util.Vector; addAll[java.util.Collection]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getDefinitions[]; java.util.Enumeration; null; allElements>
<java.util.Vector; addAll[java.util.Collection]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getDefinitions[]; java.util.Enumeration; null; allElements>
<java.util.Vector; addAll[java.util.Collection]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getDefinitions[]; java.util.Enumeration; null; allElements>
<java.util.Vector; elements[]; java.util.Enumeration; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getDefinitions[]; java.util.Enumeration; null; allElements>
<java.util.Hashtable; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getClassDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; imports>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getClassDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; importedPackages>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getMostCompatibleMethod[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; methods>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getMostCompatibleMethod[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; compatibleMethods>
<java.util.Set; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getMostCompatibleMethod[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; compatibleMethods>
<java.util.SortedSet; first[]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getMostCompatibleMethod[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; compatibleMethods>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getDeclaredMethod[java.lang.String, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ISignature]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IMethod; null; methods>
<java.util.List; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; addInterface[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; void; null; interfaces>
<java.util.List; toArray[java.lang.Object[]]; java.lang.Object[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getInterfaces[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass[]; null; interfaces>
<java.util.List; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; addSubclass[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef]; void; null; subclasses>
<java.util.List; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; addImplementor[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef]; void; null; implementors>
<java.util.List; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getInnerClasses[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass[]; null; result>
<java.util.List; toArray[java.lang.Object[]]; java.lang.Object[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; getInnerClasses[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass[]; null; result>
<java.util.List; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; isSuperclassOf[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; boolean; null; subclasses>
<java.util.List; isEmpty[]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; isCompatibleWith[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; boolean; null; interfaces>
<java.util.List; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ClassDef; isCompatibleWith[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; boolean; null; interfaces>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalPackage; addDefinition[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IPackage]; void; null; _packages>
<java.util.Vector; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ArrayDef; getReferences[]; java.util.Iterator; null; new Vector()>
<java.util.Vector; elementAt[int]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; findScope[java.util.Vector, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; null; scopeList>
<java.util.Vector; elementAt[int]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; findScope[java.util.Vector, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; null; scopeList>
<java.util.Vector; size[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; findScope[java.util.Vector, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; null; scopeList>
<java.util.Vector; elementAt[int]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; findScope[java.util.Vector, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Occurrence]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; null; scopeList>
<java.util.Vector; addElement[java.lang.Object]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; addScope[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; null; fileVector>
<java.util.Hashtable; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; getFileVector[java.lang.String]; java.util.Vector; null; indexOfFiles>
<java.util.Hashtable; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ScopeIndex; getFileVector[java.lang.String]; java.util.Vector; null; indexOfFiles>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceCounter; numberOfReferences[]; int; null; _references>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceCounter; numberOfResolvedReferences[]; int; null; _resolvedReferences>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceCounter; numberOfUnresolvedReferences[]; int; null; _unresolvedReferences>
<java.util.List; listIterator[]; java.util.ListIterator; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceCounter; getUnresolvedReferences[]; java.util.ListIterator; null; _unresolvedReferences>
<java.util.List; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceCounter; handleNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; _references>
<java.util.List; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceCounter; handleNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; _resolvedReferences>
<java.util.List; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceCounter; handleNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; _unresolvedReferences>
<java.util.Stack; peek[]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable; getCurrentScope[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; null; scopes>
<java.util.Stack; push[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable; pushScope[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; null; scopes>
<java.util.Stack; pop[]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable; popScope[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; null; scopes>
<java.util.Hashtable; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable; getPackage[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef; null; packages>
<java.util.Hashtable; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymbolTable; definePackage[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PackageDef, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope]; void; null; packages>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ReferenceThreshold; handleNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; _underreferencedDefinitions>
<java.util.Vector; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; processImport[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST]; void; null; imports>
<java.util.Vector; clear[]; void; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker; clearImports[]; void; null; imports>
<java.util.Vector; size[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addImports[]; void; null; unprocessedImports>
<java.util.Vector; get[int]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.TableMaker.ClassFinisher; addImports[]; void; null; unprocessedImports>
<java.util.List; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.InterfaceConstructor; hashCode[]; int; null; order>
<java.util.List; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.InterfaceConstructor; hashCode[]; int; null; order>
<java.util.List; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.InterfaceConstructor; hashCode[]; int; null; order>
<java.util.List; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.InterfaceConstructor; hashCode[]; int; null; order>
<java.util.List; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.InterfaceConstructor; hashCode[]; int; null; order>
<java.util.List; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.InterfaceConstructor; hashCode[]; int; null; order>
<java.util.List; indexOf[java.lang.Object]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PrimitiveClasses; typesAreCompatible[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass]; boolean; null; order>
<java.util.List; indexOf[java.lang.Object]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PrimitiveClasses; typesAreCompatible[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass]; boolean; null; order>
<java.util.List; indexOf[java.lang.Object]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PrimitiveClasses; typesAreCompatible[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass]; boolean; null; order>
<java.util.List; indexOf[java.lang.Object]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.PrimitiveClasses; typesAreCompatible[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass, com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalClass]; boolean; null; order>
<java.util.Vector; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.ExternalDefinition; getReferences[]; java.util.Iterator; null; new Vector()>
<java.util.Vector; size[]; int; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; MethodSignature[java.util.Vector]; void; null; argTypes>
<java.util.Vector; toArray[java.lang.Object[]]; java.lang.Object[]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; MethodSignature[java.util.Vector]; void; null; argTypes>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; nameMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; nameMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; nameMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; nameMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; nameMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; nameMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; nameMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; nameMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; intMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; intMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; intMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; intMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; intMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; intMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; intMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; intMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; intMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; classMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; classMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; classMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; classMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; classMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; classMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; classMap>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.MethodSignature; toString[]; java.lang.String; null; classMap>
<java.util.Map; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.LiteralResolver; getDefinition[int]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; intMap>
<java.util.Map; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.LiteralResolver; getDefinition[java.lang.String]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass; null; nameMap>
<java.util.Map; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.LiteralResolver; getASTNode[com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.IClass]; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.SymTabAST; null; classMap>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.usage.AbstractUsageCheck; applyTo[java.util.Set]; void; null; aNodes>
<java.util.ArrayList; add[java.lang.Object]; boolean; JavadocCheckDefault; main[java.lang.String[]]; void; null; tokenNames>
<java.util.ArrayList; iterator[]; java.util.Iterator; JavadocCheckDefault; main[java.lang.String[]]; void; null; tokenNames>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; JavaClassDefinition[com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClass, java.util.Set, java.util.Set]; void; null; methodSet>
<java.util.Set; toArray[java.lang.Object[]]; java.lang.Object[]; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; JavaClassDefinition[com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClass, java.util.Set, java.util.Set]; void; null; methodSet>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; JavaClassDefinition[com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClass, java.util.Set, java.util.Set]; void; null; methodSet>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; JavaClassDefinition[com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClass, java.util.Set, java.util.Set]; void; null; mFieldDefs>
<java.util.Collection; toArray[java.lang.Object[]]; java.lang.Object[]; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; getFieldDefs[]; com.puppycrawl.tools.checkstyle.bcel.classfile.FieldDefinition[]; null; mFieldDefs.values()>
<java.util.Map; values[]; java.util.Collection; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; getFieldDefs[]; com.puppycrawl.tools.checkstyle.bcel.classfile.FieldDefinition[]; toArray[java.lang.Object[]]; mFieldDefs>
<java.util.Map; size[]; int; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; getFieldDefs[]; com.puppycrawl.tools.checkstyle.bcel.classfile.FieldDefinition[]; null; mFieldDefs>
<java.util.Map; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; findFieldDef[java.lang.String]; com.puppycrawl.tools.checkstyle.bcel.classfile.FieldDefinition; null; mFieldDefs>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.bcel.classfile.FieldDefinition; getReadReferenceCount[]; int; null; mGetReferences>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.bcel.classfile.FieldDefinition; getWriteReferenceCount[]; int; null; mPutReferences>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.bcel.classfile.FieldDefinition; addReference[com.puppycrawl.tools.checkstyle.bcel.classfile.FieldReference]; void; null; mPutReferences>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.bcel.classfile.FieldDefinition; addReference[com.puppycrawl.tools.checkstyle.bcel.classfile.FieldReference]; void; null; mGetReferences>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.bcel.classfile.Utils; inScope[com.puppycrawl.tools.checkstyle.bcel.classfile.FieldOrMethod, java.util.Set]; boolean; null; aScopes>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.bcel.classfile.Utils; inScope[com.puppycrawl.tools.checkstyle.bcel.classfile.FieldOrMethod, java.util.Set]; boolean; null; aScopes>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.bcel.classfile.Utils; inScope[com.puppycrawl.tools.checkstyle.bcel.classfile.FieldOrMethod, java.util.Set]; boolean; null; aScopes>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.bcel.classfile.Utils; inScope[com.puppycrawl.tools.checkstyle.bcel.classfile.FieldOrMethod, java.util.Set]; boolean; null; aScopes>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO; ReferenceDAO[java.util.Set, java.util.Set, java.util.Set]; void; null; aJavaClasses>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO; ReferenceDAO[java.util.Set, java.util.Set, java.util.Set]; void; null; aJavaClasses>
<java.util.Map; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO; ReferenceDAO[java.util.Set, java.util.Set, java.util.Set]; void; null; mJavaClasses>
<java.util.Map; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO; findJavaClassDef[com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClass]; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; null; mJavaClasses>
<java.util.Map; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO; addInvokeReference[com.puppycrawl.tools.checkstyle.bcel.classfile.InvokeReference]; void; null; mJavaClasses>
<java.util.Map; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO; addFieldReference[com.puppycrawl.tools.checkstyle.bcel.classfile.FieldReference]; void; null; mJavaClasses>
<java.util.Map; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.classfile.ReferenceDAO; findFieldDef[com.puppycrawl.tools.checkstyle.bcel.classfile.FieldReference]; com.puppycrawl.tools.checkstyle.bcel.classfile.FieldDefinition; null; mJavaClasses>
<java.util.Set; size[]; int; com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition; getReferenceCount[]; int; null; mReferences>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition; addReference[com.puppycrawl.tools.checkstyle.bcel.classfile.InvokeReference]; void; null; mReferences>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.bcel.classfile.MethodDefinition; hasReference[com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClass]; boolean; null; getReferences()>
<java.util.HashMap; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.AbstractCheckVisitor; log[java.lang.String, int, java.lang.String, java.lang.Object[]]; void; null; mMessageMap>
<java.util.HashMap; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.AbstractCheckVisitor; log[java.lang.String, int, java.lang.String, java.lang.Object[]]; void; null; mMessageMap>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; registerCheck[com.puppycrawl.tools.checkstyle.bcel.AbstractCheckVisitor]; void; null; mAllChecks>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; process[java.io.File[]]; void; null; javaClasses>
<java.util.Set; addAll[java.util.Collection]; boolean; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; registerVisitors[]; void; null; mObjectSetVisitors>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; registerVisitors[]; void; null; mAllChecks>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; registerVisitors[]; void; null; mObjectSetVisitors>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; registerVisitors[]; void; null; mTreeVisitors>
<java.util.Set; addAll[java.util.Collection]; boolean; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; extractJavaClasses[java.io.File[]]; java.util.Set; null; result>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; visitSet[java.util.Set]; void; null; aSet>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; visitSet[java.util.Set]; void; null; getObjectSetVisitors()>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; visitObject[java.lang.Object]; void; null; getObjectSetVisitors()>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; leaveObject[java.lang.Object]; void; null; getObjectSetVisitors()>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; leaveSet[java.util.Set]; void; null; getObjectSetVisitors()>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; extractJavaClasses[java.io.File]; java.util.Set; null; result>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; extractJavaClasses[java.io.File]; java.util.Set; null; result>
<java.util.HashMap; keySet[]; java.util.Set; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; fireErrors[]; void; null; mMessageMap>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; fireErrors[]; void; null; keys>
<java.util.HashMap; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.bcel.ClassFileSetCheck; fireErrors[]; void; null; mMessageMap>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.bcel.checks.UnusedMethodCheck; leaveSet[java.util.Set]; void; null; aJavaClasses>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.bcel.checks.UnreadFieldCheck; leaveSet[java.util.Set]; void; null; aJavaClasses>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitCode[com.puppycrawl.tools.checkstyle.bcel.Code]; void; null; mVisitors>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitInstructionHandle[com.puppycrawl.tools.checkstyle.bcel.InstructionHandle]; void; null; mVisitors>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitConstantPool[com.puppycrawl.tools.checkstyle.bcel.ConstantPool]; void; null; mVisitors>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitField[com.puppycrawl.tools.checkstyle.bcel.Field]; void; null; mVisitors>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitJavaClass[com.puppycrawl.tools.checkstyle.bcel.JavaClass]; void; null; mVisitors>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitLocalVariableTable[com.puppycrawl.tools.checkstyle.bcel.LocalVariableTable]; void; null; mVisitors>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.bcel.VisitorSet; visitMethod[com.puppycrawl.tools.checkstyle.bcel.Method]; void; null; mVisitors>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.bcel.ReferenceVisitor; addFieldScope[com.puppycrawl.tools.checkstyle.api.Scope]; void; null; mFieldScopes>
<java.util.Set; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.bcel.ReferenceVisitor; addMethodScope[com.puppycrawl.tools.checkstyle.api.Scope]; void; null; mMethodScopes>
<java.util.Properties; get[java.lang.Object]; java.lang.Object; com.mycompany.listeners.MailLogger; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; properties>
<java.util.Properties; load[java.io.InputStream]; void; com.mycompany.listeners.MailLogger; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; fileProperties>
<java.util.Properties; keys[]; java.util.Enumeration<java.lang.Object>; com.mycompany.listeners.MailLogger; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; fileProperties>
<java.util.Properties; getProperty[java.lang.String]; java.lang.String; com.mycompany.listeners.MailLogger; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; fileProperties>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.mycompany.listeners.MailLogger; auditFinished[com.puppycrawl.tools.checkstyle.api.AuditEvent]; void; null; properties>
<java.util.Properties; get[java.lang.Object]; java.lang.Object; com.mycompany.listeners.MailLogger; getValue[java.util.Properties, java.lang.String, java.lang.String]; java.lang.String; null; aProperties>
<java.util.Properties; put[java.lang.Object, java.lang.Object]; java.lang.Object; com.mycompany.listeners.MailLogger; sendMail[java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]; void; null; props>
<java.util.ArrayList; iterator[]; java.util.Iterator; com.mycompany.listeners.MailLogger; sendMail[java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]; void; null; new ArrayList()>
<java.util.ArrayList; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.xpath.DocumentNavigator; getDocumentNode[java.lang.Object]; java.lang.Object; null; (new ArrayList())>
<java.util.Map; size[]; int; com.puppycrawl.tools.checkstyle.checks.xpath.AttributeAxisIterator; AttributeAxisIterator[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; props>
<java.util.Map; keySet[]; java.util.Set; com.puppycrawl.tools.checkstyle.checks.xpath.AttributeAxisIterator; AttributeAxisIterator[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; props>
<java.util.Set; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.xpath.AttributeAxisIterator; AttributeAxisIterator[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; values>
<java.util.Map; get[java.lang.Object]; java.lang.Object; com.puppycrawl.tools.checkstyle.checks.xpath.AttributeAxisIterator; AttributeAxisIterator[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; props>
<java.util.List; add[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.checks.xpath.AttributeAxisIterator; AttributeAxisIterator[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; attributes>
<java.util.List; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.xpath.AttributeAxisIterator; AttributeAxisIterator[com.puppycrawl.tools.checkstyle.api.DetailAST]; void; null; attributes>


Calls That Are Candidatas (8)

<java.util.Collection; iterator[]; java.util.Iterator; com.puppycrawl.tools.checkstyle.checks.usage.transmogrify.Scope; getClasses[]; java.util.Iterator; null; classes.values()>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTags[]; void; null; allTags.getValidTags()>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTagType[]; void; null; blockTags.getValidTags()>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testTagType[]; void; null; inlineTags.getValidTags()>
<java.util.Set; contains[java.lang.Object]; boolean; com.puppycrawl.tools.checkstyle.api.AbstractLoader; resolveEntity[java.lang.String, java.lang.String]; org.xml.sax.InputSource; null; mPublicIdToResourceNameMap.keySet()>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testInvalidTags[]; void; null; allTags.getValidTags()>
<java.util.List; size[]; int; com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocUtilsTest; testInvalidTags[]; void; null; allTags.getInvalidTags()>
<java.util.Collection; toArray[java.lang.Object[]]; java.lang.Object[]; com.puppycrawl.tools.checkstyle.bcel.classfile.JavaClassDefinition; getFieldDefs[]; com.puppycrawl.tools.checkstyle.bcel.classfile.FieldDefinition[]; null; mFieldDefs.values()>


Calls That Broken Confinement (0)

